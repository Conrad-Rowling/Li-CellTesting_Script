ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADC_1_SetDFTControl,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	ADC_1_SetDFTControl, %function
  24              	ADC_1_SetDFTControl:
  25              	.LFB5:
  26              		.file 1 "Generated_Source\\PSoC4\\ADC_1.c"
   1:Generated_Source\PSoC4/ADC_1.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/ADC_1.c **** * \file     ADC_1.c
   3:Generated_Source\PSoC4/ADC_1.c **** * \version  3.10
   4:Generated_Source\PSoC4/ADC_1.c **** *
   5:Generated_Source\PSoC4/ADC_1.c **** * \brief
   6:Generated_Source\PSoC4/ADC_1.c **** * Provides the source code to the API for the ADC_1 Component.
   7:Generated_Source\PSoC4/ADC_1.c **** *
   8:Generated_Source\PSoC4/ADC_1.c **** ********************************************************************************
   9:Generated_Source\PSoC4/ADC_1.c **** * \copyright
  10:Generated_Source\PSoC4/ADC_1.c **** * (c) 2015-2018, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC4/ADC_1.c **** * This software, including source code, documentation and related
  12:Generated_Source\PSoC4/ADC_1.c **** * materials ("Software"), is owned by Cypress Semiconductor
  13:Generated_Source\PSoC4/ADC_1.c **** * Corporation ("Cypress") and is protected by and subject to worldwide
  14:Generated_Source\PSoC4/ADC_1.c **** * patent protection (United States and foreign), United States copyright
  15:Generated_Source\PSoC4/ADC_1.c **** * laws and international treaty provisions. Therefore, you may use this
  16:Generated_Source\PSoC4/ADC_1.c **** * Software only as provided in the license agreement accompanying the
  17:Generated_Source\PSoC4/ADC_1.c **** * software package from which you obtained this Software ("EULA").
  18:Generated_Source\PSoC4/ADC_1.c **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  19:Generated_Source\PSoC4/ADC_1.c **** * non-transferable license to copy, modify, and compile the
  20:Generated_Source\PSoC4/ADC_1.c **** * Software source code solely for use in connection with Cypress's
  21:Generated_Source\PSoC4/ADC_1.c **** * integrated circuit products. Any reproduction, modification, translation,
  22:Generated_Source\PSoC4/ADC_1.c **** * compilation, or representation of this Software except as specified
  23:Generated_Source\PSoC4/ADC_1.c **** * above is prohibited without the express written permission of Cypress.
  24:Generated_Source\PSoC4/ADC_1.c **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO
  25:Generated_Source\PSoC4/ADC_1.c **** * WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
  26:Generated_Source\PSoC4/ADC_1.c **** * BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
  27:Generated_Source\PSoC4/ADC_1.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  28:Generated_Source\PSoC4/ADC_1.c **** * PARTICULAR PURPOSE. Cypress reserves the right to make
  29:Generated_Source\PSoC4/ADC_1.c **** * changes to the Software without notice. Cypress does not assume any
  30:Generated_Source\PSoC4/ADC_1.c **** * liability arising out of the application or use of the Software or any
  31:Generated_Source\PSoC4/ADC_1.c **** * product or circuit described in the Software. Cypress does not
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 2


  32:Generated_Source\PSoC4/ADC_1.c **** * authorize its products for use in any products where a malfunction or
  33:Generated_Source\PSoC4/ADC_1.c **** * failure of the Cypress product may reasonably be expected to result in
  34:Generated_Source\PSoC4/ADC_1.c **** * significant property damage, injury or death ("High Risk Product"). By
  35:Generated_Source\PSoC4/ADC_1.c **** * including Cypress's product in a High Risk Product, the manufacturer
  36:Generated_Source\PSoC4/ADC_1.c **** * of such system or application assumes all risk of such use and in doing
  37:Generated_Source\PSoC4/ADC_1.c **** * so agrees to indemnify Cypress against all liability.
  38:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/ADC_1.c **** #include "ADC_1.h"
  40:Generated_Source\PSoC4/ADC_1.c **** 
  41:Generated_Source\PSoC4/ADC_1.c **** static void ADC_1_SetDFTControl(const ADC_1_CONFIG_STRUCT *config);
  42:Generated_Source\PSoC4/ADC_1.c **** static int32 ADC_1_IsChannelSigned(uint32 chan);
  43:Generated_Source\PSoC4/ADC_1.c **** #if(ADC_1_ANY_CONFIG_USES_FILTER != 0u)
  44:Generated_Source\PSoC4/ADC_1.c **** static void ADC_1_SetupComparatorTrim(void);
  45:Generated_Source\PSoC4/ADC_1.c **** static void ADC_1_UndoComparatorTrimSetup(void);
  46:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_RaiseOpampTrimToCrossing(uint32 startTrim);
  47:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_LowerOpampTrimToCrossing(uint32 startTrim);
  48:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_RaiseAgndTrimToCrossing(uint32 startTrim);
  49:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_LowerAgndTrimToCrossing(uint32 startTrim);
  50:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_SetOpampAndAgndTrim(uint32 opampTrim, uint32 agndTrim);
  51:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_SetOpampTrim(uint32 opampTrim);
  52:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_SetAgndTrim(uint32 agndTrim);
  53:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_IncOpampTrim(uint32 trim);
  54:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_DecOpampTrim(uint32 trim);
  55:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_IncAgndTrim(uint32 trim);
  56:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_DecAgndTrim(uint32 trim);
  57:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_GetCompStatus(void);
  58:Generated_Source\PSoC4/ADC_1.c **** #define OFFSET_SAMPLES (30)
  59:Generated_Source\PSoC4/ADC_1.c **** #endif
  60:Generated_Source\PSoC4/ADC_1.c **** 
  61:Generated_Source\PSoC4/ADC_1.c **** uint8 ADC_1_initVar = 0u;
  62:Generated_Source\PSoC4/ADC_1.c **** 
  63:Generated_Source\PSoC4/ADC_1.c **** uint8 ADC_1_selected = 0u; /* 0 if no configuration selected. 1 otherwise. */
  64:Generated_Source\PSoC4/ADC_1.c **** volatile int16 ADC_1_offset[ADC_1_TOTAL_CHANNELS_NUM];
  65:Generated_Source\PSoC4/ADC_1.c **** volatile int32 ADC_1_countsPer10Volt[ADC_1_TOTAL_CHANNELS_NUM];
  66:Generated_Source\PSoC4/ADC_1.c **** 
  67:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_currentConfig = 0u; /* Currently active configuration */
  68:Generated_Source\PSoC4/ADC_1.c **** 
  69:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
  70:Generated_Source\PSoC4/ADC_1.c **** * Local data allocation
  71:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
  72:Generated_Source\PSoC4/ADC_1.c **** /* Channels configuration generated by customiser */
  73:Generated_Source\PSoC4/ADC_1.c **** static const uint32 CYCODE ADC_1_channelsConfig[] = { 0x00000100UL,  };
  74:Generated_Source\PSoC4/ADC_1.c **** 
  75:Generated_Source\PSoC4/ADC_1.c **** /* Filter init */
  76:Generated_Source\PSoC4/ADC_1.c **** #if(ADC_1_ANY_CONFIG_USES_FILTER != 0u)
  77:Generated_Source\PSoC4/ADC_1.c ****     #if (0u != ADC_1_CFG0_FILTER_PRESENT)
  78:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG0_UABH_A_FILTER_INITPAIRSSIZE (19u)
  79:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG0_UABH_A_FILTER_initPairs[ADC_1_CFG0_UABH_A_FILTER_INI
  80:Generated_Source\PSoC4/ADC_1.c ****         {
  81:Generated_Source\PSoC4/ADC_1.c ****             /*OA_CTRL default always first element in initPairs*/
  82:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
  83:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_A_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_A_DEFAULT_OA_CTRL)}
  84:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_A_DEFAULT_SW_STATIC)}
  85:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_MODBIT_SRC_PTR  , ((uint32)ADC_1_UABH_A_INVAR_SW_MODBIT_SRC)}
  86:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_A_INVAR_SRAM_CTRL)}
  87:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG0_UABH_A_STARTUP_DELAY)}
  88:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_A_DEFAULT_SW_BOOST_CTRL)}
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 3


  89:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_A_DEFAULT_SW_CA_IN1)}
  90:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_OTHER_PTR       , ((uint32)ADC_1_UABH_A_DEFAULT_SW_OTHER)}
  91:Generated_Source\PSoC4/ADC_1.c **** 
  92:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG0_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
  93:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
  94:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_IN0)}
  95:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_TOP)}
  96:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN0)}
  97:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN1)}
  98:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CF_BOT)}
  99:Generated_Source\PSoC4/ADC_1.c **** 
 100:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 101:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG0_UABH_A_LOWQDYN_CAP_CTRL)}
 102:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_CFG0_UABH_A_LOWQDYN_SW_CB_IN0)}
 103:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_CFG0_UABH_A_LOWQDYN_SW_CB_IN1)}
 104:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG0_UABH_A_LOWQDYN_SW_CB_TOP)}
 105:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG0_UABH_A_LOWQDYN_SW_CC_TOP)}
 106:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG0_UABH_A_LOWQDYN_CAP_ABCF_VAL
 107:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG0_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 108:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 109:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_IN0)}
 110:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_TOP)}
 111:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN0)}
 112:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN1)}
 113:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN0)}
 114:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN1)}
 115:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_TOP)}
 116:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CF_BOT)}
 117:Generated_Source\PSoC4/ADC_1.c **** 
 118:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 119:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG0_UABH_A_HIGHQDYN_CAP_CTRL)}
 120:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG0_UABH_A_HIGHQDYN_SW_CB_TOP)}
 121:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG0_UABH_A_HIGHQDYN_CAP_ABCF_VA
 122:Generated_Source\PSoC4/ADC_1.c ****             #endif /* (ADC_1_CFG0_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 123:Generated_Source\PSoC4/ADC_1.c ****         };
 124:Generated_Source\PSoC4/ADC_1.c **** 
 125:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG0_UABH_B_FILTER_INITPAIRSSIZE (19u)
 126:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG0_UABH_B_FILTER_initPairs[ADC_1_CFG0_UABH_B_FILTER_INI
 127:Generated_Source\PSoC4/ADC_1.c ****         {
 128:Generated_Source\PSoC4/ADC_1.c ****             /*OA_CTRL default always first element in initPairs*/
 129:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
 130:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_B_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_B_DEFAULT_OA_CTRL)}
 131:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_B_DEFAULT_SW_STATIC)}
 132:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_MODBIT_SRC_PTR  , ((uint32)ADC_1_UABH_B_INVAR_SW_MODBIT_SRC)}
 133:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_B_INVAR_SRAM_CTRL)}
 134:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG0_UABH_B_STARTUP_DELAY)}
 135:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_B_DEFAULT_SW_BOOST_CTRL)}
 136:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_OTHER_PTR  , ((uint32)ADC_1_UABH_B_DEFAULT_SW_OTHER)}
 137:Generated_Source\PSoC4/ADC_1.c **** 
 138:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG0_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
 139:Generated_Source\PSoC4/ADC_1.c ****                         /* Filter-invariant registers */
 140:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN0)}
 141:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN1)}
 142:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_TOP)}
 143:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN0)}
 144:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN1)}
 145:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_TOP)}
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 4


 146:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN0)}
 147:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN1)}
 148:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CF_BOT)}
 149:Generated_Source\PSoC4/ADC_1.c **** 
 150:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 151:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG0_UABH_B_LOWQDYN_CAP_CTRL)}
 152:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG0_UABH_B_LOWQDYN_SW_CC_TOP)}
 153:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG0_UABH_B_LOWQDYN_CAP_ABCF_VAL
 154:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG0_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 155:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 156:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN0)}
 157:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN1)}
 158:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_TOP)}
 159:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN0)}
 160:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN1)}
 161:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN0)}
 162:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN1)}
 163:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CF_BOT)}
 164:Generated_Source\PSoC4/ADC_1.c **** 
 165:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 166:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG0_UABH_B_HIGHQDYN_CAP_CTRL)}
 167:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG0_UABH_B_HIGHQDYN_SW_CB_TOP)}
 168:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG0_UABH_B_HIGHQDYN_SW_CC_TOP)}
 169:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG0_UABH_B_HIGHQDYN_CAP_ABCF_VA
 170:Generated_Source\PSoC4/ADC_1.c ****             #endif /* #if (ADC_1_CFG0_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 171:Generated_Source\PSoC4/ADC_1.c ****         };
 172:Generated_Source\PSoC4/ADC_1.c **** 
 173:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG0_UABH_A_FILTER_config = {
 174:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_waveConfig,
 175:Generated_Source\PSoC4/ADC_1.c ****             (CyUAB_reg_pair*) ADC_1_CFG0_UABH_A_FILTER_initPairs,
 176:Generated_Source\PSoC4/ADC_1.c ****             CyUAB_SHARED_SW_CFG(ADC_1_UABH_A_PARAM_REF_TIED,ADC_1_UABH_A_PARAM_AGND_TIED,
 177:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_A_PARAM_SW_CC,ADC_1_UABH_A_PARAM_SW_BB,ADC_1_UABH_A_PARAM_SW_AA),
 178:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_NUM_STEPS,
 179:Generated_Source\PSoC4/ADC_1.c ****             (uint8)(ADC_1_UABH_A_ELEMENT_COUNT(ADC_1_CFG0_UABH_A_FILTER_initPairs))
 180:Generated_Source\PSoC4/ADC_1.c ****         };
 181:Generated_Source\PSoC4/ADC_1.c **** 
 182:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG0_UABH_B_FILTER_config = {
 183:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_waveConfig,
 184:Generated_Source\PSoC4/ADC_1.c ****         (CyUAB_reg_pair*) ADC_1_CFG0_UABH_B_FILTER_initPairs,
 185:Generated_Source\PSoC4/ADC_1.c ****         CyUAB_SHARED_SW_CFG(ADC_1_UABH_B_PARAM_REF_TIED,ADC_1_UABH_B_PARAM_AGND_TIED,
 186:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_B_PARAM_SW_CC,ADC_1_UABH_B_PARAM_SW_BB,ADC_1_UABH_B_PARAM_SW_AA),
 187:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_NUM_STEPS,
 188:Generated_Source\PSoC4/ADC_1.c ****         (uint8)(ADC_1_UABH_B_ELEMENT_COUNT(ADC_1_CFG0_UABH_B_FILTER_initPairs))
 189:Generated_Source\PSoC4/ADC_1.c ****     };
 190:Generated_Source\PSoC4/ADC_1.c ****     #endif /* (0u != ADC_1_CFG0_FILTER_PRESENT) */
 191:Generated_Source\PSoC4/ADC_1.c ****     #if (0u != ADC_1_CFG1_FILTER_PRESENT)
 192:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG1_UABH_A_FILTER_INITPAIRSSIZE (19u)
 193:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG1_UABH_A_FILTER_initPairs[ADC_1_CFG1_UABH_A_FILTER_INI
 194:Generated_Source\PSoC4/ADC_1.c ****         {
 195:Generated_Source\PSoC4/ADC_1.c ****             /*OA_CTRL default always first element in initPairs*/
 196:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
 197:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_A_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_A_DEFAULT_OA_CTRL)}
 198:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_A_DEFAULT_SW_STATIC)}
 199:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_MODBIT_SRC_PTR  , ((uint32)ADC_1_UABH_A_INVAR_SW_MODBIT_SRC)}
 200:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_A_INVAR_SRAM_CTRL)}
 201:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG1_UABH_A_STARTUP_DELAY)}
 202:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_A_DEFAULT_SW_BOOST_CTRL)}
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 5


 203:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_A_DEFAULT_SW_CA_IN1)}
 204:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_OTHER_PTR       , ((uint32)ADC_1_UABH_A_DEFAULT_SW_OTHER)}
 205:Generated_Source\PSoC4/ADC_1.c **** 
 206:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG1_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
 207:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 208:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_IN0)}
 209:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_TOP)}
 210:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN0)}
 211:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN1)}
 212:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CF_BOT)}
 213:Generated_Source\PSoC4/ADC_1.c **** 
 214:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 215:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG1_UABH_A_LOWQDYN_CAP_CTRL)}
 216:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_CFG1_UABH_A_LOWQDYN_SW_CB_IN0)}
 217:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_CFG1_UABH_A_LOWQDYN_SW_CB_IN1)}
 218:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG1_UABH_A_LOWQDYN_SW_CB_TOP)}
 219:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG1_UABH_A_LOWQDYN_SW_CC_TOP)}
 220:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG1_UABH_A_LOWQDYN_CAP_ABCF_VAL
 221:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG1_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 222:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 223:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_IN0)}
 224:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_TOP)}
 225:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN0)}
 226:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN1)}
 227:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN0)}
 228:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN1)}
 229:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_TOP)}
 230:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CF_BOT)}
 231:Generated_Source\PSoC4/ADC_1.c **** 
 232:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 233:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG1_UABH_A_HIGHQDYN_CAP_CTRL)}
 234:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG1_UABH_A_HIGHQDYN_SW_CB_TOP)}
 235:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG1_UABH_A_HIGHQDYN_CAP_ABCF_VA
 236:Generated_Source\PSoC4/ADC_1.c ****             #endif /* (ADC_1_CFG1_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 237:Generated_Source\PSoC4/ADC_1.c ****         };
 238:Generated_Source\PSoC4/ADC_1.c **** 
 239:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG1_UABH_B_FILTER_INITPAIRSSIZE (19u)
 240:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG1_UABH_B_FILTER_initPairs[ADC_1_CFG1_UABH_B_FILTER_INI
 241:Generated_Source\PSoC4/ADC_1.c ****         {
 242:Generated_Source\PSoC4/ADC_1.c ****             /*OA_CTRL default always first element in initPairs*/
 243:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
 244:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_B_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_B_DEFAULT_OA_CTRL)}
 245:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_B_DEFAULT_SW_STATIC)}
 246:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_MODBIT_SRC_PTR  , ((uint32)ADC_1_UABH_B_INVAR_SW_MODBIT_SRC)}
 247:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_B_INVAR_SRAM_CTRL)}
 248:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG1_UABH_B_STARTUP_DELAY)}
 249:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_B_DEFAULT_SW_BOOST_CTRL)}
 250:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_OTHER_PTR       , ((uint32)ADC_1_UABH_B_DEFAULT_SW_OTHER)}
 251:Generated_Source\PSoC4/ADC_1.c **** 
 252:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG1_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
 253:Generated_Source\PSoC4/ADC_1.c ****                         /* Filter-invariant registers */
 254:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN0)}
 255:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN1)}
 256:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_TOP)}
 257:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN0)}
 258:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN1)}
 259:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_TOP)}
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 6


 260:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN0)}
 261:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN1)}
 262:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CF_BOT)}
 263:Generated_Source\PSoC4/ADC_1.c **** 
 264:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 265:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG1_UABH_B_LOWQDYN_CAP_CTRL)}
 266:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG1_UABH_B_LOWQDYN_SW_CC_TOP)}
 267:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG1_UABH_B_LOWQDYN_CAP_ABCF_VAL
 268:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG1_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 269:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 270:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN0)}
 271:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN1)}
 272:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_TOP)}
 273:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN0)}
 274:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN1)}
 275:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN0)}
 276:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN1)}
 277:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CF_BOT)}
 278:Generated_Source\PSoC4/ADC_1.c **** 
 279:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 280:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG1_UABH_B_HIGHQDYN_CAP_CTRL)}
 281:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG1_UABH_B_HIGHQDYN_SW_CB_TOP)}
 282:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG1_UABH_B_HIGHQDYN_SW_CC_TOP)}
 283:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG1_UABH_B_HIGHQDYN_CAP_ABCF_VA
 284:Generated_Source\PSoC4/ADC_1.c ****             #endif /* #if (ADC_1_CFG1_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 285:Generated_Source\PSoC4/ADC_1.c ****         };
 286:Generated_Source\PSoC4/ADC_1.c **** 
 287:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG1_UABH_A_FILTER_config = {
 288:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_waveConfig,
 289:Generated_Source\PSoC4/ADC_1.c ****             (CyUAB_reg_pair*) ADC_1_CFG1_UABH_A_FILTER_initPairs,
 290:Generated_Source\PSoC4/ADC_1.c ****             CyUAB_SHARED_SW_CFG(ADC_1_UABH_A_PARAM_REF_TIED,ADC_1_UABH_A_PARAM_AGND_TIED,
 291:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_A_PARAM_SW_CC,ADC_1_UABH_A_PARAM_SW_BB,ADC_1_UABH_A_PARAM_SW_AA),
 292:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_NUM_STEPS,
 293:Generated_Source\PSoC4/ADC_1.c ****             (uint8)(ADC_1_UABH_A_ELEMENT_COUNT(ADC_1_CFG1_UABH_A_FILTER_initPairs))
 294:Generated_Source\PSoC4/ADC_1.c ****         };
 295:Generated_Source\PSoC4/ADC_1.c **** 
 296:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG1_UABH_B_FILTER_config = {
 297:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_waveConfig,
 298:Generated_Source\PSoC4/ADC_1.c ****         (CyUAB_reg_pair*) ADC_1_CFG1_UABH_B_FILTER_initPairs,
 299:Generated_Source\PSoC4/ADC_1.c ****         CyUAB_SHARED_SW_CFG(ADC_1_UABH_B_PARAM_REF_TIED,ADC_1_UABH_B_PARAM_AGND_TIED,
 300:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_B_PARAM_SW_CC,ADC_1_UABH_B_PARAM_SW_BB,ADC_1_UABH_B_PARAM_SW_AA),
 301:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_NUM_STEPS,
 302:Generated_Source\PSoC4/ADC_1.c ****         (uint8)(ADC_1_UABH_B_ELEMENT_COUNT(ADC_1_CFG1_UABH_B_FILTER_initPairs))
 303:Generated_Source\PSoC4/ADC_1.c ****     };
 304:Generated_Source\PSoC4/ADC_1.c ****     #endif /* (0u != ADC_1_CFG1_FILTER_PRESENT) */
 305:Generated_Source\PSoC4/ADC_1.c ****     #if (0u != ADC_1_CFG2_FILTER_PRESENT)
 306:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG2_UABH_A_FILTER_INITPAIRSSIZE (19u)
 307:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG2_UABH_A_FILTER_initPairs[ADC_1_CFG2_UABH_A_FILTER_INI
 308:Generated_Source\PSoC4/ADC_1.c ****         {
 309:Generated_Source\PSoC4/ADC_1.c ****             /*OA_CTRL default always first element in initPairs*/
 310:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
 311:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_A_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_A_DEFAULT_OA_CTRL)}
 312:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_A_DEFAULT_SW_STATIC)}
 313:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_MODBIT_SRC_PTR  , ((uint32)ADC_1_UABH_A_INVAR_SW_MODBIT_SRC)}
 314:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_A_INVAR_SRAM_CTRL)}
 315:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG2_UABH_A_STARTUP_DELAY)}
 316:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_A_DEFAULT_SW_BOOST_CTRL)}
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 7


 317:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_A_DEFAULT_SW_CA_IN1)}
 318:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_OTHER_PTR       , ((uint32)ADC_1_UABH_A_DEFAULT_SW_OTHER)}
 319:Generated_Source\PSoC4/ADC_1.c **** 
 320:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG2_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
 321:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 322:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_IN0)}
 323:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_TOP)}
 324:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN0)}
 325:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN1)}
 326:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CF_BOT)}
 327:Generated_Source\PSoC4/ADC_1.c **** 
 328:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 329:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG2_UABH_A_LOWQDYN_CAP_CTRL)}
 330:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_CFG2_UABH_A_LOWQDYN_SW_CB_IN0)}
 331:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_CFG2_UABH_A_LOWQDYN_SW_CB_IN1)}
 332:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG2_UABH_A_LOWQDYN_SW_CB_TOP)}
 333:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG2_UABH_A_LOWQDYN_SW_CC_TOP)}
 334:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG2_UABH_A_LOWQDYN_CAP_ABCF_VAL
 335:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG2_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 336:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 337:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_IN0)}
 338:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_TOP)}
 339:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN0)}
 340:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN1)}
 341:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN0)}
 342:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN1)}
 343:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_TOP)}
 344:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CF_BOT)}
 345:Generated_Source\PSoC4/ADC_1.c **** 
 346:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 347:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG2_UABH_A_HIGHQDYN_CAP_CTRL)}
 348:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG2_UABH_A_HIGHQDYN_SW_CB_TOP)}
 349:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG2_UABH_A_HIGHQDYN_CAP_ABCF_VA
 350:Generated_Source\PSoC4/ADC_1.c ****             #endif /* (ADC_1_CFG2_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 351:Generated_Source\PSoC4/ADC_1.c ****         };
 352:Generated_Source\PSoC4/ADC_1.c **** 
 353:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG2_UABH_B_FILTER_INITPAIRSSIZE (19u)
 354:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG2_UABH_B_FILTER_initPairs[ADC_1_CFG2_UABH_B_FILTER_INI
 355:Generated_Source\PSoC4/ADC_1.c ****         {
 356:Generated_Source\PSoC4/ADC_1.c ****             /*OA_CTRL default always first element in initPairs*/
 357:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
 358:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_B_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_B_DEFAULT_OA_CTRL)}
 359:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_B_DEFAULT_SW_STATIC)}
 360:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_MODBIT_SRC_PTR  , ((uint32)ADC_1_UABH_B_INVAR_SW_MODBIT_SRC)}
 361:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_B_INVAR_SRAM_CTRL)}
 362:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG2_UABH_B_STARTUP_DELAY)}
 363:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_B_DEFAULT_SW_BOOST_CTRL)}
 364:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_OTHER_PTR       , ((uint32)ADC_1_UABH_B_DEFAULT_SW_OTHER)}
 365:Generated_Source\PSoC4/ADC_1.c **** 
 366:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG2_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
 367:Generated_Source\PSoC4/ADC_1.c ****                         /* Filter-invariant registers */
 368:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN0)}
 369:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN1)}
 370:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_TOP)}
 371:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN0)}
 372:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN1)}
 373:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_TOP)}
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 8


 374:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN0)}
 375:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN1)}
 376:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CF_BOT)}
 377:Generated_Source\PSoC4/ADC_1.c **** 
 378:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 379:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG2_UABH_B_LOWQDYN_CAP_CTRL)}
 380:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG2_UABH_B_LOWQDYN_SW_CC_TOP)}
 381:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG2_UABH_B_LOWQDYN_CAP_ABCF_VAL
 382:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG2_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 383:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 384:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN0)}
 385:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN1)}
 386:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_TOP)}
 387:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN0)}
 388:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN1)}
 389:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN0)}
 390:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN1)}
 391:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CF_BOT)}
 392:Generated_Source\PSoC4/ADC_1.c **** 
 393:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 394:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG2_UABH_B_HIGHQDYN_CAP_CTRL)}
 395:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG2_UABH_B_HIGHQDYN_SW_CB_TOP)}
 396:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG2_UABH_B_HIGHQDYN_SW_CC_TOP)}
 397:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG2_UABH_B_HIGHQDYN_CAP_ABCF_VA
 398:Generated_Source\PSoC4/ADC_1.c ****             #endif /* #if (ADC_1_CFG2_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 399:Generated_Source\PSoC4/ADC_1.c ****         };
 400:Generated_Source\PSoC4/ADC_1.c **** 
 401:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG2_UABH_A_FILTER_config = {
 402:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_waveConfig,
 403:Generated_Source\PSoC4/ADC_1.c ****             (CyUAB_reg_pair*) ADC_1_CFG2_UABH_A_FILTER_initPairs,
 404:Generated_Source\PSoC4/ADC_1.c ****             CyUAB_SHARED_SW_CFG(ADC_1_UABH_A_PARAM_REF_TIED,ADC_1_UABH_A_PARAM_AGND_TIED,
 405:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_A_PARAM_SW_CC,ADC_1_UABH_A_PARAM_SW_BB,ADC_1_UABH_A_PARAM_SW_AA),
 406:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_NUM_STEPS,
 407:Generated_Source\PSoC4/ADC_1.c ****             (uint8)(ADC_1_UABH_A_ELEMENT_COUNT(ADC_1_CFG2_UABH_A_FILTER_initPairs))
 408:Generated_Source\PSoC4/ADC_1.c ****         };
 409:Generated_Source\PSoC4/ADC_1.c **** 
 410:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG2_UABH_B_FILTER_config = {
 411:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_waveConfig,
 412:Generated_Source\PSoC4/ADC_1.c ****         (CyUAB_reg_pair*) ADC_1_CFG2_UABH_B_FILTER_initPairs,
 413:Generated_Source\PSoC4/ADC_1.c ****         CyUAB_SHARED_SW_CFG(ADC_1_UABH_B_PARAM_REF_TIED,ADC_1_UABH_B_PARAM_AGND_TIED,
 414:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_B_PARAM_SW_CC,ADC_1_UABH_B_PARAM_SW_BB,ADC_1_UABH_B_PARAM_SW_AA),
 415:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_NUM_STEPS,
 416:Generated_Source\PSoC4/ADC_1.c ****         (uint8)(ADC_1_UABH_B_ELEMENT_COUNT(ADC_1_CFG2_UABH_B_FILTER_initPairs))
 417:Generated_Source\PSoC4/ADC_1.c ****     };
 418:Generated_Source\PSoC4/ADC_1.c ****     #endif /* (0u != ADC_1_CFG2_FILTER_PRESENT) */
 419:Generated_Source\PSoC4/ADC_1.c ****     #if (0u != ADC_1_CFG3_FILTER_PRESENT)
 420:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG3_UABH_A_FILTER_INITPAIRSSIZE (19u)
 421:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG3_UABH_A_FILTER_initPairs[ADC_1_CFG3_UABH_A_FILTER_INI
 422:Generated_Source\PSoC4/ADC_1.c ****         {
 423:Generated_Source\PSoC4/ADC_1.c ****             /*OA_CTRL default always first element in initPairs*/
 424:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
 425:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_A_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_A_DEFAULT_OA_CTRL)}
 426:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_A_DEFAULT_SW_STATIC)}
 427:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_MODBIT_SRC_PTR  , ((uint32)ADC_1_UABH_A_INVAR_SW_MODBIT_SRC)}
 428:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_A_INVAR_SRAM_CTRL)}
 429:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG3_UABH_A_STARTUP_DELAY)}
 430:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_A_DEFAULT_SW_BOOST_CTRL)}
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 9


 431:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_A_DEFAULT_SW_CA_IN1)}
 432:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_OTHER_PTR       , ((uint32)ADC_1_UABH_A_DEFAULT_SW_OTHER)}
 433:Generated_Source\PSoC4/ADC_1.c **** 
 434:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG3_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
 435:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 436:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_IN0)}
 437:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_TOP)}
 438:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN0)}
 439:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN1)}
 440:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CF_BOT)}
 441:Generated_Source\PSoC4/ADC_1.c **** 
 442:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 443:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG3_UABH_A_LOWQDYN_CAP_CTRL)}
 444:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_CFG3_UABH_A_LOWQDYN_SW_CB_IN0)}
 445:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_CFG3_UABH_A_LOWQDYN_SW_CB_IN1)}
 446:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG3_UABH_A_LOWQDYN_SW_CB_TOP)}
 447:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG3_UABH_A_LOWQDYN_SW_CC_TOP)}
 448:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG3_UABH_A_LOWQDYN_CAP_ABCF_VAL
 449:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG3_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 450:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 451:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_IN0)}
 452:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_TOP)}
 453:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN0)}
 454:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN1)}
 455:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN0)}
 456:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN1)}
 457:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_TOP)}
 458:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CF_BOT)}
 459:Generated_Source\PSoC4/ADC_1.c **** 
 460:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 461:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG3_UABH_A_HIGHQDYN_CAP_CTRL)}
 462:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG3_UABH_A_HIGHQDYN_SW_CB_TOP)}
 463:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG3_UABH_A_HIGHQDYN_CAP_ABCF_VA
 464:Generated_Source\PSoC4/ADC_1.c ****             #endif /* (ADC_1_CFG3_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 465:Generated_Source\PSoC4/ADC_1.c ****         };
 466:Generated_Source\PSoC4/ADC_1.c **** 
 467:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG3_UABH_B_FILTER_INITPAIRSSIZE (19u)
 468:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG3_UABH_B_FILTER_initPairs[ADC_1_CFG3_UABH_B_FILTER_INI
 469:Generated_Source\PSoC4/ADC_1.c ****         {
 470:Generated_Source\PSoC4/ADC_1.c ****             /*OA_CTRL default always first element in initPairs*/
 471:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
 472:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_B_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_B_DEFAULT_OA_CTRL)}
 473:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_B_DEFAULT_SW_STATIC)}
 474:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_MODBIT_SRC_PTR  , ((uint32)ADC_1_UABH_B_INVAR_SW_MODBIT_SRC)}
 475:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_B_INVAR_SRAM_CTRL)}
 476:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG3_UABH_B_STARTUP_DELAY)}
 477:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_B_DEFAULT_SW_BOOST_CTRL)}
 478:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_OTHER_PTR       , ((uint32)ADC_1_UABH_B_DEFAULT_SW_OTHER)}
 479:Generated_Source\PSoC4/ADC_1.c **** 
 480:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG3_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
 481:Generated_Source\PSoC4/ADC_1.c ****                         /* Filter-invariant registers */
 482:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN0)}
 483:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN1)}
 484:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_TOP)}
 485:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN0)}
 486:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN1)}
 487:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_TOP)}
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 10


 488:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN0)}
 489:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN1)}
 490:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CF_BOT)}
 491:Generated_Source\PSoC4/ADC_1.c **** 
 492:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 493:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG3_UABH_B_LOWQDYN_CAP_CTRL)}
 494:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG3_UABH_B_LOWQDYN_SW_CC_TOP)}
 495:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG3_UABH_B_LOWQDYN_CAP_ABCF_VAL
 496:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG3_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 497:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 498:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN0)}
 499:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN1)}
 500:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_TOP)}
 501:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN0)}
 502:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN1)}
 503:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN0)}
 504:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN1)}
 505:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CF_BOT)}
 506:Generated_Source\PSoC4/ADC_1.c **** 
 507:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 508:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG3_UABH_B_HIGHQDYN_CAP_CTRL)}
 509:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG3_UABH_B_HIGHQDYN_SW_CB_TOP)}
 510:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG3_UABH_B_HIGHQDYN_SW_CC_TOP)}
 511:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG3_UABH_B_HIGHQDYN_CAP_ABCF_VA
 512:Generated_Source\PSoC4/ADC_1.c ****             #endif /* #if (ADC_1_CFG3_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 513:Generated_Source\PSoC4/ADC_1.c ****         };
 514:Generated_Source\PSoC4/ADC_1.c **** 
 515:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG3_UABH_A_FILTER_config = {
 516:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_waveConfig,
 517:Generated_Source\PSoC4/ADC_1.c ****             (CyUAB_reg_pair*) ADC_1_CFG3_UABH_A_FILTER_initPairs,
 518:Generated_Source\PSoC4/ADC_1.c ****             CyUAB_SHARED_SW_CFG(ADC_1_UABH_A_PARAM_REF_TIED,ADC_1_UABH_A_PARAM_AGND_TIED,
 519:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_A_PARAM_SW_CC,ADC_1_UABH_A_PARAM_SW_BB,ADC_1_UABH_A_PARAM_SW_AA),
 520:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_NUM_STEPS,
 521:Generated_Source\PSoC4/ADC_1.c ****             (uint8)(ADC_1_UABH_A_ELEMENT_COUNT(ADC_1_CFG3_UABH_A_FILTER_initPairs))
 522:Generated_Source\PSoC4/ADC_1.c ****         };
 523:Generated_Source\PSoC4/ADC_1.c **** 
 524:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG3_UABH_B_FILTER_config = {
 525:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_waveConfig,
 526:Generated_Source\PSoC4/ADC_1.c ****         (CyUAB_reg_pair*) ADC_1_CFG3_UABH_B_FILTER_initPairs,
 527:Generated_Source\PSoC4/ADC_1.c ****         CyUAB_SHARED_SW_CFG(ADC_1_UABH_B_PARAM_REF_TIED,ADC_1_UABH_B_PARAM_AGND_TIED,
 528:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_B_PARAM_SW_CC,ADC_1_UABH_B_PARAM_SW_BB,ADC_1_UABH_B_PARAM_SW_AA),
 529:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_NUM_STEPS,
 530:Generated_Source\PSoC4/ADC_1.c ****         (uint8)(ADC_1_UABH_B_ELEMENT_COUNT(ADC_1_CFG3_UABH_B_FILTER_initPairs))
 531:Generated_Source\PSoC4/ADC_1.c ****     };
 532:Generated_Source\PSoC4/ADC_1.c ****     #endif /* (0u != ADC_1_CFG3_FILTER_PRESENT) */
 533:Generated_Source\PSoC4/ADC_1.c **** 
 534:Generated_Source\PSoC4/ADC_1.c **** 
 535:Generated_Source\PSoC4/ADC_1.c **** #endif /* (ADC_1_ANY_CONFIG_USES_FILTER  != 0u)  */
 536:Generated_Source\PSoC4/ADC_1.c **** 
 537:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 538:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_Start
 539:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 540:Generated_Source\PSoC4/ADC_1.c **** *
 541:Generated_Source\PSoC4/ADC_1.c **** * \brief Performs all required initialization for this component and enables the
 542:Generated_Source\PSoC4/ADC_1.c **** *  power. The power will be set to the appropriate power based on the clock
 543:Generated_Source\PSoC4/ADC_1.c **** *  frequency.
 544:Generated_Source\PSoC4/ADC_1.c **** *
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 11


 545:Generated_Source\PSoC4/ADC_1.c **** * \param None
 546:Generated_Source\PSoC4/ADC_1.c **** *
 547:Generated_Source\PSoC4/ADC_1.c **** * \return None
 548:Generated_Source\PSoC4/ADC_1.c **** *
 549:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 550:Generated_Source\PSoC4/ADC_1.c **** *
 551:Generated_Source\PSoC4/ADC_1.c **** * \globalvars
 552:Generated_Source\PSoC4/ADC_1.c **** *  \ref ADC_1_initVar (RW)
 553:Generated_Source\PSoC4/ADC_1.c **** *
 554:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 555:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_Start(void)
 556:Generated_Source\PSoC4/ADC_1.c **** {
 557:Generated_Source\PSoC4/ADC_1.c ****     if (ADC_1_INIT_VAR_INIT_FLAG != (ADC_1_INIT_VAR_INIT_FLAG & ADC_1_initVar))
 558:Generated_Source\PSoC4/ADC_1.c ****     {
 559:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_Init();
 560:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_initVar |= ADC_1_INIT_VAR_INIT_FLAG;
 561:Generated_Source\PSoC4/ADC_1.c ****     }
 562:Generated_Source\PSoC4/ADC_1.c **** 
 563:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_Enable();
 564:Generated_Source\PSoC4/ADC_1.c **** 
 565:Generated_Source\PSoC4/ADC_1.c ****     return;
 566:Generated_Source\PSoC4/ADC_1.c **** }
 567:Generated_Source\PSoC4/ADC_1.c **** 
 568:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 569:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_StartEx
 570:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 571:Generated_Source\PSoC4/ADC_1.c **** *
 572:Generated_Source\PSoC4/ADC_1.c **** * \brief This function starts the ADC_1 and sets the Interrupt
 573:Generated_Source\PSoC4/ADC_1.c **** * Service Routine to the provided address using the
 574:Generated_Source\PSoC4/ADC_1.c **** * ADC_1_IRQ_StartEx() function. Refer to the Interrupt component
 575:Generated_Source\PSoC4/ADC_1.c **** * datasheet for more information on the ADC_1_IRQ_StartEx() function.
 576:Generated_Source\PSoC4/ADC_1.c **** *
 577:Generated_Source\PSoC4/ADC_1.c **** * \param address This is the address of a user defined function for the ISR.
 578:Generated_Source\PSoC4/ADC_1.c **** *
 579:Generated_Source\PSoC4/ADC_1.c **** * \return None
 580:Generated_Source\PSoC4/ADC_1.c **** *
 581:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 582:Generated_Source\PSoC4/ADC_1.c **** *
 583:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 584:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_StartEx(cyisraddress address)
 585:Generated_Source\PSoC4/ADC_1.c **** {
 586:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_Start();
 587:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_IRQ_StartEx(address);
 588:Generated_Source\PSoC4/ADC_1.c ****     return;
 589:Generated_Source\PSoC4/ADC_1.c **** }
 590:Generated_Source\PSoC4/ADC_1.c **** 
 591:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 592:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_Stop
 593:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 594:Generated_Source\PSoC4/ADC_1.c **** *
 595:Generated_Source\PSoC4/ADC_1.c **** * \brief This function stops ADC conversions and puts the ADC into its lowest
 596:Generated_Source\PSoC4/ADC_1.c **** * power mode.
 597:Generated_Source\PSoC4/ADC_1.c **** *
 598:Generated_Source\PSoC4/ADC_1.c **** * \param None
 599:Generated_Source\PSoC4/ADC_1.c **** *
 600:Generated_Source\PSoC4/ADC_1.c **** * \return None
 601:Generated_Source\PSoC4/ADC_1.c **** *
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 12


 602:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect
 603:Generated_Source\PSoC4/ADC_1.c **** * Do not use the ADC_1_Stop() API to halt conversions. Instead use the
 604:Generated_Source\PSoC4/ADC_1.c **** * ADC_1_StopConvert() API. If you use the ADC_1_Stop() API
 605:Generated_Source\PSoC4/ADC_1.c **** * to halt conversions then later use the ADC_1_Start() and
 606:Generated_Source\PSoC4/ADC_1.c **** * ADC_1_StartConvert() APIs to resume conversions, the first channel
 607:Generated_Source\PSoC4/ADC_1.c **** * of the scan may be corrupt. The ADC_1_StopConvert() API will enable
 608:Generated_Source\PSoC4/ADC_1.c **** * the ADC_1 to complete the current scan of channels. After the
 609:Generated_Source\PSoC4/ADC_1.c **** * channel scan is complete, the ADC_1 will stop all conversions, which
 610:Generated_Source\PSoC4/ADC_1.c **** * can be detected by the use of an ISR or the ADC_1_IsEndConversion()
 611:Generated_Source\PSoC4/ADC_1.c **** * flag.
 612:Generated_Source\PSoC4/ADC_1.c **** *
 613:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 614:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_Stop(void)
 615:Generated_Source\PSoC4/ADC_1.c **** {
 616:Generated_Source\PSoC4/ADC_1.c ****     #if(0u != ADC_1_ANY_CONFIG_USES_FILTER)
 617:Generated_Source\PSoC4/ADC_1.c ****         if((ADC_1_allConfigs[ADC_1_currentConfig].miscConfig
 618:Generated_Source\PSoC4/ADC_1.c ****            & ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
 619:Generated_Source\PSoC4/ADC_1.c ****            == ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
 620:Generated_Source\PSoC4/ADC_1.c ****         {
 621:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_Stop();
 622:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_B_Stop();
 623:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_FILTERAGND2SAR_BUFFER_Stop();
 624:Generated_Source\PSoC4/ADC_1.c ****         }
 625:Generated_Source\PSoC4/ADC_1.c ****     #endif /* ADC_1_ANY_CONFIG_USES_FILTER != 0u */
 626:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_CTRL_REG &= (uint32)~ADC_1_SAR_CTRL_ENABLED_MSK;
 627:Generated_Source\PSoC4/ADC_1.c ****     return;
 628:Generated_Source\PSoC4/ADC_1.c **** }
 629:Generated_Source\PSoC4/ADC_1.c **** 
 630:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
 631:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_InitConfig
 632:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
 633:Generated_Source\PSoC4/ADC_1.c **** *
 634:Generated_Source\PSoC4/ADC_1.c **** * \brief Configures all of the registers for a given configuration for scanning.
 635:Generated_Source\PSoC4/ADC_1.c **** *
 636:Generated_Source\PSoC4/ADC_1.c **** * \param
 637:Generated_Source\PSoC4/ADC_1.c **** * config: Pointer to the configuration structure
 638:Generated_Source\PSoC4/ADC_1.c **** *
 639:Generated_Source\PSoC4/ADC_1.c **** * \return None
 640:Generated_Source\PSoC4/ADC_1.c **** *
 641:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 642:Generated_Source\PSoC4/ADC_1.c **** *
 643:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 644:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_InitConfig(const ADC_1_CONFIG_STRUCT *config)
 645:Generated_Source\PSoC4/ADC_1.c **** {
 646:Generated_Source\PSoC4/ADC_1.c ****     uint32 chNum;
 647:Generated_Source\PSoC4/ADC_1.c ****     uint32 tmpRegVal;
 648:Generated_Source\PSoC4/ADC_1.c **** 
 649:Generated_Source\PSoC4/ADC_1.c ****     /* If there is an internal SAR clock, set up its divider values. */
 650:Generated_Source\PSoC4/ADC_1.c ****     #if (ADC_1_CLOCK_INTERNAL)
 651:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_intSarClock_Stop();
 652:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_intSarClock_SetFractionalDividerRegister(config->clkDivider, 0u);
 653:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_intSarClock_Start();
 654:Generated_Source\PSoC4/ADC_1.c ****     #endif /* ADC_1_CLOCK_INTERNAL */
 655:Generated_Source\PSoC4/ADC_1.c **** 
 656:Generated_Source\PSoC4/ADC_1.c ****     /* If the current configuration has a filter, set up the UAB clock divider values. */
 657:Generated_Source\PSoC4/ADC_1.c ****     #if(0u != ADC_1_ANY_CONFIG_USES_FILTER)
 658:Generated_Source\PSoC4/ADC_1.c ****         if((config->miscConfig & ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 13


 659:Generated_Source\PSoC4/ADC_1.c ****             == ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
 660:Generated_Source\PSoC4/ADC_1.c ****         {
 661:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_intUabClock_Stop();
 662:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_intUabClock_SetFractionalDividerRegister(config->filterClkDivider, 0u);
 663:Generated_Source\PSoC4/ADC_1.c ****             #if defined(ADC_1_cy_psoc4_sar_1__CLOCK_DIV_ID)
 664:Generated_Source\PSoC4/ADC_1.c ****                 /* If the SAR clock divider ID is known,
 665:Generated_Source\PSoC4/ADC_1.c ****                  * start the internal UAB divider aligned to the SAR divider. */
 666:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_intUabClock_StartEx(ADC_1_cy_psoc4_sar_1__CLOCK_DIV_ID);
 667:Generated_Source\PSoC4/ADC_1.c ****             #else
 668:Generated_Source\PSoC4/ADC_1.c ****                 /* Otherwise start it unaligned. */
 669:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_intUabClock_Start();
 670:Generated_Source\PSoC4/ADC_1.c ****             #endif
 671:Generated_Source\PSoC4/ADC_1.c ****         }
 672:Generated_Source\PSoC4/ADC_1.c ****     #endif /* ADC_1_ANY_CONFIG_USES_FILTER != 0u */
 673:Generated_Source\PSoC4/ADC_1.c **** 
 674:Generated_Source\PSoC4/ADC_1.c ****     /* Init SAR and MUX registers */
 675:Generated_Source\PSoC4/ADC_1.c ****     /* Enable the SAR internal pump when global pump is enabled */
 676:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_CTRL_REG = config->ctrl
 677:Generated_Source\PSoC4/ADC_1.c ****         | (((ADC_1_PUMP_CTRL_REG & ADC_1_PUMP_CTRL_ENABLED) != 0u)
 678:Generated_Source\PSoC4/ADC_1.c ****             ? ADC_1_SAR_CTRL_BOOSTPUMP_EN_MSK : 0u);
 679:Generated_Source\PSoC4/ADC_1.c **** 
 680:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SAMPLE_CTRL_REG = config->sampleCtrl;
 681:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_THRES_REG = config->rangeThres;
 682:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_COND_REG = config->rangeCond;
 683:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SAMPLE_TIME01_REG = config->sampleTime01;
 684:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SAMPLE_TIME23_REG = config->sampleTime23;
 685:Generated_Source\PSoC4/ADC_1.c **** 
 686:Generated_Source\PSoC4/ADC_1.c ****     /* Connect Vminus to VSSA when even one channel is single-ended or multiple channels configured
 687:Generated_Source\PSoC4/ADC_1.c ****     if(1u == ADC_1_MUX_SWITCH0_INIT)
 688:Generated_Source\PSoC4/ADC_1.c ****     {
 689:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_MUX_SWITCH0_REG |= ADC_1_MUX_FW_VSSA_VMINUS;
 690:Generated_Source\PSoC4/ADC_1.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 691:Generated_Source\PSoC4/ADC_1.c ****         if(1ul < config->numChannels)
 692:Generated_Source\PSoC4/ADC_1.c ****         {
 693:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_MUX_SWITCH_HW_CTRL_REG |= ADC_1_MUX_FW_VSSA_VMINUS;
 694:Generated_Source\PSoC4/ADC_1.c ****         }
 695:Generated_Source\PSoC4/ADC_1.c ****     }
 696:Generated_Source\PSoC4/ADC_1.c **** 
 697:Generated_Source\PSoC4/ADC_1.c ****     /* Clear and set interrupt masks */
 698:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SATURATE_INTR_MASK_REG = 0u;
 699:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_INTR_MASK_REG = 0u;
 700:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SATURATE_INTR_MASK_REG = config->satIntMask;
 701:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_INTR_MASK_REG = config->rangeIntMask;
 702:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_INTR_MASK_REG = ADC_1_EOS_MASK;
 703:Generated_Source\PSoC4/ADC_1.c **** 
 704:Generated_Source\PSoC4/ADC_1.c ****     for(chNum = 0u; chNum < config->numChannels; chNum++)
 705:Generated_Source\PSoC4/ADC_1.c ****     {
 706:Generated_Source\PSoC4/ADC_1.c ****         tmpRegVal = (ADC_1_channelsConfig[config->channelBase + chNum]
 707:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_CHANNEL_CONFIG_MASK);
 708:Generated_Source\PSoC4/ADC_1.c **** 
 709:Generated_Source\PSoC4/ADC_1.c ****         #if(ADC_1_TOTAL_CHANNELS_NUM > 1)
 710:Generated_Source\PSoC4/ADC_1.c ****             tmpRegVal |= ADC_1_InputsPlacement[config->channelBase + chNum];
 711:Generated_Source\PSoC4/ADC_1.c ****             /*Non-paired differential channels set NEG_ADDR_EN and clear DIFFERENTIAL_EN */
 712:Generated_Source\PSoC4/ADC_1.c ****             if(0u != (ADC_1_InputsPlacement[config->channelBase + chNum] & ADC_1_CHANNEL_CONFIG_NEG
 713:Generated_Source\PSoC4/ADC_1.c ****             {
 714:Generated_Source\PSoC4/ADC_1.c ****                 tmpRegVal &= ~ADC_1_SAR_CHAN_CONFIG_DIFFERENTIAL_EN_MSK;
 715:Generated_Source\PSoC4/ADC_1.c ****             }
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 14


 716:Generated_Source\PSoC4/ADC_1.c ****         #endif
 717:Generated_Source\PSoC4/ADC_1.c **** 
 718:Generated_Source\PSoC4/ADC_1.c ****         CY_SET_REG32((reg32 *)(ADC_1_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 719:Generated_Source\PSoC4/ADC_1.c ****     }
 720:Generated_Source\PSoC4/ADC_1.c **** 
 721:Generated_Source\PSoC4/ADC_1.c ****     return;
 722:Generated_Source\PSoC4/ADC_1.c **** }
 723:Generated_Source\PSoC4/ADC_1.c **** 
 724:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
 725:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetDFTControl
 726:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
 727:Generated_Source\PSoC4/ADC_1.c **** *
 728:Generated_Source\PSoC4/ADC_1.c **** * \brief Internal function to configure the DFT_CTRL register.
 729:Generated_Source\PSoC4/ADC_1.c **** * This register is a non-retention register therefore it resets
 730:Generated_Source\PSoC4/ADC_1.c **** * when the SAR block is powered down.
 731:Generated_Source\PSoC4/ADC_1.c **** * The register must be configured every time the SAR block is enabled.
 732:Generated_Source\PSoC4/ADC_1.c **** *
 733:Generated_Source\PSoC4/ADC_1.c **** * \param
 734:Generated_Source\PSoC4/ADC_1.c **** * config: Pointer to the configuration structure
 735:Generated_Source\PSoC4/ADC_1.c **** *
 736:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 737:Generated_Source\PSoC4/ADC_1.c **** static void ADC_1_SetDFTControl(const ADC_1_CONFIG_STRUCT *config)
 738:Generated_Source\PSoC4/ADC_1.c **** {
  27              		.loc 1 738 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 739:Generated_Source\PSoC4/ADC_1.c ****     /* Double the non-overlap delay and latch enable time when using */
 740:Generated_Source\PSoC4/ADC_1.c ****     /* internal reference without bypass cap */
 741:Generated_Source\PSoC4/ADC_1.c ****     uint32 tmpRegVal = ADC_1_SAR_DFT_CTRL_REG;
  33              		.loc 1 741 0
  34 0000 0A4B     		ldr	r3, .L5
  35 0002 1B68     		ldr	r3, [r3]
  36              	.LVL1:
 742:Generated_Source\PSoC4/ADC_1.c ****     if(((config->ctrl & ADC_1__SAR_CTRL_VREF_BYP_AND_SEL_MSK)
  37              		.loc 1 742 0
  38 0004 8268     		ldr	r2, [r0, #8]
  39 0006 F021     		movs	r1, #240
  40 0008 0A40     		ands	r2, r1
  41 000a 402A     		cmp	r2, #64
  42 000c 01D0     		beq	.L2
 743:Generated_Source\PSoC4/ADC_1.c ****         == ADC_1__INTERNAL1024)
 744:Generated_Source\PSoC4/ADC_1.c ****         || ((config->ctrl & ADC_1__SAR_CTRL_VREF_BYP_AND_SEL_MSK)
  43              		.loc 1 744 0
  44 000e 002A     		cmp	r2, #0
  45 0010 04D1     		bne	.L3
  46              	.L2:
 745:Generated_Source\PSoC4/ADC_1.c ****         == ADC_1__INTERNALVREF))
 746:Generated_Source\PSoC4/ADC_1.c ****     {
 747:Generated_Source\PSoC4/ADC_1.c ****         tmpRegVal &= ~ADC_1_SAR_DFT_CTRL_DCEN_MSK;
  47              		.loc 1 747 0
  48 0012 074A     		ldr	r2, .L5+4
  49 0014 1340     		ands	r3, r2
  50              	.LVL2:
 748:Generated_Source\PSoC4/ADC_1.c ****         tmpRegVal |= ADC_1_SAR_DFT_CTRL_DLY_INC_MSK;
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 15


  51              		.loc 1 748 0
  52 0016 0122     		movs	r2, #1
  53 0018 1343     		orrs	r3, r2
  54              	.LVL3:
  55 001a 04E0     		b	.L4
  56              	.L3:
  57              	.LVL4:
  58 001c 0122     		movs	r2, #1
  59 001e 9343     		bics	r3, r2
  60              	.LVL5:
 749:Generated_Source\PSoC4/ADC_1.c ****     }
 750:Generated_Source\PSoC4/ADC_1.c ****     else
 751:Generated_Source\PSoC4/ADC_1.c ****     {
 752:Generated_Source\PSoC4/ADC_1.c ****         tmpRegVal |= ADC_1_SAR_DFT_CTRL_DCEN_MSK;
 753:Generated_Source\PSoC4/ADC_1.c ****         tmpRegVal &= (uint32)~ADC_1_SAR_DFT_CTRL_DLY_INC_MSK;
  61              		.loc 1 753 0
  62 0020 8022     		movs	r2, #128
  63 0022 9205     		lsls	r2, r2, #22
  64 0024 1343     		orrs	r3, r2
  65              	.LVL6:
  66              	.L4:
 754:Generated_Source\PSoC4/ADC_1.c ****     }
 755:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_DFT_CTRL_REG = tmpRegVal;
  67              		.loc 1 755 0
  68 0026 014A     		ldr	r2, .L5
  69 0028 1360     		str	r3, [r2]
 756:Generated_Source\PSoC4/ADC_1.c **** }
  70              		.loc 1 756 0
  71              		@ sp needed
  72 002a 7047     		bx	lr
  73              	.L6:
  74              		.align	2
  75              	.L5:
  76 002c 30003A40 		.word	1077542960
  77 0030 FFFFFFDF 		.word	-536870913
  78              		.cfi_endproc
  79              	.LFE5:
  80              		.size	ADC_1_SetDFTControl, .-ADC_1_SetDFTControl
  81              		.section	.text.ADC_1_IsChannelSigned,"ax",%progbits
  82              		.align	2
  83              		.code	16
  84              		.thumb_func
  85              		.type	ADC_1_IsChannelSigned, %function
  86              	ADC_1_IsChannelSigned:
  87              	.LFB13:
 757:Generated_Source\PSoC4/ADC_1.c **** 
 758:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
 759:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SelectConfig
 760:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
 761:Generated_Source\PSoC4/ADC_1.c **** *
 762:Generated_Source\PSoC4/ADC_1.c **** * \brief Selects the predefined configuration for scanning. Disables
 763:Generated_Source\PSoC4/ADC_1.c **** * and re-enables the SAR and filter (if filter used).
 764:Generated_Source\PSoC4/ADC_1.c **** *
 765:Generated_Source\PSoC4/ADC_1.c **** * \param config Number of configuration  in the ADC_1.
 766:Generated_Source\PSoC4/ADC_1.c **** *
 767:Generated_Source\PSoC4/ADC_1.c **** * \param restart Set to 1u to restart the ADC_1 after
 768:Generated_Source\PSoC4/ADC_1.c **** * selecting the configuration.
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 16


 769:Generated_Source\PSoC4/ADC_1.c **** *
 770:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 771:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SelectConfig(uint32 config, uint32 restart)
 772:Generated_Source\PSoC4/ADC_1.c **** {
 773:Generated_Source\PSoC4/ADC_1.c ****     /* Check whether the configuration number is valid or not */
 774:Generated_Source\PSoC4/ADC_1.c ****     if(ADC_1_TOTAL_CONFIGS > config)
 775:Generated_Source\PSoC4/ADC_1.c ****     {
 776:Generated_Source\PSoC4/ADC_1.c ****         /* Stop the ADC before changing configurations */
 777:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_Stop();
 778:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_selected = 1u;
 779:Generated_Source\PSoC4/ADC_1.c **** 
 780:Generated_Source\PSoC4/ADC_1.c ****         if(0u == ADC_1_initVar)
 781:Generated_Source\PSoC4/ADC_1.c ****         {
 782:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_Init();
 783:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_initVar |= ADC_1_INIT_VAR_INIT_FLAG;
 784:Generated_Source\PSoC4/ADC_1.c ****         }
 785:Generated_Source\PSoC4/ADC_1.c ****         #if (ADC_1_VREF_ROUTED)
 786:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_vrefAMux_DisconnectAll();
 787:Generated_Source\PSoC4/ADC_1.c ****         #endif
 788:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_InitConfig(&ADC_1_allConfigs[config]);
 789:Generated_Source\PSoC4/ADC_1.c ****         #if (ADC_1_VREF_ROUTED)
 790:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_vrefAMux_Select((uint8)config);
 791:Generated_Source\PSoC4/ADC_1.c ****         #endif
 792:Generated_Source\PSoC4/ADC_1.c ****         #if(0u != ADC_1_ANY_CONFIG_USES_FILTER)
 793:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_filterVinMux_Select((uint8)config);
 794:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_filterInit(config);
 795:Generated_Source\PSoC4/ADC_1.c ****         #endif
 796:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_CHAN_EN_REG = ADC_1_allConfigs[config].chanEn;
 797:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_RANGE_INTR_MASK_REG = ADC_1_allConfigs[config].rangeIntMask;
 798:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_SATURATE_INTR_MASK_REG = ADC_1_allConfigs[config].satIntMask;
 799:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_currentConfig = config;
 800:Generated_Source\PSoC4/ADC_1.c **** 
 801:Generated_Source\PSoC4/ADC_1.c ****         if(1u == restart)
 802:Generated_Source\PSoC4/ADC_1.c ****         {
 803:Generated_Source\PSoC4/ADC_1.c ****             /* Restart the ADC */
 804:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_Start();
 805:Generated_Source\PSoC4/ADC_1.c **** 
 806:Generated_Source\PSoC4/ADC_1.c ****             /* Restart the scan */
 807:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_StartConvert();
 808:Generated_Source\PSoC4/ADC_1.c ****         }
 809:Generated_Source\PSoC4/ADC_1.c ****     }
 810:Generated_Source\PSoC4/ADC_1.c ****     return;
 811:Generated_Source\PSoC4/ADC_1.c **** }
 812:Generated_Source\PSoC4/ADC_1.c **** 
 813:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 814:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_StartConvert
 815:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 816:Generated_Source\PSoC4/ADC_1.c **** *
 817:Generated_Source\PSoC4/ADC_1.c **** * \brief In continuous mode, this API starts the conversion process and it runs
 818:Generated_Source\PSoC4/ADC_1.c **** * continuously.
 819:Generated_Source\PSoC4/ADC_1.c **** 
 820:Generated_Source\PSoC4/ADC_1.c **** * In Single Shot mode, the function triggers a single scan and
 821:Generated_Source\PSoC4/ADC_1.c **** * every scan requires a call of this function. The mode is set with the
 822:Generated_Source\PSoC4/ADC_1.c **** * Sample Mode parameter in the customizer. The customizer setting can be
 823:Generated_Source\PSoC4/ADC_1.c **** * overridden at run time with the ADC_1_SetConvertMode() function.
 824:Generated_Source\PSoC4/ADC_1.c **** *
 825:Generated_Source\PSoC4/ADC_1.c **** * \param None
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 17


 826:Generated_Source\PSoC4/ADC_1.c **** *
 827:Generated_Source\PSoC4/ADC_1.c **** * \return None
 828:Generated_Source\PSoC4/ADC_1.c **** *
 829:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 830:Generated_Source\PSoC4/ADC_1.c **** *
 831:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 832:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_StartConvert(void)
 833:Generated_Source\PSoC4/ADC_1.c **** {
 834:Generated_Source\PSoC4/ADC_1.c ****     /* Freerunning mode */
 835:Generated_Source\PSoC4/ADC_1.c ****     if((ADC_1_SAR_SAMPLE_CTRL_REG
 836:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 837:Generated_Source\PSoC4/ADC_1.c ****         == ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 838:Generated_Source\PSoC4/ADC_1.c ****     {
 839:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_SAMPLE_CTRL_REG |= ADC_1_SAR_SAMPLE_CTRL_CONTINUOUS_MSK ;
 840:Generated_Source\PSoC4/ADC_1.c ****     }
 841:Generated_Source\PSoC4/ADC_1.c ****     else /* Firmware trigger */
 842:Generated_Source\PSoC4/ADC_1.c ****     {
 843:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_START_CTRL_REG = ADC_1_SAR_START_CTRL_FW_TRIGGER_MSK;
 844:Generated_Source\PSoC4/ADC_1.c ****     }
 845:Generated_Source\PSoC4/ADC_1.c **** 
 846:Generated_Source\PSoC4/ADC_1.c ****     return;
 847:Generated_Source\PSoC4/ADC_1.c **** }
 848:Generated_Source\PSoC4/ADC_1.c **** 
 849:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 850:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_StopConvert
 851:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 852:Generated_Source\PSoC4/ADC_1.c **** *
 853:Generated_Source\PSoC4/ADC_1.c **** * \brief Forces the ADC_1 to stop conversions. If a conversion is
 854:Generated_Source\PSoC4/ADC_1.c **** * currently executing, that conversion will complete, but no further conversions
 855:Generated_Source\PSoC4/ADC_1.c **** * will occur.
 856:Generated_Source\PSoC4/ADC_1.c **** *
 857:Generated_Source\PSoC4/ADC_1.c **** * \param None
 858:Generated_Source\PSoC4/ADC_1.c **** *
 859:Generated_Source\PSoC4/ADC_1.c **** * \return None
 860:Generated_Source\PSoC4/ADC_1.c **** *
 861:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 862:Generated_Source\PSoC4/ADC_1.c **** *
 863:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 864:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_StopConvert(void)
 865:Generated_Source\PSoC4/ADC_1.c **** {
 866:Generated_Source\PSoC4/ADC_1.c ****     if((ADC_1_SAR_SAMPLE_CTRL_REG
 867:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 868:Generated_Source\PSoC4/ADC_1.c ****         == ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 869:Generated_Source\PSoC4/ADC_1.c ****     {
 870:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_SAMPLE_CTRL_REG &= ~ADC_1_SAR_SAMPLE_CTRL_CONTINUOUS_MSK;
 871:Generated_Source\PSoC4/ADC_1.c **** 
 872:Generated_Source\PSoC4/ADC_1.c ****         if((ADC_1_allConfigs[ADC_1_currentConfig].miscConfig
 873:Generated_Source\PSoC4/ADC_1.c ****             & ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
 874:Generated_Source\PSoC4/ADC_1.c ****             == ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
 875:Generated_Source\PSoC4/ADC_1.c ****         {
 876:Generated_Source\PSoC4/ADC_1.c ****             /* Re-synchronize the Filter if a filter is present */
 877:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_Stop();
 878:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_Start();
 879:Generated_Source\PSoC4/ADC_1.c ****         }
 880:Generated_Source\PSoC4/ADC_1.c ****     }
 881:Generated_Source\PSoC4/ADC_1.c **** 
 882:Generated_Source\PSoC4/ADC_1.c ****     return;
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 18


 883:Generated_Source\PSoC4/ADC_1.c **** }
 884:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 885:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetConvertMode
 886:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 887:Generated_Source\PSoC4/ADC_1.c **** *
 888:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets the conversion mode to either Single-Shot or continuous. This
 889:Generated_Source\PSoC4/ADC_1.c **** * function overrides the settings applied in the customizer. Changing
 890:Generated_Source\PSoC4/ADC_1.c **** * configurations will restore the values set in the customizer.
 891:Generated_Source\PSoC4/ADC_1.c **** *
 892:Generated_Source\PSoC4/ADC_1.c **** * \param mode Sets the conversion mode. See table below for details.
 893:Generated_Source\PSoC4/ADC_1.c **** * | Options                          | Description                             |
 894:Generated_Source\PSoC4/ADC_1.c **** * | :------------------------------- | :-------------------------------------- |
 895:Generated_Source\PSoC4/ADC_1.c **** * | ADC_1_SINGLE_SHOT     | Calling the ADC_1_StartConvert() function after setting mode this will 
 896:Generated_Source\PSoC4/ADC_1.c **** * | ADC_1_CONTINUOUS      | Calling the ADC_1_StartConvert() function after setting this mode trigg
 897:Generated_Source\PSoC4/ADC_1.c **** *
 898:Generated_Source\PSoC4/ADC_1.c **** * \return None
 899:Generated_Source\PSoC4/ADC_1.c **** *
 900:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 901:Generated_Source\PSoC4/ADC_1.c **** *
 902:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 903:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetConvertMode(uint32 mode)
 904:Generated_Source\PSoC4/ADC_1.c **** {
 905:Generated_Source\PSoC4/ADC_1.c ****     if(ADC_1_CONTINUOUS == mode)
 906:Generated_Source\PSoC4/ADC_1.c ****     {
 907:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_SAMPLE_CTRL_REG |= ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK;
 908:Generated_Source\PSoC4/ADC_1.c ****     }
 909:Generated_Source\PSoC4/ADC_1.c ****     else
 910:Generated_Source\PSoC4/ADC_1.c ****     {
 911:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_SAMPLE_CTRL_REG &= ~ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK;
 912:Generated_Source\PSoC4/ADC_1.c ****     }
 913:Generated_Source\PSoC4/ADC_1.c **** }
 914:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
 915:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_IRQ_Enable
 916:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
 917:Generated_Source\PSoC4/ADC_1.c **** *
 918:Generated_Source\PSoC4/ADC_1.c **** * \brief Enables interrupts to occur at the end of a conversion. Global
 919:Generated_Source\PSoC4/ADC_1.c **** * interrupts must also be enabled for the ADC_1 interrupts to occur.
 920:Generated_Source\PSoC4/ADC_1.c **** *
 921:Generated_Source\PSoC4/ADC_1.c **** * \param None
 922:Generated_Source\PSoC4/ADC_1.c **** *
 923:Generated_Source\PSoC4/ADC_1.c **** * \return None
 924:Generated_Source\PSoC4/ADC_1.c **** *
 925:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 926:Generated_Source\PSoC4/ADC_1.c **** *
 927:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 928:Generated_Source\PSoC4/ADC_1.c **** 
 929:Generated_Source\PSoC4/ADC_1.c **** 
 930:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
 931:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_IRQ_Disable
 932:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
 933:Generated_Source\PSoC4/ADC_1.c **** *
 934:Generated_Source\PSoC4/ADC_1.c **** * \brief Disables end of conversion interrupts.
 935:Generated_Source\PSoC4/ADC_1.c **** *
 936:Generated_Source\PSoC4/ADC_1.c **** * \param None
 937:Generated_Source\PSoC4/ADC_1.c **** *
 938:Generated_Source\PSoC4/ADC_1.c **** * \return None
 939:Generated_Source\PSoC4/ADC_1.c **** *
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 19


 940:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 941:Generated_Source\PSoC4/ADC_1.c **** *
 942:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 943:Generated_Source\PSoC4/ADC_1.c **** 
 944:Generated_Source\PSoC4/ADC_1.c **** 
 945:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 946:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetEosMask
 947:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 948:Generated_Source\PSoC4/ADC_1.c **** *
 949:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets of clears the End of Scan (EOS) interrupt mask.
 950:Generated_Source\PSoC4/ADC_1.c **** *
 951:Generated_Source\PSoC4/ADC_1.c **** * \param mask 1 to set the mask, 0 to clear the mask.
 952:Generated_Source\PSoC4/ADC_1.c **** *
 953:Generated_Source\PSoC4/ADC_1.c **** * \return None
 954:Generated_Source\PSoC4/ADC_1.c **** *
 955:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect All other bits in the INTR register are cleared by this function.
 956:Generated_Source\PSoC4/ADC_1.c **** *
 957:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 958:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetEosMask(uint32 mask)
 959:Generated_Source\PSoC4/ADC_1.c **** {
 960:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_INTR_MASK_REG = mask & ADC_1_EOS_MASK;
 961:Generated_Source\PSoC4/ADC_1.c **** 
 962:Generated_Source\PSoC4/ADC_1.c ****     return;
 963:Generated_Source\PSoC4/ADC_1.c **** }
 964:Generated_Source\PSoC4/ADC_1.c **** 
 965:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
 966:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetChanMask
 967:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
 968:Generated_Source\PSoC4/ADC_1.c **** *
 969:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets enable/disable mask for all channels in current configuration.
 970:Generated_Source\PSoC4/ADC_1.c **** *
 971:Generated_Source\PSoC4/ADC_1.c **** *
 972:Generated_Source\PSoC4/ADC_1.c **** * \param enableMask
 973:Generated_Source\PSoC4/ADC_1.c **** *  Channel enable/disable mask.
 974:Generated_Source\PSoC4/ADC_1.c **** *
 975:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect
 976:Generated_Source\PSoC4/ADC_1.c **** *  None.
 977:Generated_Source\PSoC4/ADC_1.c **** *
 978:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 979:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetChanMask(uint32 enableMask)
 980:Generated_Source\PSoC4/ADC_1.c **** {
 981:Generated_Source\PSoC4/ADC_1.c ****     uint32 chanCount = ADC_1_allConfigs[ADC_1_currentConfig].numChannels;
 982:Generated_Source\PSoC4/ADC_1.c ****     enableMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 983:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_CHAN_EN_REG = enableMask;
 984:Generated_Source\PSoC4/ADC_1.c ****     return;
 985:Generated_Source\PSoC4/ADC_1.c **** }
 986:Generated_Source\PSoC4/ADC_1.c **** 
 987:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 988:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_IsEndConversion
 989:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 990:Generated_Source\PSoC4/ADC_1.c **** *
 991:Generated_Source\PSoC4/ADC_1.c **** * \brief Immediately returns the status of the conversion or does not return
 992:Generated_Source\PSoC4/ADC_1.c **** * (blocking) until the conversion completes, depending on the retMode parameter.
 993:Generated_Source\PSoC4/ADC_1.c **** *
 994:Generated_Source\PSoC4/ADC_1.c **** * \param retMode Check conversion return mode. See the following table for
 995:Generated_Source\PSoC4/ADC_1.c **** * options.
 996:Generated_Source\PSoC4/ADC_1.c **** * | Options                              | Description                             |
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 20


 997:Generated_Source\PSoC4/ADC_1.c **** * | :-------------------------------     | :-------------------------------------- |
 998:Generated_Source\PSoC4/ADC_1.c **** * | ADC_1_RETURN_STATUS       | Immediately returns the conversion status for sequential channels. 
 999:Generated_Source\PSoC4/ADC_1.c **** * | ADC_1_WAIT_FOR_RESULT     | Does not return a result until the ADC_1 conversion of all sequenti
1000:Generated_Source\PSoC4/ADC_1.c **** *
1001:Generated_Source\PSoC4/ADC_1.c **** * \return uint8: If a nonzero value is returned, the last conversion is complete.
1002:Generated_Source\PSoC4/ADC_1.c **** * If the returned value is zero, the ADC_1 is still calculating the last result.
1003:Generated_Source\PSoC4/ADC_1.c **** *
1004:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect This function reads the end of conversion status, and clears it afterward.
1005:Generated_Source\PSoC4/ADC_1.c **** *
1006:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1007:Generated_Source\PSoC4/ADC_1.c **** uint32 ADC_1_IsEndConversion(uint32 retMode)
1008:Generated_Source\PSoC4/ADC_1.c **** {
1009:Generated_Source\PSoC4/ADC_1.c ****     uint32 endOfConversion = 0u;
1010:Generated_Source\PSoC4/ADC_1.c ****     uint32 wdt = 0x3FFFFFFuL; /* Watchdog timer for blocking while loop */
1011:Generated_Source\PSoC4/ADC_1.c ****     if((ADC_1_RETURN_STATUS == retMode) || (ADC_1_WAIT_FOR_RESULT == retMode))
1012:Generated_Source\PSoC4/ADC_1.c ****     {
1013:Generated_Source\PSoC4/ADC_1.c ****         do
1014:Generated_Source\PSoC4/ADC_1.c ****         {
1015:Generated_Source\PSoC4/ADC_1.c ****             endOfConversion = ADC_1_SAR_INTR_REG & ADC_1_EOS_MASK;
1016:Generated_Source\PSoC4/ADC_1.c ****             wdt--;
1017:Generated_Source\PSoC4/ADC_1.c ****         }while(((0u == endOfConversion)
1018:Generated_Source\PSoC4/ADC_1.c ****             && (((uint32) retMode & ADC_1_WAIT_FOR_RESULT) != 0u))
1019:Generated_Source\PSoC4/ADC_1.c ****             && (0uL != wdt));
1020:Generated_Source\PSoC4/ADC_1.c **** 
1021:Generated_Source\PSoC4/ADC_1.c ****         if(0u != endOfConversion)
1022:Generated_Source\PSoC4/ADC_1.c ****         {
1023:Generated_Source\PSoC4/ADC_1.c ****             /* Clear EOS bit */
1024:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_SAR_INTR_REG = ADC_1_EOS_MASK;
1025:Generated_Source\PSoC4/ADC_1.c ****         }
1026:Generated_Source\PSoC4/ADC_1.c ****     }
1027:Generated_Source\PSoC4/ADC_1.c **** 
1028:Generated_Source\PSoC4/ADC_1.c ****     return endOfConversion;
1029:Generated_Source\PSoC4/ADC_1.c **** }
1030:Generated_Source\PSoC4/ADC_1.c **** 
1031:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
1032:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_IsChannelSigned(uint32 chan)
1033:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
1034:Generated_Source\PSoC4/ADC_1.c **** *
1035:Generated_Source\PSoC4/ADC_1.c **** * Determines if the provided channel is in signed format.
1036:Generated_Source\PSoC4/ADC_1.c **** *
1037:Generated_Source\PSoC4/ADC_1.c **** * \param chan The ADC_1 channel to check.
1038:Generated_Source\PSoC4/ADC_1.c **** *
1039:Generated_Source\PSoC4/ADC_1.c **** * \return None
1040:Generated_Source\PSoC4/ADC_1.c **** *
1041:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1042:Generated_Source\PSoC4/ADC_1.c **** *
1043:Generated_Source\PSoC4/ADC_1.c **** *
1044:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1045:Generated_Source\PSoC4/ADC_1.c **** static int32 ADC_1_IsChannelSigned(uint32 chan)
1046:Generated_Source\PSoC4/ADC_1.c **** {
  88              		.loc 1 1046 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              		@ link register save eliminated.
  93              	.LVL7:
1047:Generated_Source\PSoC4/ADC_1.c ****     int32 isSigned = 0;
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 21


1048:Generated_Source\PSoC4/ADC_1.c ****     uint32 chanConfig;
1049:Generated_Source\PSoC4/ADC_1.c **** 
1050:Generated_Source\PSoC4/ADC_1.c ****     chanConfig = CY_GET_REG32((reg32 *)(ADC_1_SAR_CHAN_CONFIG_IND + (uint32)(chan << 2u)));
  94              		.loc 1 1050 0
  95 0000 8000     		lsls	r0, r0, #2
  96              	.LVL8:
  97 0002 114B     		ldr	r3, .L12
  98 0004 9C46     		mov	ip, r3
  99 0006 6044     		add	r0, r0, ip
 100 0008 0268     		ldr	r2, [r0]
 101              	.LVL9:
1051:Generated_Source\PSoC4/ADC_1.c ****     /* If differential mode */
1052:Generated_Source\PSoC4/ADC_1.c ****     if(0u != (chanConfig & ADC_1_CHANNEL_CONFIG_DIFF_ALL_MSK))
 102              		.loc 1 1052 0
 103 000a 104B     		ldr	r3, .L12+4
 104 000c 1A42     		tst	r2, r3
 105 000e 0BD0     		beq	.L8
1053:Generated_Source\PSoC4/ADC_1.c ****     {
1054:Generated_Source\PSoC4/ADC_1.c ****         /*If signed differential */
1055:Generated_Source\PSoC4/ADC_1.c ****         if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
 106              		.loc 1 1055 0
 107 0010 0F4B     		ldr	r3, .L12+8
 108 0012 1A68     		ldr	r2, [r3]
 109              	.LVL10:
 110 0014 D300     		lsls	r3, r2, #3
 111 0016 9A1A     		subs	r2, r3, r2
 112 0018 D300     		lsls	r3, r2, #3
 113 001a 0E4A     		ldr	r2, .L12+12
 114 001c D318     		adds	r3, r2, r3
 115 001e DB68     		ldr	r3, [r3, #12]
 116 0020 1B07     		lsls	r3, r3, #28
 117 0022 0DD4     		bmi	.L10
1047:Generated_Source\PSoC4/ADC_1.c ****     uint32 chanConfig;
 118              		.loc 1 1047 0
 119 0024 0020     		movs	r0, #0
 120 0026 0EE0     		b	.L9
 121              	.LVL11:
 122              	.L8:
1056:Generated_Source\PSoC4/ADC_1.c ****             & ADC_1_SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_MSK) != 0u)
1057:Generated_Source\PSoC4/ADC_1.c ****         {
1058:Generated_Source\PSoC4/ADC_1.c ****             isSigned = 1;
1059:Generated_Source\PSoC4/ADC_1.c ****         }
1060:Generated_Source\PSoC4/ADC_1.c ****     }
1061:Generated_Source\PSoC4/ADC_1.c ****     else
1062:Generated_Source\PSoC4/ADC_1.c ****     {
1063:Generated_Source\PSoC4/ADC_1.c ****         if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
 123              		.loc 1 1063 0
 124 0028 094B     		ldr	r3, .L12+8
 125 002a 1A68     		ldr	r2, [r3]
 126              	.LVL12:
 127 002c D300     		lsls	r3, r2, #3
 128 002e 9A1A     		subs	r2, r3, r2
 129 0030 D300     		lsls	r3, r2, #3
 130 0032 084A     		ldr	r2, .L12+12
 131 0034 D318     		adds	r3, r2, r3
 132 0036 DB68     		ldr	r3, [r3, #12]
 133 0038 5B07     		lsls	r3, r3, #29
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 22


 134 003a 03D4     		bmi	.L11
1047:Generated_Source\PSoC4/ADC_1.c ****     uint32 chanConfig;
 135              		.loc 1 1047 0
 136 003c 0020     		movs	r0, #0
 137 003e 02E0     		b	.L9
 138              	.L10:
1058:Generated_Source\PSoC4/ADC_1.c ****         }
 139              		.loc 1 1058 0
 140 0040 0120     		movs	r0, #1
 141 0042 00E0     		b	.L9
 142              	.L11:
1064:Generated_Source\PSoC4/ADC_1.c ****             & ADC_1_SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_MSK) != 0u)
1065:Generated_Source\PSoC4/ADC_1.c ****         {
1066:Generated_Source\PSoC4/ADC_1.c ****             isSigned = 1;
 143              		.loc 1 1066 0
 144 0044 0120     		movs	r0, #1
 145              	.L9:
 146              	.LVL13:
1067:Generated_Source\PSoC4/ADC_1.c ****         }
1068:Generated_Source\PSoC4/ADC_1.c ****     }
1069:Generated_Source\PSoC4/ADC_1.c ****     return isSigned;
1070:Generated_Source\PSoC4/ADC_1.c **** }
 147              		.loc 1 1070 0
 148              		@ sp needed
 149 0046 7047     		bx	lr
 150              	.L13:
 151              		.align	2
 152              	.L12:
 153 0048 80003A40 		.word	1077543040
 154 004c 00010001 		.word	16777472
 155 0050 00000000 		.word	.LANCHOR0
 156 0054 00000000 		.word	ADC_1_allConfigs
 157              		.cfi_endproc
 158              	.LFE13:
 159              		.size	ADC_1_IsChannelSigned, .-ADC_1_IsChannelSigned
 160              		.section	.text.ADC_1_Stop,"ax",%progbits
 161              		.align	2
 162              		.global	ADC_1_Stop
 163              		.code	16
 164              		.thumb_func
 165              		.type	ADC_1_Stop, %function
 166              	ADC_1_Stop:
 167              	.LFB3:
 615:Generated_Source\PSoC4/ADC_1.c ****     #if(0u != ADC_1_ANY_CONFIG_USES_FILTER)
 168              		.loc 1 615 0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172              		@ link register save eliminated.
 626:Generated_Source\PSoC4/ADC_1.c ****     return;
 173              		.loc 1 626 0
 174 0000 024A     		ldr	r2, .L15
 175 0002 1368     		ldr	r3, [r2]
 176 0004 5B00     		lsls	r3, r3, #1
 177 0006 5B08     		lsrs	r3, r3, #1
 178 0008 1360     		str	r3, [r2]
 628:Generated_Source\PSoC4/ADC_1.c **** 
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 23


 179              		.loc 1 628 0
 180              		@ sp needed
 181 000a 7047     		bx	lr
 182              	.L16:
 183              		.align	2
 184              	.L15:
 185 000c 00003A40 		.word	1077542912
 186              		.cfi_endproc
 187              	.LFE3:
 188              		.size	ADC_1_Stop, .-ADC_1_Stop
 189              		.section	.text.ADC_1_InitConfig,"ax",%progbits
 190              		.align	2
 191              		.global	ADC_1_InitConfig
 192              		.code	16
 193              		.thumb_func
 194              		.type	ADC_1_InitConfig, %function
 195              	ADC_1_InitConfig:
 196              	.LFB4:
 645:Generated_Source\PSoC4/ADC_1.c ****     uint32 chNum;
 197              		.loc 1 645 0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201              	.LVL14:
 202 0000 10B5     		push	{r4, lr}
 203              		.cfi_def_cfa_offset 8
 204              		.cfi_offset 4, -8
 205              		.cfi_offset 14, -4
 206 0002 0400     		movs	r4, r0
 651:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_intSarClock_SetFractionalDividerRegister(config->clkDivider, 0u);
 207              		.loc 1 651 0
 208 0004 FFF7FEFF 		bl	ADC_1_intSarClock_Stop
 209              	.LVL15:
 652:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_intSarClock_Start();
 210              		.loc 1 652 0
 211 0008 A08E     		ldrh	r0, [r4, #52]
 212 000a 0021     		movs	r1, #0
 213 000c FFF7FEFF 		bl	ADC_1_intSarClock_SetFractionalDividerRegister
 214              	.LVL16:
 653:Generated_Source\PSoC4/ADC_1.c ****     #endif /* ADC_1_CLOCK_INTERNAL */
 215              		.loc 1 653 0
 216 0010 FF20     		movs	r0, #255
 217 0012 FFF7FEFF 		bl	ADC_1_intSarClock_StartEx
 218              	.LVL17:
 676:Generated_Source\PSoC4/ADC_1.c ****         | (((ADC_1_PUMP_CTRL_REG & ADC_1_PUMP_CTRL_ENABLED) != 0u)
 219              		.loc 1 676 0
 220 0016 A368     		ldr	r3, [r4, #8]
 677:Generated_Source\PSoC4/ADC_1.c ****             ? ADC_1_SAR_CTRL_BOOSTPUMP_EN_MSK : 0u);
 221              		.loc 1 677 0
 222 0018 194A     		ldr	r2, .L22
 223 001a 1268     		ldr	r2, [r2]
 224 001c 002A     		cmp	r2, #0
 225 001e 02DA     		bge	.L21
 226 0020 8022     		movs	r2, #128
 227 0022 5203     		lsls	r2, r2, #13
 228 0024 00E0     		b	.L18
 229              	.L21:
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 24


 230 0026 0022     		movs	r2, #0
 231              	.L18:
 677:Generated_Source\PSoC4/ADC_1.c ****             ? ADC_1_SAR_CTRL_BOOSTPUMP_EN_MSK : 0u);
 232              		.loc 1 677 0 is_stmt 0 discriminator 4
 233 0028 1343     		orrs	r3, r2
 676:Generated_Source\PSoC4/ADC_1.c ****         | (((ADC_1_PUMP_CTRL_REG & ADC_1_PUMP_CTRL_ENABLED) != 0u)
 234              		.loc 1 676 0 is_stmt 1 discriminator 4
 235 002a 164A     		ldr	r2, .L22+4
 236 002c 1360     		str	r3, [r2]
 680:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_THRES_REG = config->rangeThres;
 237              		.loc 1 680 0 discriminator 4
 238 002e 164B     		ldr	r3, .L22+8
 239 0030 E268     		ldr	r2, [r4, #12]
 240 0032 1A60     		str	r2, [r3]
 681:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_COND_REG = config->rangeCond;
 241              		.loc 1 681 0 discriminator 4
 242 0034 154B     		ldr	r3, .L22+12
 243 0036 A269     		ldr	r2, [r4, #24]
 244 0038 1A60     		str	r2, [r3]
 682:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SAMPLE_TIME01_REG = config->sampleTime01;
 245              		.loc 1 682 0 discriminator 4
 246 003a 154B     		ldr	r3, .L22+16
 247 003c E269     		ldr	r2, [r4, #28]
 248 003e 1A60     		str	r2, [r3]
 683:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SAMPLE_TIME23_REG = config->sampleTime23;
 249              		.loc 1 683 0 discriminator 4
 250 0040 144B     		ldr	r3, .L22+20
 251 0042 2269     		ldr	r2, [r4, #16]
 252 0044 1A60     		str	r2, [r3]
 684:Generated_Source\PSoC4/ADC_1.c **** 
 253              		.loc 1 684 0 discriminator 4
 254 0046 144B     		ldr	r3, .L22+24
 255 0048 6269     		ldr	r2, [r4, #20]
 256 004a 1A60     		str	r2, [r3]
 698:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_INTR_MASK_REG = 0u;
 257              		.loc 1 698 0 discriminator 4
 258 004c 134A     		ldr	r2, .L22+28
 259 004e 0021     		movs	r1, #0
 260 0050 1160     		str	r1, [r2]
 699:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SATURATE_INTR_MASK_REG = config->satIntMask;
 261              		.loc 1 699 0 discriminator 4
 262 0052 134B     		ldr	r3, .L22+32
 263 0054 1960     		str	r1, [r3]
 700:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_INTR_MASK_REG = config->rangeIntMask;
 264              		.loc 1 700 0 discriminator 4
 265 0056 A16A     		ldr	r1, [r4, #40]
 266 0058 1160     		str	r1, [r2]
 701:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_INTR_MASK_REG = ADC_1_EOS_MASK;
 267              		.loc 1 701 0 discriminator 4
 268 005a 626A     		ldr	r2, [r4, #36]
 269 005c 1A60     		str	r2, [r3]
 702:Generated_Source\PSoC4/ADC_1.c **** 
 270              		.loc 1 702 0 discriminator 4
 271 005e 0122     		movs	r2, #1
 272 0060 104B     		ldr	r3, .L22+36
 273 0062 1A60     		str	r2, [r3]
 274              	.LVL18:
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 25


 704:Generated_Source\PSoC4/ADC_1.c ****     {
 275              		.loc 1 704 0 discriminator 4
 276 0064 0023     		movs	r3, #0
 277 0066 07E0     		b	.L19
 278              	.LVL19:
 279              	.L20:
 718:Generated_Source\PSoC4/ADC_1.c ****     }
 280              		.loc 1 718 0 discriminator 3
 281 0068 9A00     		lsls	r2, r3, #2
 282 006a 0F49     		ldr	r1, .L22+40
 283 006c 8C46     		mov	ip, r1
 284 006e 6244     		add	r2, r2, ip
 285 0070 8021     		movs	r1, #128
 286 0072 4900     		lsls	r1, r1, #1
 287 0074 1160     		str	r1, [r2]
 704:Generated_Source\PSoC4/ADC_1.c ****     {
 288              		.loc 1 704 0 discriminator 3
 289 0076 0133     		adds	r3, r3, #1
 290              	.LVL20:
 291              	.L19:
 704:Generated_Source\PSoC4/ADC_1.c ****     {
 292              		.loc 1 704 0 is_stmt 0 discriminator 1
 293 0078 6268     		ldr	r2, [r4, #4]
 294 007a 9342     		cmp	r3, r2
 295 007c F4D3     		bcc	.L20
 722:Generated_Source\PSoC4/ADC_1.c **** 
 296              		.loc 1 722 0 is_stmt 1
 297              		@ sp needed
 298              	.LVL21:
 299 007e 10BD     		pop	{r4, pc}
 300              	.L23:
 301              		.align	2
 302              	.L22:
 303 0080 80033A40 		.word	1077543808
 304 0084 00003A40 		.word	1077542912
 305 0088 04003A40 		.word	1077542916
 306 008c 18003A40 		.word	1077542936
 307 0090 1C003A40 		.word	1077542940
 308 0094 10003A40 		.word	1077542928
 309 0098 14003A40 		.word	1077542932
 310 009c 28023A40 		.word	1077543464
 311 00a0 38023A40 		.word	1077543480
 312 00a4 18023A40 		.word	1077543448
 313 00a8 80003A40 		.word	1077543040
 314              		.cfi_endproc
 315              	.LFE4:
 316              		.size	ADC_1_InitConfig, .-ADC_1_InitConfig
 317              		.section	.text.ADC_1_StartConvert,"ax",%progbits
 318              		.align	2
 319              		.global	ADC_1_StartConvert
 320              		.code	16
 321              		.thumb_func
 322              		.type	ADC_1_StartConvert, %function
 323              	ADC_1_StartConvert:
 324              	.LFB7:
 833:Generated_Source\PSoC4/ADC_1.c ****     /* Freerunning mode */
 325              		.loc 1 833 0
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 26


 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 0
 328              		@ frame_needed = 0, uses_anonymous_args = 0
 329              		@ link register save eliminated.
 835:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 330              		.loc 1 835 0
 331 0000 074B     		ldr	r3, .L27
 332 0002 1B68     		ldr	r3, [r3]
 333 0004 5B03     		lsls	r3, r3, #13
 334 0006 06D5     		bpl	.L25
 839:Generated_Source\PSoC4/ADC_1.c ****     }
 335              		.loc 1 839 0
 336 0008 054A     		ldr	r2, .L27
 337 000a 1368     		ldr	r3, [r2]
 338 000c 8021     		movs	r1, #128
 339 000e 4902     		lsls	r1, r1, #9
 340 0010 0B43     		orrs	r3, r1
 341 0012 1360     		str	r3, [r2]
 342 0014 02E0     		b	.L24
 343              	.L25:
 843:Generated_Source\PSoC4/ADC_1.c ****     }
 344              		.loc 1 843 0
 345 0016 0122     		movs	r2, #1
 346 0018 024B     		ldr	r3, .L27+4
 347 001a 1A60     		str	r2, [r3]
 348              	.L24:
 847:Generated_Source\PSoC4/ADC_1.c **** 
 349              		.loc 1 847 0
 350              		@ sp needed
 351 001c 7047     		bx	lr
 352              	.L28:
 353 001e C046     		.align	2
 354              	.L27:
 355 0020 04003A40 		.word	1077542916
 356 0024 24003A40 		.word	1077542948
 357              		.cfi_endproc
 358              	.LFE7:
 359              		.size	ADC_1_StartConvert, .-ADC_1_StartConvert
 360              		.section	.text.ADC_1_SetConvertMode,"ax",%progbits
 361              		.align	2
 362              		.global	ADC_1_SetConvertMode
 363              		.code	16
 364              		.thumb_func
 365              		.type	ADC_1_SetConvertMode, %function
 366              	ADC_1_SetConvertMode:
 367              	.LFB9:
 904:Generated_Source\PSoC4/ADC_1.c ****     if(ADC_1_CONTINUOUS == mode)
 368              		.loc 1 904 0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 372              		@ link register save eliminated.
 373              	.LVL22:
 905:Generated_Source\PSoC4/ADC_1.c ****     {
 374              		.loc 1 905 0
 375 0000 0128     		cmp	r0, #1
 376 0002 06D1     		bne	.L30
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 27


 907:Generated_Source\PSoC4/ADC_1.c ****     }
 377              		.loc 1 907 0
 378 0004 064A     		ldr	r2, .L32
 379 0006 1368     		ldr	r3, [r2]
 380 0008 8021     		movs	r1, #128
 381 000a C902     		lsls	r1, r1, #11
 382 000c 0B43     		orrs	r3, r1
 383 000e 1360     		str	r3, [r2]
 384 0010 04E0     		b	.L29
 385              	.L30:
 911:Generated_Source\PSoC4/ADC_1.c ****     }
 386              		.loc 1 911 0
 387 0012 034A     		ldr	r2, .L32
 388 0014 1168     		ldr	r1, [r2]
 389 0016 034B     		ldr	r3, .L32+4
 390 0018 0B40     		ands	r3, r1
 391 001a 1360     		str	r3, [r2]
 392              	.L29:
 913:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
 393              		.loc 1 913 0
 394              		@ sp needed
 395 001c 7047     		bx	lr
 396              	.L33:
 397 001e C046     		.align	2
 398              	.L32:
 399 0020 04003A40 		.word	1077542916
 400 0024 FFFFFBFF 		.word	-262145
 401              		.cfi_endproc
 402              	.LFE9:
 403              		.size	ADC_1_SetConvertMode, .-ADC_1_SetConvertMode
 404              		.section	.text.ADC_1_SetEosMask,"ax",%progbits
 405              		.align	2
 406              		.global	ADC_1_SetEosMask
 407              		.code	16
 408              		.thumb_func
 409              		.type	ADC_1_SetEosMask, %function
 410              	ADC_1_SetEosMask:
 411              	.LFB10:
 959:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_INTR_MASK_REG = mask & ADC_1_EOS_MASK;
 412              		.loc 1 959 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416              		@ link register save eliminated.
 417              	.LVL23:
 960:Generated_Source\PSoC4/ADC_1.c **** 
 418              		.loc 1 960 0
 419 0000 0123     		movs	r3, #1
 420 0002 1840     		ands	r0, r3
 421              	.LVL24:
 422 0004 014B     		ldr	r3, .L35
 423 0006 1860     		str	r0, [r3]
 963:Generated_Source\PSoC4/ADC_1.c **** 
 424              		.loc 1 963 0
 425              		@ sp needed
 426 0008 7047     		bx	lr
 427              	.L36:
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 28


 428 000a C046     		.align	2
 429              	.L35:
 430 000c 18023A40 		.word	1077543448
 431              		.cfi_endproc
 432              	.LFE10:
 433              		.size	ADC_1_SetEosMask, .-ADC_1_SetEosMask
 434              		.section	.text.ADC_1_SetChanMask,"ax",%progbits
 435              		.align	2
 436              		.global	ADC_1_SetChanMask
 437              		.code	16
 438              		.thumb_func
 439              		.type	ADC_1_SetChanMask, %function
 440              	ADC_1_SetChanMask:
 441              	.LFB11:
 980:Generated_Source\PSoC4/ADC_1.c ****     uint32 chanCount = ADC_1_allConfigs[ADC_1_currentConfig].numChannels;
 442              		.loc 1 980 0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 0
 445              		@ frame_needed = 0, uses_anonymous_args = 0
 446              		@ link register save eliminated.
 447              	.LVL25:
 981:Generated_Source\PSoC4/ADC_1.c ****     enableMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 448              		.loc 1 981 0
 449 0000 074B     		ldr	r3, .L38
 450 0002 1A68     		ldr	r2, [r3]
 451 0004 D300     		lsls	r3, r2, #3
 452 0006 9A1A     		subs	r2, r3, r2
 453 0008 D300     		lsls	r3, r2, #3
 454 000a 064A     		ldr	r2, .L38+4
 455 000c D318     		adds	r3, r2, r3
 456 000e 5A68     		ldr	r2, [r3, #4]
 457              	.LVL26:
 982:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_CHAN_EN_REG = enableMask;
 458              		.loc 1 982 0
 459 0010 0123     		movs	r3, #1
 460 0012 9340     		lsls	r3, r3, r2
 461 0014 013B     		subs	r3, r3, #1
 462 0016 1840     		ands	r0, r3
 463              	.LVL27:
 983:Generated_Source\PSoC4/ADC_1.c ****     return;
 464              		.loc 1 983 0
 465 0018 034B     		ldr	r3, .L38+8
 466 001a 1860     		str	r0, [r3]
 985:Generated_Source\PSoC4/ADC_1.c **** 
 467              		.loc 1 985 0
 468              		@ sp needed
 469 001c 7047     		bx	lr
 470              	.L39:
 471 001e C046     		.align	2
 472              	.L38:
 473 0020 00000000 		.word	.LANCHOR0
 474 0024 00000000 		.word	ADC_1_allConfigs
 475 0028 20003A40 		.word	1077542944
 476              		.cfi_endproc
 477              	.LFE11:
 478              		.size	ADC_1_SetChanMask, .-ADC_1_SetChanMask
 479              		.section	.text.ADC_1_IsEndConversion,"ax",%progbits
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 29


 480              		.align	2
 481              		.global	ADC_1_IsEndConversion
 482              		.code	16
 483              		.thumb_func
 484              		.type	ADC_1_IsEndConversion, %function
 485              	ADC_1_IsEndConversion:
 486              	.LFB12:
1008:Generated_Source\PSoC4/ADC_1.c ****     uint32 endOfConversion = 0u;
 487              		.loc 1 1008 0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 0
 490              		@ frame_needed = 0, uses_anonymous_args = 0
 491              		@ link register save eliminated.
 492              	.LVL28:
 493 0000 0100     		movs	r1, r0
 494              	.LVL29:
1011:Generated_Source\PSoC4/ADC_1.c ****     {
 495              		.loc 1 1011 0
 496 0002 431E     		subs	r3, r0, #1
 497 0004 012B     		cmp	r3, #1
 498 0006 11D8     		bhi	.L44
 499 0008 094A     		ldr	r2, .L45
 500              	.LVL30:
 501              	.L43:
1015:Generated_Source\PSoC4/ADC_1.c ****             wdt--;
 502              		.loc 1 1015 0 discriminator 1
 503 000a 0A4B     		ldr	r3, .L45+4
 504 000c 1B68     		ldr	r3, [r3]
 505 000e 0120     		movs	r0, #1
 506 0010 1840     		ands	r0, r3
 507              	.LVL31:
1016:Generated_Source\PSoC4/ADC_1.c ****         }while(((0u == endOfConversion)
 508              		.loc 1 1016 0 discriminator 1
 509 0012 013A     		subs	r2, r2, #1
 510              	.LVL32:
1019:Generated_Source\PSoC4/ADC_1.c **** 
 511              		.loc 1 1019 0 discriminator 1
 512 0014 0028     		cmp	r0, #0
 513 0016 03D1     		bne	.L42
1018:Generated_Source\PSoC4/ADC_1.c ****             && (0uL != wdt));
 514              		.loc 1 1018 0
 515 0018 8B07     		lsls	r3, r1, #30
 516 001a 01D5     		bpl	.L42
1019:Generated_Source\PSoC4/ADC_1.c **** 
 517              		.loc 1 1019 0
 518 001c 002A     		cmp	r2, #0
 519 001e F4D1     		bne	.L43
 520              	.L42:
1021:Generated_Source\PSoC4/ADC_1.c ****         {
 521              		.loc 1 1021 0
 522 0020 0028     		cmp	r0, #0
 523 0022 04D0     		beq	.L41
1024:Generated_Source\PSoC4/ADC_1.c ****         }
 524              		.loc 1 1024 0
 525 0024 0122     		movs	r2, #1
 526              	.LVL33:
 527 0026 034B     		ldr	r3, .L45+4
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 30


 528 0028 1A60     		str	r2, [r3]
 529 002a 00E0     		b	.L41
 530              	.LVL34:
 531              	.L44:
1009:Generated_Source\PSoC4/ADC_1.c ****     uint32 wdt = 0x3FFFFFFuL; /* Watchdog timer for blocking while loop */
 532              		.loc 1 1009 0
 533 002c 0020     		movs	r0, #0
 534              	.LVL35:
 535              	.L41:
1029:Generated_Source\PSoC4/ADC_1.c **** 
 536              		.loc 1 1029 0
 537              		@ sp needed
 538 002e 7047     		bx	lr
 539              	.L46:
 540              		.align	2
 541              	.L45:
 542 0030 FFFFFF03 		.word	67108863
 543 0034 10023A40 		.word	1077543440
 544              		.cfi_endproc
 545              	.LFE12:
 546              		.size	ADC_1_IsEndConversion, .-ADC_1_IsEndConversion
 547              		.section	.text.ADC_1_GetResult16,"ax",%progbits
 548              		.align	2
 549              		.global	ADC_1_GetResult16
 550              		.code	16
 551              		.thumb_func
 552              		.type	ADC_1_GetResult16, %function
 553              	ADC_1_GetResult16:
 554              	.LFB14:
1071:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1072:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_GetResult16
1073:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1074:Generated_Source\PSoC4/ADC_1.c **** *
1075:Generated_Source\PSoC4/ADC_1.c **** * \brief Gets the data available in the channel result data register
1076:Generated_Source\PSoC4/ADC_1.c **** *
1077:Generated_Source\PSoC4/ADC_1.c **** * \param chan The ADC_1 channel to read the result from. The first
1078:Generated_Source\PSoC4/ADC_1.c **** * channel is 0 and the injection channel if enabled is the number of valid
1079:Generated_Source\PSoC4/ADC_1.c **** * channels.
1080:Generated_Source\PSoC4/ADC_1.c **** *
1081:Generated_Source\PSoC4/ADC_1.c **** * \return Returns converted data as a signed 16-bit integer.
1082:Generated_Source\PSoC4/ADC_1.c **** *
1083:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1084:Generated_Source\PSoC4/ADC_1.c **** *
1085:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1086:Generated_Source\PSoC4/ADC_1.c **** int16 ADC_1_GetResult16(uint32 chan)
1087:Generated_Source\PSoC4/ADC_1.c **** {
 555              		.loc 1 1087 0
 556              		.cfi_startproc
 557              		@ args = 0, pretend = 0, frame = 0
 558              		@ frame_needed = 0, uses_anonymous_args = 0
 559              	.LVL36:
 560 0000 10B5     		push	{r4, lr}
 561              		.cfi_def_cfa_offset 8
 562              		.cfi_offset 4, -8
 563              		.cfi_offset 14, -4
 564 0002 0400     		movs	r4, r0
1088:Generated_Source\PSoC4/ADC_1.c ****     uint32 adcResult;
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 31


1089:Generated_Source\PSoC4/ADC_1.c **** 
1090:Generated_Source\PSoC4/ADC_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1091:Generated_Source\PSoC4/ADC_1.c ****     CYASSERT(chan < ADC_1_allConfigs[ADC_1_currentConfig].numChannels);
 565              		.loc 1 1091 0
 566 0004 104B     		ldr	r3, .L51
 567 0006 1A68     		ldr	r2, [r3]
 568 0008 D300     		lsls	r3, r2, #3
 569 000a 9A1A     		subs	r2, r3, r2
 570 000c D300     		lsls	r3, r2, #3
 571 000e 0F4A     		ldr	r2, .L51+4
 572 0010 D318     		adds	r3, r2, r3
 573 0012 5B68     		ldr	r3, [r3, #4]
 574 0014 8342     		cmp	r3, r0
 575 0016 02D8     		bhi	.L48
 576              		.loc 1 1091 0 is_stmt 0 discriminator 1
 577 0018 0020     		movs	r0, #0
 578              	.LVL37:
 579 001a FFF7FEFF 		bl	CyHalt
 580              	.LVL38:
 581              	.L48:
1092:Generated_Source\PSoC4/ADC_1.c **** 
1093:Generated_Source\PSoC4/ADC_1.c ****     if(ADC_1_allConfigs[ADC_1_currentConfig].numChannels > chan)
 582              		.loc 1 1093 0 is_stmt 1
 583 001e 0A4B     		ldr	r3, .L51
 584 0020 1A68     		ldr	r2, [r3]
 585 0022 D300     		lsls	r3, r2, #3
 586 0024 9A1A     		subs	r2, r3, r2
 587 0026 D300     		lsls	r3, r2, #3
 588 0028 084A     		ldr	r2, .L51+4
 589 002a D318     		adds	r3, r2, r3
 590 002c 5B68     		ldr	r3, [r3, #4]
 591 002e 9C42     		cmp	r4, r3
 592 0030 07D2     		bcs	.L50
1094:Generated_Source\PSoC4/ADC_1.c ****     {
1095:Generated_Source\PSoC4/ADC_1.c ****         adcResult = CY_GET_REG32((reg32 *)(ADC_1_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 593              		.loc 1 1095 0
 594 0032 A400     		lsls	r4, r4, #2
 595              	.LVL39:
 596 0034 064B     		ldr	r3, .L51+8
 597 0036 9C46     		mov	ip, r3
 598 0038 6444     		add	r4, r4, ip
 599 003a 2068     		ldr	r0, [r4]
 600 003c 0004     		lsls	r0, r0, #16
 601 003e 000C     		lsrs	r0, r0, #16
 602              	.LVL40:
 603 0040 00E0     		b	.L49
 604              	.LVL41:
 605              	.L50:
1096:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_RESULT_MASK;
1097:Generated_Source\PSoC4/ADC_1.c ****     }
1098:Generated_Source\PSoC4/ADC_1.c ****     else
1099:Generated_Source\PSoC4/ADC_1.c ****     {
1100:Generated_Source\PSoC4/ADC_1.c ****         adcResult = 0u;
 606              		.loc 1 1100 0
 607 0042 0020     		movs	r0, #0
 608              	.LVL42:
 609              	.L49:
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 32


1101:Generated_Source\PSoC4/ADC_1.c ****     }
1102:Generated_Source\PSoC4/ADC_1.c **** 
1103:Generated_Source\PSoC4/ADC_1.c ****     return (int16) adcResult;
 610              		.loc 1 1103 0
 611 0044 00B2     		sxth	r0, r0
 612              	.LVL43:
1104:Generated_Source\PSoC4/ADC_1.c **** }
 613              		.loc 1 1104 0
 614              		@ sp needed
 615 0046 10BD     		pop	{r4, pc}
 616              	.L52:
 617              		.align	2
 618              	.L51:
 619 0048 00000000 		.word	.LANCHOR0
 620 004c 00000000 		.word	ADC_1_allConfigs
 621 0050 80013A40 		.word	1077543296
 622              		.cfi_endproc
 623              	.LFE14:
 624              		.size	ADC_1_GetResult16, .-ADC_1_GetResult16
 625              		.section	.text.ADC_1_GetResult32,"ax",%progbits
 626              		.align	2
 627              		.global	ADC_1_GetResult32
 628              		.code	16
 629              		.thumb_func
 630              		.type	ADC_1_GetResult32, %function
 631              	ADC_1_GetResult32:
 632              	.LFB15:
1105:Generated_Source\PSoC4/ADC_1.c **** 
1106:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1107:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_GetResult32
1108:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1109:Generated_Source\PSoC4/ADC_1.c **** *
1110:Generated_Source\PSoC4/ADC_1.c **** * \brief Gets the data available in the channel result data register.
1111:Generated_Source\PSoC4/ADC_1.c **** *
1112:Generated_Source\PSoC4/ADC_1.c **** * \param chan The ADC_1 channel to read the result from. The first
1113:Generated_Source\PSoC4/ADC_1.c **** * channel is 0 and the injection channel if enabled is the number of valid
1114:Generated_Source\PSoC4/ADC_1.c **** * channels.
1115:Generated_Source\PSoC4/ADC_1.c **** *
1116:Generated_Source\PSoC4/ADC_1.c **** * \return Returns converted data as a signed 32-bit integer.
1117:Generated_Source\PSoC4/ADC_1.c **** *
1118:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1119:Generated_Source\PSoC4/ADC_1.c **** *
1120:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1121:Generated_Source\PSoC4/ADC_1.c **** int32 ADC_1_GetResult32(uint32 chan)
1122:Generated_Source\PSoC4/ADC_1.c **** {
 633              		.loc 1 1122 0
 634              		.cfi_startproc
 635              		@ args = 0, pretend = 0, frame = 0
 636              		@ frame_needed = 0, uses_anonymous_args = 0
 637              	.LVL44:
 638 0000 70B5     		push	{r4, r5, r6, lr}
 639              		.cfi_def_cfa_offset 16
 640              		.cfi_offset 4, -16
 641              		.cfi_offset 5, -12
 642              		.cfi_offset 6, -8
 643              		.cfi_offset 14, -4
 644 0002 0500     		movs	r5, r0
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 33


1123:Generated_Source\PSoC4/ADC_1.c ****     uint32 adcResult;
1124:Generated_Source\PSoC4/ADC_1.c ****     int16 adcResult16;
1125:Generated_Source\PSoC4/ADC_1.c ****     int32 finalResult;
1126:Generated_Source\PSoC4/ADC_1.c **** 
1127:Generated_Source\PSoC4/ADC_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1128:Generated_Source\PSoC4/ADC_1.c ****     CYASSERT(chan < ADC_1_allConfigs[ADC_1_currentConfig].numChannels);
 645              		.loc 1 1128 0
 646 0004 144B     		ldr	r3, .L59
 647 0006 1A68     		ldr	r2, [r3]
 648 0008 D300     		lsls	r3, r2, #3
 649 000a 9A1A     		subs	r2, r3, r2
 650 000c D300     		lsls	r3, r2, #3
 651 000e 134A     		ldr	r2, .L59+4
 652 0010 D318     		adds	r3, r2, r3
 653 0012 5B68     		ldr	r3, [r3, #4]
 654 0014 8342     		cmp	r3, r0
 655 0016 02D8     		bhi	.L54
 656              		.loc 1 1128 0 is_stmt 0 discriminator 1
 657 0018 0020     		movs	r0, #0
 658              	.LVL45:
 659 001a FFF7FEFF 		bl	CyHalt
 660              	.LVL46:
 661              	.L54:
1129:Generated_Source\PSoC4/ADC_1.c **** 
1130:Generated_Source\PSoC4/ADC_1.c ****     if(ADC_1_allConfigs[ADC_1_currentConfig].numChannels > chan)
 662              		.loc 1 1130 0 is_stmt 1
 663 001e 0E4B     		ldr	r3, .L59
 664 0020 1A68     		ldr	r2, [r3]
 665 0022 D300     		lsls	r3, r2, #3
 666 0024 9A1A     		subs	r2, r3, r2
 667 0026 D300     		lsls	r3, r2, #3
 668 0028 0C4A     		ldr	r2, .L59+4
 669 002a D318     		adds	r3, r2, r3
 670 002c 5B68     		ldr	r3, [r3, #4]
 671 002e 9D42     		cmp	r5, r3
 672 0030 07D2     		bcs	.L58
1131:Generated_Source\PSoC4/ADC_1.c ****     {
1132:Generated_Source\PSoC4/ADC_1.c ****         adcResult = CY_GET_REG32((reg32 *)(ADC_1_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 673              		.loc 1 1132 0
 674 0032 AB00     		lsls	r3, r5, #2
 675 0034 0A4A     		ldr	r2, .L59+8
 676 0036 9446     		mov	ip, r2
 677 0038 6344     		add	r3, r3, ip
 678 003a 1C68     		ldr	r4, [r3]
 679 003c 2404     		lsls	r4, r4, #16
 680 003e 240C     		lsrs	r4, r4, #16
 681              	.LVL47:
 682 0040 00E0     		b	.L55
 683              	.LVL48:
 684              	.L58:
1133:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_RESULT_MASK;
1134:Generated_Source\PSoC4/ADC_1.c ****     }
1135:Generated_Source\PSoC4/ADC_1.c ****     else
1136:Generated_Source\PSoC4/ADC_1.c ****     {
1137:Generated_Source\PSoC4/ADC_1.c ****         adcResult = 0u;
 685              		.loc 1 1137 0
 686 0042 0024     		movs	r4, #0
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 34


 687              	.L55:
 688              	.LVL49:
1138:Generated_Source\PSoC4/ADC_1.c ****     }
1139:Generated_Source\PSoC4/ADC_1.c ****     /* Sign extend if channel is signed format */
1140:Generated_Source\PSoC4/ADC_1.c ****     if(ADC_1_IsChannelSigned(chan) == 1)
 689              		.loc 1 1140 0
 690 0044 2800     		movs	r0, r5
 691 0046 FFF7FEFF 		bl	ADC_1_IsChannelSigned
 692              	.LVL50:
 693 004a 0128     		cmp	r0, #1
 694 004c 01D1     		bne	.L56
 695              	.LVL51:
1141:Generated_Source\PSoC4/ADC_1.c ****     {
1142:Generated_Source\PSoC4/ADC_1.c ****         adcResult16 = (int16) adcResult;
1143:Generated_Source\PSoC4/ADC_1.c ****         finalResult = (int32) adcResult16;
 696              		.loc 1 1143 0
 697 004e 20B2     		sxth	r0, r4
 698              	.LVL52:
 699 0050 00E0     		b	.L57
 700              	.LVL53:
 701              	.L56:
1144:Generated_Source\PSoC4/ADC_1.c ****     }
1145:Generated_Source\PSoC4/ADC_1.c ****     else
1146:Generated_Source\PSoC4/ADC_1.c ****     {
1147:Generated_Source\PSoC4/ADC_1.c ****         finalResult = (int32) adcResult;
 702              		.loc 1 1147 0
 703 0052 2000     		movs	r0, r4
 704              	.LVL54:
 705              	.L57:
1148:Generated_Source\PSoC4/ADC_1.c ****     }
1149:Generated_Source\PSoC4/ADC_1.c ****     return finalResult;
1150:Generated_Source\PSoC4/ADC_1.c **** }
 706              		.loc 1 1150 0
 707              		@ sp needed
 708              	.LVL55:
 709              	.LVL56:
 710 0054 70BD     		pop	{r4, r5, r6, pc}
 711              	.L60:
 712 0056 C046     		.align	2
 713              	.L59:
 714 0058 00000000 		.word	.LANCHOR0
 715 005c 00000000 		.word	ADC_1_allConfigs
 716 0060 80013A40 		.word	1077543296
 717              		.cfi_endproc
 718              	.LFE15:
 719              		.size	ADC_1_GetResult32, .-ADC_1_GetResult32
 720              		.section	.text.ADC_1_SetLowLimit,"ax",%progbits
 721              		.align	2
 722              		.global	ADC_1_SetLowLimit
 723              		.code	16
 724              		.thumb_func
 725              		.type	ADC_1_SetLowLimit, %function
 726              	ADC_1_SetLowLimit:
 727              	.LFB16:
1151:Generated_Source\PSoC4/ADC_1.c **** 
1152:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1153:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetLowLimit
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 35


1154:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1155:Generated_Source\PSoC4/ADC_1.c **** *
1156:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets the low limit parameter for a limit condition.
1157:Generated_Source\PSoC4/ADC_1.c **** *
1158:Generated_Source\PSoC4/ADC_1.c **** * \param lowLimit The low limit for a limit condition.
1159:Generated_Source\PSoC4/ADC_1.c **** *
1160:Generated_Source\PSoC4/ADC_1.c **** * \return None
1161:Generated_Source\PSoC4/ADC_1.c **** *
1162:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1163:Generated_Source\PSoC4/ADC_1.c **** *
1164:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1165:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetLowLimit(uint32 lowLimit)
1166:Generated_Source\PSoC4/ADC_1.c **** {
 728              		.loc 1 1166 0
 729              		.cfi_startproc
 730              		@ args = 0, pretend = 0, frame = 0
 731              		@ frame_needed = 0, uses_anonymous_args = 0
 732              		@ link register save eliminated.
 733              	.LVL57:
1167:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_THRES_REG &= ~(uint32)(ADC_1_SAR_RANGE_THRES_RANGE_LOW_MSK);
 734              		.loc 1 1167 0
 735 0000 054A     		ldr	r2, .L62
 736 0002 1368     		ldr	r3, [r2]
 737 0004 1B0C     		lsrs	r3, r3, #16
 738 0006 1B04     		lsls	r3, r3, #16
 739 0008 1360     		str	r3, [r2]
1168:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_THRES_REG |= lowLimit & ADC_1_SAR_RANGE_THRES_RANGE_LOW_MSK;
 740              		.loc 1 1168 0
 741 000a 1368     		ldr	r3, [r2]
 742 000c 0004     		lsls	r0, r0, #16
 743              	.LVL58:
 744 000e 000C     		lsrs	r0, r0, #16
 745 0010 1843     		orrs	r0, r3
 746 0012 1060     		str	r0, [r2]
1169:Generated_Source\PSoC4/ADC_1.c ****     return;
1170:Generated_Source\PSoC4/ADC_1.c **** }
 747              		.loc 1 1170 0
 748              		@ sp needed
 749 0014 7047     		bx	lr
 750              	.L63:
 751 0016 C046     		.align	2
 752              	.L62:
 753 0018 18003A40 		.word	1077542936
 754              		.cfi_endproc
 755              	.LFE16:
 756              		.size	ADC_1_SetLowLimit, .-ADC_1_SetLowLimit
 757              		.section	.text.ADC_1_SetHighLimit,"ax",%progbits
 758              		.align	2
 759              		.global	ADC_1_SetHighLimit
 760              		.code	16
 761              		.thumb_func
 762              		.type	ADC_1_SetHighLimit, %function
 763              	ADC_1_SetHighLimit:
 764              	.LFB17:
1171:Generated_Source\PSoC4/ADC_1.c **** 
1172:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1173:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetHighLimit
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 36


1174:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1175:Generated_Source\PSoC4/ADC_1.c **** *
1176:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets the high limit parameter for a limit condition.
1177:Generated_Source\PSoC4/ADC_1.c **** *
1178:Generated_Source\PSoC4/ADC_1.c **** * \param highLimit The high limit for a limit condition.
1179:Generated_Source\PSoC4/ADC_1.c **** *
1180:Generated_Source\PSoC4/ADC_1.c **** * \return None
1181:Generated_Source\PSoC4/ADC_1.c **** *
1182:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1183:Generated_Source\PSoC4/ADC_1.c **** *
1184:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1185:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetHighLimit(uint32 highLimit)
1186:Generated_Source\PSoC4/ADC_1.c **** {
 765              		.loc 1 1186 0
 766              		.cfi_startproc
 767              		@ args = 0, pretend = 0, frame = 0
 768              		@ frame_needed = 0, uses_anonymous_args = 0
 769              		@ link register save eliminated.
 770              	.LVL59:
1187:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_THRES_REG &= ~(uint32)(ADC_1_SAR_RANGE_THRES_RANGE_HIGH_MSK);
 771              		.loc 1 1187 0
 772 0000 044A     		ldr	r2, .L65
 773 0002 1368     		ldr	r3, [r2]
 774 0004 1B04     		lsls	r3, r3, #16
 775 0006 1B0C     		lsrs	r3, r3, #16
 776 0008 1360     		str	r3, [r2]
1188:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_1_SAR_RANGE_THRES_RANGE_HIGH_SHFT);
 777              		.loc 1 1188 0
 778 000a 1368     		ldr	r3, [r2]
 779 000c 0004     		lsls	r0, r0, #16
 780              	.LVL60:
 781 000e 1843     		orrs	r0, r3
 782 0010 1060     		str	r0, [r2]
1189:Generated_Source\PSoC4/ADC_1.c ****     return;
1190:Generated_Source\PSoC4/ADC_1.c **** }
 783              		.loc 1 1190 0
 784              		@ sp needed
 785 0012 7047     		bx	lr
 786              	.L66:
 787              		.align	2
 788              	.L65:
 789 0014 18003A40 		.word	1077542936
 790              		.cfi_endproc
 791              	.LFE17:
 792              		.size	ADC_1_SetHighLimit, .-ADC_1_SetHighLimit
 793              		.section	.text.ADC_1_SetLimitMask,"ax",%progbits
 794              		.align	2
 795              		.global	ADC_1_SetLimitMask
 796              		.code	16
 797              		.thumb_func
 798              		.type	ADC_1_SetLimitMask, %function
 799              	ADC_1_SetLimitMask:
 800              	.LFB18:
1191:Generated_Source\PSoC4/ADC_1.c **** 
1192:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1193:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetLimitMask
1194:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 37


1195:Generated_Source\PSoC4/ADC_1.c **** *
1196:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets the channel limit condition mask.
1197:Generated_Source\PSoC4/ADC_1.c **** *
1198:Generated_Source\PSoC4/ADC_1.c **** * \param limitMask Sets which channels that may cause a limit condition interrupt.
1199:Generated_Source\PSoC4/ADC_1.c **** * Setting bits for channels that do not exist will have no effect. For example,
1200:Generated_Source\PSoC4/ADC_1.c **** * if only 6  channels were enabled, setting a mask of 0x0103 would only enable
1201:Generated_Source\PSoC4/ADC_1.c **** * the last two channels (0 and 1).
1202:Generated_Source\PSoC4/ADC_1.c **** *
1203:Generated_Source\PSoC4/ADC_1.c **** * \return None
1204:Generated_Source\PSoC4/ADC_1.c **** *
1205:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1206:Generated_Source\PSoC4/ADC_1.c **** *
1207:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1208:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetLimitMask(uint32 limitMask)
1209:Generated_Source\PSoC4/ADC_1.c **** {
 801              		.loc 1 1209 0
 802              		.cfi_startproc
 803              		@ args = 0, pretend = 0, frame = 0
 804              		@ frame_needed = 0, uses_anonymous_args = 0
 805              		@ link register save eliminated.
 806              	.LVL61:
1210:Generated_Source\PSoC4/ADC_1.c ****     uint32 chanCount = ADC_1_allConfigs[ADC_1_currentConfig].numChannels;
 807              		.loc 1 1210 0
 808 0000 074B     		ldr	r3, .L68
 809 0002 1A68     		ldr	r2, [r3]
 810 0004 D300     		lsls	r3, r2, #3
 811 0006 9A1A     		subs	r2, r3, r2
 812 0008 D300     		lsls	r3, r2, #3
 813 000a 064A     		ldr	r2, .L68+4
 814 000c D318     		adds	r3, r2, r3
 815 000e 5A68     		ldr	r2, [r3, #4]
 816              	.LVL62:
1211:Generated_Source\PSoC4/ADC_1.c ****     limitMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 817              		.loc 1 1211 0
 818 0010 0123     		movs	r3, #1
 819 0012 9340     		lsls	r3, r3, r2
 820 0014 013B     		subs	r3, r3, #1
 821 0016 1840     		ands	r0, r3
 822              	.LVL63:
1212:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_INTR_MASK_REG = limitMask;
 823              		.loc 1 1212 0
 824 0018 034B     		ldr	r3, .L68+8
 825 001a 1860     		str	r0, [r3]
1213:Generated_Source\PSoC4/ADC_1.c ****     return;
1214:Generated_Source\PSoC4/ADC_1.c **** }
 826              		.loc 1 1214 0
 827              		@ sp needed
 828 001c 7047     		bx	lr
 829              	.L69:
 830 001e C046     		.align	2
 831              	.L68:
 832 0020 00000000 		.word	.LANCHOR0
 833 0024 00000000 		.word	ADC_1_allConfigs
 834 0028 38023A40 		.word	1077543480
 835              		.cfi_endproc
 836              	.LFE18:
 837              		.size	ADC_1_SetLimitMask, .-ADC_1_SetLimitMask
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 38


 838              		.section	.text.ADC_1_SetSatMask,"ax",%progbits
 839              		.align	2
 840              		.global	ADC_1_SetSatMask
 841              		.code	16
 842              		.thumb_func
 843              		.type	ADC_1_SetSatMask, %function
 844              	ADC_1_SetSatMask:
 845              	.LFB19:
1215:Generated_Source\PSoC4/ADC_1.c **** 
1216:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1217:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetSatMask
1218:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1219:Generated_Source\PSoC4/ADC_1.c **** *
1220:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets the channel saturation event mask.
1221:Generated_Source\PSoC4/ADC_1.c **** *
1222:Generated_Source\PSoC4/ADC_1.c **** * \param satMask Sets which channels that may cause a saturation event interrupt.
1223:Generated_Source\PSoC4/ADC_1.c **** * Setting bits for channels that do not exist will have no effect. For example,
1224:Generated_Source\PSoC4/ADC_1.c **** * if only 8 channels were enabled, setting a mask of 0x01C0 would only enable two
1225:Generated_Source\PSoC4/ADC_1.c **** * channels (6 and 7).
1226:Generated_Source\PSoC4/ADC_1.c **** *
1227:Generated_Source\PSoC4/ADC_1.c **** * \return None
1228:Generated_Source\PSoC4/ADC_1.c **** *
1229:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1230:Generated_Source\PSoC4/ADC_1.c **** *
1231:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1232:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetSatMask(uint32 satMask)
1233:Generated_Source\PSoC4/ADC_1.c **** {
 846              		.loc 1 1233 0
 847              		.cfi_startproc
 848              		@ args = 0, pretend = 0, frame = 0
 849              		@ frame_needed = 0, uses_anonymous_args = 0
 850              		@ link register save eliminated.
 851              	.LVL64:
1234:Generated_Source\PSoC4/ADC_1.c ****     uint32 chanCount = ADC_1_allConfigs[ADC_1_currentConfig].numChannels;
 852              		.loc 1 1234 0
 853 0000 074B     		ldr	r3, .L71
 854 0002 1A68     		ldr	r2, [r3]
 855 0004 D300     		lsls	r3, r2, #3
 856 0006 9A1A     		subs	r2, r3, r2
 857 0008 D300     		lsls	r3, r2, #3
 858 000a 064A     		ldr	r2, .L71+4
 859 000c D318     		adds	r3, r2, r3
 860 000e 5A68     		ldr	r2, [r3, #4]
 861              	.LVL65:
1235:Generated_Source\PSoC4/ADC_1.c ****     satMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 862              		.loc 1 1235 0
 863 0010 0123     		movs	r3, #1
 864 0012 9340     		lsls	r3, r3, r2
 865 0014 013B     		subs	r3, r3, #1
 866 0016 1840     		ands	r0, r3
 867              	.LVL66:
1236:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SATURATE_INTR_MASK_REG = satMask;
 868              		.loc 1 1236 0
 869 0018 034B     		ldr	r3, .L71+8
 870 001a 1860     		str	r0, [r3]
1237:Generated_Source\PSoC4/ADC_1.c ****     return;
1238:Generated_Source\PSoC4/ADC_1.c **** }
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 39


 871              		.loc 1 1238 0
 872              		@ sp needed
 873 001c 7047     		bx	lr
 874              	.L72:
 875 001e C046     		.align	2
 876              	.L71:
 877 0020 00000000 		.word	.LANCHOR0
 878 0024 00000000 		.word	ADC_1_allConfigs
 879 0028 28023A40 		.word	1077543464
 880              		.cfi_endproc
 881              	.LFE19:
 882              		.size	ADC_1_SetSatMask, .-ADC_1_SetSatMask
 883              		.section	.text.ADC_1_SetOffset,"ax",%progbits
 884              		.align	2
 885              		.global	ADC_1_SetOffset
 886              		.code	16
 887              		.thumb_func
 888              		.type	ADC_1_SetOffset, %function
 889              	ADC_1_SetOffset:
 890              	.LFB20:
1239:Generated_Source\PSoC4/ADC_1.c **** 
1240:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1241:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetOffset
1242:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1243:Generated_Source\PSoC4/ADC_1.c **** *
1244:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets the ADC offset that is used by the functions ADC_1_CountsTo_uVolts,
1245:Generated_Source\PSoC4/ADC_1.c **** * ADC_1_CountsTo_mVolts, and ADC_1_CountsTo_Volts.
1246:Generated_Source\PSoC4/ADC_1.c **** *
1247:Generated_Source\PSoC4/ADC_1.c **** * Offset is applied to counts before unit scaling and gain.  All CountsTo_[mV, uV, V]olts()
1248:Generated_Source\PSoC4/ADC_1.c **** * functions use the following equation:
1249:Generated_Source\PSoC4/ADC_1.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1250:Generated_Source\PSoC4/ADC_1.c **** * See CountsTo_Volts() for more about this formula.
1251:Generated_Source\PSoC4/ADC_1.c **** *
1252:Generated_Source\PSoC4/ADC_1.c **** * To set channel 0's offset based on known V_offset_mV, use:
1253:Generated_Source\PSoC4/ADC_1.c **** *     ADC_1_SetOffset(0uL, -1 * V_offset_mV * (1uL << (Resolution - 1)) / V_ref_mV);
1254:Generated_Source\PSoC4/ADC_1.c **** *
1255:Generated_Source\PSoC4/ADC_1.c **** * \param chan ADC_1 channel number.
1256:Generated_Source\PSoC4/ADC_1.c **** *
1257:Generated_Source\PSoC4/ADC_1.c **** * \param offset This value is a measured value when the inputs are shorted or
1258:Generated_Source\PSoC4/ADC_1.c **** * connected to the same input voltage.
1259:Generated_Source\PSoC4/ADC_1.c **** *
1260:Generated_Source\PSoC4/ADC_1.c **** * \return None
1261:Generated_Source\PSoC4/ADC_1.c **** *
1262:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1263:Generated_Source\PSoC4/ADC_1.c **** *
1264:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1265:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetOffset(uint32 chan, int16 offset)
1266:Generated_Source\PSoC4/ADC_1.c **** {
 891              		.loc 1 1266 0
 892              		.cfi_startproc
 893              		@ args = 0, pretend = 0, frame = 0
 894              		@ frame_needed = 0, uses_anonymous_args = 0
 895              	.LVL67:
 896 0000 70B5     		push	{r4, r5, r6, lr}
 897              		.cfi_def_cfa_offset 16
 898              		.cfi_offset 4, -16
 899              		.cfi_offset 5, -12
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 40


 900              		.cfi_offset 6, -8
 901              		.cfi_offset 14, -4
 902 0002 0500     		movs	r5, r0
 903 0004 0C00     		movs	r4, r1
1267:Generated_Source\PSoC4/ADC_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1268:Generated_Source\PSoC4/ADC_1.c ****     CYASSERT(chan < ADC_1_allConfigs[ADC_1_currentConfig].numChannels);
 904              		.loc 1 1268 0
 905 0006 0C4B     		ldr	r3, .L75
 906 0008 1A68     		ldr	r2, [r3]
 907 000a D300     		lsls	r3, r2, #3
 908 000c 9A1A     		subs	r2, r3, r2
 909 000e D300     		lsls	r3, r2, #3
 910 0010 0A4A     		ldr	r2, .L75+4
 911 0012 D318     		adds	r3, r2, r3
 912 0014 5B68     		ldr	r3, [r3, #4]
 913 0016 8342     		cmp	r3, r0
 914 0018 02D8     		bhi	.L74
 915              		.loc 1 1268 0 is_stmt 0 discriminator 1
 916 001a 0020     		movs	r0, #0
 917              	.LVL68:
 918 001c FFF7FEFF 		bl	CyHalt
 919              	.LVL69:
 920              	.L74:
1269:Generated_Source\PSoC4/ADC_1.c **** 
1270:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_offset[ADC_1_allConfigs[ADC_1_currentConfig].channelBase + chan] = offset;
 921              		.loc 1 1270 0 is_stmt 1
 922 0020 054B     		ldr	r3, .L75
 923 0022 1A68     		ldr	r2, [r3]
 924 0024 D300     		lsls	r3, r2, #3
 925 0026 9B1A     		subs	r3, r3, r2
 926 0028 DA00     		lsls	r2, r3, #3
 927 002a 044B     		ldr	r3, .L75+4
 928 002c D058     		ldr	r0, [r2, r3]
 929 002e 2818     		adds	r0, r5, r0
 930 0030 4000     		lsls	r0, r0, #1
 931 0032 034B     		ldr	r3, .L75+8
 932 0034 C452     		strh	r4, [r0, r3]
1271:Generated_Source\PSoC4/ADC_1.c ****     return;
1272:Generated_Source\PSoC4/ADC_1.c **** }
 933              		.loc 1 1272 0
 934              		@ sp needed
 935              	.LVL70:
 936 0036 70BD     		pop	{r4, r5, r6, pc}
 937              	.L76:
 938              		.align	2
 939              	.L75:
 940 0038 00000000 		.word	.LANCHOR0
 941 003c 00000000 		.word	ADC_1_allConfigs
 942 0040 00000000 		.word	ADC_1_offset
 943              		.cfi_endproc
 944              	.LFE20:
 945              		.size	ADC_1_SetOffset, .-ADC_1_SetOffset
 946              		.section	.text.ADC_1_SetGain,"ax",%progbits
 947              		.align	2
 948              		.global	ADC_1_SetGain
 949              		.code	16
 950              		.thumb_func
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 41


 951              		.type	ADC_1_SetGain, %function
 952              	ADC_1_SetGain:
 953              	.LFB21:
1273:Generated_Source\PSoC4/ADC_1.c **** 
1274:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1275:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetGain
1276:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1277:Generated_Source\PSoC4/ADC_1.c **** *
1278:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets the ADC_1 gain in counts per 10 volt for the voltage
1279:Generated_Source\PSoC4/ADC_1.c **** * conversion functions. This value is set by default by the reference and
1280:Generated_Source\PSoC4/ADC_1.c **** * input range settings. Gain is applied after offset and unit scaling.  All
1281:Generated_Source\PSoC4/ADC_1.c **** * CountsTo_[mV, uV, V]olts() functions use the following equation:
1282:Generated_Source\PSoC4/ADC_1.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1283:Generated_Source\PSoC4/ADC_1.c **** * See CountsTo_Volts() for more about this formula.
1284:Generated_Source\PSoC4/ADC_1.c **** *
1285:Generated_Source\PSoC4/ADC_1.c **** * To set channel 0's gain based on known V_ref_mV, use:
1286:Generated_Source\PSoC4/ADC_1.c **** *     ADC_1_SetGain(0uL, 10000 * (1uL << (Resolution - 1)) / V_ref_mV);
1287:Generated_Source\PSoC4/ADC_1.c **** *
1288:Generated_Source\PSoC4/ADC_1.c **** * \param chan ADC_1 channel number.
1289:Generated_Source\PSoC4/ADC_1.c **** *
1290:Generated_Source\PSoC4/ADC_1.c **** * \param adcGain ADC_1 gain in counts per 10 volt.
1291:Generated_Source\PSoC4/ADC_1.c **** *
1292:Generated_Source\PSoC4/ADC_1.c **** * \return None
1293:Generated_Source\PSoC4/ADC_1.c **** *
1294:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1295:Generated_Source\PSoC4/ADC_1.c **** *
1296:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1297:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetGain(uint32 chan, int32 adcGain)
1298:Generated_Source\PSoC4/ADC_1.c **** {
 954              		.loc 1 1298 0
 955              		.cfi_startproc
 956              		@ args = 0, pretend = 0, frame = 0
 957              		@ frame_needed = 0, uses_anonymous_args = 0
 958              	.LVL71:
 959 0000 70B5     		push	{r4, r5, r6, lr}
 960              		.cfi_def_cfa_offset 16
 961              		.cfi_offset 4, -16
 962              		.cfi_offset 5, -12
 963              		.cfi_offset 6, -8
 964              		.cfi_offset 14, -4
 965 0002 0500     		movs	r5, r0
 966 0004 0C00     		movs	r4, r1
1299:Generated_Source\PSoC4/ADC_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1300:Generated_Source\PSoC4/ADC_1.c ****     CYASSERT(chan < ADC_1_allConfigs[ADC_1_currentConfig].numChannels);
 967              		.loc 1 1300 0
 968 0006 0C4B     		ldr	r3, .L79
 969 0008 1A68     		ldr	r2, [r3]
 970 000a D300     		lsls	r3, r2, #3
 971 000c 9A1A     		subs	r2, r3, r2
 972 000e D300     		lsls	r3, r2, #3
 973 0010 0A4A     		ldr	r2, .L79+4
 974 0012 D318     		adds	r3, r2, r3
 975 0014 5B68     		ldr	r3, [r3, #4]
 976 0016 8342     		cmp	r3, r0
 977 0018 02D8     		bhi	.L78
 978              		.loc 1 1300 0 is_stmt 0 discriminator 1
 979 001a 0020     		movs	r0, #0
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 42


 980              	.LVL72:
 981 001c FFF7FEFF 		bl	CyHalt
 982              	.LVL73:
 983              	.L78:
1301:Generated_Source\PSoC4/ADC_1.c **** 
1302:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_countsPer10Volt[ADC_1_allConfigs[ADC_1_currentConfig].channelBase + chan]
 984              		.loc 1 1302 0 is_stmt 1
 985 0020 054B     		ldr	r3, .L79
 986 0022 1A68     		ldr	r2, [r3]
 987 0024 D300     		lsls	r3, r2, #3
 988 0026 9B1A     		subs	r3, r3, r2
 989 0028 DA00     		lsls	r2, r3, #3
 990 002a 044B     		ldr	r3, .L79+4
 991 002c D058     		ldr	r0, [r2, r3]
 992 002e 2818     		adds	r0, r5, r0
1303:Generated_Source\PSoC4/ADC_1.c ****     = adcGain;
 993              		.loc 1 1303 0
 994 0030 8000     		lsls	r0, r0, #2
 995 0032 034B     		ldr	r3, .L79+8
 996 0034 C450     		str	r4, [r0, r3]
1304:Generated_Source\PSoC4/ADC_1.c ****     return;
1305:Generated_Source\PSoC4/ADC_1.c **** }
 997              		.loc 1 1305 0
 998              		@ sp needed
 999              	.LVL74:
 1000              	.LVL75:
 1001 0036 70BD     		pop	{r4, r5, r6, pc}
 1002              	.L80:
 1003              		.align	2
 1004              	.L79:
 1005 0038 00000000 		.word	.LANCHOR0
 1006 003c 00000000 		.word	ADC_1_allConfigs
 1007 0040 00000000 		.word	ADC_1_countsPer10Volt
 1008              		.cfi_endproc
 1009              	.LFE21:
 1010              		.size	ADC_1_SetGain, .-ADC_1_SetGain
 1011              		.section	.text.ADC_1_RawCounts2Counts,"ax",%progbits
 1012              		.align	2
 1013              		.global	ADC_1_RawCounts2Counts
 1014              		.code	16
 1015              		.thumb_func
 1016              		.type	ADC_1_RawCounts2Counts, %function
 1017              	ADC_1_RawCounts2Counts:
 1018              	.LFB22:
1306:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1307:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_RawCounts2Counts
1308:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1309:Generated_Source\PSoC4/ADC_1.c **** *
1310:Generated_Source\PSoC4/ADC_1.c **** * \brief Converts the output of the SAR to an idealized count value.
1311:Generated_Source\PSoC4/ADC_1.c **** *
1312:Generated_Source\PSoC4/ADC_1.c **** * Divides by averaging amount, if needed, and subtracts offset.
1313:Generated_Source\PSoC4/ADC_1.c **** *
1314:Generated_Source\PSoC4/ADC_1.c **** * \param chan ADC_1 channel number.
1315:Generated_Source\PSoC4/ADC_1.c **** *
1316:Generated_Source\PSoC4/ADC_1.c **** * \param adcCounts Result from the ADC_1 conversion.
1317:Generated_Source\PSoC4/ADC_1.c **** *
1318:Generated_Source\PSoC4/ADC_1.c **** * \return Averaged and offset counts.
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 43


1319:Generated_Source\PSoC4/ADC_1.c **** *
1320:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1321:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1322:Generated_Source\PSoC4/ADC_1.c **** int16 ADC_1_RawCounts2Counts(uint32 chan, int16 adcCounts)
1323:Generated_Source\PSoC4/ADC_1.c **** {
 1019              		.loc 1 1323 0
 1020              		.cfi_startproc
 1021              		@ args = 0, pretend = 0, frame = 0
 1022              		@ frame_needed = 0, uses_anonymous_args = 0
 1023              	.LVL76:
 1024 0000 70B5     		push	{r4, r5, r6, lr}
 1025              		.cfi_def_cfa_offset 16
 1026              		.cfi_offset 4, -16
 1027              		.cfi_offset 5, -12
 1028              		.cfi_offset 6, -8
 1029              		.cfi_offset 14, -4
 1030 0002 0C00     		movs	r4, r1
1324:Generated_Source\PSoC4/ADC_1.c ****     uint32 temp;
1325:Generated_Source\PSoC4/ADC_1.c ****     uint32 averageAdcSamplesDiv;
1326:Generated_Source\PSoC4/ADC_1.c ****     uint32 rawChannel;
1327:Generated_Source\PSoC4/ADC_1.c ****     rawChannel = ADC_1_allConfigs[ADC_1_currentConfig].channelBase + chan;
 1031              		.loc 1 1327 0
 1032 0004 0A4B     		ldr	r3, .L83
 1033 0006 1968     		ldr	r1, [r3]
 1034              	.LVL77:
 1035 0008 0A4E     		ldr	r6, .L83+4
 1036 000a CB00     		lsls	r3, r1, #3
 1037 000c 5D1A     		subs	r5, r3, r1
 1038 000e EA00     		lsls	r2, r5, #3
 1039 0010 9559     		ldr	r5, [r2, r6]
 1040 0012 2D18     		adds	r5, r5, r0
 1041              	.LVL78:
1328:Generated_Source\PSoC4/ADC_1.c **** 
1329:Generated_Source\PSoC4/ADC_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1330:Generated_Source\PSoC4/ADC_1.c ****     CYASSERT(chan < ADC_1_allConfigs[ADC_1_currentConfig].numChannels);
 1042              		.loc 1 1330 0
 1043 0014 B218     		adds	r2, r6, r2
 1044 0016 5368     		ldr	r3, [r2, #4]
 1045 0018 9842     		cmp	r0, r3
 1046 001a 02D3     		bcc	.L82
 1047              		.loc 1 1330 0 is_stmt 0 discriminator 1
 1048 001c 0020     		movs	r0, #0
 1049              	.LVL79:
 1050 001e FFF7FEFF 		bl	CyHalt
 1051              	.LVL80:
 1052              	.L82:
1331:Generated_Source\PSoC4/ADC_1.c **** 
1332:Generated_Source\PSoC4/ADC_1.c ****     /* Divide the adcCount when accumulate averaging mode selected */
1333:Generated_Source\PSoC4/ADC_1.c ****     /* If Average mode != fixed */
1334:Generated_Source\PSoC4/ADC_1.c ****     if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
1335:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_SAR_SAMPLE_CTRL_AVG_SHIFT_MSK)
1336:Generated_Source\PSoC4/ADC_1.c ****         != ADC_1_SAR_SAMPLE_CTRL_AVG_SHIFT_MSK)
1337:Generated_Source\PSoC4/ADC_1.c ****     {
1338:Generated_Source\PSoC4/ADC_1.c ****         /* If Channel uses averaging */
1339:Generated_Source\PSoC4/ADC_1.c ****         if((ADC_1_channelsConfig[rawChannel] & ADC_1_SAR_CHAN_CONFIG_AVG_EN_MSK) != 0u)
1340:Generated_Source\PSoC4/ADC_1.c ****         {
1341:Generated_Source\PSoC4/ADC_1.c ****             /* Divide by 2^(AVG_CNT + 1) */
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 44


1342:Generated_Source\PSoC4/ADC_1.c ****             averageAdcSamplesDiv = ((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
1343:Generated_Source\PSoC4/ADC_1.c ****                 & ADC_1_SAR_SAMPLE_CTRL_AVG_CNT_MSK)
1344:Generated_Source\PSoC4/ADC_1.c ****                 >> ADC_1_SAR_SAMPLE_CTRL_AVG_CNT_SHFT);
1345:Generated_Source\PSoC4/ADC_1.c ****             averageAdcSamplesDiv = (1uL << (averageAdcSamplesDiv + 1uL));
1346:Generated_Source\PSoC4/ADC_1.c ****                         /* When it's "Sequential, Sum", divider limit is 16 */
1347:Generated_Source\PSoC4/ADC_1.c ****             /* If Mode is ACCUNDUMP */
1348:Generated_Source\PSoC4/ADC_1.c ****             if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
1349:Generated_Source\PSoC4/ADC_1.c ****                 & ADC_1_SAR_SAMPLE_CTRL_AVG_MODE_MSK)
1350:Generated_Source\PSoC4/ADC_1.c ****                 != ADC_1_SAR_SAMPLE_CTRL_AVG_MODE_MSK)
1351:Generated_Source\PSoC4/ADC_1.c ****             {
1352:Generated_Source\PSoC4/ADC_1.c ****                 if (averageAdcSamplesDiv > 16uL)
1353:Generated_Source\PSoC4/ADC_1.c ****                 {
1354:Generated_Source\PSoC4/ADC_1.c ****                     averageAdcSamplesDiv = 16uL;
1355:Generated_Source\PSoC4/ADC_1.c ****                 }
1356:Generated_Source\PSoC4/ADC_1.c ****             }
1357:Generated_Source\PSoC4/ADC_1.c ****             /* If unsigned format, prevent sign extension */
1358:Generated_Source\PSoC4/ADC_1.c ****             if(0 == ADC_1_IsChannelSigned(chan))
1359:Generated_Source\PSoC4/ADC_1.c ****             {
1360:Generated_Source\PSoC4/ADC_1.c ****                 temp = ((uint16) adcCounts / averageAdcSamplesDiv);
1361:Generated_Source\PSoC4/ADC_1.c ****                 adcCounts = (int16) temp;
1362:Generated_Source\PSoC4/ADC_1.c ****             }
1363:Generated_Source\PSoC4/ADC_1.c ****             else
1364:Generated_Source\PSoC4/ADC_1.c ****             {
1365:Generated_Source\PSoC4/ADC_1.c ****                 adcCounts /= (int16) averageAdcSamplesDiv;
1366:Generated_Source\PSoC4/ADC_1.c ****             }
1367:Generated_Source\PSoC4/ADC_1.c ****         }
1368:Generated_Source\PSoC4/ADC_1.c ****     }
1369:Generated_Source\PSoC4/ADC_1.c ****     /* Subtract ADC offset */
1370:Generated_Source\PSoC4/ADC_1.c ****     adcCounts -= ADC_1_offset[rawChannel];
 1053              		.loc 1 1370 0 is_stmt 1
 1054 0022 6D00     		lsls	r5, r5, #1
 1055              	.LVL81:
 1056 0024 044B     		ldr	r3, .L83+8
 1057 0026 E85A     		ldrh	r0, [r5, r3]
 1058 0028 00B2     		sxth	r0, r0
 1059 002a 201A     		subs	r0, r4, r0
 1060 002c 00B2     		sxth	r0, r0
 1061              	.LVL82:
1371:Generated_Source\PSoC4/ADC_1.c ****     return adcCounts;
1372:Generated_Source\PSoC4/ADC_1.c **** }
 1062              		.loc 1 1372 0
 1063              		@ sp needed
 1064 002e 70BD     		pop	{r4, r5, r6, pc}
 1065              	.L84:
 1066              		.align	2
 1067              	.L83:
 1068 0030 00000000 		.word	.LANCHOR0
 1069 0034 00000000 		.word	ADC_1_allConfigs
 1070 0038 00000000 		.word	ADC_1_offset
 1071              		.cfi_endproc
 1072              	.LFE22:
 1073              		.size	ADC_1_RawCounts2Counts, .-ADC_1_RawCounts2Counts
 1074              		.global	__aeabi_i2f
 1075              		.global	__aeabi_fmul
 1076              		.global	__aeabi_fdiv
 1077              		.section	.text.ADC_1_CountsTo_Volts,"ax",%progbits
 1078              		.align	2
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 45


 1079              		.global	ADC_1_CountsTo_Volts
 1080              		.code	16
 1081              		.thumb_func
 1082              		.type	ADC_1_CountsTo_Volts, %function
 1083              	ADC_1_CountsTo_Volts:
 1084              	.LFB23:
1373:Generated_Source\PSoC4/ADC_1.c **** 
1374:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1375:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_CountsTo_Volts
1376:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1377:Generated_Source\PSoC4/ADC_1.c **** *
1378:Generated_Source\PSoC4/ADC_1.c **** * \brief Converts the ADC output to Volts as a float32. For example, if the ADC
1379:Generated_Source\PSoC4/ADC_1.c **** * measured 0.534 volts, the return value would be 0.534.
1380:Generated_Source\PSoC4/ADC_1.c **** * The calculation of voltage depends on the contents of ADC_1_offset[],
1381:Generated_Source\PSoC4/ADC_1.c **** * ADC_1_countsPer10Volt[], and other parameters.  The equation used is:
1382:Generated_Source\PSoC4/ADC_1.c **** *
1383:Generated_Source\PSoC4/ADC_1.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1384:Generated_Source\PSoC4/ADC_1.c **** * -Counts = Raw Counts from SAR register
1385:Generated_Source\PSoC4/ADC_1.c **** * -AvgDivider = divider based on averaging mode
1386:Generated_Source\PSoC4/ADC_1.c **** *     -Sequential, Sum: AvgDivider = number averaged
1387:Generated_Source\PSoC4/ADC_1.c **** *         Note: The divider should be a maximum of 16. If using more averages,
1388:Generated_Source\PSoC4/ADC_1.c **** *         pre-scale Counts by (number averaged / 16)
1389:Generated_Source\PSoC4/ADC_1.c **** *     -Interleaved, Sum: AvgDivider = number averaged
1390:Generated_Source\PSoC4/ADC_1.c **** *     -Sequential, Fixed: AvgDivider = 1
1391:Generated_Source\PSoC4/ADC_1.c **** * -Offset = ADC_1_offset[]
1392:Generated_Source\PSoC4/ADC_1.c **** * -TEN_VOLT = 10V constant and unit scalar.
1393:Generated_Source\PSoC4/ADC_1.c **** * -Gain = ADC_1_countsPer10Volt[]
1394:Generated_Source\PSoC4/ADC_1.c **** *
1395:Generated_Source\PSoC4/ADC_1.c **** * When the Vref is based on Vdda, the value used for Vdda is set for the project
1396:Generated_Source\PSoC4/ADC_1.c **** * in the System tab of the DWR.
1397:Generated_Source\PSoC4/ADC_1.c **** *
1398:Generated_Source\PSoC4/ADC_1.c **** * \param chan ADC_1 channel number.
1399:Generated_Source\PSoC4/ADC_1.c **** *
1400:Generated_Source\PSoC4/ADC_1.c **** * \param adcCounts Result from the ADC_1 conversion.
1401:Generated_Source\PSoC4/ADC_1.c **** *
1402:Generated_Source\PSoC4/ADC_1.c **** * \return Result in Volts.
1403:Generated_Source\PSoC4/ADC_1.c **** *
1404:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1405:Generated_Source\PSoC4/ADC_1.c **** *
1406:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1407:Generated_Source\PSoC4/ADC_1.c **** float32 ADC_1_CountsTo_Volts(uint32 chan, int16 adcCounts)
1408:Generated_Source\PSoC4/ADC_1.c **** {
 1085              		.loc 1 1408 0
 1086              		.cfi_startproc
 1087              		@ args = 0, pretend = 0, frame = 0
 1088              		@ frame_needed = 0, uses_anonymous_args = 0
 1089              	.LVL83:
 1090 0000 70B5     		push	{r4, r5, r6, lr}
 1091              		.cfi_def_cfa_offset 16
 1092              		.cfi_offset 4, -16
 1093              		.cfi_offset 5, -12
 1094              		.cfi_offset 6, -8
 1095              		.cfi_offset 14, -4
 1096              	.LVL84:
1409:Generated_Source\PSoC4/ADC_1.c ****     float32 result_Volts = 0.0f;
1410:Generated_Source\PSoC4/ADC_1.c ****     uint32 rawChannel;
1411:Generated_Source\PSoC4/ADC_1.c ****     rawChannel = ADC_1_allConfigs[ADC_1_currentConfig].channelBase + chan;
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 46


 1097              		.loc 1 1411 0
 1098 0002 104B     		ldr	r3, .L88
 1099 0004 1D68     		ldr	r5, [r3]
 1100 0006 104E     		ldr	r6, .L88+4
 1101 0008 EB00     		lsls	r3, r5, #3
 1102 000a 5C1B     		subs	r4, r3, r5
 1103 000c E200     		lsls	r2, r4, #3
 1104 000e 9459     		ldr	r4, [r2, r6]
 1105 0010 2418     		adds	r4, r4, r0
 1106              	.LVL85:
1412:Generated_Source\PSoC4/ADC_1.c **** 
1413:Generated_Source\PSoC4/ADC_1.c ****     if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
 1107              		.loc 1 1413 0
 1108 0012 B218     		adds	r2, r6, r2
 1109 0014 D368     		ldr	r3, [r2, #12]
 1110 0016 9B07     		lsls	r3, r3, #30
 1111 0018 11D4     		bmi	.L87
1414:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1415:Generated_Source\PSoC4/ADC_1.c ****         != ADC_1_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1416:Generated_Source\PSoC4/ADC_1.c ****     {
1417:Generated_Source\PSoC4/ADC_1.c ****         adcCounts = ADC_1_RawCounts2Counts(chan, adcCounts);
 1112              		.loc 1 1417 0
 1113 001a FFF7FEFF 		bl	ADC_1_RawCounts2Counts
 1114              	.LVL86:
1418:Generated_Source\PSoC4/ADC_1.c **** 
1419:Generated_Source\PSoC4/ADC_1.c ****         result_Volts = ((float32)adcCounts * ADC_1_10V_COUNTS)
 1115              		.loc 1 1419 0
 1116 001e FFF7FEFF 		bl	__aeabi_i2f
 1117              	.LVL87:
 1118 0022 0A49     		ldr	r1, .L88+8
 1119 0024 FFF7FEFF 		bl	__aeabi_fmul
 1120              	.LVL88:
 1121 0028 051C     		adds	r5, r0, #0
1420:Generated_Source\PSoC4/ADC_1.c ****             / (float32)ADC_1_countsPer10Volt[rawChannel];
 1122              		.loc 1 1420 0
 1123 002a A400     		lsls	r4, r4, #2
 1124              	.LVL89:
 1125 002c 084B     		ldr	r3, .L88+12
 1126 002e E058     		ldr	r0, [r4, r3]
 1127 0030 FFF7FEFF 		bl	__aeabi_i2f
 1128              	.LVL90:
 1129 0034 011C     		adds	r1, r0, #0
1419:Generated_Source\PSoC4/ADC_1.c ****             / (float32)ADC_1_countsPer10Volt[rawChannel];
 1130              		.loc 1 1419 0
 1131 0036 281C     		adds	r0, r5, #0
 1132 0038 FFF7FEFF 		bl	__aeabi_fdiv
 1133              	.LVL91:
 1134 003c 00E0     		b	.L86
 1135              	.LVL92:
 1136              	.L87:
1409:Generated_Source\PSoC4/ADC_1.c ****     uint32 rawChannel;
 1137              		.loc 1 1409 0
 1138 003e 0020     		movs	r0, #0
 1139              	.LVL93:
 1140              	.L86:
1421:Generated_Source\PSoC4/ADC_1.c ****     }
1422:Generated_Source\PSoC4/ADC_1.c ****     return result_Volts;
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 47


1423:Generated_Source\PSoC4/ADC_1.c **** }
 1141              		.loc 1 1423 0
 1142              		@ sp needed
 1143 0040 70BD     		pop	{r4, r5, r6, pc}
 1144              	.L89:
 1145 0042 C046     		.align	2
 1146              	.L88:
 1147 0044 00000000 		.word	.LANCHOR0
 1148 0048 00000000 		.word	ADC_1_allConfigs
 1149 004c 00002041 		.word	1092616192
 1150 0050 00000000 		.word	ADC_1_countsPer10Volt
 1151              		.cfi_endproc
 1152              	.LFE23:
 1153              		.size	ADC_1_CountsTo_Volts, .-ADC_1_CountsTo_Volts
 1154              		.global	__aeabi_idiv
 1155              		.section	.text.ADC_1_CountsTo_mVolts,"ax",%progbits
 1156              		.align	2
 1157              		.global	ADC_1_CountsTo_mVolts
 1158              		.code	16
 1159              		.thumb_func
 1160              		.type	ADC_1_CountsTo_mVolts, %function
 1161              	ADC_1_CountsTo_mVolts:
 1162              	.LFB24:
1424:Generated_Source\PSoC4/ADC_1.c **** 
1425:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1426:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_CountsTo_mVolts
1427:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1428:Generated_Source\PSoC4/ADC_1.c **** *
1429:Generated_Source\PSoC4/ADC_1.c **** * \brief Converts the ADC output to millivolts as an int16. For example, if the ADC
1430:Generated_Source\PSoC4/ADC_1.c **** * measured 0.534 volts, the return value would be 534.
1431:Generated_Source\PSoC4/ADC_1.c **** * The calculation of voltage depends on the contents of ADC_1_offset[],
1432:Generated_Source\PSoC4/ADC_1.c **** * ADC_1_countsPer10Volt[], and other parameters.  The equation used is:
1433:Generated_Source\PSoC4/ADC_1.c **** *
1434:Generated_Source\PSoC4/ADC_1.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1435:Generated_Source\PSoC4/ADC_1.c **** * -Counts = Raw Counts from SAR register
1436:Generated_Source\PSoC4/ADC_1.c **** * -AvgDivider = divider based on averaging mode
1437:Generated_Source\PSoC4/ADC_1.c **** *     -Sequential, Sum: AvgDivider = number averaged
1438:Generated_Source\PSoC4/ADC_1.c **** *         Note: The divider should be a maximum of 16. If using more averages,
1439:Generated_Source\PSoC4/ADC_1.c **** *         pre-scale Counts by (number averaged / 16)
1440:Generated_Source\PSoC4/ADC_1.c **** *     -Interleaved, Sum: AvgDivider = number averaged
1441:Generated_Source\PSoC4/ADC_1.c **** *     -Sequential, Fixed: AvgDivider = 1
1442:Generated_Source\PSoC4/ADC_1.c **** * -Offset = ADC_1_offset[]
1443:Generated_Source\PSoC4/ADC_1.c **** * -TEN_VOLT = 10V constant and unit scalar.
1444:Generated_Source\PSoC4/ADC_1.c **** * -Gain = ADC_1_countsPer10Volt[]
1445:Generated_Source\PSoC4/ADC_1.c **** *
1446:Generated_Source\PSoC4/ADC_1.c **** * When the Vref is based on Vdda, the value used for Vdda is set for the project
1447:Generated_Source\PSoC4/ADC_1.c **** * in the System tab of the DWR.
1448:Generated_Source\PSoC4/ADC_1.c **** *
1449:Generated_Source\PSoC4/ADC_1.c **** * \param chan ADC_1 channel number.
1450:Generated_Source\PSoC4/ADC_1.c **** *
1451:Generated_Source\PSoC4/ADC_1.c **** * \param adcCounts Result from the ADC_1 conversion.
1452:Generated_Source\PSoC4/ADC_1.c **** *
1453:Generated_Source\PSoC4/ADC_1.c **** * \return Result in mV.
1454:Generated_Source\PSoC4/ADC_1.c **** *
1455:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None.
1456:Generated_Source\PSoC4/ADC_1.c **** *
1457:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 48


1458:Generated_Source\PSoC4/ADC_1.c **** int16 ADC_1_CountsTo_mVolts(uint32 chan, int16 adcCounts)
1459:Generated_Source\PSoC4/ADC_1.c **** {
 1163              		.loc 1 1459 0
 1164              		.cfi_startproc
 1165              		@ args = 0, pretend = 0, frame = 0
 1166              		@ frame_needed = 0, uses_anonymous_args = 0
 1167              	.LVL94:
 1168 0000 70B5     		push	{r4, r5, r6, lr}
 1169              		.cfi_def_cfa_offset 16
 1170              		.cfi_offset 4, -16
 1171              		.cfi_offset 5, -12
 1172              		.cfi_offset 6, -8
 1173              		.cfi_offset 14, -4
 1174              	.LVL95:
1460:Generated_Source\PSoC4/ADC_1.c ****     int16 result_mVolts = 0;
1461:Generated_Source\PSoC4/ADC_1.c ****     uint32 rawChannel;
1462:Generated_Source\PSoC4/ADC_1.c **** 
1463:Generated_Source\PSoC4/ADC_1.c ****     rawChannel = ADC_1_allConfigs[ADC_1_currentConfig].channelBase + chan;
 1175              		.loc 1 1463 0
 1176 0002 154B     		ldr	r3, .L95
 1177 0004 1D68     		ldr	r5, [r3]
 1178 0006 154E     		ldr	r6, .L95+4
 1179 0008 EB00     		lsls	r3, r5, #3
 1180 000a 5C1B     		subs	r4, r3, r5
 1181 000c E200     		lsls	r2, r4, #3
 1182 000e 9459     		ldr	r4, [r2, r6]
 1183 0010 2418     		adds	r4, r4, r0
 1184              	.LVL96:
1464:Generated_Source\PSoC4/ADC_1.c **** 
1465:Generated_Source\PSoC4/ADC_1.c ****     if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
 1185              		.loc 1 1465 0
 1186 0012 B218     		adds	r2, r6, r2
 1187 0014 D368     		ldr	r3, [r2, #12]
 1188 0016 9B07     		lsls	r3, r3, #30
 1189 0018 1BD4     		bmi	.L94
1466:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1467:Generated_Source\PSoC4/ADC_1.c ****         != ADC_1_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1468:Generated_Source\PSoC4/ADC_1.c ****     {
1469:Generated_Source\PSoC4/ADC_1.c ****         adcCounts = ADC_1_RawCounts2Counts(chan, adcCounts);
 1190              		.loc 1 1469 0
 1191 001a FFF7FEFF 		bl	ADC_1_RawCounts2Counts
 1192              	.LVL97:
1470:Generated_Source\PSoC4/ADC_1.c **** 
1471:Generated_Source\PSoC4/ADC_1.c ****         result_mVolts = (int16)((((int32)adcCounts * ADC_1_10MV_COUNTS) + ( (adcCounts > 0) ?
 1193              		.loc 1 1471 0
 1194 001e 1049     		ldr	r1, .L95+8
 1195 0020 4143     		muls	r1, r0
1472:Generated_Source\PSoC4/ADC_1.c ****                  (ADC_1_countsPer10Volt[rawChannel] / 2)
1473:Generated_Source\PSoC4/ADC_1.c ****                 : (-(ADC_1_countsPer10Volt[rawChannel] / 2)) ))
 1196              		.loc 1 1473 0
 1197 0022 0028     		cmp	r0, #0
 1198 0024 06DD     		ble	.L92
1472:Generated_Source\PSoC4/ADC_1.c ****                  (ADC_1_countsPer10Volt[rawChannel] / 2)
 1199              		.loc 1 1472 0 discriminator 1
 1200 0026 A300     		lsls	r3, r4, #2
 1201 0028 0E4A     		ldr	r2, .L95+12
 1202 002a 9B58     		ldr	r3, [r3, r2]
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 49


 1203              		.loc 1 1473 0 discriminator 1
 1204 002c D80F     		lsrs	r0, r3, #31
 1205              	.LVL98:
 1206 002e C318     		adds	r3, r0, r3
 1207 0030 5B10     		asrs	r3, r3, #1
 1208 0032 06E0     		b	.L93
 1209              	.LVL99:
 1210              	.L92:
 1211              		.loc 1 1473 0 is_stmt 0 discriminator 2
 1212 0034 A300     		lsls	r3, r4, #2
 1213 0036 0B4A     		ldr	r2, .L95+12
 1214 0038 9A58     		ldr	r2, [r3, r2]
 1215 003a D30F     		lsrs	r3, r2, #31
 1216 003c 9A18     		adds	r2, r3, r2
 1217 003e 5210     		asrs	r2, r2, #1
 1218 0040 5342     		rsbs	r3, r2, #0
 1219              	.LVL100:
 1220              	.L93:
1471:Generated_Source\PSoC4/ADC_1.c ****                  (ADC_1_countsPer10Volt[rawChannel] / 2)
 1221              		.loc 1 1471 0 is_stmt 1
 1222 0042 5818     		adds	r0, r3, r1
1474:Generated_Source\PSoC4/ADC_1.c ****                  / ADC_1_countsPer10Volt[rawChannel]);
 1223              		.loc 1 1474 0
 1224 0044 A400     		lsls	r4, r4, #2
 1225              	.LVL101:
 1226 0046 074B     		ldr	r3, .L95+12
 1227 0048 E158     		ldr	r1, [r4, r3]
 1228 004a FFF7FEFF 		bl	__aeabi_idiv
 1229              	.LVL102:
1471:Generated_Source\PSoC4/ADC_1.c ****                  (ADC_1_countsPer10Volt[rawChannel] / 2)
 1230              		.loc 1 1471 0
 1231 004e 00B2     		sxth	r0, r0
 1232              	.LVL103:
 1233 0050 00E0     		b	.L91
 1234              	.LVL104:
 1235              	.L94:
1460:Generated_Source\PSoC4/ADC_1.c ****     uint32 rawChannel;
 1236              		.loc 1 1460 0
 1237 0052 0020     		movs	r0, #0
 1238              	.LVL105:
 1239              	.L91:
1475:Generated_Source\PSoC4/ADC_1.c ****     }
1476:Generated_Source\PSoC4/ADC_1.c ****     return result_mVolts;
1477:Generated_Source\PSoC4/ADC_1.c **** }
 1240              		.loc 1 1477 0
 1241              		@ sp needed
 1242              	.LVL106:
 1243 0054 70BD     		pop	{r4, r5, r6, pc}
 1244              	.L96:
 1245 0056 C046     		.align	2
 1246              	.L95:
 1247 0058 00000000 		.word	.LANCHOR0
 1248 005c 00000000 		.word	ADC_1_allConfigs
 1249 0060 10270000 		.word	10000
 1250 0064 00000000 		.word	ADC_1_countsPer10Volt
 1251              		.cfi_endproc
 1252              	.LFE24:
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 50


 1253              		.size	ADC_1_CountsTo_mVolts, .-ADC_1_CountsTo_mVolts
 1254              		.global	__aeabi_lmul
 1255              		.global	__aeabi_ldivmod
 1256              		.section	.text.ADC_1_CountsTo_uVolts,"ax",%progbits
 1257              		.align	2
 1258              		.global	ADC_1_CountsTo_uVolts
 1259              		.code	16
 1260              		.thumb_func
 1261              		.type	ADC_1_CountsTo_uVolts, %function
 1262              	ADC_1_CountsTo_uVolts:
 1263              	.LFB25:
1478:Generated_Source\PSoC4/ADC_1.c **** 
1479:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1480:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_CountsTo_uVolts
1481:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1482:Generated_Source\PSoC4/ADC_1.c **** *
1483:Generated_Source\PSoC4/ADC_1.c **** * \brief Converts the ADC output to microvolts as an int32. For example, if the ADC
1484:Generated_Source\PSoC4/ADC_1.c **** * measured 0.534 volts, the return value would be 534000.
1485:Generated_Source\PSoC4/ADC_1.c **** * The calculation of voltage depends on the contents of ADC_1_offset[],
1486:Generated_Source\PSoC4/ADC_1.c **** * ADC_1_countsPer10Volt[], and other parameters.  The equation used is:
1487:Generated_Source\PSoC4/ADC_1.c **** *
1488:Generated_Source\PSoC4/ADC_1.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1489:Generated_Source\PSoC4/ADC_1.c **** * -Counts = Raw Counts from SAR register
1490:Generated_Source\PSoC4/ADC_1.c **** * -AvgDivider = divider based on averaging mode
1491:Generated_Source\PSoC4/ADC_1.c **** *     -Sequential, Sum: AvgDivider = number averaged
1492:Generated_Source\PSoC4/ADC_1.c **** *         Note: The divider should be a maximum of 16. If using more averages,
1493:Generated_Source\PSoC4/ADC_1.c **** *         pre-scale Counts by (number averaged / 16)
1494:Generated_Source\PSoC4/ADC_1.c **** *     -Interleaved, Sum: AvgDivider = number averaged
1495:Generated_Source\PSoC4/ADC_1.c **** *     -Sequential, Fixed: AvgDivider = 1
1496:Generated_Source\PSoC4/ADC_1.c **** * -Offset = ADC_1_offset[]
1497:Generated_Source\PSoC4/ADC_1.c **** * -TEN_VOLT = 10V constant and unit scalar.
1498:Generated_Source\PSoC4/ADC_1.c **** * -Gain = ADC_1_countsPer10Volt[]
1499:Generated_Source\PSoC4/ADC_1.c **** *
1500:Generated_Source\PSoC4/ADC_1.c **** * When the Vref is based on Vdda, the value used for Vdda is set for the project
1501:Generated_Source\PSoC4/ADC_1.c **** * in the System tab of the DWR.
1502:Generated_Source\PSoC4/ADC_1.c **** *
1503:Generated_Source\PSoC4/ADC_1.c **** * \param chan ADC_1 channel number.
1504:Generated_Source\PSoC4/ADC_1.c **** *
1505:Generated_Source\PSoC4/ADC_1.c **** * \param adcCounts Result from the ADC_1 conversion.
1506:Generated_Source\PSoC4/ADC_1.c **** *
1507:Generated_Source\PSoC4/ADC_1.c **** * \return Result in microvolts.
1508:Generated_Source\PSoC4/ADC_1.c **** *
1509:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1510:Generated_Source\PSoC4/ADC_1.c **** *
1511:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1512:Generated_Source\PSoC4/ADC_1.c **** int32 ADC_1_CountsTo_uVolts(uint32 chan, int16 adcCounts)
1513:Generated_Source\PSoC4/ADC_1.c **** {
 1264              		.loc 1 1513 0
 1265              		.cfi_startproc
 1266              		@ args = 0, pretend = 0, frame = 0
 1267              		@ frame_needed = 0, uses_anonymous_args = 0
 1268              	.LVL107:
 1269 0000 70B5     		push	{r4, r5, r6, lr}
 1270              		.cfi_def_cfa_offset 16
 1271              		.cfi_offset 4, -16
 1272              		.cfi_offset 5, -12
 1273              		.cfi_offset 6, -8
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 51


 1274              		.cfi_offset 14, -4
 1275              	.LVL108:
1514:Generated_Source\PSoC4/ADC_1.c ****     int64 result_uVolts = 0;
1515:Generated_Source\PSoC4/ADC_1.c ****     uint32 rawChannel;
1516:Generated_Source\PSoC4/ADC_1.c ****     rawChannel = ADC_1_allConfigs[ADC_1_currentConfig].channelBase + chan;
 1276              		.loc 1 1516 0
 1277 0002 0E4B     		ldr	r3, .L100
 1278 0004 1D68     		ldr	r5, [r3]
 1279 0006 0E4E     		ldr	r6, .L100+4
 1280 0008 EB00     		lsls	r3, r5, #3
 1281 000a 5C1B     		subs	r4, r3, r5
 1282 000c E200     		lsls	r2, r4, #3
 1283 000e 9459     		ldr	r4, [r2, r6]
 1284 0010 2418     		adds	r4, r4, r0
 1285              	.LVL109:
1517:Generated_Source\PSoC4/ADC_1.c **** 
1518:Generated_Source\PSoC4/ADC_1.c ****     if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
 1286              		.loc 1 1518 0
 1287 0012 B218     		adds	r2, r6, r2
 1288 0014 D368     		ldr	r3, [r2, #12]
 1289 0016 9B07     		lsls	r3, r3, #30
 1290 0018 0DD4     		bmi	.L99
1519:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1520:Generated_Source\PSoC4/ADC_1.c ****         != ADC_1_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1521:Generated_Source\PSoC4/ADC_1.c ****     {
1522:Generated_Source\PSoC4/ADC_1.c ****         adcCounts = ADC_1_RawCounts2Counts(chan, adcCounts);
 1291              		.loc 1 1522 0
 1292 001a FFF7FEFF 		bl	ADC_1_RawCounts2Counts
 1293              	.LVL110:
1523:Generated_Source\PSoC4/ADC_1.c **** 
1524:Generated_Source\PSoC4/ADC_1.c ****         result_uVolts = ((int64)adcCounts * ADC_1_10UV_COUNTS)
 1294              		.loc 1 1524 0
 1295 001e C117     		asrs	r1, r0, #31
 1296 0020 084A     		ldr	r2, .L100+8
 1297 0022 0023     		movs	r3, #0
 1298 0024 FFF7FEFF 		bl	__aeabi_lmul
 1299              	.LVL111:
1525:Generated_Source\PSoC4/ADC_1.c ****             / ADC_1_countsPer10Volt[rawChannel];
 1300              		.loc 1 1525 0
 1301 0028 A400     		lsls	r4, r4, #2
 1302              	.LVL112:
 1303 002a 074B     		ldr	r3, .L100+12
 1304 002c E258     		ldr	r2, [r4, r3]
 1305 002e D317     		asrs	r3, r2, #31
1524:Generated_Source\PSoC4/ADC_1.c ****             / ADC_1_countsPer10Volt[rawChannel];
 1306              		.loc 1 1524 0
 1307 0030 FFF7FEFF 		bl	__aeabi_ldivmod
 1308              	.LVL113:
 1309 0034 00E0     		b	.L98
 1310              	.LVL114:
 1311              	.L99:
1514:Generated_Source\PSoC4/ADC_1.c ****     uint32 rawChannel;
 1312              		.loc 1 1514 0
 1313 0036 0020     		movs	r0, #0
 1314              	.LVL115:
 1315              	.L98:
1526:Generated_Source\PSoC4/ADC_1.c ****     }
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 52


1527:Generated_Source\PSoC4/ADC_1.c ****     return ( (int32)result_uVolts );
1528:Generated_Source\PSoC4/ADC_1.c **** }
 1316              		.loc 1 1528 0
 1317              		@ sp needed
 1318              	.LVL116:
 1319 0038 70BD     		pop	{r4, r5, r6, pc}
 1320              	.L101:
 1321 003a C046     		.align	2
 1322              	.L100:
 1323 003c 00000000 		.word	.LANCHOR0
 1324 0040 00000000 		.word	ADC_1_allConfigs
 1325 0044 80969800 		.word	10000000
 1326 0048 00000000 		.word	ADC_1_countsPer10Volt
 1327              		.cfi_endproc
 1328              	.LFE25:
 1329              		.size	ADC_1_CountsTo_uVolts, .-ADC_1_CountsTo_uVolts
 1330              		.section	.text.ADC_1_Init,"ax",%progbits
 1331              		.align	2
 1332              		.global	ADC_1_Init
 1333              		.code	16
 1334              		.thumb_func
 1335              		.type	ADC_1_Init, %function
 1336              	ADC_1_Init:
 1337              	.LFB26:
1529:Generated_Source\PSoC4/ADC_1.c **** 
1530:Generated_Source\PSoC4/ADC_1.c **** #if(0u != ADC_1_ANY_CONFIG_USES_FILTER)
1531:Generated_Source\PSoC4/ADC_1.c **** 
1532:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1533:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_TrimFilterVos
1534:Generated_Source\PSoC4/ADC_1.c ****     ****************************************************************************//**
1535:Generated_Source\PSoC4/ADC_1.c ****     *
1536:Generated_Source\PSoC4/ADC_1.c ****     * \brief Run an algorithm to reduce voltage offset using the UAB's opamp and
1537:Generated_Source\PSoC4/ADC_1.c ****     * agnd buffer trim.
1538:Generated_Source\PSoC4/ADC_1.c ****     *
1539:Generated_Source\PSoC4/ADC_1.c ****     * During trimming, the filter inputs are disconnected from the UAB block,
1540:Generated_Source\PSoC4/ADC_1.c ****     * the non-inverting input of both UAB opamps are connected to Agnd,
1541:Generated_Source\PSoC4/ADC_1.c ****     * and SAR is used as a comparator.
1542:Generated_Source\PSoC4/ADC_1.c ****     *
1543:Generated_Source\PSoC4/ADC_1.c ****     * Trimming is done by comparing the filter output with Agnd.
1544:Generated_Source\PSoC4/ADC_1.c ****     * The algorithm steps through the Opamp trim codes first and then the
1545:Generated_Source\PSoC4/ADC_1.c ****     * Agnd trim codes to find where the filter output crosses Agnd.
1546:Generated_Source\PSoC4/ADC_1.c ****     * For each trim code, a blocking delay is used to allow the filter output
1547:Generated_Source\PSoC4/ADC_1.c ****     * to settle before reading the comparator status. This delay is equivalent
1548:Generated_Source\PSoC4/ADC_1.c ****     * to 9 * tau, where tau is the filter time constant:
1549:Generated_Source\PSoC4/ADC_1.c ****     *
1550:Generated_Source\PSoC4/ADC_1.c ****     * tau = 1 / (2 * pi * (Fcorner or Bandwidth))
1551:Generated_Source\PSoC4/ADC_1.c ****     *
1552:Generated_Source\PSoC4/ADC_1.c ****     * The time constant is calculated using the bandwidth for Band pass and
1553:Generated_Source\PSoC4/ADC_1.c ****     * Band stop and the corner frequency for Low pass and High pass.
1554:Generated_Source\PSoC4/ADC_1.c ****     * The algorithm can check up to 40 different trim codes, but it will typically
1555:Generated_Source\PSoC4/ADC_1.c ****     * complete in much less time.
1556:Generated_Source\PSoC4/ADC_1.c ****     *
1557:Generated_Source\PSoC4/ADC_1.c ****     * Once trimming is complete, the UAB is restored to its original configuration.
1558:Generated_Source\PSoC4/ADC_1.c ****     *
1559:Generated_Source\PSoC4/ADC_1.c ****     * \Note
1560:Generated_Source\PSoC4/ADC_1.c ****     * The ADC conversions must be started and Agnd must be supplied to the
1561:Generated_Source\PSoC4/ADC_1.c ****     * component before calling this function.
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 53


1562:Generated_Source\PSoC4/ADC_1.c ****     *
1563:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1564:Generated_Source\PSoC4/ADC_1.c ****     void ADC_1_TrimFilterVos(void)
1565:Generated_Source\PSoC4/ADC_1.c ****     {
1566:Generated_Source\PSoC4/ADC_1.c ****         uint32 opampTrim = 0uL;
1567:Generated_Source\PSoC4/ADC_1.c ****         uint32 agndTrim = 0uL;
1568:Generated_Source\PSoC4/ADC_1.c ****         uint32 compStatus = 0uL;
1569:Generated_Source\PSoC4/ADC_1.c **** 
1570:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SetupComparatorTrim();
1571:Generated_Source\PSoC4/ADC_1.c **** 
1572:Generated_Source\PSoC4/ADC_1.c ****         /* Sweep from center to crossing */
1573:Generated_Source\PSoC4/ADC_1.c ****         compStatus = ADC_1_SetOpampAndAgndTrim(ADC_1_OPAMP_TRIM_POS_BASE, ADC_1_AGND_TRIM_POS_BASE)
1574:Generated_Source\PSoC4/ADC_1.c ****         if (0uL == compStatus)
1575:Generated_Source\PSoC4/ADC_1.c ****         {
1576:Generated_Source\PSoC4/ADC_1.c ****             opampTrim = ADC_1_RaiseOpampTrimToCrossing(ADC_1_OPAMP_TRIM_POS_BASE);
1577:Generated_Source\PSoC4/ADC_1.c ****             agndTrim = ADC_1_RaiseAgndTrimToCrossing(ADC_1_AGND_TRIM_POS_BASE);
1578:Generated_Source\PSoC4/ADC_1.c ****             if ((agndTrim == (ADC_1_AGND_TRIM_POS_LIMIT - 1uL))
1579:Generated_Source\PSoC4/ADC_1.c ****                 && (opampTrim != (ADC_1_OPAMP_TRIM_POS_LIMIT - 1uL)))
1580:Generated_Source\PSoC4/ADC_1.c ****             {
1581:Generated_Source\PSoC4/ADC_1.c ****                 opampTrim = ADC_1_IncOpampTrim(opampTrim);
1582:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_SetOpampAndAgndTrim(opampTrim, ADC_1_AGND_TRIM_POS_BASE);
1583:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_LowerAgndTrimToCrossing(ADC_1_AGND_TRIM_POS_BASE);
1584:Generated_Source\PSoC4/ADC_1.c ****             }
1585:Generated_Source\PSoC4/ADC_1.c ****         }
1586:Generated_Source\PSoC4/ADC_1.c ****         else
1587:Generated_Source\PSoC4/ADC_1.c ****         {
1588:Generated_Source\PSoC4/ADC_1.c ****             opampTrim = ADC_1_LowerOpampTrimToCrossing(ADC_1_OPAMP_TRIM_POS_BASE);
1589:Generated_Source\PSoC4/ADC_1.c ****             agndTrim = ADC_1_LowerAgndTrimToCrossing(ADC_1_AGND_TRIM_POS_BASE);
1590:Generated_Source\PSoC4/ADC_1.c ****             if ((agndTrim == (ADC_1_AGND_TRIM_NEG_LIMIT - 1uL))
1591:Generated_Source\PSoC4/ADC_1.c ****                 && (opampTrim != (ADC_1_OPAMP_TRIM_NEG_LIMIT - 1uL)))
1592:Generated_Source\PSoC4/ADC_1.c ****             {
1593:Generated_Source\PSoC4/ADC_1.c ****                 opampTrim = ADC_1_DecOpampTrim(opampTrim);
1594:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_SetOpampAndAgndTrim(opampTrim, ADC_1_AGND_TRIM_POS_BASE);
1595:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_RaiseAgndTrimToCrossing(ADC_1_AGND_TRIM_POS_BASE);
1596:Generated_Source\PSoC4/ADC_1.c ****             }
1597:Generated_Source\PSoC4/ADC_1.c ****         }
1598:Generated_Source\PSoC4/ADC_1.c **** 
1599:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UndoComparatorTrimSetup();
1600:Generated_Source\PSoC4/ADC_1.c ****     }
1601:Generated_Source\PSoC4/ADC_1.c **** 
1602:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1603:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_SetupComparatorTrim
1604:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1605:Generated_Source\PSoC4/ADC_1.c ****     *
1606:Generated_Source\PSoC4/ADC_1.c ****     * Make proper connections to being trimming the Agnd buffer
1607:Generated_Source\PSoC4/ADC_1.c ****     * and Opamp offset.
1608:Generated_Source\PSoC4/ADC_1.c ****     *
1609:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1610:Generated_Source\PSoC4/ADC_1.c ****     static void ADC_1_SetupComparatorTrim(void)
1611:Generated_Source\PSoC4/ADC_1.c ****     {
1612:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_filterVinMux_Select(ADC_1_FILTER_AMUX_CHANNEL);
1613:Generated_Source\PSoC4/ADC_1.c ****     }
1614:Generated_Source\PSoC4/ADC_1.c **** 
1615:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1616:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_UndoComparatorTrimSetup
1617:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1618:Generated_Source\PSoC4/ADC_1.c ****     *
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 54


1619:Generated_Source\PSoC4/ADC_1.c ****     * Undo all changes made in ADC_1_SetupComparatorTrim()
1620:Generated_Source\PSoC4/ADC_1.c ****     * to bring the Component back to normal operation.
1621:Generated_Source\PSoC4/ADC_1.c ****     *
1622:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1623:Generated_Source\PSoC4/ADC_1.c ****     static void ADC_1_UndoComparatorTrimSetup(void)
1624:Generated_Source\PSoC4/ADC_1.c ****     {
1625:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_filterVinMux_Select((uint8)ADC_1_currentConfig);
1626:Generated_Source\PSoC4/ADC_1.c ****     }
1627:Generated_Source\PSoC4/ADC_1.c **** 
1628:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1629:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_RaiseOpampTrimToCrossing
1630:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1631:Generated_Source\PSoC4/ADC_1.c ****     *
1632:Generated_Source\PSoC4/ADC_1.c ****     * Step through the Opamp trim codes in increasing order
1633:Generated_Source\PSoC4/ADC_1.c ****     * to find the point where the offset crosses Agnd.
1634:Generated_Source\PSoC4/ADC_1.c ****     *
1635:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1636:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_RaiseOpampTrimToCrossing(uint32 startTrim)
1637:Generated_Source\PSoC4/ADC_1.c ****     {
1638:Generated_Source\PSoC4/ADC_1.c ****         uint32 opampTrim;
1639:Generated_Source\PSoC4/ADC_1.c ****         uint32 lastOpampTrim;
1640:Generated_Source\PSoC4/ADC_1.c ****         uint32 compStatus;
1641:Generated_Source\PSoC4/ADC_1.c **** 
1642:Generated_Source\PSoC4/ADC_1.c ****         lastOpampTrim = startTrim;
1643:Generated_Source\PSoC4/ADC_1.c ****         for (opampTrim = startTrim;
1644:Generated_Source\PSoC4/ADC_1.c ****             opampTrim != ADC_1_OPAMP_TRIM_NEG_LIMIT;
1645:Generated_Source\PSoC4/ADC_1.c ****             opampTrim = ADC_1_IncOpampTrim(opampTrim))
1646:Generated_Source\PSoC4/ADC_1.c ****         {
1647:Generated_Source\PSoC4/ADC_1.c ****             compStatus = ADC_1_SetOpampAndAgndTrim(opampTrim, ADC_1_AGND_TRIM_POS_BASE);
1648:Generated_Source\PSoC4/ADC_1.c ****             if (0uL != compStatus)
1649:Generated_Source\PSoC4/ADC_1.c ****             {
1650:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_SetOpampTrim(lastOpampTrim);
1651:Generated_Source\PSoC4/ADC_1.c ****                 break;
1652:Generated_Source\PSoC4/ADC_1.c ****             }
1653:Generated_Source\PSoC4/ADC_1.c ****             lastOpampTrim = opampTrim;
1654:Generated_Source\PSoC4/ADC_1.c ****         }
1655:Generated_Source\PSoC4/ADC_1.c **** 
1656:Generated_Source\PSoC4/ADC_1.c ****         return lastOpampTrim;
1657:Generated_Source\PSoC4/ADC_1.c ****     }
1658:Generated_Source\PSoC4/ADC_1.c **** 
1659:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1660:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_LowerOpampTrimToCrossing
1661:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1662:Generated_Source\PSoC4/ADC_1.c ****     *
1663:Generated_Source\PSoC4/ADC_1.c ****     * Step through the Opamp trim codes in decreasing order
1664:Generated_Source\PSoC4/ADC_1.c ****     * to find the point where the offset crosses Agnd.
1665:Generated_Source\PSoC4/ADC_1.c ****     *
1666:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1667:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_LowerOpampTrimToCrossing(uint32 startTrim)
1668:Generated_Source\PSoC4/ADC_1.c ****     {
1669:Generated_Source\PSoC4/ADC_1.c ****         uint32 opampTrim;
1670:Generated_Source\PSoC4/ADC_1.c ****         uint32 lastOpampTrim;
1671:Generated_Source\PSoC4/ADC_1.c ****         uint32 compStatus;
1672:Generated_Source\PSoC4/ADC_1.c **** 
1673:Generated_Source\PSoC4/ADC_1.c ****         lastOpampTrim = startTrim;
1674:Generated_Source\PSoC4/ADC_1.c ****         for (opampTrim = startTrim;
1675:Generated_Source\PSoC4/ADC_1.c ****             opampTrim != ADC_1_OPAMP_TRIM_NEG_LIMIT;
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 55


1676:Generated_Source\PSoC4/ADC_1.c ****             opampTrim = ADC_1_DecOpampTrim(opampTrim))
1677:Generated_Source\PSoC4/ADC_1.c ****         {
1678:Generated_Source\PSoC4/ADC_1.c ****             compStatus = ADC_1_SetOpampAndAgndTrim(opampTrim, ADC_1_AGND_TRIM_POS_BASE);
1679:Generated_Source\PSoC4/ADC_1.c ****             if (0uL == compStatus)
1680:Generated_Source\PSoC4/ADC_1.c ****             {
1681:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_SetOpampTrim(lastOpampTrim);
1682:Generated_Source\PSoC4/ADC_1.c ****                 break;
1683:Generated_Source\PSoC4/ADC_1.c ****             }
1684:Generated_Source\PSoC4/ADC_1.c ****             lastOpampTrim = opampTrim;
1685:Generated_Source\PSoC4/ADC_1.c ****         }
1686:Generated_Source\PSoC4/ADC_1.c **** 
1687:Generated_Source\PSoC4/ADC_1.c ****         return lastOpampTrim;
1688:Generated_Source\PSoC4/ADC_1.c ****     }
1689:Generated_Source\PSoC4/ADC_1.c **** 
1690:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1691:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_RaiseAgndTrimToCrossing
1692:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1693:Generated_Source\PSoC4/ADC_1.c ****     *
1694:Generated_Source\PSoC4/ADC_1.c ****     * Step through the Agnd trim codes in increasing order
1695:Generated_Source\PSoC4/ADC_1.c ****     * to find the point where the offset crosses Agnd.
1696:Generated_Source\PSoC4/ADC_1.c ****     *
1697:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1698:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_RaiseAgndTrimToCrossing(uint32 startTrim)
1699:Generated_Source\PSoC4/ADC_1.c ****     {
1700:Generated_Source\PSoC4/ADC_1.c ****         uint32 agndTrim;
1701:Generated_Source\PSoC4/ADC_1.c ****         uint32 lastAgndTrim;
1702:Generated_Source\PSoC4/ADC_1.c ****         uint32 compStatus;
1703:Generated_Source\PSoC4/ADC_1.c **** 
1704:Generated_Source\PSoC4/ADC_1.c ****         lastAgndTrim = startTrim;
1705:Generated_Source\PSoC4/ADC_1.c ****         for (agndTrim = startTrim;
1706:Generated_Source\PSoC4/ADC_1.c ****             agndTrim != ADC_1_AGND_TRIM_NEG_LIMIT;
1707:Generated_Source\PSoC4/ADC_1.c ****             agndTrim = ADC_1_IncAgndTrim(agndTrim))
1708:Generated_Source\PSoC4/ADC_1.c ****         {
1709:Generated_Source\PSoC4/ADC_1.c ****             compStatus = ADC_1_SetAgndTrim(agndTrim);
1710:Generated_Source\PSoC4/ADC_1.c ****             if (0uL != compStatus)
1711:Generated_Source\PSoC4/ADC_1.c ****             {
1712:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_SetAgndTrim(lastAgndTrim);
1713:Generated_Source\PSoC4/ADC_1.c ****                 break;
1714:Generated_Source\PSoC4/ADC_1.c ****             }
1715:Generated_Source\PSoC4/ADC_1.c ****             lastAgndTrim = agndTrim;
1716:Generated_Source\PSoC4/ADC_1.c ****         }
1717:Generated_Source\PSoC4/ADC_1.c **** 
1718:Generated_Source\PSoC4/ADC_1.c ****         return lastAgndTrim;
1719:Generated_Source\PSoC4/ADC_1.c ****     }
1720:Generated_Source\PSoC4/ADC_1.c **** 
1721:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1722:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_LowerAgndTrimToCrossing
1723:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1724:Generated_Source\PSoC4/ADC_1.c ****     *
1725:Generated_Source\PSoC4/ADC_1.c ****     * Step through the Agnd trim codes in decreasing order
1726:Generated_Source\PSoC4/ADC_1.c ****     * to find the point where the offset crosses Agnd.
1727:Generated_Source\PSoC4/ADC_1.c ****     *
1728:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1729:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_LowerAgndTrimToCrossing(uint32 startTrim)
1730:Generated_Source\PSoC4/ADC_1.c ****     {
1731:Generated_Source\PSoC4/ADC_1.c ****         uint32 agndTrim = startTrim;
1732:Generated_Source\PSoC4/ADC_1.c ****         uint32 lastAgndTrim = agndTrim;
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 56


1733:Generated_Source\PSoC4/ADC_1.c ****         uint32 compStatus = 1uL;
1734:Generated_Source\PSoC4/ADC_1.c **** 
1735:Generated_Source\PSoC4/ADC_1.c ****         lastAgndTrim = startTrim;
1736:Generated_Source\PSoC4/ADC_1.c ****         for (agndTrim = startTrim;
1737:Generated_Source\PSoC4/ADC_1.c ****             agndTrim != ADC_1_AGND_TRIM_NEG_LIMIT;
1738:Generated_Source\PSoC4/ADC_1.c ****             agndTrim = ADC_1_DecAgndTrim(agndTrim))
1739:Generated_Source\PSoC4/ADC_1.c ****         {
1740:Generated_Source\PSoC4/ADC_1.c ****             compStatus = ADC_1_SetAgndTrim(agndTrim);
1741:Generated_Source\PSoC4/ADC_1.c ****             if (0uL == compStatus)
1742:Generated_Source\PSoC4/ADC_1.c ****             {
1743:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_SetAgndTrim(lastAgndTrim);
1744:Generated_Source\PSoC4/ADC_1.c ****                 break;
1745:Generated_Source\PSoC4/ADC_1.c ****             }
1746:Generated_Source\PSoC4/ADC_1.c ****             lastAgndTrim = agndTrim;
1747:Generated_Source\PSoC4/ADC_1.c ****         }
1748:Generated_Source\PSoC4/ADC_1.c **** 
1749:Generated_Source\PSoC4/ADC_1.c ****         return lastAgndTrim;
1750:Generated_Source\PSoC4/ADC_1.c ****     }
1751:Generated_Source\PSoC4/ADC_1.c **** 
1752:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1753:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_SetOpampAndAgndTrim
1754:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1755:Generated_Source\PSoC4/ADC_1.c ****     *
1756:Generated_Source\PSoC4/ADC_1.c ****     * Write the Agnd and Opamp trim codes and return the comparator status.
1757:Generated_Source\PSoC4/ADC_1.c ****     *
1758:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1759:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_SetOpampAndAgndTrim(uint32 opampTrim, uint32 agndTrim)
1760:Generated_Source\PSoC4/ADC_1.c ****     {
1761:Generated_Source\PSoC4/ADC_1.c ****         uint32 trimRegVal = ADC_1_UABH_A_OA_TRIM_OA_REG;
1762:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal &= ~(ADC_1_OPAMP_TRIM_MASK << CyUAB_OA_OFFSET_SHIFT);
1763:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal |= (opampTrim << CyUAB_OA_OFFSET_SHIFT);
1764:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_A_OA_TRIM_OA_REG = trimRegVal;
1765:Generated_Source\PSoC4/ADC_1.c **** 
1766:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal = ADC_1_UABH_A_OA_TRIM_AGND_REG;
1767:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal &= ~(ADC_1_AGND_TRIM_MASK << CyUAB_AGND_OFFSET_SHIFT);
1768:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal |= (agndTrim << CyUAB_AGND_OFFSET_SHIFT);
1769:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_A_OA_TRIM_AGND_REG = trimRegVal;
1770:Generated_Source\PSoC4/ADC_1.c **** 
1771:Generated_Source\PSoC4/ADC_1.c ****         return ADC_1_GetCompStatus();
1772:Generated_Source\PSoC4/ADC_1.c ****     }
1773:Generated_Source\PSoC4/ADC_1.c **** 
1774:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1775:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_SetOpampTrim
1776:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1777:Generated_Source\PSoC4/ADC_1.c ****     *
1778:Generated_Source\PSoC4/ADC_1.c ****     * Write the Opamp trim code and return the comparator status.
1779:Generated_Source\PSoC4/ADC_1.c ****     *
1780:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1781:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_SetOpampTrim(uint32 opampTrim)
1782:Generated_Source\PSoC4/ADC_1.c ****     {
1783:Generated_Source\PSoC4/ADC_1.c ****         uint32 trimRegVal = ADC_1_UABH_A_OA_TRIM_OA_REG;
1784:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal &= ~(ADC_1_OPAMP_TRIM_MASK << CyUAB_OA_OFFSET_SHIFT);
1785:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal |= (opampTrim << CyUAB_OA_OFFSET_SHIFT);
1786:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_A_OA_TRIM_OA_REG = trimRegVal;
1787:Generated_Source\PSoC4/ADC_1.c **** 
1788:Generated_Source\PSoC4/ADC_1.c ****         return ADC_1_GetCompStatus();
1789:Generated_Source\PSoC4/ADC_1.c ****     }
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 57


1790:Generated_Source\PSoC4/ADC_1.c **** 
1791:Generated_Source\PSoC4/ADC_1.c **** 
1792:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1793:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_SetAgndTrim
1794:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1795:Generated_Source\PSoC4/ADC_1.c ****     *
1796:Generated_Source\PSoC4/ADC_1.c ****     * Write the Agnd trim code and return the comparator status.
1797:Generated_Source\PSoC4/ADC_1.c ****     *
1798:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1799:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_SetAgndTrim(uint32 agndTrim)
1800:Generated_Source\PSoC4/ADC_1.c ****     {
1801:Generated_Source\PSoC4/ADC_1.c ****         uint32 trimRegVal = ADC_1_UABH_A_OA_TRIM_AGND_REG;
1802:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal &= ~(ADC_1_AGND_TRIM_MASK << CyUAB_AGND_OFFSET_SHIFT);
1803:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal |= (agndTrim << CyUAB_AGND_OFFSET_SHIFT);
1804:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_A_OA_TRIM_AGND_REG = trimRegVal;
1805:Generated_Source\PSoC4/ADC_1.c **** 
1806:Generated_Source\PSoC4/ADC_1.c ****         return ADC_1_GetCompStatus();
1807:Generated_Source\PSoC4/ADC_1.c ****     }
1808:Generated_Source\PSoC4/ADC_1.c **** 
1809:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1810:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_GetCompStatus
1811:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1812:Generated_Source\PSoC4/ADC_1.c ****     *
1813:Generated_Source\PSoC4/ADC_1.c ****     * Delays to allow filter to settle before reading the ADC result.
1814:Generated_Source\PSoC4/ADC_1.c ****     * Returns 1 if the filter output is greater than AGND, else 0.
1815:Generated_Source\PSoC4/ADC_1.c ****     *
1816:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1817:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_GetCompStatus(void)
1818:Generated_Source\PSoC4/ADC_1.c ****     {
1819:Generated_Source\PSoC4/ADC_1.c ****         uint32 compStatus = 0UL;
1820:Generated_Source\PSoC4/ADC_1.c ****         int16 zeroCode = 0;
1821:Generated_Source\PSoC4/ADC_1.c **** 
1822:Generated_Source\PSoC4/ADC_1.c ****         CyDelayUs(ADC_1_allConfigs[ADC_1_currentConfig].filterTrimDelay);
1823:Generated_Source\PSoC4/ADC_1.c **** 
1824:Generated_Source\PSoC4/ADC_1.c ****         /*If unsigned differential */
1825:Generated_Source\PSoC4/ADC_1.c ****         if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
1826:Generated_Source\PSoC4/ADC_1.c ****             & ADC_1_SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_MSK) == 0U)
1827:Generated_Source\PSoC4/ADC_1.c ****         {
1828:Generated_Source\PSoC4/ADC_1.c ****             zeroCode = 0x800;
1829:Generated_Source\PSoC4/ADC_1.c ****         }
1830:Generated_Source\PSoC4/ADC_1.c **** 
1831:Generated_Source\PSoC4/ADC_1.c ****         if (ADC_1_GetResult16(ADC_1_FILTER_ADC_CHANNEL) < zeroCode)
1832:Generated_Source\PSoC4/ADC_1.c ****         {
1833:Generated_Source\PSoC4/ADC_1.c ****             compStatus = 1UL;
1834:Generated_Source\PSoC4/ADC_1.c ****         }
1835:Generated_Source\PSoC4/ADC_1.c **** 
1836:Generated_Source\PSoC4/ADC_1.c ****         return compStatus;
1837:Generated_Source\PSoC4/ADC_1.c ****     }
1838:Generated_Source\PSoC4/ADC_1.c **** 
1839:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1840:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_IncOpampTrim
1841:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1842:Generated_Source\PSoC4/ADC_1.c ****     *
1843:Generated_Source\PSoC4/ADC_1.c ****     * Increments the Opamp trim code by one. Note that Opamp trim code is
1844:Generated_Source\PSoC4/ADC_1.c ****     * a 4-bit sign-magnitude value.
1845:Generated_Source\PSoC4/ADC_1.c ****     *
1846:Generated_Source\PSoC4/ADC_1.c ****     * Skips OPAMP_TRIM_NEG_BASE because it is the same as POS_BASE.
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 58


1847:Generated_Source\PSoC4/ADC_1.c ****     *
1848:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1849:Generated_Source\PSoC4/ADC_1.c ****     /* Skips OPAMP_TRIM_NEG_BASE because it is the same as POS_BASE. */
1850:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_IncOpampTrim(uint32 trim)
1851:Generated_Source\PSoC4/ADC_1.c ****     {
1852:Generated_Source\PSoC4/ADC_1.c **** 
1853:Generated_Source\PSoC4/ADC_1.c ****         if (trim < (ADC_1_OPAMP_TRIM_POS_LIMIT - 1uL))
1854:Generated_Source\PSoC4/ADC_1.c ****         {
1855:Generated_Source\PSoC4/ADC_1.c ****             trim = trim + 1uL;
1856:Generated_Source\PSoC4/ADC_1.c ****         }
1857:Generated_Source\PSoC4/ADC_1.c ****         else if ((ADC_1_OPAMP_TRIM_POS_LIMIT - 1uL) == trim)
1858:Generated_Source\PSoC4/ADC_1.c ****         {
1859:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_OPAMP_TRIM_NEG_LIMIT;
1860:Generated_Source\PSoC4/ADC_1.c ****         }
1861:Generated_Source\PSoC4/ADC_1.c ****         else if (trim <= (ADC_1_OPAMP_TRIM_NEG_BASE + 1uL))
1862:Generated_Source\PSoC4/ADC_1.c ****         {
1863:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_OPAMP_TRIM_POS_BASE;
1864:Generated_Source\PSoC4/ADC_1.c ****         }
1865:Generated_Source\PSoC4/ADC_1.c ****         else
1866:Generated_Source\PSoC4/ADC_1.c ****         {
1867:Generated_Source\PSoC4/ADC_1.c ****             trim = trim - 1uL;
1868:Generated_Source\PSoC4/ADC_1.c ****         }
1869:Generated_Source\PSoC4/ADC_1.c **** 
1870:Generated_Source\PSoC4/ADC_1.c ****         return trim;
1871:Generated_Source\PSoC4/ADC_1.c ****     }
1872:Generated_Source\PSoC4/ADC_1.c **** 
1873:Generated_Source\PSoC4/ADC_1.c **** 
1874:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1875:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_DecOpampTrim
1876:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1877:Generated_Source\PSoC4/ADC_1.c ****     *
1878:Generated_Source\PSoC4/ADC_1.c ****     * Decrements the Opamp trim code by one. Note that Opamp trim code is
1879:Generated_Source\PSoC4/ADC_1.c ****     * a 4-bit sign-magnitude value.
1880:Generated_Source\PSoC4/ADC_1.c ****     *
1881:Generated_Source\PSoC4/ADC_1.c ****     * Skips OPAMP_TRIM_NEG_BASE because it is the same as POS_BASE.
1882:Generated_Source\PSoC4/ADC_1.c ****     *
1883:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1884:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_DecOpampTrim(uint32 trim)
1885:Generated_Source\PSoC4/ADC_1.c ****     {
1886:Generated_Source\PSoC4/ADC_1.c **** 
1887:Generated_Source\PSoC4/ADC_1.c ****         if (ADC_1_OPAMP_TRIM_POS_BASE == trim)
1888:Generated_Source\PSoC4/ADC_1.c ****         {
1889:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_OPAMP_TRIM_NEG_BASE + 1uL;
1890:Generated_Source\PSoC4/ADC_1.c ****         }
1891:Generated_Source\PSoC4/ADC_1.c ****         else if (trim < ADC_1_OPAMP_TRIM_POS_LIMIT)
1892:Generated_Source\PSoC4/ADC_1.c ****         {
1893:Generated_Source\PSoC4/ADC_1.c ****             trim = trim - 1uL;
1894:Generated_Source\PSoC4/ADC_1.c ****         }
1895:Generated_Source\PSoC4/ADC_1.c ****         else if (trim < ADC_1_OPAMP_TRIM_NEG_LIMIT)
1896:Generated_Source\PSoC4/ADC_1.c ****         {
1897:Generated_Source\PSoC4/ADC_1.c ****             trim = trim + 1uL;
1898:Generated_Source\PSoC4/ADC_1.c ****         }
1899:Generated_Source\PSoC4/ADC_1.c ****         else
1900:Generated_Source\PSoC4/ADC_1.c ****         {
1901:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_OPAMP_TRIM_POS_LIMIT - 1uL;
1902:Generated_Source\PSoC4/ADC_1.c ****         }
1903:Generated_Source\PSoC4/ADC_1.c **** 
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 59


1904:Generated_Source\PSoC4/ADC_1.c ****         return trim;
1905:Generated_Source\PSoC4/ADC_1.c ****     }
1906:Generated_Source\PSoC4/ADC_1.c **** 
1907:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1908:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_IncAgndTrim
1909:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1910:Generated_Source\PSoC4/ADC_1.c ****     *
1911:Generated_Source\PSoC4/ADC_1.c ****     * Increments the Agnd trim code by one. Note that Agnd trim code is
1912:Generated_Source\PSoC4/ADC_1.c ****     * a 5-bit sign-magnitude value.
1913:Generated_Source\PSoC4/ADC_1.c ****     *
1914:Generated_Source\PSoC4/ADC_1.c ****     * Skips AGND_TRIM_NEG_BASE because it is the same as POS_BASE.
1915:Generated_Source\PSoC4/ADC_1.c ****     *
1916:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1917:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_IncAgndTrim(uint32 trim)
1918:Generated_Source\PSoC4/ADC_1.c ****     {
1919:Generated_Source\PSoC4/ADC_1.c **** 
1920:Generated_Source\PSoC4/ADC_1.c ****         if (trim < (ADC_1_AGND_TRIM_POS_LIMIT - 1uL))
1921:Generated_Source\PSoC4/ADC_1.c ****         {
1922:Generated_Source\PSoC4/ADC_1.c ****             trim = trim + 1uL;
1923:Generated_Source\PSoC4/ADC_1.c ****         }
1924:Generated_Source\PSoC4/ADC_1.c ****         else if ((ADC_1_AGND_TRIM_POS_LIMIT - 1uL) == trim)
1925:Generated_Source\PSoC4/ADC_1.c ****         {
1926:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_AGND_TRIM_NEG_LIMIT;
1927:Generated_Source\PSoC4/ADC_1.c ****         }
1928:Generated_Source\PSoC4/ADC_1.c ****         else if (trim <= (ADC_1_AGND_TRIM_NEG_BASE + 1uL))
1929:Generated_Source\PSoC4/ADC_1.c ****         {
1930:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_AGND_TRIM_POS_BASE;
1931:Generated_Source\PSoC4/ADC_1.c ****         }
1932:Generated_Source\PSoC4/ADC_1.c ****         else
1933:Generated_Source\PSoC4/ADC_1.c ****         {
1934:Generated_Source\PSoC4/ADC_1.c ****             trim = trim - 1uL;
1935:Generated_Source\PSoC4/ADC_1.c ****         }
1936:Generated_Source\PSoC4/ADC_1.c **** 
1937:Generated_Source\PSoC4/ADC_1.c ****         return trim;
1938:Generated_Source\PSoC4/ADC_1.c ****     }
1939:Generated_Source\PSoC4/ADC_1.c **** 
1940:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1941:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_DecAgndTrim
1942:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1943:Generated_Source\PSoC4/ADC_1.c ****     *
1944:Generated_Source\PSoC4/ADC_1.c ****     * Decrements the Agnd trim code by one. Note that Agnd trim code is
1945:Generated_Source\PSoC4/ADC_1.c ****     * a 5-bit sign-magnitude value.
1946:Generated_Source\PSoC4/ADC_1.c ****     *
1947:Generated_Source\PSoC4/ADC_1.c ****     * Skips AGND_TRIM_NEG_BASE because it is the same as POS_BASE.
1948:Generated_Source\PSoC4/ADC_1.c ****     *
1949:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1950:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_DecAgndTrim(uint32 trim)
1951:Generated_Source\PSoC4/ADC_1.c ****     {
1952:Generated_Source\PSoC4/ADC_1.c **** 
1953:Generated_Source\PSoC4/ADC_1.c ****         if (trim == ADC_1_AGND_TRIM_POS_BASE)
1954:Generated_Source\PSoC4/ADC_1.c ****         {
1955:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_AGND_TRIM_NEG_BASE + 1uL;
1956:Generated_Source\PSoC4/ADC_1.c ****         }
1957:Generated_Source\PSoC4/ADC_1.c ****         else if (trim < ADC_1_AGND_TRIM_POS_LIMIT)
1958:Generated_Source\PSoC4/ADC_1.c ****         {
1959:Generated_Source\PSoC4/ADC_1.c ****             trim = trim - 1uL;
1960:Generated_Source\PSoC4/ADC_1.c ****         }
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 60


1961:Generated_Source\PSoC4/ADC_1.c ****         else if (trim < ADC_1_AGND_TRIM_NEG_LIMIT)
1962:Generated_Source\PSoC4/ADC_1.c ****         {
1963:Generated_Source\PSoC4/ADC_1.c ****             trim = trim + 1uL;
1964:Generated_Source\PSoC4/ADC_1.c ****         }
1965:Generated_Source\PSoC4/ADC_1.c ****         else
1966:Generated_Source\PSoC4/ADC_1.c ****         {
1967:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_AGND_TRIM_POS_LIMIT - 1uL;
1968:Generated_Source\PSoC4/ADC_1.c ****         }
1969:Generated_Source\PSoC4/ADC_1.c **** 
1970:Generated_Source\PSoC4/ADC_1.c ****         return trim;
1971:Generated_Source\PSoC4/ADC_1.c ****     }
1972:Generated_Source\PSoC4/ADC_1.c **** 
1973:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1974:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_filterInit
1975:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1976:Generated_Source\PSoC4/ADC_1.c ****     *
1977:Generated_Source\PSoC4/ADC_1.c ****     * Initializes the UAB halves and the CTB buffer between the AGND and the SAR.
1978:Generated_Source\PSoC4/ADC_1.c ****     *
1979:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1980:Generated_Source\PSoC4/ADC_1.c ****     void ADC_1_filterInit(uint32 configNum)
1981:Generated_Source\PSoC4/ADC_1.c ****     {
1982:Generated_Source\PSoC4/ADC_1.c ****         /* Configure the common filter settings if any configuration filters */
1983:Generated_Source\PSoC4/ADC_1.c ****         switch (configNum)
1984:Generated_Source\PSoC4/ADC_1.c ****         {
1985:Generated_Source\PSoC4/ADC_1.c ****             #if (0u != ADC_1_CFG0_FILTER_PRESENT)
1986:Generated_Source\PSoC4/ADC_1.c ****             case 0u:
1987:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_A_Init(&ADC_1_CFG0_UABH_A_FILTER_config);
1988:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_B_Init(&ADC_1_CFG0_UABH_B_FILTER_config);
1989:Generated_Source\PSoC4/ADC_1.c ****             break;
1990:Generated_Source\PSoC4/ADC_1.c ****             #endif
1991:Generated_Source\PSoC4/ADC_1.c ****             #if (0u != ADC_1_CFG1_FILTER_PRESENT)
1992:Generated_Source\PSoC4/ADC_1.c ****             case 1u:
1993:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_A_Init(&ADC_1_CFG1_UABH_A_FILTER_config);
1994:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_B_Init(&ADC_1_CFG1_UABH_B_FILTER_config);
1995:Generated_Source\PSoC4/ADC_1.c ****             break;
1996:Generated_Source\PSoC4/ADC_1.c ****             #endif
1997:Generated_Source\PSoC4/ADC_1.c ****             #if (0u != ADC_1_CFG2_FILTER_PRESENT)
1998:Generated_Source\PSoC4/ADC_1.c ****             case 2u:
1999:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_A_Init(&ADC_1_CFG2_UABH_A_FILTER_config);
2000:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_B_Init(&ADC_1_CFG2_UABH_B_FILTER_config);
2001:Generated_Source\PSoC4/ADC_1.c ****             break;
2002:Generated_Source\PSoC4/ADC_1.c ****             #endif
2003:Generated_Source\PSoC4/ADC_1.c ****             #if (0u != ADC_1_CFG3_FILTER_PRESENT)
2004:Generated_Source\PSoC4/ADC_1.c ****             case 3u:
2005:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_A_Init(&ADC_1_CFG3_UABH_A_FILTER_config);
2006:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_B_Init(&ADC_1_CFG3_UABH_B_FILTER_config);
2007:Generated_Source\PSoC4/ADC_1.c ****             break;
2008:Generated_Source\PSoC4/ADC_1.c ****             #endif
2009:Generated_Source\PSoC4/ADC_1.c ****             default:
2010:Generated_Source\PSoC4/ADC_1.c ****             break;
2011:Generated_Source\PSoC4/ADC_1.c ****         }
2012:Generated_Source\PSoC4/ADC_1.c **** 
2013:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_FILTERAGND2SAR_BUFFER_Init();
2014:Generated_Source\PSoC4/ADC_1.c ****     }
2015:Generated_Source\PSoC4/ADC_1.c **** #endif /* ADC_1_ANY_CONFIG_USES_FILTER != 0u */
2016:Generated_Source\PSoC4/ADC_1.c **** 
2017:Generated_Source\PSoC4/ADC_1.c **** 
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 61


2018:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
2019:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_Init
2020:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
2021:Generated_Source\PSoC4/ADC_1.c **** *
2022:Generated_Source\PSoC4/ADC_1.c **** * \brief Initialize the component according to parameters defined in the
2023:Generated_Source\PSoC4/ADC_1.c **** * customizer.
2024:Generated_Source\PSoC4/ADC_1.c **** *
2025:Generated_Source\PSoC4/ADC_1.c **** * \param None
2026:Generated_Source\PSoC4/ADC_1.c **** *
2027:Generated_Source\PSoC4/ADC_1.c **** * \return None
2028:Generated_Source\PSoC4/ADC_1.c **** *
2029:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
2030:Generated_Source\PSoC4/ADC_1.c **** *
2031:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
2032:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_Init(void)
2033:Generated_Source\PSoC4/ADC_1.c **** {
 1338              		.loc 1 2033 0
 1339              		.cfi_startproc
 1340              		@ args = 0, pretend = 0, frame = 0
 1341              		@ frame_needed = 0, uses_anonymous_args = 0
 1342 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1343              		.cfi_def_cfa_offset 20
 1344              		.cfi_offset 4, -20
 1345              		.cfi_offset 5, -16
 1346              		.cfi_offset 6, -12
 1347              		.cfi_offset 7, -8
 1348              		.cfi_offset 14, -4
 1349 0002 4746     		mov	r7, r8
 1350 0004 80B4     		push	{r7}
 1351              		.cfi_def_cfa_offset 24
 1352              		.cfi_offset 8, -24
 1353              	.LVL117:
2034:Generated_Source\PSoC4/ADC_1.c ****     uint32 chNum = 0ul;
2035:Generated_Source\PSoC4/ADC_1.c ****     uint32 configNum = 0u;
2036:Generated_Source\PSoC4/ADC_1.c ****     int32 counts;
2037:Generated_Source\PSoC4/ADC_1.c **** 
2038:Generated_Source\PSoC4/ADC_1.c ****     if(0u == ADC_1_initVar)
 1354              		.loc 1 2038 0
 1355 0006 214B     		ldr	r3, .L108
 1356 0008 1B79     		ldrb	r3, [r3, #4]
 1357 000a 002B     		cmp	r3, #0
 1358 000c 20D0     		beq	.L107
 1359 000e 39E0     		b	.L102
 1360              	.LVL118:
 1361              	.L106:
2039:Generated_Source\PSoC4/ADC_1.c ****     {
2040:Generated_Source\PSoC4/ADC_1.c ****         /* Set offset and countsPer10Volt for all channels */
2041:Generated_Source\PSoC4/ADC_1.c ****         for(chNum = 0ul; chNum < ADC_1_TOTAL_CHANNELS_NUM; chNum++)
2042:Generated_Source\PSoC4/ADC_1.c ****         {
2043:Generated_Source\PSoC4/ADC_1.c ****             if((ADC_1_channelsConfig[chNum] & ADC_1_SAR_CHAN_CONFIG_RESOLUTION_MSK) != 0u)
2044:Generated_Source\PSoC4/ADC_1.c ****             {
2045:Generated_Source\PSoC4/ADC_1.c ****                 if((ADC_1_allConfigs[configNum].sampleCtrl
2046:Generated_Source\PSoC4/ADC_1.c ****                     & ADC_1_SAR_SAMPLE_CTRL_SUB_RESOLUTION_MSK)
2047:Generated_Source\PSoC4/ADC_1.c ****                     == ADC_1_SUB_RESOLUTION_10B)
2048:Generated_Source\PSoC4/ADC_1.c ****                 {
2049:Generated_Source\PSoC4/ADC_1.c ****                     counts = (int32) ADC_1_SAR_WRK_MAX_10BIT;
2050:Generated_Source\PSoC4/ADC_1.c ****                 }
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 62


2051:Generated_Source\PSoC4/ADC_1.c ****                 else
2052:Generated_Source\PSoC4/ADC_1.c ****                 {
2053:Generated_Source\PSoC4/ADC_1.c ****                     counts = (int32) ADC_1_SAR_WRK_MAX_8BIT;
2054:Generated_Source\PSoC4/ADC_1.c ****                 }
2055:Generated_Source\PSoC4/ADC_1.c ****             }
2056:Generated_Source\PSoC4/ADC_1.c ****             else
2057:Generated_Source\PSoC4/ADC_1.c ****             {
2058:Generated_Source\PSoC4/ADC_1.c ****                counts = (int32)ADC_1_SAR_WRK_MAX_12BIT;
2059:Generated_Source\PSoC4/ADC_1.c ****             }
2060:Generated_Source\PSoC4/ADC_1.c **** 
2061:Generated_Source\PSoC4/ADC_1.c ****             /* Single Ended Channel */
2062:Generated_Source\PSoC4/ADC_1.c ****             if((ADC_1_channelsConfig[chNum] & ADC_1_SAR_CHAN_CONFIG_DIFFERENTIAL_EN_MSK) == 0u)
2063:Generated_Source\PSoC4/ADC_1.c ****             {
2064:Generated_Source\PSoC4/ADC_1.c ****                 if(((ADC_1_allConfigs[configNum].sampleCtrl
2065:Generated_Source\PSoC4/ADC_1.c ****                     & ADC_1_SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_MSK)
2066:Generated_Source\PSoC4/ADC_1.c ****                     == ADC_1_SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_MSK) &&
2067:Generated_Source\PSoC4/ADC_1.c ****                     ((ADC_1_allConfigs[configNum].ctrl & ADC_1_SAR_CTRL_NEG_SEL_MSK)
2068:Generated_Source\PSoC4/ADC_1.c ****                     == ADC_1_NEG_VREF_SHIFTED))
2069:Generated_Source\PSoC4/ADC_1.c ****                 {
2070:Generated_Source\PSoC4/ADC_1.c ****                     /* Set offset to the minus half scale to convert results to unsigned format */
2071:Generated_Source\PSoC4/ADC_1.c ****                     ADC_1_offset[chNum] = (int16)(counts / -2);
2072:Generated_Source\PSoC4/ADC_1.c ****                 }
2073:Generated_Source\PSoC4/ADC_1.c ****                 else
2074:Generated_Source\PSoC4/ADC_1.c ****                 {
2075:Generated_Source\PSoC4/ADC_1.c ****                     ADC_1_offset[chNum] = 0;
2076:Generated_Source\PSoC4/ADC_1.c ****                 }
2077:Generated_Source\PSoC4/ADC_1.c **** 
2078:Generated_Source\PSoC4/ADC_1.c ****             }
2079:Generated_Source\PSoC4/ADC_1.c ****             else    /* Differential channel */
2080:Generated_Source\PSoC4/ADC_1.c ****             {
2081:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_offset[chNum] = 0;
 1362              		.loc 1 2081 0
 1363 0010 6300     		lsls	r3, r4, #1
 1364 0012 0021     		movs	r1, #0
 1365 0014 1E4A     		ldr	r2, .L108+4
 1366 0016 9952     		strh	r1, [r3, r2]
2082:Generated_Source\PSoC4/ADC_1.c ****             }
2083:Generated_Source\PSoC4/ADC_1.c **** 
2084:Generated_Source\PSoC4/ADC_1.c ****             /* Calculate gain in counts per 10 volts with rounding */
2085:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_countsPer10Volt[chNum] = (int16)(((counts * ADC_1_10MV_COUNTS) \
2086:Generated_Source\PSoC4/ADC_1.c ****                             + ADC_1_allConfigs[configNum].vrefMvValue) \
 1367              		.loc 1 2086 0
 1368 0018 1E4B     		ldr	r3, .L108+8
 1369 001a 9846     		mov	r8, r3
 1370 001c FE00     		lsls	r6, r7, #3
 1371 001e F31B     		subs	r3, r6, r7
 1372 0020 DD00     		lsls	r5, r3, #3
 1373 0022 4544     		add	r5, r5, r8
 1374 0024 E96A     		ldr	r1, [r5, #44]
 1375 0026 1C4B     		ldr	r3, .L108+12
 1376 0028 C818     		adds	r0, r1, r3
2087:Generated_Source\PSoC4/ADC_1.c ****                             / (ADC_1_allConfigs[configNum].vrefMvValue * 2));
 1377              		.loc 1 2087 0
 1378 002a 4900     		lsls	r1, r1, #1
 1379 002c FFF7FEFF 		bl	__aeabi_idiv
 1380              	.LVL119:
2085:Generated_Source\PSoC4/ADC_1.c ****                             + ADC_1_allConfigs[configNum].vrefMvValue) \
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 63


 1381              		.loc 1 2085 0
 1382 0030 00B2     		sxth	r0, r0
 1383 0032 A300     		lsls	r3, r4, #2
 1384 0034 194A     		ldr	r2, .L108+16
 1385 0036 9850     		str	r0, [r3, r2]
2088:Generated_Source\PSoC4/ADC_1.c **** 
2089:Generated_Source\PSoC4/ADC_1.c ****             /* Increment configuration number after rolling over to the next configuration*/
2090:Generated_Source\PSoC4/ADC_1.c ****             if((ADC_1_allConfigs[configNum].channelBase
 1386              		.loc 1 2090 0
 1387 0038 F61B     		subs	r6, r6, r7
 1388 003a F300     		lsls	r3, r6, #3
 1389 003c 4246     		mov	r2, r8
 1390 003e 9A58     		ldr	r2, [r3, r2]
2091:Generated_Source\PSoC4/ADC_1.c ****                 + (ADC_1_allConfigs[configNum].numChannels - 1uL)) == chNum)
 1391              		.loc 1 2091 0
 1392 0040 6B68     		ldr	r3, [r5, #4]
 1393 0042 D318     		adds	r3, r2, r3
 1394 0044 013B     		subs	r3, r3, #1
2090:Generated_Source\PSoC4/ADC_1.c ****                 + (ADC_1_allConfigs[configNum].numChannels - 1uL)) == chNum)
 1395              		.loc 1 2090 0
 1396 0046 9C42     		cmp	r4, r3
 1397 0048 00D1     		bne	.L105
2092:Generated_Source\PSoC4/ADC_1.c ****             {
2093:Generated_Source\PSoC4/ADC_1.c ****                 configNum++;
 1398              		.loc 1 2093 0
 1399 004a 0137     		adds	r7, r7, #1
 1400              	.LVL120:
 1401              	.L105:
2041:Generated_Source\PSoC4/ADC_1.c ****         {
 1402              		.loc 1 2041 0 discriminator 2
 1403 004c 0134     		adds	r4, r4, #1
 1404              	.LVL121:
 1405 004e 01E0     		b	.L103
 1406              	.LVL122:
 1407              	.L107:
 1408 0050 0027     		movs	r7, #0
 1409 0052 0024     		movs	r4, #0
 1410              	.LVL123:
 1411              	.L103:
2041:Generated_Source\PSoC4/ADC_1.c ****         {
 1412              		.loc 1 2041 0 is_stmt 0 discriminator 1
 1413 0054 002C     		cmp	r4, #0
 1414 0056 DBD0     		beq	.L106
2094:Generated_Source\PSoC4/ADC_1.c ****             }
2095:Generated_Source\PSoC4/ADC_1.c ****         } /* for(chNum = 0ul; chNum < ADC_1_TOTAL_CHANNELS_NUM; chNum++) */
2096:Generated_Source\PSoC4/ADC_1.c **** 
2097:Generated_Source\PSoC4/ADC_1.c ****         /* Start and set interrupt vector */
2098:Generated_Source\PSoC4/ADC_1.c ****         CyIntSetPriority(ADC_1_INTC_NUMBER, ADC_1_INTC_PRIOR_NUMBER);
 1415              		.loc 1 2098 0 is_stmt 1
 1416 0058 0321     		movs	r1, #3
 1417 005a 0F20     		movs	r0, #15
 1418 005c FFF7FEFF 		bl	CyIntSetPriority
 1419              	.LVL124:
2099:Generated_Source\PSoC4/ADC_1.c ****         (void)CyIntSetVector(ADC_1_INTC_NUMBER, &ADC_1_ISR);
 1420              		.loc 1 2099 0
 1421 0060 0F49     		ldr	r1, .L108+20
 1422 0062 0F20     		movs	r0, #15
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 64


 1423 0064 FFF7FEFF 		bl	CyIntSetVector
 1424              	.LVL125:
2100:Generated_Source\PSoC4/ADC_1.c **** 
2101:Generated_Source\PSoC4/ADC_1.c ****         /* Initialize configuration zero if SelectConfig has not been called */
2102:Generated_Source\PSoC4/ADC_1.c ****         if(0u == ADC_1_selected)
 1425              		.loc 1 2102 0
 1426 0068 084B     		ldr	r3, .L108
 1427 006a 5B79     		ldrb	r3, [r3, #5]
 1428 006c 002B     		cmp	r3, #0
 1429 006e 09D1     		bne	.L102
2103:Generated_Source\PSoC4/ADC_1.c ****         {
2104:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_selected = 1u;
 1430              		.loc 1 2104 0
 1431 0070 0122     		movs	r2, #1
 1432 0072 064B     		ldr	r3, .L108
 1433 0074 5A71     		strb	r2, [r3, #5]
 1434              	.LVL126:
2105:Generated_Source\PSoC4/ADC_1.c ****             configNum = 0u;
2106:Generated_Source\PSoC4/ADC_1.c ****             /* Change Vref selection if is was routed by Creator. Break. */
2107:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_VREF_ROUTED)
2108:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_vrefAMux_DisconnectAll();
2109:Generated_Source\PSoC4/ADC_1.c ****             #endif
2110:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_InitConfig(&ADC_1_allConfigs[configNum]);
 1435              		.loc 1 2110 0
 1436 0076 074C     		ldr	r4, .L108+8
 1437              	.LVL127:
 1438 0078 2000     		movs	r0, r4
 1439 007a FFF7FEFF 		bl	ADC_1_InitConfig
 1440              	.LVL128:
2111:Generated_Source\PSoC4/ADC_1.c ****             /* Change Vref selection if is was routed by Creator. Make. */
2112:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_VREF_ROUTED)
2113:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_vrefAMux_Select((uint8)configNum);
2114:Generated_Source\PSoC4/ADC_1.c ****             #endif
2115:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_SAR_CHAN_EN_REG = ADC_1_allConfigs[configNum].chanEn;
 1441              		.loc 1 2115 0
 1442 007e 226A     		ldr	r2, [r4, #32]
 1443 0080 084B     		ldr	r3, .L108+24
 1444 0082 1A60     		str	r2, [r3]
 1445              	.LVL129:
 1446              	.L102:
2116:Generated_Source\PSoC4/ADC_1.c ****             #if(0u != ADC_1_ANY_CONFIG_USES_FILTER)
2117:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_filterVinMux_Select((uint8)configNum);
2118:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_filterInit(configNum);
2119:Generated_Source\PSoC4/ADC_1.c ****             #endif
2120:Generated_Source\PSoC4/ADC_1.c ****         }
2121:Generated_Source\PSoC4/ADC_1.c ****     }
2122:Generated_Source\PSoC4/ADC_1.c ****     return;
2123:Generated_Source\PSoC4/ADC_1.c **** }
 1447              		.loc 1 2123 0
 1448              		@ sp needed
 1449 0084 04BC     		pop	{r2}
 1450 0086 9046     		mov	r8, r2
 1451 0088 F0BD     		pop	{r4, r5, r6, r7, pc}
 1452              	.L109:
 1453 008a C046     		.align	2
 1454              	.L108:
 1455 008c 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 65


 1456 0090 00000000 		.word	ADC_1_offset
 1457 0094 00000000 		.word	ADC_1_allConfigs
 1458 0098 00007102 		.word	40960000
 1459 009c 00000000 		.word	ADC_1_countsPer10Volt
 1460 00a0 00000000 		.word	ADC_1_ISR
 1461 00a4 20003A40 		.word	1077542944
 1462              		.cfi_endproc
 1463              	.LFE26:
 1464              		.size	ADC_1_Init, .-ADC_1_Init
 1465              		.section	.text.ADC_1_Enable,"ax",%progbits
 1466              		.align	2
 1467              		.global	ADC_1_Enable
 1468              		.code	16
 1469              		.thumb_func
 1470              		.type	ADC_1_Enable, %function
 1471              	ADC_1_Enable:
 1472              	.LFB27:
2124:Generated_Source\PSoC4/ADC_1.c **** 
2125:Generated_Source\PSoC4/ADC_1.c **** 
2126:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
2127:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_Enable
2128:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
2129:Generated_Source\PSoC4/ADC_1.c **** *
2130:Generated_Source\PSoC4/ADC_1.c **** * \brief Enables the component.
2131:Generated_Source\PSoC4/ADC_1.c **** *
2132:Generated_Source\PSoC4/ADC_1.c **** * \param None
2133:Generated_Source\PSoC4/ADC_1.c **** *
2134:Generated_Source\PSoC4/ADC_1.c **** * \return None
2135:Generated_Source\PSoC4/ADC_1.c **** *
2136:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect
2137:Generated_Source\PSoC4/ADC_1.c **** *  None
2138:Generated_Source\PSoC4/ADC_1.c **** *
2139:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
2140:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_Enable(void)
2141:Generated_Source\PSoC4/ADC_1.c **** {
 1473              		.loc 1 2141 0
 1474              		.cfi_startproc
 1475              		@ args = 0, pretend = 0, frame = 0
 1476              		@ frame_needed = 0, uses_anonymous_args = 0
 1477 0000 10B5     		push	{r4, lr}
 1478              		.cfi_def_cfa_offset 8
 1479              		.cfi_offset 4, -8
 1480              		.cfi_offset 14, -4
2142:Generated_Source\PSoC4/ADC_1.c **** 
2143:Generated_Source\PSoC4/ADC_1.c ****     #if(0u != ADC_1_ANY_CONFIG_USES_FILTER)
2144:Generated_Source\PSoC4/ADC_1.c ****         if((ADC_1_allConfigs[ADC_1_currentConfig].miscConfig
2145:Generated_Source\PSoC4/ADC_1.c ****             & ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
2146:Generated_Source\PSoC4/ADC_1.c ****             == ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
2147:Generated_Source\PSoC4/ADC_1.c ****         {
2148:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_FILTERAGND2SAR_BUFFER_Enable();
2149:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_Enable();
2150:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_B_Enable();
2151:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_B_Run(1u);
2152:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_Run(1u);
2153:Generated_Source\PSoC4/ADC_1.c ****         }
2154:Generated_Source\PSoC4/ADC_1.c ****     #endif /* ADC_1_ANY_CONFIG_USES_FILTER != 0u */
2155:Generated_Source\PSoC4/ADC_1.c **** 
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 66


2156:Generated_Source\PSoC4/ADC_1.c ****     if (0u == (ADC_1_SAR_CTRL_REG & ADC_1_SAR_CTRL_ENABLED_MSK))
 1481              		.loc 1 2156 0
 1482 0002 0D4B     		ldr	r3, .L113
 1483 0004 1B68     		ldr	r3, [r3]
 1484 0006 002B     		cmp	r3, #0
 1485 0008 0CDB     		blt	.L111
 1486              	.L112:
2157:Generated_Source\PSoC4/ADC_1.c ****     {
2158:Generated_Source\PSoC4/ADC_1.c ****         while (0u != (ADC_1_SAR_STATUS_REG & ADC_1_BUSY_MSK))
 1487              		.loc 1 2158 0 discriminator 1
 1488 000a 0C4B     		ldr	r3, .L113+4
 1489 000c 1B68     		ldr	r3, [r3]
 1490 000e 002B     		cmp	r3, #0
 1491 0010 FBDB     		blt	.L112
2159:Generated_Source\PSoC4/ADC_1.c ****         {
2160:Generated_Source\PSoC4/ADC_1.c ****             /* wait for SAR to go idle to avoid deadlock */
2161:Generated_Source\PSoC4/ADC_1.c ****         }
2162:Generated_Source\PSoC4/ADC_1.c **** 
2163:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_CTRL_REG |= ADC_1_SAR_CTRL_ENABLED_MSK;
 1492              		.loc 1 2163 0
 1493 0012 094A     		ldr	r2, .L113
 1494 0014 1368     		ldr	r3, [r2]
 1495 0016 8021     		movs	r1, #128
 1496 0018 0906     		lsls	r1, r1, #24
 1497 001a 0B43     		orrs	r3, r1
 1498 001c 1360     		str	r3, [r2]
2164:Generated_Source\PSoC4/ADC_1.c **** 
2165:Generated_Source\PSoC4/ADC_1.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
2166:Generated_Source\PSoC4/ADC_1.c ****         CyDelayUs(ADC_1_10US_DELAY);
 1499              		.loc 1 2166 0
 1500 001e 0A20     		movs	r0, #10
 1501 0020 FFF7FEFF 		bl	CyDelayUs
 1502              	.LVL130:
 1503              	.L111:
2167:Generated_Source\PSoC4/ADC_1.c ****     }
2168:Generated_Source\PSoC4/ADC_1.c **** 
2169:Generated_Source\PSoC4/ADC_1.c ****     /* Must set the DFT_CTRL register after enabling the SAR as it is a non-retention register. */
2170:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SetDFTControl(&ADC_1_allConfigs[ADC_1_currentConfig]);
 1504              		.loc 1 2170 0
 1505 0024 064B     		ldr	r3, .L113+8
 1506 0026 1A68     		ldr	r2, [r3]
 1507 0028 D300     		lsls	r3, r2, #3
 1508 002a 9B1A     		subs	r3, r3, r2
 1509 002c D800     		lsls	r0, r3, #3
 1510 002e 054B     		ldr	r3, .L113+12
 1511 0030 C018     		adds	r0, r0, r3
 1512 0032 FFF7FEFF 		bl	ADC_1_SetDFTControl
 1513              	.LVL131:
2171:Generated_Source\PSoC4/ADC_1.c **** 
2172:Generated_Source\PSoC4/ADC_1.c ****     return;
2173:Generated_Source\PSoC4/ADC_1.c **** }
 1514              		.loc 1 2173 0
 1515              		@ sp needed
 1516 0036 10BD     		pop	{r4, pc}
 1517              	.L114:
 1518              		.align	2
 1519              	.L113:
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 67


 1520 0038 00003A40 		.word	1077542912
 1521 003c A0023A40 		.word	1077543584
 1522 0040 00000000 		.word	.LANCHOR0
 1523 0044 00000000 		.word	ADC_1_allConfigs
 1524              		.cfi_endproc
 1525              	.LFE27:
 1526              		.size	ADC_1_Enable, .-ADC_1_Enable
 1527              		.section	.text.ADC_1_Start,"ax",%progbits
 1528              		.align	2
 1529              		.global	ADC_1_Start
 1530              		.code	16
 1531              		.thumb_func
 1532              		.type	ADC_1_Start, %function
 1533              	ADC_1_Start:
 1534              	.LFB1:
 556:Generated_Source\PSoC4/ADC_1.c ****     if (ADC_1_INIT_VAR_INIT_FLAG != (ADC_1_INIT_VAR_INIT_FLAG & ADC_1_initVar))
 1535              		.loc 1 556 0
 1536              		.cfi_startproc
 1537              		@ args = 0, pretend = 0, frame = 0
 1538              		@ frame_needed = 0, uses_anonymous_args = 0
 1539 0000 10B5     		push	{r4, lr}
 1540              		.cfi_def_cfa_offset 8
 1541              		.cfi_offset 4, -8
 1542              		.cfi_offset 14, -4
 557:Generated_Source\PSoC4/ADC_1.c ****     {
 1543              		.loc 1 557 0
 1544 0002 074B     		ldr	r3, .L117
 1545 0004 1B79     		ldrb	r3, [r3, #4]
 1546 0006 DB07     		lsls	r3, r3, #31
 1547 0008 06D4     		bmi	.L116
 559:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_initVar |= ADC_1_INIT_VAR_INIT_FLAG;
 1548              		.loc 1 559 0
 1549 000a FFF7FEFF 		bl	ADC_1_Init
 1550              	.LVL132:
 560:Generated_Source\PSoC4/ADC_1.c ****     }
 1551              		.loc 1 560 0
 1552 000e 044A     		ldr	r2, .L117
 1553 0010 1179     		ldrb	r1, [r2, #4]
 1554 0012 0123     		movs	r3, #1
 1555 0014 0B43     		orrs	r3, r1
 1556 0016 1371     		strb	r3, [r2, #4]
 1557              	.L116:
 563:Generated_Source\PSoC4/ADC_1.c **** 
 1558              		.loc 1 563 0
 1559 0018 FFF7FEFF 		bl	ADC_1_Enable
 1560              	.LVL133:
 566:Generated_Source\PSoC4/ADC_1.c **** 
 1561              		.loc 1 566 0
 1562              		@ sp needed
 1563 001c 10BD     		pop	{r4, pc}
 1564              	.L118:
 1565 001e C046     		.align	2
 1566              	.L117:
 1567 0020 00000000 		.word	.LANCHOR0
 1568              		.cfi_endproc
 1569              	.LFE1:
 1570              		.size	ADC_1_Start, .-ADC_1_Start
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 68


 1571              		.section	.text.ADC_1_StartEx,"ax",%progbits
 1572              		.align	2
 1573              		.global	ADC_1_StartEx
 1574              		.code	16
 1575              		.thumb_func
 1576              		.type	ADC_1_StartEx, %function
 1577              	ADC_1_StartEx:
 1578              	.LFB2:
 585:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_Start();
 1579              		.loc 1 585 0
 1580              		.cfi_startproc
 1581              		@ args = 0, pretend = 0, frame = 0
 1582              		@ frame_needed = 0, uses_anonymous_args = 0
 1583              	.LVL134:
 1584 0000 10B5     		push	{r4, lr}
 1585              		.cfi_def_cfa_offset 8
 1586              		.cfi_offset 4, -8
 1587              		.cfi_offset 14, -4
 1588 0002 0400     		movs	r4, r0
 586:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_IRQ_StartEx(address);
 1589              		.loc 1 586 0
 1590 0004 FFF7FEFF 		bl	ADC_1_Start
 1591              	.LVL135:
 587:Generated_Source\PSoC4/ADC_1.c ****     return;
 1592              		.loc 1 587 0
 1593 0008 2000     		movs	r0, r4
 1594 000a FFF7FEFF 		bl	ADC_1_IRQ_StartEx
 1595              	.LVL136:
 589:Generated_Source\PSoC4/ADC_1.c **** 
 1596              		.loc 1 589 0
 1597              		@ sp needed
 1598              	.LVL137:
 1599 000e 10BD     		pop	{r4, pc}
 1600              		.cfi_endproc
 1601              	.LFE2:
 1602              		.size	ADC_1_StartEx, .-ADC_1_StartEx
 1603              		.section	.text.ADC_1_SelectConfig,"ax",%progbits
 1604              		.align	2
 1605              		.global	ADC_1_SelectConfig
 1606              		.code	16
 1607              		.thumb_func
 1608              		.type	ADC_1_SelectConfig, %function
 1609              	ADC_1_SelectConfig:
 1610              	.LFB6:
 772:Generated_Source\PSoC4/ADC_1.c ****     /* Check whether the configuration number is valid or not */
 1611              		.loc 1 772 0
 1612              		.cfi_startproc
 1613              		@ args = 0, pretend = 0, frame = 0
 1614              		@ frame_needed = 0, uses_anonymous_args = 0
 1615              	.LVL138:
 1616 0000 70B5     		push	{r4, r5, r6, lr}
 1617              		.cfi_def_cfa_offset 16
 1618              		.cfi_offset 4, -16
 1619              		.cfi_offset 5, -12
 1620              		.cfi_offset 6, -8
 1621              		.cfi_offset 14, -4
 1622 0002 0400     		movs	r4, r0
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 69


 1623 0004 0E00     		movs	r6, r1
 774:Generated_Source\PSoC4/ADC_1.c ****     {
 1624              		.loc 1 774 0
 1625 0006 0028     		cmp	r0, #0
 1626 0008 27D1     		bne	.L120
 777:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_selected = 1u;
 1627              		.loc 1 777 0
 1628 000a FFF7FEFF 		bl	ADC_1_Stop
 1629              	.LVL139:
 778:Generated_Source\PSoC4/ADC_1.c **** 
 1630              		.loc 1 778 0
 1631 000e 134B     		ldr	r3, .L123
 1632 0010 0122     		movs	r2, #1
 1633 0012 5A71     		strb	r2, [r3, #5]
 780:Generated_Source\PSoC4/ADC_1.c ****         {
 1634              		.loc 1 780 0
 1635 0014 1B79     		ldrb	r3, [r3, #4]
 1636 0016 002B     		cmp	r3, #0
 1637 0018 06D1     		bne	.L122
 782:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_initVar |= ADC_1_INIT_VAR_INIT_FLAG;
 1638              		.loc 1 782 0
 1639 001a FFF7FEFF 		bl	ADC_1_Init
 1640              	.LVL140:
 783:Generated_Source\PSoC4/ADC_1.c ****         }
 1641              		.loc 1 783 0
 1642 001e 0F4A     		ldr	r2, .L123
 1643 0020 1179     		ldrb	r1, [r2, #4]
 1644 0022 0123     		movs	r3, #1
 1645 0024 0B43     		orrs	r3, r1
 1646 0026 1371     		strb	r3, [r2, #4]
 1647              	.L122:
 788:Generated_Source\PSoC4/ADC_1.c ****         #if (ADC_1_VREF_ROUTED)
 1648              		.loc 1 788 0
 1649 0028 E300     		lsls	r3, r4, #3
 1650 002a 1B1B     		subs	r3, r3, r4
 1651 002c DD00     		lsls	r5, r3, #3
 1652 002e 0C4B     		ldr	r3, .L123+4
 1653 0030 ED18     		adds	r5, r5, r3
 1654 0032 2800     		movs	r0, r5
 1655 0034 FFF7FEFF 		bl	ADC_1_InitConfig
 1656              	.LVL141:
 796:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_RANGE_INTR_MASK_REG = ADC_1_allConfigs[config].rangeIntMask;
 1657              		.loc 1 796 0
 1658 0038 0A4B     		ldr	r3, .L123+8
 1659 003a 2A6A     		ldr	r2, [r5, #32]
 1660 003c 1A60     		str	r2, [r3]
 797:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_SATURATE_INTR_MASK_REG = ADC_1_allConfigs[config].satIntMask;
 1661              		.loc 1 797 0
 1662 003e 0A4B     		ldr	r3, .L123+12
 1663 0040 6A6A     		ldr	r2, [r5, #36]
 1664 0042 1A60     		str	r2, [r3]
 798:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_currentConfig = config;
 1665              		.loc 1 798 0
 1666 0044 AA6A     		ldr	r2, [r5, #40]
 1667 0046 094B     		ldr	r3, .L123+16
 1668 0048 1A60     		str	r2, [r3]
 799:Generated_Source\PSoC4/ADC_1.c **** 
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 70


 1669              		.loc 1 799 0
 1670 004a 044B     		ldr	r3, .L123
 1671 004c 1C60     		str	r4, [r3]
 801:Generated_Source\PSoC4/ADC_1.c ****         {
 1672              		.loc 1 801 0
 1673 004e 012E     		cmp	r6, #1
 1674 0050 03D1     		bne	.L120
 804:Generated_Source\PSoC4/ADC_1.c **** 
 1675              		.loc 1 804 0
 1676 0052 FFF7FEFF 		bl	ADC_1_Start
 1677              	.LVL142:
 807:Generated_Source\PSoC4/ADC_1.c ****         }
 1678              		.loc 1 807 0
 1679 0056 FFF7FEFF 		bl	ADC_1_StartConvert
 1680              	.LVL143:
 1681              	.L120:
 811:Generated_Source\PSoC4/ADC_1.c **** 
 1682              		.loc 1 811 0
 1683              		@ sp needed
 1684              	.LVL144:
 1685              	.LVL145:
 1686 005a 70BD     		pop	{r4, r5, r6, pc}
 1687              	.L124:
 1688              		.align	2
 1689              	.L123:
 1690 005c 00000000 		.word	.LANCHOR0
 1691 0060 00000000 		.word	ADC_1_allConfigs
 1692 0064 20003A40 		.word	1077542944
 1693 0068 38023A40 		.word	1077543480
 1694 006c 28023A40 		.word	1077543464
 1695              		.cfi_endproc
 1696              	.LFE6:
 1697              		.size	ADC_1_SelectConfig, .-ADC_1_SelectConfig
 1698              		.section	.text.ADC_1_StopConvert,"ax",%progbits
 1699              		.align	2
 1700              		.global	ADC_1_StopConvert
 1701              		.code	16
 1702              		.thumb_func
 1703              		.type	ADC_1_StopConvert, %function
 1704              	ADC_1_StopConvert:
 1705              	.LFB8:
 865:Generated_Source\PSoC4/ADC_1.c ****     if((ADC_1_SAR_SAMPLE_CTRL_REG
 1706              		.loc 1 865 0
 1707              		.cfi_startproc
 1708              		@ args = 0, pretend = 0, frame = 0
 1709              		@ frame_needed = 0, uses_anonymous_args = 0
 1710 0000 10B5     		push	{r4, lr}
 1711              		.cfi_def_cfa_offset 8
 1712              		.cfi_offset 4, -8
 1713              		.cfi_offset 14, -4
 866:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 1714              		.loc 1 866 0
 1715 0002 0C4B     		ldr	r3, .L127
 1716 0004 1B68     		ldr	r3, [r3]
 1717 0006 5B03     		lsls	r3, r3, #13
 1718 0008 12D5     		bpl	.L125
 870:Generated_Source\PSoC4/ADC_1.c **** 
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 71


 1719              		.loc 1 870 0
 1720 000a 0A4A     		ldr	r2, .L127
 1721 000c 1168     		ldr	r1, [r2]
 1722 000e 0A4B     		ldr	r3, .L127+4
 1723 0010 0B40     		ands	r3, r1
 1724 0012 1360     		str	r3, [r2]
 872:Generated_Source\PSoC4/ADC_1.c ****             & ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
 1725              		.loc 1 872 0
 1726 0014 094B     		ldr	r3, .L127+8
 1727 0016 1A68     		ldr	r2, [r3]
 1728 0018 D300     		lsls	r3, r2, #3
 1729 001a 9A1A     		subs	r2, r3, r2
 1730 001c D300     		lsls	r3, r2, #3
 1731 001e 084A     		ldr	r2, .L127+12
 1732 0020 D318     		adds	r3, r2, r3
 1733 0022 1B6B     		ldr	r3, [r3, #48]
 1734 0024 9B07     		lsls	r3, r3, #30
 1735 0026 03D5     		bpl	.L125
 877:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_Start();
 1736              		.loc 1 877 0
 1737 0028 FFF7FEFF 		bl	ADC_1_Stop
 1738              	.LVL146:
 878:Generated_Source\PSoC4/ADC_1.c ****         }
 1739              		.loc 1 878 0
 1740 002c FFF7FEFF 		bl	ADC_1_Start
 1741              	.LVL147:
 1742              	.L125:
 883:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 1743              		.loc 1 883 0
 1744              		@ sp needed
 1745 0030 10BD     		pop	{r4, pc}
 1746              	.L128:
 1747 0032 C046     		.align	2
 1748              	.L127:
 1749 0034 04003A40 		.word	1077542916
 1750 0038 FFFFFEFF 		.word	-65537
 1751 003c 00000000 		.word	.LANCHOR0
 1752 0040 00000000 		.word	ADC_1_allConfigs
 1753              		.cfi_endproc
 1754              	.LFE8:
 1755              		.size	ADC_1_StopConvert, .-ADC_1_StopConvert
 1756              		.comm	ADC_1_countsPer10Volt,4,4
 1757              		.comm	ADC_1_offset,2,4
 1758              		.global	ADC_1_selected
 1759              		.global	ADC_1_initVar
 1760              		.bss
 1761              		.align	2
 1762              		.set	.LANCHOR0,. + 0
 1763              		.type	ADC_1_currentConfig, %object
 1764              		.size	ADC_1_currentConfig, 4
 1765              	ADC_1_currentConfig:
 1766 0000 00000000 		.space	4
 1767              		.type	ADC_1_initVar, %object
 1768              		.size	ADC_1_initVar, 1
 1769              	ADC_1_initVar:
 1770 0004 00       		.space	1
 1771              		.type	ADC_1_selected, %object
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 72


 1772              		.size	ADC_1_selected, 1
 1773              	ADC_1_selected:
 1774 0005 00       		.space	1
 1775              		.text
 1776              	.Letext0:
 1777              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1778              		.file 3 "Generated_Source\\PSoC4\\ADC_1.h"
 1779              		.file 4 "Generated_Source\\PSoC4\\ADC_1_intSarClock.h"
 1780              		.file 5 "Generated_Source\\PSoC4\\CyLib.h"
 1781              		.file 6 "Generated_Source\\PSoC4\\ADC_1_IRQ.h"
 1782              		.section	.debug_info,"",%progbits
 1783              	.Ldebug_info0:
 1784 0000 510A0000 		.4byte	0xa51
 1785 0004 0400     		.2byte	0x4
 1786 0006 00000000 		.4byte	.Ldebug_abbrev0
 1787 000a 04       		.byte	0x4
 1788 000b 01       		.uleb128 0x1
 1789 000c C0040000 		.4byte	.LASF110
 1790 0010 0C       		.byte	0xc
 1791 0011 11040000 		.4byte	.LASF111
 1792 0015 F3010000 		.4byte	.LASF112
 1793 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1794 001d 00000000 		.4byte	0
 1795 0021 00000000 		.4byte	.Ldebug_line0
 1796 0025 02       		.uleb128 0x2
 1797 0026 01       		.byte	0x1
 1798 0027 06       		.byte	0x6
 1799 0028 89000000 		.4byte	.LASF0
 1800 002c 02       		.uleb128 0x2
 1801 002d 01       		.byte	0x1
 1802 002e 08       		.byte	0x8
 1803 002f 41040000 		.4byte	.LASF1
 1804 0033 02       		.uleb128 0x2
 1805 0034 02       		.byte	0x2
 1806 0035 05       		.byte	0x5
 1807 0036 77040000 		.4byte	.LASF2
 1808 003a 02       		.uleb128 0x2
 1809 003b 02       		.byte	0x2
 1810 003c 07       		.byte	0x7
 1811 003d 94020000 		.4byte	.LASF3
 1812 0041 02       		.uleb128 0x2
 1813 0042 04       		.byte	0x4
 1814 0043 05       		.byte	0x5
 1815 0044 CD000000 		.4byte	.LASF4
 1816 0048 02       		.uleb128 0x2
 1817 0049 04       		.byte	0x4
 1818 004a 07       		.byte	0x7
 1819 004b CC010000 		.4byte	.LASF5
 1820 004f 02       		.uleb128 0x2
 1821 0050 08       		.byte	0x8
 1822 0051 05       		.byte	0x5
 1823 0052 7B000000 		.4byte	.LASF6
 1824 0056 02       		.uleb128 0x2
 1825 0057 08       		.byte	0x8
 1826 0058 07       		.byte	0x7
 1827 0059 40000000 		.4byte	.LASF7
 1828 005d 03       		.uleb128 0x3
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 73


 1829 005e 04       		.byte	0x4
 1830 005f 05       		.byte	0x5
 1831 0060 696E7400 		.ascii	"int\000"
 1832 0064 02       		.uleb128 0x2
 1833 0065 04       		.byte	0x4
 1834 0066 07       		.byte	0x7
 1835 0067 95010000 		.4byte	.LASF8
 1836 006b 04       		.uleb128 0x4
 1837 006c ED000000 		.4byte	.LASF9
 1838 0070 02       		.byte	0x2
 1839 0071 F701     		.2byte	0x1f7
 1840 0073 2C000000 		.4byte	0x2c
 1841 0077 04       		.uleb128 0x4
 1842 0078 00000000 		.4byte	.LASF10
 1843 007c 02       		.byte	0x2
 1844 007d F801     		.2byte	0x1f8
 1845 007f 3A000000 		.4byte	0x3a
 1846 0083 04       		.uleb128 0x4
 1847 0084 47010000 		.4byte	.LASF11
 1848 0088 02       		.byte	0x2
 1849 0089 F901     		.2byte	0x1f9
 1850 008b 48000000 		.4byte	0x48
 1851 008f 04       		.uleb128 0x4
 1852 0090 76060000 		.4byte	.LASF12
 1853 0094 02       		.byte	0x2
 1854 0095 FB01     		.2byte	0x1fb
 1855 0097 33000000 		.4byte	0x33
 1856 009b 04       		.uleb128 0x4
 1857 009c B6000000 		.4byte	.LASF13
 1858 00a0 02       		.byte	0x2
 1859 00a1 FC01     		.2byte	0x1fc
 1860 00a3 41000000 		.4byte	0x41
 1861 00a7 04       		.uleb128 0x4
 1862 00a8 4E030000 		.4byte	.LASF14
 1863 00ac 02       		.byte	0x2
 1864 00ad FD01     		.2byte	0x1fd
 1865 00af B3000000 		.4byte	0xb3
 1866 00b3 02       		.uleb128 0x2
 1867 00b4 04       		.byte	0x4
 1868 00b5 04       		.byte	0x4
 1869 00b6 DB030000 		.4byte	.LASF15
 1870 00ba 02       		.uleb128 0x2
 1871 00bb 08       		.byte	0x8
 1872 00bc 04       		.byte	0x4
 1873 00bd FD000000 		.4byte	.LASF16
 1874 00c1 04       		.uleb128 0x4
 1875 00c2 C4030000 		.4byte	.LASF17
 1876 00c6 02       		.byte	0x2
 1877 00c7 0202     		.2byte	0x202
 1878 00c9 4F000000 		.4byte	0x4f
 1879 00cd 02       		.uleb128 0x2
 1880 00ce 01       		.byte	0x1
 1881 00cf 08       		.byte	0x8
 1882 00d0 57050000 		.4byte	.LASF18
 1883 00d4 04       		.uleb128 0x4
 1884 00d5 35030000 		.4byte	.LASF19
 1885 00d9 02       		.byte	0x2
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 74


 1886 00da A302     		.2byte	0x2a3
 1887 00dc E0000000 		.4byte	0xe0
 1888 00e0 05       		.uleb128 0x5
 1889 00e1 83000000 		.4byte	0x83
 1890 00e5 04       		.uleb128 0x4
 1891 00e6 61050000 		.4byte	.LASF20
 1892 00ea 02       		.byte	0x2
 1893 00eb B302     		.2byte	0x2b3
 1894 00ed F1000000 		.4byte	0xf1
 1895 00f1 06       		.uleb128 0x6
 1896 00f2 04       		.byte	0x4
 1897 00f3 F7000000 		.4byte	0xf7
 1898 00f7 07       		.uleb128 0x7
 1899 00f8 02       		.uleb128 0x2
 1900 00f9 08       		.byte	0x8
 1901 00fa 04       		.byte	0x4
 1902 00fb 82030000 		.4byte	.LASF21
 1903 00ff 02       		.uleb128 0x2
 1904 0100 04       		.byte	0x4
 1905 0101 07       		.byte	0x7
 1906 0102 56030000 		.4byte	.LASF22
 1907 0106 08       		.uleb128 0x8
 1908 0107 38       		.byte	0x38
 1909 0108 03       		.byte	0x3
 1910 0109 5D       		.byte	0x5d
 1911 010a B7010000 		.4byte	0x1b7
 1912 010e 09       		.uleb128 0x9
 1913 010f 9C060000 		.4byte	.LASF23
 1914 0113 03       		.byte	0x3
 1915 0114 5F       		.byte	0x5f
 1916 0115 83000000 		.4byte	0x83
 1917 0119 00       		.byte	0
 1918 011a 09       		.uleb128 0x9
 1919 011b 1E030000 		.4byte	.LASF24
 1920 011f 03       		.byte	0x3
 1921 0120 60       		.byte	0x60
 1922 0121 83000000 		.4byte	0x83
 1923 0125 04       		.byte	0x4
 1924 0126 09       		.uleb128 0x9
 1925 0127 EC050000 		.4byte	.LASF25
 1926 012b 03       		.byte	0x3
 1927 012c 61       		.byte	0x61
 1928 012d 83000000 		.4byte	0x83
 1929 0131 08       		.byte	0x8
 1930 0132 09       		.uleb128 0x9
 1931 0133 35060000 		.4byte	.LASF26
 1932 0137 03       		.byte	0x3
 1933 0138 64       		.byte	0x64
 1934 0139 83000000 		.4byte	0x83
 1935 013d 0C       		.byte	0xc
 1936 013e 09       		.uleb128 0x9
 1937 013f 3A010000 		.4byte	.LASF27
 1938 0143 03       		.byte	0x3
 1939 0144 65       		.byte	0x65
 1940 0145 83000000 		.4byte	0x83
 1941 0149 10       		.byte	0x10
 1942 014a 09       		.uleb128 0x9
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 75


 1943 014b 96030000 		.4byte	.LASF28
 1944 014f 03       		.byte	0x3
 1945 0150 66       		.byte	0x66
 1946 0151 83000000 		.4byte	0x83
 1947 0155 14       		.byte	0x14
 1948 0156 09       		.uleb128 0x9
 1949 0157 B8020000 		.4byte	.LASF29
 1950 015b 03       		.byte	0x3
 1951 015c 67       		.byte	0x67
 1952 015d 83000000 		.4byte	0x83
 1953 0161 18       		.byte	0x18
 1954 0162 09       		.uleb128 0x9
 1955 0163 15060000 		.4byte	.LASF30
 1956 0167 03       		.byte	0x3
 1957 0168 68       		.byte	0x68
 1958 0169 83000000 		.4byte	0x83
 1959 016d 1C       		.byte	0x1c
 1960 016e 09       		.uleb128 0x9
 1961 016f 0A040000 		.4byte	.LASF31
 1962 0173 03       		.byte	0x3
 1963 0174 69       		.byte	0x69
 1964 0175 83000000 		.4byte	0x83
 1965 0179 20       		.byte	0x20
 1966 017a 09       		.uleb128 0x9
 1967 017b A2010000 		.4byte	.LASF32
 1968 017f 03       		.byte	0x3
 1969 0180 6A       		.byte	0x6a
 1970 0181 83000000 		.4byte	0x83
 1971 0185 24       		.byte	0x24
 1972 0186 09       		.uleb128 0x9
 1973 0187 A3030000 		.4byte	.LASF33
 1974 018b 03       		.byte	0x3
 1975 018c 6B       		.byte	0x6b
 1976 018d 83000000 		.4byte	0x83
 1977 0191 28       		.byte	0x28
 1978 0192 09       		.uleb128 0x9
 1979 0193 B4040000 		.4byte	.LASF34
 1980 0197 03       		.byte	0x3
 1981 0198 6C       		.byte	0x6c
 1982 0199 9B000000 		.4byte	0x9b
 1983 019d 2C       		.byte	0x2c
 1984 019e 09       		.uleb128 0x9
 1985 019f F1050000 		.4byte	.LASF35
 1986 01a3 03       		.byte	0x3
 1987 01a4 6E       		.byte	0x6e
 1988 01a5 83000000 		.4byte	0x83
 1989 01a9 30       		.byte	0x30
 1990 01aa 09       		.uleb128 0x9
 1991 01ab A0000000 		.4byte	.LASF36
 1992 01af 03       		.byte	0x3
 1993 01b0 75       		.byte	0x75
 1994 01b1 77000000 		.4byte	0x77
 1995 01b5 34       		.byte	0x34
 1996 01b6 00       		.byte	0
 1997 01b7 0A       		.uleb128 0xa
 1998 01b8 40060000 		.4byte	.LASF37
 1999 01bc 03       		.byte	0x3
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 76


 2000 01bd 7C       		.byte	0x7c
 2001 01be 06010000 		.4byte	0x106
 2002 01c2 0B       		.uleb128 0xb
 2003 01c3 74010000 		.4byte	.LASF113
 2004 01c7 01       		.byte	0x1
 2005 01c8 E102     		.2byte	0x2e1
 2006 01ca 00000000 		.4byte	.LFB5
 2007 01ce 34000000 		.4byte	.LFE5-.LFB5
 2008 01d2 01       		.uleb128 0x1
 2009 01d3 9C       		.byte	0x9c
 2010 01d4 F7010000 		.4byte	0x1f7
 2011 01d8 0C       		.uleb128 0xc
 2012 01d9 6E050000 		.4byte	.LASF38
 2013 01dd 01       		.byte	0x1
 2014 01de E102     		.2byte	0x2e1
 2015 01e0 F7010000 		.4byte	0x1f7
 2016 01e4 01       		.uleb128 0x1
 2017 01e5 50       		.byte	0x50
 2018 01e6 0D       		.uleb128 0xd
 2019 01e7 57020000 		.4byte	.LASF40
 2020 01eb 01       		.byte	0x1
 2021 01ec E502     		.2byte	0x2e5
 2022 01ee 83000000 		.4byte	0x83
 2023 01f2 00000000 		.4byte	.LLST0
 2024 01f6 00       		.byte	0
 2025 01f7 06       		.uleb128 0x6
 2026 01f8 04       		.byte	0x4
 2027 01f9 FD010000 		.4byte	0x1fd
 2028 01fd 0E       		.uleb128 0xe
 2029 01fe B7010000 		.4byte	0x1b7
 2030 0202 0F       		.uleb128 0xf
 2031 0203 B9050000 		.4byte	.LASF114
 2032 0207 01       		.byte	0x1
 2033 0208 1504     		.2byte	0x415
 2034 020a 9B000000 		.4byte	0x9b
 2035 020e 00000000 		.4byte	.LFB13
 2036 0212 58000000 		.4byte	.LFE13-.LFB13
 2037 0216 01       		.uleb128 0x1
 2038 0217 9C       		.byte	0x9c
 2039 0218 4D020000 		.4byte	0x24d
 2040 021c 10       		.uleb128 0x10
 2041 021d 52050000 		.4byte	.LASF39
 2042 0221 01       		.byte	0x1
 2043 0222 1504     		.2byte	0x415
 2044 0224 83000000 		.4byte	0x83
 2045 0228 2F000000 		.4byte	.LLST1
 2046 022c 0D       		.uleb128 0xd
 2047 022d 3B030000 		.4byte	.LASF41
 2048 0231 01       		.byte	0x1
 2049 0232 1704     		.2byte	0x417
 2050 0234 9B000000 		.4byte	0x9b
 2051 0238 50000000 		.4byte	.LLST2
 2052 023c 0D       		.uleb128 0xd
 2053 023d 2A030000 		.4byte	.LASF42
 2054 0241 01       		.byte	0x1
 2055 0242 1804     		.2byte	0x418
 2056 0244 83000000 		.4byte	0x83
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 77


 2057 0248 6F000000 		.4byte	.LLST3
 2058 024c 00       		.byte	0
 2059 024d 11       		.uleb128 0x11
 2060 024e AB000000 		.4byte	.LASF44
 2061 0252 01       		.byte	0x1
 2062 0253 6602     		.2byte	0x266
 2063 0255 00000000 		.4byte	.LFB3
 2064 0259 10000000 		.4byte	.LFE3-.LFB3
 2065 025d 01       		.uleb128 0x1
 2066 025e 9C       		.byte	0x9c
 2067 025f 12       		.uleb128 0x12
 2068 0260 BC000000 		.4byte	.LASF46
 2069 0264 01       		.byte	0x1
 2070 0265 8402     		.2byte	0x284
 2071 0267 00000000 		.4byte	.LFB4
 2072 026b AC000000 		.4byte	.LFE4-.LFB4
 2073 026f 01       		.uleb128 0x1
 2074 0270 9C       		.byte	0x9c
 2075 0271 D2020000 		.4byte	0x2d2
 2076 0275 10       		.uleb128 0x10
 2077 0276 6E050000 		.4byte	.LASF38
 2078 027a 01       		.byte	0x1
 2079 027b 8402     		.2byte	0x284
 2080 027d F7010000 		.4byte	0x1f7
 2081 0281 8D000000 		.4byte	.LLST4
 2082 0285 0D       		.uleb128 0xd
 2083 0286 9A040000 		.4byte	.LASF43
 2084 028a 01       		.byte	0x1
 2085 028b 8602     		.2byte	0x286
 2086 028d 83000000 		.4byte	0x83
 2087 0291 B9000000 		.4byte	.LLST5
 2088 0295 0D       		.uleb128 0xd
 2089 0296 57020000 		.4byte	.LASF40
 2090 029a 01       		.byte	0x1
 2091 029b 8702     		.2byte	0x287
 2092 029d 83000000 		.4byte	0x83
 2093 02a1 D8000000 		.4byte	.LLST6
 2094 02a5 13       		.uleb128 0x13
 2095 02a6 08000000 		.4byte	.LVL15
 2096 02aa FC090000 		.4byte	0x9fc
 2097 02ae 14       		.uleb128 0x14
 2098 02af 10000000 		.4byte	.LVL16
 2099 02b3 070A0000 		.4byte	0xa07
 2100 02b7 C1020000 		.4byte	0x2c1
 2101 02bb 15       		.uleb128 0x15
 2102 02bc 01       		.uleb128 0x1
 2103 02bd 51       		.byte	0x51
 2104 02be 01       		.uleb128 0x1
 2105 02bf 30       		.byte	0x30
 2106 02c0 00       		.byte	0
 2107 02c1 16       		.uleb128 0x16
 2108 02c2 16000000 		.4byte	.LVL17
 2109 02c6 120A0000 		.4byte	0xa12
 2110 02ca 15       		.uleb128 0x15
 2111 02cb 01       		.uleb128 0x1
 2112 02cc 50       		.byte	0x50
 2113 02cd 02       		.uleb128 0x2
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 78


 2114 02ce 08       		.byte	0x8
 2115 02cf FF       		.byte	0xff
 2116 02d0 00       		.byte	0
 2117 02d1 00       		.byte	0
 2118 02d2 11       		.uleb128 0x11
 2119 02d3 B9010000 		.4byte	.LASF45
 2120 02d7 01       		.byte	0x1
 2121 02d8 4003     		.2byte	0x340
 2122 02da 00000000 		.4byte	.LFB7
 2123 02de 28000000 		.4byte	.LFE7-.LFB7
 2124 02e2 01       		.uleb128 0x1
 2125 02e3 9C       		.byte	0x9c
 2126 02e4 12       		.uleb128 0x12
 2127 02e5 04010000 		.4byte	.LASF47
 2128 02e9 01       		.byte	0x1
 2129 02ea 8703     		.2byte	0x387
 2130 02ec 00000000 		.4byte	.LFB9
 2131 02f0 28000000 		.4byte	.LFE9-.LFB9
 2132 02f4 01       		.uleb128 0x1
 2133 02f5 9C       		.byte	0x9c
 2134 02f6 09030000 		.4byte	0x309
 2135 02fa 0C       		.uleb128 0xc
 2136 02fb 5C050000 		.4byte	.LASF48
 2137 02ff 01       		.byte	0x1
 2138 0300 8703     		.2byte	0x387
 2139 0302 83000000 		.4byte	0x83
 2140 0306 01       		.uleb128 0x1
 2141 0307 50       		.byte	0x50
 2142 0308 00       		.byte	0
 2143 0309 12       		.uleb128 0x12
 2144 030a F8020000 		.4byte	.LASF49
 2145 030e 01       		.byte	0x1
 2146 030f BE03     		.2byte	0x3be
 2147 0311 00000000 		.4byte	.LFB10
 2148 0315 10000000 		.4byte	.LFE10-.LFB10
 2149 0319 01       		.uleb128 0x1
 2150 031a 9C       		.byte	0x9c
 2151 031b 30030000 		.4byte	0x330
 2152 031f 10       		.uleb128 0x10
 2153 0320 5D010000 		.4byte	.LASF50
 2154 0324 01       		.byte	0x1
 2155 0325 BE03     		.2byte	0x3be
 2156 0327 83000000 		.4byte	0x83
 2157 032b EE000000 		.4byte	.LLST7
 2158 032f 00       		.byte	0
 2159 0330 12       		.uleb128 0x12
 2160 0331 7C060000 		.4byte	.LASF51
 2161 0335 01       		.byte	0x1
 2162 0336 D303     		.2byte	0x3d3
 2163 0338 00000000 		.4byte	.LFB11
 2164 033c 2C000000 		.4byte	.LFE11-.LFB11
 2165 0340 01       		.uleb128 0x1
 2166 0341 9C       		.byte	0x9c
 2167 0342 65030000 		.4byte	0x365
 2168 0346 10       		.uleb128 0x10
 2169 0347 61020000 		.4byte	.LASF52
 2170 034b 01       		.byte	0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 79


 2171 034c D303     		.2byte	0x3d3
 2172 034e 83000000 		.4byte	0x83
 2173 0352 0F010000 		.4byte	.LLST8
 2174 0356 17       		.uleb128 0x17
 2175 0357 07000000 		.4byte	.LASF53
 2176 035b 01       		.byte	0x1
 2177 035c D503     		.2byte	0x3d5
 2178 035e 83000000 		.4byte	0x83
 2179 0362 01       		.uleb128 0x1
 2180 0363 52       		.byte	0x52
 2181 0364 00       		.byte	0
 2182 0365 18       		.uleb128 0x18
 2183 0366 1F060000 		.4byte	.LASF56
 2184 036a 01       		.byte	0x1
 2185 036b EF03     		.2byte	0x3ef
 2186 036d 83000000 		.4byte	0x83
 2187 0371 00000000 		.4byte	.LFB12
 2188 0375 38000000 		.4byte	.LFE12-.LFB12
 2189 0379 01       		.uleb128 0x1
 2190 037a 9C       		.byte	0x9c
 2191 037b B0030000 		.4byte	0x3b0
 2192 037f 10       		.uleb128 0x10
 2193 0380 8D010000 		.4byte	.LASF54
 2194 0384 01       		.byte	0x1
 2195 0385 EF03     		.2byte	0x3ef
 2196 0387 83000000 		.4byte	0x83
 2197 038b 2D010000 		.4byte	.LLST9
 2198 038f 0D       		.uleb128 0xd
 2199 0390 A8060000 		.4byte	.LASF55
 2200 0394 01       		.byte	0x1
 2201 0395 F103     		.2byte	0x3f1
 2202 0397 83000000 		.4byte	0x83
 2203 039b 61010000 		.4byte	.LLST10
 2204 039f 19       		.uleb128 0x19
 2205 03a0 77647400 		.ascii	"wdt\000"
 2206 03a4 01       		.byte	0x1
 2207 03a5 F203     		.2byte	0x3f2
 2208 03a7 83000000 		.4byte	0x83
 2209 03ab 97010000 		.4byte	.LLST11
 2210 03af 00       		.byte	0
 2211 03b0 18       		.uleb128 0x18
 2212 03b1 4F040000 		.4byte	.LASF57
 2213 03b5 01       		.byte	0x1
 2214 03b6 3E04     		.2byte	0x43e
 2215 03b8 8F000000 		.4byte	0x8f
 2216 03bc 00000000 		.4byte	.LFB14
 2217 03c0 54000000 		.4byte	.LFE14-.LFB14
 2218 03c4 01       		.uleb128 0x1
 2219 03c5 9C       		.byte	0x9c
 2220 03c6 FA030000 		.4byte	0x3fa
 2221 03ca 10       		.uleb128 0x10
 2222 03cb 52050000 		.4byte	.LASF39
 2223 03cf 01       		.byte	0x1
 2224 03d0 3E04     		.2byte	0x43e
 2225 03d2 83000000 		.4byte	0x83
 2226 03d6 CA010000 		.4byte	.LLST12
 2227 03da 0D       		.uleb128 0xd
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 80


 2228 03db 44030000 		.4byte	.LASF58
 2229 03df 01       		.byte	0x1
 2230 03e0 4004     		.2byte	0x440
 2231 03e2 83000000 		.4byte	0x83
 2232 03e6 0F020000 		.4byte	.LLST13
 2233 03ea 16       		.uleb128 0x16
 2234 03eb 1E000000 		.4byte	.LVL38
 2235 03ef 1D0A0000 		.4byte	0xa1d
 2236 03f3 15       		.uleb128 0x15
 2237 03f4 01       		.uleb128 0x1
 2238 03f5 50       		.byte	0x50
 2239 03f6 01       		.uleb128 0x1
 2240 03f7 30       		.byte	0x30
 2241 03f8 00       		.byte	0
 2242 03f9 00       		.byte	0
 2243 03fa 18       		.uleb128 0x18
 2244 03fb 54060000 		.4byte	.LASF59
 2245 03ff 01       		.byte	0x1
 2246 0400 6104     		.2byte	0x461
 2247 0402 9B000000 		.4byte	0x9b
 2248 0406 00000000 		.4byte	.LFB15
 2249 040a 64000000 		.4byte	.LFE15-.LFB15
 2250 040e 01       		.uleb128 0x1
 2251 040f 9C       		.byte	0x9c
 2252 0410 78040000 		.4byte	0x478
 2253 0414 10       		.uleb128 0x10
 2254 0415 52050000 		.4byte	.LASF39
 2255 0419 01       		.byte	0x1
 2256 041a 6104     		.2byte	0x461
 2257 041c 83000000 		.4byte	0x83
 2258 0420 2D020000 		.4byte	.LLST14
 2259 0424 0D       		.uleb128 0xd
 2260 0425 44030000 		.4byte	.LASF58
 2261 0429 01       		.byte	0x1
 2262 042a 6304     		.2byte	0x463
 2263 042c 83000000 		.4byte	0x83
 2264 0430 59020000 		.4byte	.LLST15
 2265 0434 0D       		.uleb128 0xd
 2266 0435 8E040000 		.4byte	.LASF60
 2267 0439 01       		.byte	0x1
 2268 043a 6404     		.2byte	0x464
 2269 043c 8F000000 		.4byte	0x8f
 2270 0440 77020000 		.4byte	.LLST16
 2271 0444 0D       		.uleb128 0xd
 2272 0445 D9020000 		.4byte	.LASF61
 2273 0449 01       		.byte	0x1
 2274 044a 6504     		.2byte	0x465
 2275 044c 9B000000 		.4byte	0x9b
 2276 0450 8A020000 		.4byte	.LLST17
 2277 0454 14       		.uleb128 0x14
 2278 0455 1E000000 		.4byte	.LVL46
 2279 0459 1D0A0000 		.4byte	0xa1d
 2280 045d 67040000 		.4byte	0x467
 2281 0461 15       		.uleb128 0x15
 2282 0462 01       		.uleb128 0x1
 2283 0463 50       		.byte	0x50
 2284 0464 01       		.uleb128 0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 81


 2285 0465 30       		.byte	0x30
 2286 0466 00       		.byte	0
 2287 0467 16       		.uleb128 0x16
 2288 0468 4A000000 		.4byte	.LVL50
 2289 046c 02020000 		.4byte	0x202
 2290 0470 15       		.uleb128 0x15
 2291 0471 01       		.uleb128 0x1
 2292 0472 50       		.byte	0x50
 2293 0473 02       		.uleb128 0x2
 2294 0474 75       		.byte	0x75
 2295 0475 00       		.sleb128 0
 2296 0476 00       		.byte	0
 2297 0477 00       		.byte	0
 2298 0478 12       		.uleb128 0x12
 2299 0479 62010000 		.4byte	.LASF62
 2300 047d 01       		.byte	0x1
 2301 047e 8D04     		.2byte	0x48d
 2302 0480 00000000 		.4byte	.LFB16
 2303 0484 1C000000 		.4byte	.LFE16-.LFB16
 2304 0488 01       		.uleb128 0x1
 2305 0489 9C       		.byte	0x9c
 2306 048a 9F040000 		.4byte	0x49f
 2307 048e 10       		.uleb128 0x10
 2308 048f 79030000 		.4byte	.LASF63
 2309 0493 01       		.byte	0x1
 2310 0494 8D04     		.2byte	0x48d
 2311 0496 83000000 		.4byte	0x83
 2312 049a A8020000 		.4byte	.LLST18
 2313 049e 00       		.byte	0
 2314 049f 12       		.uleb128 0x12
 2315 04a0 6C020000 		.4byte	.LASF64
 2316 04a4 01       		.byte	0x1
 2317 04a5 A104     		.2byte	0x4a1
 2318 04a7 00000000 		.4byte	.LFB17
 2319 04ab 18000000 		.4byte	.LFE17-.LFB17
 2320 04af 01       		.uleb128 0x1
 2321 04b0 9C       		.byte	0x9c
 2322 04b1 C6040000 		.4byte	0x4c6
 2323 04b5 10       		.uleb128 0x10
 2324 04b6 F3030000 		.4byte	.LASF65
 2325 04ba 01       		.byte	0x1
 2326 04bb A104     		.2byte	0x4a1
 2327 04bd 83000000 		.4byte	0x83
 2328 04c1 C9020000 		.4byte	.LLST19
 2329 04c5 00       		.byte	0
 2330 04c6 12       		.uleb128 0x12
 2331 04c7 19010000 		.4byte	.LASF66
 2332 04cb 01       		.byte	0x1
 2333 04cc B804     		.2byte	0x4b8
 2334 04ce 00000000 		.4byte	.LFB18
 2335 04d2 2C000000 		.4byte	.LFE18-.LFB18
 2336 04d6 01       		.uleb128 0x1
 2337 04d7 9C       		.byte	0x9c
 2338 04d8 FB040000 		.4byte	0x4fb
 2339 04dc 10       		.uleb128 0x10
 2340 04dd 09030000 		.4byte	.LASF67
 2341 04e1 01       		.byte	0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 82


 2342 04e2 B804     		.2byte	0x4b8
 2343 04e4 83000000 		.4byte	0x83
 2344 04e8 EA020000 		.4byte	.LLST20
 2345 04ec 17       		.uleb128 0x17
 2346 04ed 07000000 		.4byte	.LASF53
 2347 04f1 01       		.byte	0x1
 2348 04f2 BA04     		.2byte	0x4ba
 2349 04f4 83000000 		.4byte	0x83
 2350 04f8 01       		.uleb128 0x1
 2351 04f9 52       		.byte	0x52
 2352 04fa 00       		.byte	0
 2353 04fb 12       		.uleb128 0x12
 2354 04fc 30040000 		.4byte	.LASF68
 2355 0500 01       		.byte	0x1
 2356 0501 D004     		.2byte	0x4d0
 2357 0503 00000000 		.4byte	.LFB19
 2358 0507 2C000000 		.4byte	.LFE19-.LFB19
 2359 050b 01       		.uleb128 0x1
 2360 050c 9C       		.byte	0x9c
 2361 050d 30050000 		.4byte	0x530
 2362 0511 10       		.uleb128 0x10
 2363 0512 BC030000 		.4byte	.LASF69
 2364 0516 01       		.byte	0x1
 2365 0517 D004     		.2byte	0x4d0
 2366 0519 83000000 		.4byte	0x83
 2367 051d 08030000 		.4byte	.LLST21
 2368 0521 17       		.uleb128 0x17
 2369 0522 07000000 		.4byte	.LASF53
 2370 0526 01       		.byte	0x1
 2371 0527 D204     		.2byte	0x4d2
 2372 0529 83000000 		.4byte	0x83
 2373 052d 01       		.uleb128 0x1
 2374 052e 52       		.byte	0x52
 2375 052f 00       		.byte	0
 2376 0530 12       		.uleb128 0x12
 2377 0531 66060000 		.4byte	.LASF70
 2378 0535 01       		.byte	0x1
 2379 0536 F104     		.2byte	0x4f1
 2380 0538 00000000 		.4byte	.LFB20
 2381 053c 44000000 		.4byte	.LFE20-.LFB20
 2382 0540 01       		.uleb128 0x1
 2383 0541 9C       		.byte	0x9c
 2384 0542 76050000 		.4byte	0x576
 2385 0546 10       		.uleb128 0x10
 2386 0547 52050000 		.4byte	.LASF39
 2387 054b 01       		.byte	0x1
 2388 054c F104     		.2byte	0x4f1
 2389 054e 83000000 		.4byte	0x83
 2390 0552 26030000 		.4byte	.LLST22
 2391 0556 10       		.uleb128 0x10
 2392 0557 E5050000 		.4byte	.LASF71
 2393 055b 01       		.byte	0x1
 2394 055c F104     		.2byte	0x4f1
 2395 055e 8F000000 		.4byte	0x8f
 2396 0562 52030000 		.4byte	.LLST23
 2397 0566 16       		.uleb128 0x16
 2398 0567 20000000 		.4byte	.LVL69
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 83


 2399 056b 1D0A0000 		.4byte	0xa1d
 2400 056f 15       		.uleb128 0x15
 2401 0570 01       		.uleb128 0x1
 2402 0571 50       		.byte	0x50
 2403 0572 01       		.uleb128 0x1
 2404 0573 30       		.byte	0x30
 2405 0574 00       		.byte	0
 2406 0575 00       		.byte	0
 2407 0576 12       		.uleb128 0x12
 2408 0577 AE030000 		.4byte	.LASF72
 2409 057b 01       		.byte	0x1
 2410 057c 1105     		.2byte	0x511
 2411 057e 00000000 		.4byte	.LFB21
 2412 0582 44000000 		.4byte	.LFE21-.LFB21
 2413 0586 01       		.uleb128 0x1
 2414 0587 9C       		.byte	0x9c
 2415 0588 BC050000 		.4byte	0x5bc
 2416 058c 10       		.uleb128 0x10
 2417 058d 52050000 		.4byte	.LASF39
 2418 0591 01       		.byte	0x1
 2419 0592 1105     		.2byte	0x511
 2420 0594 83000000 		.4byte	0x83
 2421 0598 73030000 		.4byte	.LLST24
 2422 059c 10       		.uleb128 0x10
 2423 059d 11000000 		.4byte	.LASF73
 2424 05a1 01       		.byte	0x1
 2425 05a2 1105     		.2byte	0x511
 2426 05a4 9B000000 		.4byte	0x9b
 2427 05a8 9F030000 		.4byte	.LLST25
 2428 05ac 16       		.uleb128 0x16
 2429 05ad 20000000 		.4byte	.LVL73
 2430 05b1 1D0A0000 		.4byte	0xa1d
 2431 05b5 15       		.uleb128 0x15
 2432 05b6 01       		.uleb128 0x1
 2433 05b7 50       		.byte	0x50
 2434 05b8 01       		.uleb128 0x1
 2435 05b9 30       		.byte	0x30
 2436 05ba 00       		.byte	0
 2437 05bb 00       		.byte	0
 2438 05bc 18       		.uleb128 0x18
 2439 05bd D6000000 		.4byte	.LASF74
 2440 05c1 01       		.byte	0x1
 2441 05c2 2A05     		.2byte	0x52a
 2442 05c4 8F000000 		.4byte	0x8f
 2443 05c8 00000000 		.4byte	.LFB22
 2444 05cc 3C000000 		.4byte	.LFE22-.LFB22
 2445 05d0 01       		.uleb128 0x1
 2446 05d1 9C       		.byte	0x9c
 2447 05d2 2E060000 		.4byte	0x62e
 2448 05d6 10       		.uleb128 0x10
 2449 05d7 52050000 		.4byte	.LASF39
 2450 05db 01       		.byte	0x1
 2451 05dc 2A05     		.2byte	0x52a
 2452 05de 83000000 		.4byte	0x83
 2453 05e2 CC030000 		.4byte	.LLST26
 2454 05e6 10       		.uleb128 0x10
 2455 05e7 FC050000 		.4byte	.LASF75
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 84


 2456 05eb 01       		.byte	0x1
 2457 05ec 2A05     		.2byte	0x52a
 2458 05ee 8F000000 		.4byte	0x8f
 2459 05f2 ED030000 		.4byte	.LLST27
 2460 05f6 1A       		.uleb128 0x1a
 2461 05f7 88010000 		.4byte	.LASF76
 2462 05fb 01       		.byte	0x1
 2463 05fc 2C05     		.2byte	0x52c
 2464 05fe 83000000 		.4byte	0x83
 2465 0602 1A       		.uleb128 0x1a
 2466 0603 7F020000 		.4byte	.LASF77
 2467 0607 01       		.byte	0x1
 2468 0608 2D05     		.2byte	0x52d
 2469 060a 83000000 		.4byte	0x83
 2470 060e 0D       		.uleb128 0xd
 2471 060f 13030000 		.4byte	.LASF78
 2472 0613 01       		.byte	0x1
 2473 0614 2E05     		.2byte	0x52e
 2474 0616 83000000 		.4byte	0x83
 2475 061a 24040000 		.4byte	.LLST28
 2476 061e 16       		.uleb128 0x16
 2477 061f 22000000 		.4byte	.LVL80
 2478 0623 1D0A0000 		.4byte	0xa1d
 2479 0627 15       		.uleb128 0x15
 2480 0628 01       		.uleb128 0x1
 2481 0629 50       		.byte	0x50
 2482 062a 01       		.uleb128 0x1
 2483 062b 30       		.byte	0x30
 2484 062c 00       		.byte	0
 2485 062d 00       		.byte	0
 2486 062e 1B       		.uleb128 0x1b
 2487 062f 75050000 		.4byte	.LASF79
 2488 0633 01       		.byte	0x1
 2489 0634 7F05     		.2byte	0x57f
 2490 0636 A7000000 		.4byte	0xa7
 2491 063a 00000000 		.4byte	.LFB23
 2492 063e 54000000 		.4byte	.LFE23-.LFB23
 2493 0642 01       		.uleb128 0x1
 2494 0643 9C       		.byte	0x9c
 2495 0644 9A060000 		.4byte	0x69a
 2496 0648 10       		.uleb128 0x10
 2497 0649 52050000 		.4byte	.LASF39
 2498 064d 01       		.byte	0x1
 2499 064e 7F05     		.2byte	0x57f
 2500 0650 83000000 		.4byte	0x83
 2501 0654 37040000 		.4byte	.LLST29
 2502 0658 10       		.uleb128 0x10
 2503 0659 FC050000 		.4byte	.LASF75
 2504 065d 01       		.byte	0x1
 2505 065e 7F05     		.2byte	0x57f
 2506 0660 8F000000 		.4byte	0x8f
 2507 0664 71040000 		.4byte	.LLST30
 2508 0668 0D       		.uleb128 0xd
 2509 0669 81040000 		.4byte	.LASF80
 2510 066d 01       		.byte	0x1
 2511 066e 8105     		.2byte	0x581
 2512 0670 A7000000 		.4byte	0xa7
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 85


 2513 0674 A8040000 		.4byte	.LLST31
 2514 0678 0D       		.uleb128 0xd
 2515 0679 13030000 		.4byte	.LASF78
 2516 067d 01       		.byte	0x1
 2517 067e 8205     		.2byte	0x582
 2518 0680 83000000 		.4byte	0x83
 2519 0684 E6040000 		.4byte	.LLST32
 2520 0688 16       		.uleb128 0x16
 2521 0689 1E000000 		.4byte	.LVL86
 2522 068d BC050000 		.4byte	0x5bc
 2523 0691 15       		.uleb128 0x15
 2524 0692 01       		.uleb128 0x1
 2525 0693 50       		.byte	0x50
 2526 0694 03       		.uleb128 0x3
 2527 0695 F3       		.byte	0xf3
 2528 0696 01       		.uleb128 0x1
 2529 0697 50       		.byte	0x50
 2530 0698 00       		.byte	0
 2531 0699 00       		.byte	0
 2532 069a 1B       		.uleb128 0x1b
 2533 069b C3020000 		.4byte	.LASF81
 2534 069f 01       		.byte	0x1
 2535 06a0 B205     		.2byte	0x5b2
 2536 06a2 8F000000 		.4byte	0x8f
 2537 06a6 00000000 		.4byte	.LFB24
 2538 06aa 68000000 		.4byte	.LFE24-.LFB24
 2539 06ae 01       		.uleb128 0x1
 2540 06af 9C       		.byte	0x9c
 2541 06b0 06070000 		.4byte	0x706
 2542 06b4 10       		.uleb128 0x10
 2543 06b5 52050000 		.4byte	.LASF39
 2544 06b9 01       		.byte	0x1
 2545 06ba B205     		.2byte	0x5b2
 2546 06bc 83000000 		.4byte	0x83
 2547 06c0 04050000 		.4byte	.LLST33
 2548 06c4 10       		.uleb128 0x10
 2549 06c5 FC050000 		.4byte	.LASF75
 2550 06c9 01       		.byte	0x1
 2551 06ca B205     		.2byte	0x5b2
 2552 06cc 8F000000 		.4byte	0x8f
 2553 06d0 3E050000 		.4byte	.LLST34
 2554 06d4 0D       		.uleb128 0xd
 2555 06d5 8E060000 		.4byte	.LASF82
 2556 06d9 01       		.byte	0x1
 2557 06da B405     		.2byte	0x5b4
 2558 06dc 8F000000 		.4byte	0x8f
 2559 06e0 80050000 		.4byte	.LLST35
 2560 06e4 0D       		.uleb128 0xd
 2561 06e5 13030000 		.4byte	.LASF78
 2562 06e9 01       		.byte	0x1
 2563 06ea B505     		.2byte	0x5b5
 2564 06ec 83000000 		.4byte	0x83
 2565 06f0 B6050000 		.4byte	.LLST36
 2566 06f4 16       		.uleb128 0x16
 2567 06f5 1E000000 		.4byte	.LVL97
 2568 06f9 BC050000 		.4byte	0x5bc
 2569 06fd 15       		.uleb128 0x15
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 86


 2570 06fe 01       		.uleb128 0x1
 2571 06ff 50       		.byte	0x50
 2572 0700 03       		.uleb128 0x3
 2573 0701 F3       		.byte	0xf3
 2574 0702 01       		.uleb128 0x1
 2575 0703 50       		.byte	0x50
 2576 0704 00       		.byte	0
 2577 0705 00       		.byte	0
 2578 0706 1B       		.uleb128 0x1b
 2579 0707 CB060000 		.4byte	.LASF83
 2580 070b 01       		.byte	0x1
 2581 070c E805     		.2byte	0x5e8
 2582 070e 9B000000 		.4byte	0x9b
 2583 0712 00000000 		.4byte	.LFB25
 2584 0716 4C000000 		.4byte	.LFE25-.LFB25
 2585 071a 01       		.uleb128 0x1
 2586 071b 9C       		.byte	0x9c
 2587 071c 72070000 		.4byte	0x772
 2588 0720 10       		.uleb128 0x10
 2589 0721 52050000 		.4byte	.LASF39
 2590 0725 01       		.byte	0x1
 2591 0726 E805     		.2byte	0x5e8
 2592 0728 83000000 		.4byte	0x83
 2593 072c 0C060000 		.4byte	.LLST37
 2594 0730 10       		.uleb128 0x10
 2595 0731 FC050000 		.4byte	.LASF75
 2596 0735 01       		.byte	0x1
 2597 0736 E805     		.2byte	0x5e8
 2598 0738 8F000000 		.4byte	0x8f
 2599 073c 46060000 		.4byte	.LLST38
 2600 0740 0D       		.uleb128 0xd
 2601 0741 CF050000 		.4byte	.LASF84
 2602 0745 01       		.byte	0x1
 2603 0746 EA05     		.2byte	0x5ea
 2604 0748 C1000000 		.4byte	0xc1
 2605 074c 7D060000 		.4byte	.LLST39
 2606 0750 0D       		.uleb128 0xd
 2607 0751 13030000 		.4byte	.LASF78
 2608 0755 01       		.byte	0x1
 2609 0756 EB05     		.2byte	0x5eb
 2610 0758 83000000 		.4byte	0x83
 2611 075c AD060000 		.4byte	.LLST40
 2612 0760 16       		.uleb128 0x16
 2613 0761 1E000000 		.4byte	.LVL110
 2614 0765 BC050000 		.4byte	0x5bc
 2615 0769 15       		.uleb128 0x15
 2616 076a 01       		.uleb128 0x1
 2617 076b 50       		.byte	0x50
 2618 076c 03       		.uleb128 0x3
 2619 076d F3       		.byte	0xf3
 2620 076e 01       		.uleb128 0x1
 2621 076f 50       		.byte	0x50
 2622 0770 00       		.byte	0
 2623 0771 00       		.byte	0
 2624 0772 1C       		.uleb128 0x1c
 2625 0773 95000000 		.4byte	.LASF85
 2626 0777 01       		.byte	0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 87


 2627 0778 F007     		.2byte	0x7f0
 2628 077a 00000000 		.4byte	.LFB26
 2629 077e A8000000 		.4byte	.LFE26-.LFB26
 2630 0782 01       		.uleb128 0x1
 2631 0783 9C       		.byte	0x9c
 2632 0784 F4070000 		.4byte	0x7f4
 2633 0788 0D       		.uleb128 0xd
 2634 0789 9A040000 		.4byte	.LASF43
 2635 078d 01       		.byte	0x1
 2636 078e F207     		.2byte	0x7f2
 2637 0790 83000000 		.4byte	0x83
 2638 0794 03070000 		.4byte	.LLST41
 2639 0798 0D       		.uleb128 0xd
 2640 0799 AF010000 		.4byte	.LASF86
 2641 079d 01       		.byte	0x1
 2642 079e F307     		.2byte	0x7f3
 2643 07a0 83000000 		.4byte	0x83
 2644 07a4 39070000 		.4byte	.LLST42
 2645 07a8 0D       		.uleb128 0xd
 2646 07a9 19000000 		.4byte	.LASF87
 2647 07ad 01       		.byte	0x1
 2648 07ae F407     		.2byte	0x7f4
 2649 07b0 9B000000 		.4byte	0x9b
 2650 07b4 7B070000 		.4byte	.LLST43
 2651 07b8 14       		.uleb128 0x14
 2652 07b9 60000000 		.4byte	.LVL124
 2653 07bd 280A0000 		.4byte	0xa28
 2654 07c1 D0070000 		.4byte	0x7d0
 2655 07c5 15       		.uleb128 0x15
 2656 07c6 01       		.uleb128 0x1
 2657 07c7 50       		.byte	0x50
 2658 07c8 01       		.uleb128 0x1
 2659 07c9 3F       		.byte	0x3f
 2660 07ca 15       		.uleb128 0x15
 2661 07cb 01       		.uleb128 0x1
 2662 07cc 51       		.byte	0x51
 2663 07cd 01       		.uleb128 0x1
 2664 07ce 33       		.byte	0x33
 2665 07cf 00       		.byte	0
 2666 07d0 14       		.uleb128 0x14
 2667 07d1 68000000 		.4byte	.LVL125
 2668 07d5 330A0000 		.4byte	0xa33
 2669 07d9 E3070000 		.4byte	0x7e3
 2670 07dd 15       		.uleb128 0x15
 2671 07de 01       		.uleb128 0x1
 2672 07df 50       		.byte	0x50
 2673 07e0 01       		.uleb128 0x1
 2674 07e1 3F       		.byte	0x3f
 2675 07e2 00       		.byte	0
 2676 07e3 16       		.uleb128 0x16
 2677 07e4 7E000000 		.4byte	.LVL128
 2678 07e8 5F020000 		.4byte	0x25f
 2679 07ec 15       		.uleb128 0x15
 2680 07ed 01       		.uleb128 0x1
 2681 07ee 50       		.byte	0x50
 2682 07ef 02       		.uleb128 0x2
 2683 07f0 74       		.byte	0x74
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 88


 2684 07f1 00       		.sleb128 0
 2685 07f2 00       		.byte	0
 2686 07f3 00       		.byte	0
 2687 07f4 12       		.uleb128 0x12
 2688 07f5 57000000 		.4byte	.LASF88
 2689 07f9 01       		.byte	0x1
 2690 07fa 5C08     		.2byte	0x85c
 2691 07fc 00000000 		.4byte	.LFB27
 2692 0800 48000000 		.4byte	.LFE27-.LFB27
 2693 0804 01       		.uleb128 0x1
 2694 0805 9C       		.byte	0x9c
 2695 0806 27080000 		.4byte	0x827
 2696 080a 14       		.uleb128 0x14
 2697 080b 24000000 		.4byte	.LVL130
 2698 080f 3E0A0000 		.4byte	0xa3e
 2699 0813 1D080000 		.4byte	0x81d
 2700 0817 15       		.uleb128 0x15
 2701 0818 01       		.uleb128 0x1
 2702 0819 50       		.byte	0x50
 2703 081a 01       		.uleb128 0x1
 2704 081b 3A       		.byte	0x3a
 2705 081c 00       		.byte	0
 2706 081d 13       		.uleb128 0x13
 2707 081e 36000000 		.4byte	.LVL131
 2708 0822 C2010000 		.4byte	0x1c2
 2709 0826 00       		.byte	0
 2710 0827 12       		.uleb128 0x12
 2711 0828 B8060000 		.4byte	.LASF89
 2712 082c 01       		.byte	0x1
 2713 082d 2B02     		.2byte	0x22b
 2714 082f 00000000 		.4byte	.LFB1
 2715 0833 24000000 		.4byte	.LFE1-.LFB1
 2716 0837 01       		.uleb128 0x1
 2717 0838 9C       		.byte	0x9c
 2718 0839 50080000 		.4byte	0x850
 2719 083d 13       		.uleb128 0x13
 2720 083e 0E000000 		.4byte	.LVL132
 2721 0842 72070000 		.4byte	0x772
 2722 0846 13       		.uleb128 0x13
 2723 0847 1C000000 		.4byte	.LVL133
 2724 084b F4070000 		.4byte	0x7f4
 2725 084f 00       		.byte	0
 2726 0850 12       		.uleb128 0x12
 2727 0851 20000000 		.4byte	.LASF90
 2728 0855 01       		.byte	0x1
 2729 0856 4802     		.2byte	0x248
 2730 0858 00000000 		.4byte	.LFB2
 2731 085c 10000000 		.4byte	.LFE2-.LFB2
 2732 0860 01       		.uleb128 0x1
 2733 0861 9C       		.byte	0x9c
 2734 0862 90080000 		.4byte	0x890
 2735 0866 10       		.uleb128 0x10
 2736 0867 8E030000 		.4byte	.LASF91
 2737 086b 01       		.byte	0x1
 2738 086c 4802     		.2byte	0x248
 2739 086e E5000000 		.4byte	0xe5
 2740 0872 91070000 		.4byte	.LLST44
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 89


 2741 0876 13       		.uleb128 0x13
 2742 0877 08000000 		.4byte	.LVL135
 2743 087b 27080000 		.4byte	0x827
 2744 087f 16       		.uleb128 0x16
 2745 0880 0E000000 		.4byte	.LVL136
 2746 0884 490A0000 		.4byte	0xa49
 2747 0888 15       		.uleb128 0x15
 2748 0889 01       		.uleb128 0x1
 2749 088a 50       		.byte	0x50
 2750 088b 02       		.uleb128 0x2
 2751 088c 74       		.byte	0x74
 2752 088d 00       		.sleb128 0
 2753 088e 00       		.byte	0
 2754 088f 00       		.byte	0
 2755 0890 12       		.uleb128 0x12
 2756 0891 E5020000 		.4byte	.LASF92
 2757 0895 01       		.byte	0x1
 2758 0896 0303     		.2byte	0x303
 2759 0898 00000000 		.4byte	.LFB6
 2760 089c 70000000 		.4byte	.LFE6-.LFB6
 2761 08a0 01       		.uleb128 0x1
 2762 08a1 9C       		.byte	0x9c
 2763 08a2 FF080000 		.4byte	0x8ff
 2764 08a6 10       		.uleb128 0x10
 2765 08a7 6E050000 		.4byte	.LASF38
 2766 08ab 01       		.byte	0x1
 2767 08ac 0303     		.2byte	0x303
 2768 08ae 83000000 		.4byte	0x83
 2769 08b2 BD070000 		.4byte	.LLST45
 2770 08b6 10       		.uleb128 0x10
 2771 08b7 DD050000 		.4byte	.LASF93
 2772 08bb 01       		.byte	0x1
 2773 08bc 0303     		.2byte	0x303
 2774 08be 83000000 		.4byte	0x83
 2775 08c2 E9070000 		.4byte	.LLST46
 2776 08c6 13       		.uleb128 0x13
 2777 08c7 0E000000 		.4byte	.LVL139
 2778 08cb 4D020000 		.4byte	0x24d
 2779 08cf 13       		.uleb128 0x13
 2780 08d0 1E000000 		.4byte	.LVL140
 2781 08d4 72070000 		.4byte	0x772
 2782 08d8 14       		.uleb128 0x14
 2783 08d9 38000000 		.4byte	.LVL141
 2784 08dd 5F020000 		.4byte	0x25f
 2785 08e1 EC080000 		.4byte	0x8ec
 2786 08e5 15       		.uleb128 0x15
 2787 08e6 01       		.uleb128 0x1
 2788 08e7 50       		.byte	0x50
 2789 08e8 02       		.uleb128 0x2
 2790 08e9 75       		.byte	0x75
 2791 08ea 00       		.sleb128 0
 2792 08eb 00       		.byte	0
 2793 08ec 13       		.uleb128 0x13
 2794 08ed 56000000 		.4byte	.LVL142
 2795 08f1 27080000 		.4byte	0x827
 2796 08f5 13       		.uleb128 0x13
 2797 08f6 5A000000 		.4byte	.LVL143
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 90


 2798 08fa D2020000 		.4byte	0x2d2
 2799 08fe 00       		.byte	0
 2800 08ff 12       		.uleb128 0x12
 2801 0900 2E000000 		.4byte	.LASF94
 2802 0904 01       		.byte	0x1
 2803 0905 6003     		.2byte	0x360
 2804 0907 00000000 		.4byte	.LFB8
 2805 090b 44000000 		.4byte	.LFE8-.LFB8
 2806 090f 01       		.uleb128 0x1
 2807 0910 9C       		.byte	0x9c
 2808 0911 28090000 		.4byte	0x928
 2809 0915 13       		.uleb128 0x13
 2810 0916 2C000000 		.4byte	.LVL146
 2811 091a 4D020000 		.4byte	0x24d
 2812 091e 13       		.uleb128 0x13
 2813 091f 30000000 		.4byte	.LVL147
 2814 0923 27080000 		.4byte	0x827
 2815 0927 00       		.byte	0
 2816 0928 1D       		.uleb128 0x1d
 2817 0929 A0040000 		.4byte	.LASF95
 2818 092d 01       		.byte	0x1
 2819 092e 43       		.byte	0x43
 2820 092f 83000000 		.4byte	0x83
 2821 0933 05       		.uleb128 0x5
 2822 0934 03       		.byte	0x3
 2823 0935 00000000 		.4byte	ADC_1_currentConfig
 2824 0939 1E       		.uleb128 0x1e
 2825 093a 49090000 		.4byte	0x949
 2826 093e 49090000 		.4byte	0x949
 2827 0942 1F       		.uleb128 0x1f
 2828 0943 FF000000 		.4byte	0xff
 2829 0947 00       		.byte	0
 2830 0948 00       		.byte	0
 2831 0949 0E       		.uleb128 0xe
 2832 094a 83000000 		.4byte	0x83
 2833 094e 20       		.uleb128 0x20
 2834 094f DE010000 		.4byte	.LASF96
 2835 0953 01       		.byte	0x1
 2836 0954 49       		.byte	0x49
 2837 0955 5E090000 		.4byte	0x95e
 2838 0959 04       		.byte	0x4
 2839 095a 00       		.byte	0
 2840 095b 01       		.byte	0x1
 2841 095c 00       		.byte	0
 2842 095d 00       		.byte	0
 2843 095e 0E       		.uleb128 0xe
 2844 095f 39090000 		.4byte	0x939
 2845 0963 21       		.uleb128 0x21
 2846 0964 2C010000 		.4byte	.LASF97
 2847 0968 01       		.byte	0x1
 2848 0969 3D       		.byte	0x3d
 2849 096a 6B000000 		.4byte	0x6b
 2850 096e 05       		.uleb128 0x5
 2851 096f 03       		.byte	0x3
 2852 0970 00000000 		.4byte	ADC_1_initVar
 2853 0974 21       		.uleb128 0x21
 2854 0975 06060000 		.4byte	.LASF98
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 91


 2855 0979 01       		.byte	0x1
 2856 097a 3F       		.byte	0x3f
 2857 097b 6B000000 		.4byte	0x6b
 2858 097f 05       		.uleb128 0x5
 2859 0980 03       		.byte	0x3
 2860 0981 00000000 		.4byte	ADC_1_selected
 2861 0985 1E       		.uleb128 0x1e
 2862 0986 95090000 		.4byte	0x995
 2863 098a 95090000 		.4byte	0x995
 2864 098e 1F       		.uleb128 0x1f
 2865 098f FF000000 		.4byte	0xff
 2866 0993 00       		.byte	0
 2867 0994 00       		.byte	0
 2868 0995 05       		.uleb128 0x5
 2869 0996 8F000000 		.4byte	0x8f
 2870 099a 21       		.uleb128 0x21
 2871 099b FD030000 		.4byte	.LASF99
 2872 099f 01       		.byte	0x1
 2873 09a0 40       		.byte	0x40
 2874 09a1 AB090000 		.4byte	0x9ab
 2875 09a5 05       		.uleb128 0x5
 2876 09a6 03       		.byte	0x3
 2877 09a7 00000000 		.4byte	ADC_1_offset
 2878 09ab 05       		.uleb128 0x5
 2879 09ac 85090000 		.4byte	0x985
 2880 09b0 1E       		.uleb128 0x1e
 2881 09b1 C0090000 		.4byte	0x9c0
 2882 09b5 C0090000 		.4byte	0x9c0
 2883 09b9 1F       		.uleb128 0x1f
 2884 09ba FF000000 		.4byte	0xff
 2885 09be 00       		.byte	0
 2886 09bf 00       		.byte	0
 2887 09c0 05       		.uleb128 0x5
 2888 09c1 9B000000 		.4byte	0x9b
 2889 09c5 21       		.uleb128 0x21
 2890 09c6 61040000 		.4byte	.LASF100
 2891 09ca 01       		.byte	0x1
 2892 09cb 41       		.byte	0x41
 2893 09cc D6090000 		.4byte	0x9d6
 2894 09d0 05       		.uleb128 0x5
 2895 09d1 03       		.byte	0x3
 2896 09d2 00000000 		.4byte	ADC_1_countsPer10Volt
 2897 09d6 05       		.uleb128 0x5
 2898 09d7 B0090000 		.4byte	0x9b0
 2899 09db 1E       		.uleb128 0x1e
 2900 09dc FD010000 		.4byte	0x1fd
 2901 09e0 EB090000 		.4byte	0x9eb
 2902 09e4 1F       		.uleb128 0x1f
 2903 09e5 FF000000 		.4byte	0xff
 2904 09e9 00       		.byte	0
 2905 09ea 00       		.byte	0
 2906 09eb 22       		.uleb128 0x22
 2907 09ec A7020000 		.4byte	.LASF101
 2908 09f0 03       		.byte	0x3
 2909 09f1 EC01     		.2byte	0x1ec
 2910 09f3 F7090000 		.4byte	0x9f7
 2911 09f7 0E       		.uleb128 0xe
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 92


 2912 09f8 DB090000 		.4byte	0x9db
 2913 09fc 23       		.uleb128 0x23
 2914 09fd 64000000 		.4byte	.LASF102
 2915 0a01 64000000 		.4byte	.LASF102
 2916 0a05 04       		.byte	0x4
 2917 0a06 27       		.byte	0x27
 2918 0a07 23       		.uleb128 0x23
 2919 0a08 8A050000 		.4byte	.LASF103
 2920 0a0c 8A050000 		.4byte	.LASF103
 2921 0a10 04       		.byte	0x4
 2922 0a11 29       		.byte	0x29
 2923 0a12 23       		.uleb128 0x23
 2924 0a13 5F030000 		.4byte	.LASF104
 2925 0a17 5F030000 		.4byte	.LASF104
 2926 0a1b 04       		.byte	0x4
 2927 0a1c 1D       		.byte	0x1d
 2928 0a1d 23       		.uleb128 0x23
 2929 0a1e C4060000 		.4byte	.LASF105
 2930 0a22 C4060000 		.4byte	.LASF105
 2931 0a26 05       		.byte	0x5
 2932 0a27 FA       		.byte	0xfa
 2933 0a28 23       		.uleb128 0x23
 2934 0a29 CA030000 		.4byte	.LASF106
 2935 0a2d CA030000 		.4byte	.LASF106
 2936 0a31 05       		.byte	0x5
 2937 0a32 D3       		.byte	0xd3
 2938 0a33 23       		.uleb128 0x23
 2939 0a34 4E010000 		.4byte	.LASF107
 2940 0a38 4E010000 		.4byte	.LASF107
 2941 0a3c 05       		.byte	0x5
 2942 0a3d D0       		.byte	0xd0
 2943 0a3e 23       		.uleb128 0x23
 2944 0a3f F3000000 		.4byte	.LASF108
 2945 0a43 F3000000 		.4byte	.LASF108
 2946 0a47 05       		.byte	0x5
 2947 0a48 ED       		.byte	0xed
 2948 0a49 23       		.uleb128 0x23
 2949 0a4a E1030000 		.4byte	.LASF109
 2950 0a4e E1030000 		.4byte	.LASF109
 2951 0a52 06       		.byte	0x6
 2952 0a53 18       		.byte	0x18
 2953 0a54 00       		.byte	0
 2954              		.section	.debug_abbrev,"",%progbits
 2955              	.Ldebug_abbrev0:
 2956 0000 01       		.uleb128 0x1
 2957 0001 11       		.uleb128 0x11
 2958 0002 01       		.byte	0x1
 2959 0003 25       		.uleb128 0x25
 2960 0004 0E       		.uleb128 0xe
 2961 0005 13       		.uleb128 0x13
 2962 0006 0B       		.uleb128 0xb
 2963 0007 03       		.uleb128 0x3
 2964 0008 0E       		.uleb128 0xe
 2965 0009 1B       		.uleb128 0x1b
 2966 000a 0E       		.uleb128 0xe
 2967 000b 55       		.uleb128 0x55
 2968 000c 17       		.uleb128 0x17
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 93


 2969 000d 11       		.uleb128 0x11
 2970 000e 01       		.uleb128 0x1
 2971 000f 10       		.uleb128 0x10
 2972 0010 17       		.uleb128 0x17
 2973 0011 00       		.byte	0
 2974 0012 00       		.byte	0
 2975 0013 02       		.uleb128 0x2
 2976 0014 24       		.uleb128 0x24
 2977 0015 00       		.byte	0
 2978 0016 0B       		.uleb128 0xb
 2979 0017 0B       		.uleb128 0xb
 2980 0018 3E       		.uleb128 0x3e
 2981 0019 0B       		.uleb128 0xb
 2982 001a 03       		.uleb128 0x3
 2983 001b 0E       		.uleb128 0xe
 2984 001c 00       		.byte	0
 2985 001d 00       		.byte	0
 2986 001e 03       		.uleb128 0x3
 2987 001f 24       		.uleb128 0x24
 2988 0020 00       		.byte	0
 2989 0021 0B       		.uleb128 0xb
 2990 0022 0B       		.uleb128 0xb
 2991 0023 3E       		.uleb128 0x3e
 2992 0024 0B       		.uleb128 0xb
 2993 0025 03       		.uleb128 0x3
 2994 0026 08       		.uleb128 0x8
 2995 0027 00       		.byte	0
 2996 0028 00       		.byte	0
 2997 0029 04       		.uleb128 0x4
 2998 002a 16       		.uleb128 0x16
 2999 002b 00       		.byte	0
 3000 002c 03       		.uleb128 0x3
 3001 002d 0E       		.uleb128 0xe
 3002 002e 3A       		.uleb128 0x3a
 3003 002f 0B       		.uleb128 0xb
 3004 0030 3B       		.uleb128 0x3b
 3005 0031 05       		.uleb128 0x5
 3006 0032 49       		.uleb128 0x49
 3007 0033 13       		.uleb128 0x13
 3008 0034 00       		.byte	0
 3009 0035 00       		.byte	0
 3010 0036 05       		.uleb128 0x5
 3011 0037 35       		.uleb128 0x35
 3012 0038 00       		.byte	0
 3013 0039 49       		.uleb128 0x49
 3014 003a 13       		.uleb128 0x13
 3015 003b 00       		.byte	0
 3016 003c 00       		.byte	0
 3017 003d 06       		.uleb128 0x6
 3018 003e 0F       		.uleb128 0xf
 3019 003f 00       		.byte	0
 3020 0040 0B       		.uleb128 0xb
 3021 0041 0B       		.uleb128 0xb
 3022 0042 49       		.uleb128 0x49
 3023 0043 13       		.uleb128 0x13
 3024 0044 00       		.byte	0
 3025 0045 00       		.byte	0
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 94


 3026 0046 07       		.uleb128 0x7
 3027 0047 15       		.uleb128 0x15
 3028 0048 00       		.byte	0
 3029 0049 27       		.uleb128 0x27
 3030 004a 19       		.uleb128 0x19
 3031 004b 00       		.byte	0
 3032 004c 00       		.byte	0
 3033 004d 08       		.uleb128 0x8
 3034 004e 13       		.uleb128 0x13
 3035 004f 01       		.byte	0x1
 3036 0050 0B       		.uleb128 0xb
 3037 0051 0B       		.uleb128 0xb
 3038 0052 3A       		.uleb128 0x3a
 3039 0053 0B       		.uleb128 0xb
 3040 0054 3B       		.uleb128 0x3b
 3041 0055 0B       		.uleb128 0xb
 3042 0056 01       		.uleb128 0x1
 3043 0057 13       		.uleb128 0x13
 3044 0058 00       		.byte	0
 3045 0059 00       		.byte	0
 3046 005a 09       		.uleb128 0x9
 3047 005b 0D       		.uleb128 0xd
 3048 005c 00       		.byte	0
 3049 005d 03       		.uleb128 0x3
 3050 005e 0E       		.uleb128 0xe
 3051 005f 3A       		.uleb128 0x3a
 3052 0060 0B       		.uleb128 0xb
 3053 0061 3B       		.uleb128 0x3b
 3054 0062 0B       		.uleb128 0xb
 3055 0063 49       		.uleb128 0x49
 3056 0064 13       		.uleb128 0x13
 3057 0065 38       		.uleb128 0x38
 3058 0066 0B       		.uleb128 0xb
 3059 0067 00       		.byte	0
 3060 0068 00       		.byte	0
 3061 0069 0A       		.uleb128 0xa
 3062 006a 16       		.uleb128 0x16
 3063 006b 00       		.byte	0
 3064 006c 03       		.uleb128 0x3
 3065 006d 0E       		.uleb128 0xe
 3066 006e 3A       		.uleb128 0x3a
 3067 006f 0B       		.uleb128 0xb
 3068 0070 3B       		.uleb128 0x3b
 3069 0071 0B       		.uleb128 0xb
 3070 0072 49       		.uleb128 0x49
 3071 0073 13       		.uleb128 0x13
 3072 0074 00       		.byte	0
 3073 0075 00       		.byte	0
 3074 0076 0B       		.uleb128 0xb
 3075 0077 2E       		.uleb128 0x2e
 3076 0078 01       		.byte	0x1
 3077 0079 03       		.uleb128 0x3
 3078 007a 0E       		.uleb128 0xe
 3079 007b 3A       		.uleb128 0x3a
 3080 007c 0B       		.uleb128 0xb
 3081 007d 3B       		.uleb128 0x3b
 3082 007e 05       		.uleb128 0x5
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 95


 3083 007f 27       		.uleb128 0x27
 3084 0080 19       		.uleb128 0x19
 3085 0081 11       		.uleb128 0x11
 3086 0082 01       		.uleb128 0x1
 3087 0083 12       		.uleb128 0x12
 3088 0084 06       		.uleb128 0x6
 3089 0085 40       		.uleb128 0x40
 3090 0086 18       		.uleb128 0x18
 3091 0087 9742     		.uleb128 0x2117
 3092 0089 19       		.uleb128 0x19
 3093 008a 01       		.uleb128 0x1
 3094 008b 13       		.uleb128 0x13
 3095 008c 00       		.byte	0
 3096 008d 00       		.byte	0
 3097 008e 0C       		.uleb128 0xc
 3098 008f 05       		.uleb128 0x5
 3099 0090 00       		.byte	0
 3100 0091 03       		.uleb128 0x3
 3101 0092 0E       		.uleb128 0xe
 3102 0093 3A       		.uleb128 0x3a
 3103 0094 0B       		.uleb128 0xb
 3104 0095 3B       		.uleb128 0x3b
 3105 0096 05       		.uleb128 0x5
 3106 0097 49       		.uleb128 0x49
 3107 0098 13       		.uleb128 0x13
 3108 0099 02       		.uleb128 0x2
 3109 009a 18       		.uleb128 0x18
 3110 009b 00       		.byte	0
 3111 009c 00       		.byte	0
 3112 009d 0D       		.uleb128 0xd
 3113 009e 34       		.uleb128 0x34
 3114 009f 00       		.byte	0
 3115 00a0 03       		.uleb128 0x3
 3116 00a1 0E       		.uleb128 0xe
 3117 00a2 3A       		.uleb128 0x3a
 3118 00a3 0B       		.uleb128 0xb
 3119 00a4 3B       		.uleb128 0x3b
 3120 00a5 05       		.uleb128 0x5
 3121 00a6 49       		.uleb128 0x49
 3122 00a7 13       		.uleb128 0x13
 3123 00a8 02       		.uleb128 0x2
 3124 00a9 17       		.uleb128 0x17
 3125 00aa 00       		.byte	0
 3126 00ab 00       		.byte	0
 3127 00ac 0E       		.uleb128 0xe
 3128 00ad 26       		.uleb128 0x26
 3129 00ae 00       		.byte	0
 3130 00af 49       		.uleb128 0x49
 3131 00b0 13       		.uleb128 0x13
 3132 00b1 00       		.byte	0
 3133 00b2 00       		.byte	0
 3134 00b3 0F       		.uleb128 0xf
 3135 00b4 2E       		.uleb128 0x2e
 3136 00b5 01       		.byte	0x1
 3137 00b6 03       		.uleb128 0x3
 3138 00b7 0E       		.uleb128 0xe
 3139 00b8 3A       		.uleb128 0x3a
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 96


 3140 00b9 0B       		.uleb128 0xb
 3141 00ba 3B       		.uleb128 0x3b
 3142 00bb 05       		.uleb128 0x5
 3143 00bc 27       		.uleb128 0x27
 3144 00bd 19       		.uleb128 0x19
 3145 00be 49       		.uleb128 0x49
 3146 00bf 13       		.uleb128 0x13
 3147 00c0 11       		.uleb128 0x11
 3148 00c1 01       		.uleb128 0x1
 3149 00c2 12       		.uleb128 0x12
 3150 00c3 06       		.uleb128 0x6
 3151 00c4 40       		.uleb128 0x40
 3152 00c5 18       		.uleb128 0x18
 3153 00c6 9742     		.uleb128 0x2117
 3154 00c8 19       		.uleb128 0x19
 3155 00c9 01       		.uleb128 0x1
 3156 00ca 13       		.uleb128 0x13
 3157 00cb 00       		.byte	0
 3158 00cc 00       		.byte	0
 3159 00cd 10       		.uleb128 0x10
 3160 00ce 05       		.uleb128 0x5
 3161 00cf 00       		.byte	0
 3162 00d0 03       		.uleb128 0x3
 3163 00d1 0E       		.uleb128 0xe
 3164 00d2 3A       		.uleb128 0x3a
 3165 00d3 0B       		.uleb128 0xb
 3166 00d4 3B       		.uleb128 0x3b
 3167 00d5 05       		.uleb128 0x5
 3168 00d6 49       		.uleb128 0x49
 3169 00d7 13       		.uleb128 0x13
 3170 00d8 02       		.uleb128 0x2
 3171 00d9 17       		.uleb128 0x17
 3172 00da 00       		.byte	0
 3173 00db 00       		.byte	0
 3174 00dc 11       		.uleb128 0x11
 3175 00dd 2E       		.uleb128 0x2e
 3176 00de 00       		.byte	0
 3177 00df 3F       		.uleb128 0x3f
 3178 00e0 19       		.uleb128 0x19
 3179 00e1 03       		.uleb128 0x3
 3180 00e2 0E       		.uleb128 0xe
 3181 00e3 3A       		.uleb128 0x3a
 3182 00e4 0B       		.uleb128 0xb
 3183 00e5 3B       		.uleb128 0x3b
 3184 00e6 05       		.uleb128 0x5
 3185 00e7 27       		.uleb128 0x27
 3186 00e8 19       		.uleb128 0x19
 3187 00e9 11       		.uleb128 0x11
 3188 00ea 01       		.uleb128 0x1
 3189 00eb 12       		.uleb128 0x12
 3190 00ec 06       		.uleb128 0x6
 3191 00ed 40       		.uleb128 0x40
 3192 00ee 18       		.uleb128 0x18
 3193 00ef 9742     		.uleb128 0x2117
 3194 00f1 19       		.uleb128 0x19
 3195 00f2 00       		.byte	0
 3196 00f3 00       		.byte	0
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 97


 3197 00f4 12       		.uleb128 0x12
 3198 00f5 2E       		.uleb128 0x2e
 3199 00f6 01       		.byte	0x1
 3200 00f7 3F       		.uleb128 0x3f
 3201 00f8 19       		.uleb128 0x19
 3202 00f9 03       		.uleb128 0x3
 3203 00fa 0E       		.uleb128 0xe
 3204 00fb 3A       		.uleb128 0x3a
 3205 00fc 0B       		.uleb128 0xb
 3206 00fd 3B       		.uleb128 0x3b
 3207 00fe 05       		.uleb128 0x5
 3208 00ff 27       		.uleb128 0x27
 3209 0100 19       		.uleb128 0x19
 3210 0101 11       		.uleb128 0x11
 3211 0102 01       		.uleb128 0x1
 3212 0103 12       		.uleb128 0x12
 3213 0104 06       		.uleb128 0x6
 3214 0105 40       		.uleb128 0x40
 3215 0106 18       		.uleb128 0x18
 3216 0107 9742     		.uleb128 0x2117
 3217 0109 19       		.uleb128 0x19
 3218 010a 01       		.uleb128 0x1
 3219 010b 13       		.uleb128 0x13
 3220 010c 00       		.byte	0
 3221 010d 00       		.byte	0
 3222 010e 13       		.uleb128 0x13
 3223 010f 898201   		.uleb128 0x4109
 3224 0112 00       		.byte	0
 3225 0113 11       		.uleb128 0x11
 3226 0114 01       		.uleb128 0x1
 3227 0115 31       		.uleb128 0x31
 3228 0116 13       		.uleb128 0x13
 3229 0117 00       		.byte	0
 3230 0118 00       		.byte	0
 3231 0119 14       		.uleb128 0x14
 3232 011a 898201   		.uleb128 0x4109
 3233 011d 01       		.byte	0x1
 3234 011e 11       		.uleb128 0x11
 3235 011f 01       		.uleb128 0x1
 3236 0120 31       		.uleb128 0x31
 3237 0121 13       		.uleb128 0x13
 3238 0122 01       		.uleb128 0x1
 3239 0123 13       		.uleb128 0x13
 3240 0124 00       		.byte	0
 3241 0125 00       		.byte	0
 3242 0126 15       		.uleb128 0x15
 3243 0127 8A8201   		.uleb128 0x410a
 3244 012a 00       		.byte	0
 3245 012b 02       		.uleb128 0x2
 3246 012c 18       		.uleb128 0x18
 3247 012d 9142     		.uleb128 0x2111
 3248 012f 18       		.uleb128 0x18
 3249 0130 00       		.byte	0
 3250 0131 00       		.byte	0
 3251 0132 16       		.uleb128 0x16
 3252 0133 898201   		.uleb128 0x4109
 3253 0136 01       		.byte	0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 98


 3254 0137 11       		.uleb128 0x11
 3255 0138 01       		.uleb128 0x1
 3256 0139 31       		.uleb128 0x31
 3257 013a 13       		.uleb128 0x13
 3258 013b 00       		.byte	0
 3259 013c 00       		.byte	0
 3260 013d 17       		.uleb128 0x17
 3261 013e 34       		.uleb128 0x34
 3262 013f 00       		.byte	0
 3263 0140 03       		.uleb128 0x3
 3264 0141 0E       		.uleb128 0xe
 3265 0142 3A       		.uleb128 0x3a
 3266 0143 0B       		.uleb128 0xb
 3267 0144 3B       		.uleb128 0x3b
 3268 0145 05       		.uleb128 0x5
 3269 0146 49       		.uleb128 0x49
 3270 0147 13       		.uleb128 0x13
 3271 0148 02       		.uleb128 0x2
 3272 0149 18       		.uleb128 0x18
 3273 014a 00       		.byte	0
 3274 014b 00       		.byte	0
 3275 014c 18       		.uleb128 0x18
 3276 014d 2E       		.uleb128 0x2e
 3277 014e 01       		.byte	0x1
 3278 014f 3F       		.uleb128 0x3f
 3279 0150 19       		.uleb128 0x19
 3280 0151 03       		.uleb128 0x3
 3281 0152 0E       		.uleb128 0xe
 3282 0153 3A       		.uleb128 0x3a
 3283 0154 0B       		.uleb128 0xb
 3284 0155 3B       		.uleb128 0x3b
 3285 0156 05       		.uleb128 0x5
 3286 0157 27       		.uleb128 0x27
 3287 0158 19       		.uleb128 0x19
 3288 0159 49       		.uleb128 0x49
 3289 015a 13       		.uleb128 0x13
 3290 015b 11       		.uleb128 0x11
 3291 015c 01       		.uleb128 0x1
 3292 015d 12       		.uleb128 0x12
 3293 015e 06       		.uleb128 0x6
 3294 015f 40       		.uleb128 0x40
 3295 0160 18       		.uleb128 0x18
 3296 0161 9742     		.uleb128 0x2117
 3297 0163 19       		.uleb128 0x19
 3298 0164 01       		.uleb128 0x1
 3299 0165 13       		.uleb128 0x13
 3300 0166 00       		.byte	0
 3301 0167 00       		.byte	0
 3302 0168 19       		.uleb128 0x19
 3303 0169 34       		.uleb128 0x34
 3304 016a 00       		.byte	0
 3305 016b 03       		.uleb128 0x3
 3306 016c 08       		.uleb128 0x8
 3307 016d 3A       		.uleb128 0x3a
 3308 016e 0B       		.uleb128 0xb
 3309 016f 3B       		.uleb128 0x3b
 3310 0170 05       		.uleb128 0x5
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 99


 3311 0171 49       		.uleb128 0x49
 3312 0172 13       		.uleb128 0x13
 3313 0173 02       		.uleb128 0x2
 3314 0174 17       		.uleb128 0x17
 3315 0175 00       		.byte	0
 3316 0176 00       		.byte	0
 3317 0177 1A       		.uleb128 0x1a
 3318 0178 34       		.uleb128 0x34
 3319 0179 00       		.byte	0
 3320 017a 03       		.uleb128 0x3
 3321 017b 0E       		.uleb128 0xe
 3322 017c 3A       		.uleb128 0x3a
 3323 017d 0B       		.uleb128 0xb
 3324 017e 3B       		.uleb128 0x3b
 3325 017f 05       		.uleb128 0x5
 3326 0180 49       		.uleb128 0x49
 3327 0181 13       		.uleb128 0x13
 3328 0182 00       		.byte	0
 3329 0183 00       		.byte	0
 3330 0184 1B       		.uleb128 0x1b
 3331 0185 2E       		.uleb128 0x2e
 3332 0186 01       		.byte	0x1
 3333 0187 3F       		.uleb128 0x3f
 3334 0188 19       		.uleb128 0x19
 3335 0189 03       		.uleb128 0x3
 3336 018a 0E       		.uleb128 0xe
 3337 018b 3A       		.uleb128 0x3a
 3338 018c 0B       		.uleb128 0xb
 3339 018d 3B       		.uleb128 0x3b
 3340 018e 05       		.uleb128 0x5
 3341 018f 27       		.uleb128 0x27
 3342 0190 19       		.uleb128 0x19
 3343 0191 49       		.uleb128 0x49
 3344 0192 13       		.uleb128 0x13
 3345 0193 11       		.uleb128 0x11
 3346 0194 01       		.uleb128 0x1
 3347 0195 12       		.uleb128 0x12
 3348 0196 06       		.uleb128 0x6
 3349 0197 40       		.uleb128 0x40
 3350 0198 18       		.uleb128 0x18
 3351 0199 9642     		.uleb128 0x2116
 3352 019b 19       		.uleb128 0x19
 3353 019c 01       		.uleb128 0x1
 3354 019d 13       		.uleb128 0x13
 3355 019e 00       		.byte	0
 3356 019f 00       		.byte	0
 3357 01a0 1C       		.uleb128 0x1c
 3358 01a1 2E       		.uleb128 0x2e
 3359 01a2 01       		.byte	0x1
 3360 01a3 3F       		.uleb128 0x3f
 3361 01a4 19       		.uleb128 0x19
 3362 01a5 03       		.uleb128 0x3
 3363 01a6 0E       		.uleb128 0xe
 3364 01a7 3A       		.uleb128 0x3a
 3365 01a8 0B       		.uleb128 0xb
 3366 01a9 3B       		.uleb128 0x3b
 3367 01aa 05       		.uleb128 0x5
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 100


 3368 01ab 27       		.uleb128 0x27
 3369 01ac 19       		.uleb128 0x19
 3370 01ad 11       		.uleb128 0x11
 3371 01ae 01       		.uleb128 0x1
 3372 01af 12       		.uleb128 0x12
 3373 01b0 06       		.uleb128 0x6
 3374 01b1 40       		.uleb128 0x40
 3375 01b2 18       		.uleb128 0x18
 3376 01b3 9642     		.uleb128 0x2116
 3377 01b5 19       		.uleb128 0x19
 3378 01b6 01       		.uleb128 0x1
 3379 01b7 13       		.uleb128 0x13
 3380 01b8 00       		.byte	0
 3381 01b9 00       		.byte	0
 3382 01ba 1D       		.uleb128 0x1d
 3383 01bb 34       		.uleb128 0x34
 3384 01bc 00       		.byte	0
 3385 01bd 03       		.uleb128 0x3
 3386 01be 0E       		.uleb128 0xe
 3387 01bf 3A       		.uleb128 0x3a
 3388 01c0 0B       		.uleb128 0xb
 3389 01c1 3B       		.uleb128 0x3b
 3390 01c2 0B       		.uleb128 0xb
 3391 01c3 49       		.uleb128 0x49
 3392 01c4 13       		.uleb128 0x13
 3393 01c5 02       		.uleb128 0x2
 3394 01c6 18       		.uleb128 0x18
 3395 01c7 00       		.byte	0
 3396 01c8 00       		.byte	0
 3397 01c9 1E       		.uleb128 0x1e
 3398 01ca 01       		.uleb128 0x1
 3399 01cb 01       		.byte	0x1
 3400 01cc 49       		.uleb128 0x49
 3401 01cd 13       		.uleb128 0x13
 3402 01ce 01       		.uleb128 0x1
 3403 01cf 13       		.uleb128 0x13
 3404 01d0 00       		.byte	0
 3405 01d1 00       		.byte	0
 3406 01d2 1F       		.uleb128 0x1f
 3407 01d3 21       		.uleb128 0x21
 3408 01d4 00       		.byte	0
 3409 01d5 49       		.uleb128 0x49
 3410 01d6 13       		.uleb128 0x13
 3411 01d7 2F       		.uleb128 0x2f
 3412 01d8 0B       		.uleb128 0xb
 3413 01d9 00       		.byte	0
 3414 01da 00       		.byte	0
 3415 01db 20       		.uleb128 0x20
 3416 01dc 34       		.uleb128 0x34
 3417 01dd 00       		.byte	0
 3418 01de 03       		.uleb128 0x3
 3419 01df 0E       		.uleb128 0xe
 3420 01e0 3A       		.uleb128 0x3a
 3421 01e1 0B       		.uleb128 0xb
 3422 01e2 3B       		.uleb128 0x3b
 3423 01e3 0B       		.uleb128 0xb
 3424 01e4 49       		.uleb128 0x49
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 101


 3425 01e5 13       		.uleb128 0x13
 3426 01e6 1C       		.uleb128 0x1c
 3427 01e7 0A       		.uleb128 0xa
 3428 01e8 00       		.byte	0
 3429 01e9 00       		.byte	0
 3430 01ea 21       		.uleb128 0x21
 3431 01eb 34       		.uleb128 0x34
 3432 01ec 00       		.byte	0
 3433 01ed 03       		.uleb128 0x3
 3434 01ee 0E       		.uleb128 0xe
 3435 01ef 3A       		.uleb128 0x3a
 3436 01f0 0B       		.uleb128 0xb
 3437 01f1 3B       		.uleb128 0x3b
 3438 01f2 0B       		.uleb128 0xb
 3439 01f3 49       		.uleb128 0x49
 3440 01f4 13       		.uleb128 0x13
 3441 01f5 3F       		.uleb128 0x3f
 3442 01f6 19       		.uleb128 0x19
 3443 01f7 02       		.uleb128 0x2
 3444 01f8 18       		.uleb128 0x18
 3445 01f9 00       		.byte	0
 3446 01fa 00       		.byte	0
 3447 01fb 22       		.uleb128 0x22
 3448 01fc 34       		.uleb128 0x34
 3449 01fd 00       		.byte	0
 3450 01fe 03       		.uleb128 0x3
 3451 01ff 0E       		.uleb128 0xe
 3452 0200 3A       		.uleb128 0x3a
 3453 0201 0B       		.uleb128 0xb
 3454 0202 3B       		.uleb128 0x3b
 3455 0203 05       		.uleb128 0x5
 3456 0204 49       		.uleb128 0x49
 3457 0205 13       		.uleb128 0x13
 3458 0206 3F       		.uleb128 0x3f
 3459 0207 19       		.uleb128 0x19
 3460 0208 3C       		.uleb128 0x3c
 3461 0209 19       		.uleb128 0x19
 3462 020a 00       		.byte	0
 3463 020b 00       		.byte	0
 3464 020c 23       		.uleb128 0x23
 3465 020d 2E       		.uleb128 0x2e
 3466 020e 00       		.byte	0
 3467 020f 3F       		.uleb128 0x3f
 3468 0210 19       		.uleb128 0x19
 3469 0211 3C       		.uleb128 0x3c
 3470 0212 19       		.uleb128 0x19
 3471 0213 6E       		.uleb128 0x6e
 3472 0214 0E       		.uleb128 0xe
 3473 0215 03       		.uleb128 0x3
 3474 0216 0E       		.uleb128 0xe
 3475 0217 3A       		.uleb128 0x3a
 3476 0218 0B       		.uleb128 0xb
 3477 0219 3B       		.uleb128 0x3b
 3478 021a 0B       		.uleb128 0xb
 3479 021b 00       		.byte	0
 3480 021c 00       		.byte	0
 3481 021d 00       		.byte	0
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 102


 3482              		.section	.debug_loc,"",%progbits
 3483              	.Ldebug_loc0:
 3484              	.LLST0:
 3485 0000 04000000 		.4byte	.LVL1
 3486 0004 1C000000 		.4byte	.LVL4
 3487 0008 0100     		.2byte	0x1
 3488 000a 53       		.byte	0x53
 3489 000b 1C000000 		.4byte	.LVL4
 3490 000f 20000000 		.4byte	.LVL5
 3491 0013 0700     		.2byte	0x7
 3492 0015 73       		.byte	0x73
 3493 0016 00       		.sleb128 0
 3494 0017 40       		.byte	0x40
 3495 0018 49       		.byte	0x49
 3496 0019 24       		.byte	0x24
 3497 001a 21       		.byte	0x21
 3498 001b 9F       		.byte	0x9f
 3499 001c 26000000 		.4byte	.LVL6
 3500 0020 34000000 		.4byte	.LFE5
 3501 0024 0100     		.2byte	0x1
 3502 0026 53       		.byte	0x53
 3503 0027 00000000 		.4byte	0
 3504 002b 00000000 		.4byte	0
 3505              	.LLST1:
 3506 002f 00000000 		.4byte	.LVL7
 3507 0033 02000000 		.4byte	.LVL8
 3508 0037 0100     		.2byte	0x1
 3509 0039 50       		.byte	0x50
 3510 003a 02000000 		.4byte	.LVL8
 3511 003e 58000000 		.4byte	.LFE13
 3512 0042 0400     		.2byte	0x4
 3513 0044 F3       		.byte	0xf3
 3514 0045 01       		.uleb128 0x1
 3515 0046 50       		.byte	0x50
 3516 0047 9F       		.byte	0x9f
 3517 0048 00000000 		.4byte	0
 3518 004c 00000000 		.4byte	0
 3519              	.LLST2:
 3520 0050 00000000 		.4byte	.LVL7
 3521 0054 46000000 		.4byte	.LVL13
 3522 0058 0200     		.2byte	0x2
 3523 005a 30       		.byte	0x30
 3524 005b 9F       		.byte	0x9f
 3525 005c 46000000 		.4byte	.LVL13
 3526 0060 58000000 		.4byte	.LFE13
 3527 0064 0100     		.2byte	0x1
 3528 0066 50       		.byte	0x50
 3529 0067 00000000 		.4byte	0
 3530 006b 00000000 		.4byte	0
 3531              	.LLST3:
 3532 006f 0A000000 		.4byte	.LVL9
 3533 0073 14000000 		.4byte	.LVL10
 3534 0077 0100     		.2byte	0x1
 3535 0079 52       		.byte	0x52
 3536 007a 28000000 		.4byte	.LVL11
 3537 007e 2C000000 		.4byte	.LVL12
 3538 0082 0100     		.2byte	0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 103


 3539 0084 52       		.byte	0x52
 3540 0085 00000000 		.4byte	0
 3541 0089 00000000 		.4byte	0
 3542              	.LLST4:
 3543 008d 00000000 		.4byte	.LVL14
 3544 0091 07000000 		.4byte	.LVL15-1
 3545 0095 0100     		.2byte	0x1
 3546 0097 50       		.byte	0x50
 3547 0098 07000000 		.4byte	.LVL15-1
 3548 009c 7E000000 		.4byte	.LVL21
 3549 00a0 0100     		.2byte	0x1
 3550 00a2 54       		.byte	0x54
 3551 00a3 7E000000 		.4byte	.LVL21
 3552 00a7 AC000000 		.4byte	.LFE4
 3553 00ab 0400     		.2byte	0x4
 3554 00ad F3       		.byte	0xf3
 3555 00ae 01       		.uleb128 0x1
 3556 00af 50       		.byte	0x50
 3557 00b0 9F       		.byte	0x9f
 3558 00b1 00000000 		.4byte	0
 3559 00b5 00000000 		.4byte	0
 3560              	.LLST5:
 3561 00b9 64000000 		.4byte	.LVL18
 3562 00bd 68000000 		.4byte	.LVL19
 3563 00c1 0200     		.2byte	0x2
 3564 00c3 30       		.byte	0x30
 3565 00c4 9F       		.byte	0x9f
 3566 00c5 68000000 		.4byte	.LVL19
 3567 00c9 AC000000 		.4byte	.LFE4
 3568 00cd 0100     		.2byte	0x1
 3569 00cf 53       		.byte	0x53
 3570 00d0 00000000 		.4byte	0
 3571 00d4 00000000 		.4byte	0
 3572              	.LLST6:
 3573 00d8 68000000 		.4byte	.LVL19
 3574 00dc 78000000 		.4byte	.LVL20
 3575 00e0 0400     		.2byte	0x4
 3576 00e2 0A       		.byte	0xa
 3577 00e3 0001     		.2byte	0x100
 3578 00e5 9F       		.byte	0x9f
 3579 00e6 00000000 		.4byte	0
 3580 00ea 00000000 		.4byte	0
 3581              	.LLST7:
 3582 00ee 00000000 		.4byte	.LVL23
 3583 00f2 04000000 		.4byte	.LVL24
 3584 00f6 0100     		.2byte	0x1
 3585 00f8 50       		.byte	0x50
 3586 00f9 04000000 		.4byte	.LVL24
 3587 00fd 10000000 		.4byte	.LFE10
 3588 0101 0400     		.2byte	0x4
 3589 0103 F3       		.byte	0xf3
 3590 0104 01       		.uleb128 0x1
 3591 0105 50       		.byte	0x50
 3592 0106 9F       		.byte	0x9f
 3593 0107 00000000 		.4byte	0
 3594 010b 00000000 		.4byte	0
 3595              	.LLST8:
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 104


 3596 010f 00000000 		.4byte	.LVL25
 3597 0113 18000000 		.4byte	.LVL27
 3598 0117 0100     		.2byte	0x1
 3599 0119 50       		.byte	0x50
 3600 011a 18000000 		.4byte	.LVL27
 3601 011e 2C000000 		.4byte	.LFE11
 3602 0122 0100     		.2byte	0x1
 3603 0124 50       		.byte	0x50
 3604 0125 00000000 		.4byte	0
 3605 0129 00000000 		.4byte	0
 3606              	.LLST9:
 3607 012d 00000000 		.4byte	.LVL28
 3608 0131 0A000000 		.4byte	.LVL30
 3609 0135 0100     		.2byte	0x1
 3610 0137 50       		.byte	0x50
 3611 0138 0A000000 		.4byte	.LVL30
 3612 013c 2C000000 		.4byte	.LVL34
 3613 0140 0100     		.2byte	0x1
 3614 0142 51       		.byte	0x51
 3615 0143 2C000000 		.4byte	.LVL34
 3616 0147 2E000000 		.4byte	.LVL35
 3617 014b 0100     		.2byte	0x1
 3618 014d 50       		.byte	0x50
 3619 014e 2E000000 		.4byte	.LVL35
 3620 0152 38000000 		.4byte	.LFE12
 3621 0156 0100     		.2byte	0x1
 3622 0158 51       		.byte	0x51
 3623 0159 00000000 		.4byte	0
 3624 015d 00000000 		.4byte	0
 3625              	.LLST10:
 3626 0161 02000000 		.4byte	.LVL29
 3627 0165 0A000000 		.4byte	.LVL30
 3628 0169 0200     		.2byte	0x2
 3629 016b 30       		.byte	0x30
 3630 016c 9F       		.byte	0x9f
 3631 016d 12000000 		.4byte	.LVL31
 3632 0171 2C000000 		.4byte	.LVL34
 3633 0175 0100     		.2byte	0x1
 3634 0177 50       		.byte	0x50
 3635 0178 2C000000 		.4byte	.LVL34
 3636 017c 2E000000 		.4byte	.LVL35
 3637 0180 0200     		.2byte	0x2
 3638 0182 30       		.byte	0x30
 3639 0183 9F       		.byte	0x9f
 3640 0184 2E000000 		.4byte	.LVL35
 3641 0188 38000000 		.4byte	.LFE12
 3642 018c 0100     		.2byte	0x1
 3643 018e 50       		.byte	0x50
 3644 018f 00000000 		.4byte	0
 3645 0193 00000000 		.4byte	0
 3646              	.LLST11:
 3647 0197 02000000 		.4byte	.LVL29
 3648 019b 0A000000 		.4byte	.LVL30
 3649 019f 0600     		.2byte	0x6
 3650 01a1 0C       		.byte	0xc
 3651 01a2 FFFFFF03 		.4byte	0x3ffffff
 3652 01a6 9F       		.byte	0x9f
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 105


 3653 01a7 0A000000 		.4byte	.LVL30
 3654 01ab 26000000 		.4byte	.LVL33
 3655 01af 0100     		.2byte	0x1
 3656 01b1 52       		.byte	0x52
 3657 01b2 2C000000 		.4byte	.LVL34
 3658 01b6 2E000000 		.4byte	.LVL35
 3659 01ba 0600     		.2byte	0x6
 3660 01bc 0C       		.byte	0xc
 3661 01bd FFFFFF03 		.4byte	0x3ffffff
 3662 01c1 9F       		.byte	0x9f
 3663 01c2 00000000 		.4byte	0
 3664 01c6 00000000 		.4byte	0
 3665              	.LLST12:
 3666 01ca 00000000 		.4byte	.LVL36
 3667 01ce 1A000000 		.4byte	.LVL37
 3668 01d2 0100     		.2byte	0x1
 3669 01d4 50       		.byte	0x50
 3670 01d5 1A000000 		.4byte	.LVL37
 3671 01d9 34000000 		.4byte	.LVL39
 3672 01dd 0100     		.2byte	0x1
 3673 01df 54       		.byte	0x54
 3674 01e0 34000000 		.4byte	.LVL39
 3675 01e4 42000000 		.4byte	.LVL41
 3676 01e8 0400     		.2byte	0x4
 3677 01ea F3       		.byte	0xf3
 3678 01eb 01       		.uleb128 0x1
 3679 01ec 50       		.byte	0x50
 3680 01ed 9F       		.byte	0x9f
 3681 01ee 42000000 		.4byte	.LVL41
 3682 01f2 44000000 		.4byte	.LVL42
 3683 01f6 0100     		.2byte	0x1
 3684 01f8 54       		.byte	0x54
 3685 01f9 44000000 		.4byte	.LVL42
 3686 01fd 54000000 		.4byte	.LFE14
 3687 0201 0400     		.2byte	0x4
 3688 0203 F3       		.byte	0xf3
 3689 0204 01       		.uleb128 0x1
 3690 0205 50       		.byte	0x50
 3691 0206 9F       		.byte	0x9f
 3692 0207 00000000 		.4byte	0
 3693 020b 00000000 		.4byte	0
 3694              	.LLST13:
 3695 020f 40000000 		.4byte	.LVL40
 3696 0213 42000000 		.4byte	.LVL41
 3697 0217 0100     		.2byte	0x1
 3698 0219 50       		.byte	0x50
 3699 021a 44000000 		.4byte	.LVL42
 3700 021e 46000000 		.4byte	.LVL43
 3701 0222 0100     		.2byte	0x1
 3702 0224 50       		.byte	0x50
 3703 0225 00000000 		.4byte	0
 3704 0229 00000000 		.4byte	0
 3705              	.LLST14:
 3706 022d 00000000 		.4byte	.LVL44
 3707 0231 1A000000 		.4byte	.LVL45
 3708 0235 0100     		.2byte	0x1
 3709 0237 50       		.byte	0x50
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 106


 3710 0238 1A000000 		.4byte	.LVL45
 3711 023c 54000000 		.4byte	.LVL56
 3712 0240 0100     		.2byte	0x1
 3713 0242 55       		.byte	0x55
 3714 0243 54000000 		.4byte	.LVL56
 3715 0247 64000000 		.4byte	.LFE15
 3716 024b 0400     		.2byte	0x4
 3717 024d F3       		.byte	0xf3
 3718 024e 01       		.uleb128 0x1
 3719 024f 50       		.byte	0x50
 3720 0250 9F       		.byte	0x9f
 3721 0251 00000000 		.4byte	0
 3722 0255 00000000 		.4byte	0
 3723              	.LLST15:
 3724 0259 40000000 		.4byte	.LVL47
 3725 025d 42000000 		.4byte	.LVL48
 3726 0261 0100     		.2byte	0x1
 3727 0263 54       		.byte	0x54
 3728 0264 44000000 		.4byte	.LVL49
 3729 0268 54000000 		.4byte	.LVL55
 3730 026c 0100     		.2byte	0x1
 3731 026e 54       		.byte	0x54
 3732 026f 00000000 		.4byte	0
 3733 0273 00000000 		.4byte	0
 3734              	.LLST16:
 3735 0277 4E000000 		.4byte	.LVL51
 3736 027b 52000000 		.4byte	.LVL53
 3737 027f 0100     		.2byte	0x1
 3738 0281 54       		.byte	0x54
 3739 0282 00000000 		.4byte	0
 3740 0286 00000000 		.4byte	0
 3741              	.LLST17:
 3742 028a 50000000 		.4byte	.LVL52
 3743 028e 52000000 		.4byte	.LVL53
 3744 0292 0100     		.2byte	0x1
 3745 0294 50       		.byte	0x50
 3746 0295 54000000 		.4byte	.LVL54
 3747 0299 64000000 		.4byte	.LFE15
 3748 029d 0100     		.2byte	0x1
 3749 029f 50       		.byte	0x50
 3750 02a0 00000000 		.4byte	0
 3751 02a4 00000000 		.4byte	0
 3752              	.LLST18:
 3753 02a8 00000000 		.4byte	.LVL57
 3754 02ac 0E000000 		.4byte	.LVL58
 3755 02b0 0100     		.2byte	0x1
 3756 02b2 50       		.byte	0x50
 3757 02b3 0E000000 		.4byte	.LVL58
 3758 02b7 1C000000 		.4byte	.LFE16
 3759 02bb 0400     		.2byte	0x4
 3760 02bd F3       		.byte	0xf3
 3761 02be 01       		.uleb128 0x1
 3762 02bf 50       		.byte	0x50
 3763 02c0 9F       		.byte	0x9f
 3764 02c1 00000000 		.4byte	0
 3765 02c5 00000000 		.4byte	0
 3766              	.LLST19:
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 107


 3767 02c9 00000000 		.4byte	.LVL59
 3768 02cd 0E000000 		.4byte	.LVL60
 3769 02d1 0100     		.2byte	0x1
 3770 02d3 50       		.byte	0x50
 3771 02d4 0E000000 		.4byte	.LVL60
 3772 02d8 18000000 		.4byte	.LFE17
 3773 02dc 0400     		.2byte	0x4
 3774 02de F3       		.byte	0xf3
 3775 02df 01       		.uleb128 0x1
 3776 02e0 50       		.byte	0x50
 3777 02e1 9F       		.byte	0x9f
 3778 02e2 00000000 		.4byte	0
 3779 02e6 00000000 		.4byte	0
 3780              	.LLST20:
 3781 02ea 00000000 		.4byte	.LVL61
 3782 02ee 18000000 		.4byte	.LVL63
 3783 02f2 0100     		.2byte	0x1
 3784 02f4 50       		.byte	0x50
 3785 02f5 18000000 		.4byte	.LVL63
 3786 02f9 2C000000 		.4byte	.LFE18
 3787 02fd 0100     		.2byte	0x1
 3788 02ff 50       		.byte	0x50
 3789 0300 00000000 		.4byte	0
 3790 0304 00000000 		.4byte	0
 3791              	.LLST21:
 3792 0308 00000000 		.4byte	.LVL64
 3793 030c 18000000 		.4byte	.LVL66
 3794 0310 0100     		.2byte	0x1
 3795 0312 50       		.byte	0x50
 3796 0313 18000000 		.4byte	.LVL66
 3797 0317 2C000000 		.4byte	.LFE19
 3798 031b 0100     		.2byte	0x1
 3799 031d 50       		.byte	0x50
 3800 031e 00000000 		.4byte	0
 3801 0322 00000000 		.4byte	0
 3802              	.LLST22:
 3803 0326 00000000 		.4byte	.LVL67
 3804 032a 1C000000 		.4byte	.LVL68
 3805 032e 0100     		.2byte	0x1
 3806 0330 50       		.byte	0x50
 3807 0331 1C000000 		.4byte	.LVL68
 3808 0335 36000000 		.4byte	.LVL70
 3809 0339 0100     		.2byte	0x1
 3810 033b 55       		.byte	0x55
 3811 033c 36000000 		.4byte	.LVL70
 3812 0340 44000000 		.4byte	.LFE20
 3813 0344 0400     		.2byte	0x4
 3814 0346 F3       		.byte	0xf3
 3815 0347 01       		.uleb128 0x1
 3816 0348 50       		.byte	0x50
 3817 0349 9F       		.byte	0x9f
 3818 034a 00000000 		.4byte	0
 3819 034e 00000000 		.4byte	0
 3820              	.LLST23:
 3821 0352 00000000 		.4byte	.LVL67
 3822 0356 1F000000 		.4byte	.LVL69-1
 3823 035a 0100     		.2byte	0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 108


 3824 035c 51       		.byte	0x51
 3825 035d 1F000000 		.4byte	.LVL69-1
 3826 0361 44000000 		.4byte	.LFE20
 3827 0365 0400     		.2byte	0x4
 3828 0367 F3       		.byte	0xf3
 3829 0368 01       		.uleb128 0x1
 3830 0369 51       		.byte	0x51
 3831 036a 9F       		.byte	0x9f
 3832 036b 00000000 		.4byte	0
 3833 036f 00000000 		.4byte	0
 3834              	.LLST24:
 3835 0373 00000000 		.4byte	.LVL71
 3836 0377 1C000000 		.4byte	.LVL72
 3837 037b 0100     		.2byte	0x1
 3838 037d 50       		.byte	0x50
 3839 037e 1C000000 		.4byte	.LVL72
 3840 0382 36000000 		.4byte	.LVL75
 3841 0386 0100     		.2byte	0x1
 3842 0388 55       		.byte	0x55
 3843 0389 36000000 		.4byte	.LVL75
 3844 038d 44000000 		.4byte	.LFE21
 3845 0391 0400     		.2byte	0x4
 3846 0393 F3       		.byte	0xf3
 3847 0394 01       		.uleb128 0x1
 3848 0395 50       		.byte	0x50
 3849 0396 9F       		.byte	0x9f
 3850 0397 00000000 		.4byte	0
 3851 039b 00000000 		.4byte	0
 3852              	.LLST25:
 3853 039f 00000000 		.4byte	.LVL71
 3854 03a3 1F000000 		.4byte	.LVL73-1
 3855 03a7 0100     		.2byte	0x1
 3856 03a9 51       		.byte	0x51
 3857 03aa 1F000000 		.4byte	.LVL73-1
 3858 03ae 36000000 		.4byte	.LVL74
 3859 03b2 0100     		.2byte	0x1
 3860 03b4 54       		.byte	0x54
 3861 03b5 36000000 		.4byte	.LVL74
 3862 03b9 44000000 		.4byte	.LFE21
 3863 03bd 0500     		.2byte	0x5
 3864 03bf 73       		.byte	0x73
 3865 03c0 00       		.sleb128 0
 3866 03c1 70       		.byte	0x70
 3867 03c2 00       		.sleb128 0
 3868 03c3 22       		.byte	0x22
 3869 03c4 00000000 		.4byte	0
 3870 03c8 00000000 		.4byte	0
 3871              	.LLST26:
 3872 03cc 00000000 		.4byte	.LVL76
 3873 03d0 1E000000 		.4byte	.LVL79
 3874 03d4 0100     		.2byte	0x1
 3875 03d6 50       		.byte	0x50
 3876 03d7 1E000000 		.4byte	.LVL79
 3877 03db 3C000000 		.4byte	.LFE22
 3878 03df 0400     		.2byte	0x4
 3879 03e1 F3       		.byte	0xf3
 3880 03e2 01       		.uleb128 0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 109


 3881 03e3 50       		.byte	0x50
 3882 03e4 9F       		.byte	0x9f
 3883 03e5 00000000 		.4byte	0
 3884 03e9 00000000 		.4byte	0
 3885              	.LLST27:
 3886 03ed 00000000 		.4byte	.LVL76
 3887 03f1 08000000 		.4byte	.LVL77
 3888 03f5 0100     		.2byte	0x1
 3889 03f7 51       		.byte	0x51
 3890 03f8 08000000 		.4byte	.LVL77
 3891 03fc 22000000 		.4byte	.LVL80
 3892 0400 0400     		.2byte	0x4
 3893 0402 F3       		.byte	0xf3
 3894 0403 01       		.uleb128 0x1
 3895 0404 51       		.byte	0x51
 3896 0405 9F       		.byte	0x9f
 3897 0406 22000000 		.4byte	.LVL80
 3898 040a 2E000000 		.4byte	.LVL82
 3899 040e 0100     		.2byte	0x1
 3900 0410 54       		.byte	0x54
 3901 0411 2E000000 		.4byte	.LVL82
 3902 0415 3C000000 		.4byte	.LFE22
 3903 0419 0100     		.2byte	0x1
 3904 041b 50       		.byte	0x50
 3905 041c 00000000 		.4byte	0
 3906 0420 00000000 		.4byte	0
 3907              	.LLST28:
 3908 0424 14000000 		.4byte	.LVL78
 3909 0428 24000000 		.4byte	.LVL81
 3910 042c 0100     		.2byte	0x1
 3911 042e 55       		.byte	0x55
 3912 042f 00000000 		.4byte	0
 3913 0433 00000000 		.4byte	0
 3914              	.LLST29:
 3915 0437 00000000 		.4byte	.LVL83
 3916 043b 1D000000 		.4byte	.LVL86-1
 3917 043f 0100     		.2byte	0x1
 3918 0441 50       		.byte	0x50
 3919 0442 1D000000 		.4byte	.LVL86-1
 3920 0446 3E000000 		.4byte	.LVL92
 3921 044a 0400     		.2byte	0x4
 3922 044c F3       		.byte	0xf3
 3923 044d 01       		.uleb128 0x1
 3924 044e 50       		.byte	0x50
 3925 044f 9F       		.byte	0x9f
 3926 0450 3E000000 		.4byte	.LVL92
 3927 0454 40000000 		.4byte	.LVL93
 3928 0458 0100     		.2byte	0x1
 3929 045a 50       		.byte	0x50
 3930 045b 40000000 		.4byte	.LVL93
 3931 045f 54000000 		.4byte	.LFE23
 3932 0463 0400     		.2byte	0x4
 3933 0465 F3       		.byte	0xf3
 3934 0466 01       		.uleb128 0x1
 3935 0467 50       		.byte	0x50
 3936 0468 9F       		.byte	0x9f
 3937 0469 00000000 		.4byte	0
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 110


 3938 046d 00000000 		.4byte	0
 3939              	.LLST30:
 3940 0471 00000000 		.4byte	.LVL83
 3941 0475 1D000000 		.4byte	.LVL86-1
 3942 0479 0100     		.2byte	0x1
 3943 047b 51       		.byte	0x51
 3944 047c 1D000000 		.4byte	.LVL86-1
 3945 0480 1E000000 		.4byte	.LVL86
 3946 0484 0400     		.2byte	0x4
 3947 0486 F3       		.byte	0xf3
 3948 0487 01       		.uleb128 0x1
 3949 0488 51       		.byte	0x51
 3950 0489 9F       		.byte	0x9f
 3951 048a 1E000000 		.4byte	.LVL86
 3952 048e 21000000 		.4byte	.LVL87-1
 3953 0492 0100     		.2byte	0x1
 3954 0494 50       		.byte	0x50
 3955 0495 3E000000 		.4byte	.LVL92
 3956 0499 40000000 		.4byte	.LVL93
 3957 049d 0100     		.2byte	0x1
 3958 049f 51       		.byte	0x51
 3959 04a0 00000000 		.4byte	0
 3960 04a4 00000000 		.4byte	0
 3961              	.LLST31:
 3962 04a8 02000000 		.4byte	.LVL84
 3963 04ac 3C000000 		.4byte	.LVL91
 3964 04b0 0600     		.2byte	0x6
 3965 04b2 9E       		.byte	0x9e
 3966 04b3 04       		.uleb128 0x4
 3967 04b4 00000000 		.4byte	0
 3968 04b8 3C000000 		.4byte	.LVL91
 3969 04bc 3E000000 		.4byte	.LVL92
 3970 04c0 0100     		.2byte	0x1
 3971 04c2 50       		.byte	0x50
 3972 04c3 3E000000 		.4byte	.LVL92
 3973 04c7 40000000 		.4byte	.LVL93
 3974 04cb 0600     		.2byte	0x6
 3975 04cd 9E       		.byte	0x9e
 3976 04ce 04       		.uleb128 0x4
 3977 04cf 00000000 		.4byte	0
 3978 04d3 40000000 		.4byte	.LVL93
 3979 04d7 54000000 		.4byte	.LFE23
 3980 04db 0100     		.2byte	0x1
 3981 04dd 50       		.byte	0x50
 3982 04de 00000000 		.4byte	0
 3983 04e2 00000000 		.4byte	0
 3984              	.LLST32:
 3985 04e6 12000000 		.4byte	.LVL85
 3986 04ea 2C000000 		.4byte	.LVL89
 3987 04ee 0100     		.2byte	0x1
 3988 04f0 54       		.byte	0x54
 3989 04f1 3E000000 		.4byte	.LVL92
 3990 04f5 40000000 		.4byte	.LVL93
 3991 04f9 0100     		.2byte	0x1
 3992 04fb 54       		.byte	0x54
 3993 04fc 00000000 		.4byte	0
 3994 0500 00000000 		.4byte	0
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 111


 3995              	.LLST33:
 3996 0504 00000000 		.4byte	.LVL94
 3997 0508 1D000000 		.4byte	.LVL97-1
 3998 050c 0100     		.2byte	0x1
 3999 050e 50       		.byte	0x50
 4000 050f 1D000000 		.4byte	.LVL97-1
 4001 0513 52000000 		.4byte	.LVL104
 4002 0517 0400     		.2byte	0x4
 4003 0519 F3       		.byte	0xf3
 4004 051a 01       		.uleb128 0x1
 4005 051b 50       		.byte	0x50
 4006 051c 9F       		.byte	0x9f
 4007 051d 52000000 		.4byte	.LVL104
 4008 0521 54000000 		.4byte	.LVL105
 4009 0525 0100     		.2byte	0x1
 4010 0527 50       		.byte	0x50
 4011 0528 54000000 		.4byte	.LVL105
 4012 052c 68000000 		.4byte	.LFE24
 4013 0530 0400     		.2byte	0x4
 4014 0532 F3       		.byte	0xf3
 4015 0533 01       		.uleb128 0x1
 4016 0534 50       		.byte	0x50
 4017 0535 9F       		.byte	0x9f
 4018 0536 00000000 		.4byte	0
 4019 053a 00000000 		.4byte	0
 4020              	.LLST34:
 4021 053e 00000000 		.4byte	.LVL94
 4022 0542 1D000000 		.4byte	.LVL97-1
 4023 0546 0100     		.2byte	0x1
 4024 0548 51       		.byte	0x51
 4025 0549 1D000000 		.4byte	.LVL97-1
 4026 054d 1E000000 		.4byte	.LVL97
 4027 0551 0400     		.2byte	0x4
 4028 0553 F3       		.byte	0xf3
 4029 0554 01       		.uleb128 0x1
 4030 0555 51       		.byte	0x51
 4031 0556 9F       		.byte	0x9f
 4032 0557 1E000000 		.4byte	.LVL97
 4033 055b 2E000000 		.4byte	.LVL98
 4034 055f 0100     		.2byte	0x1
 4035 0561 50       		.byte	0x50
 4036 0562 34000000 		.4byte	.LVL99
 4037 0566 42000000 		.4byte	.LVL100
 4038 056a 0100     		.2byte	0x1
 4039 056c 50       		.byte	0x50
 4040 056d 52000000 		.4byte	.LVL104
 4041 0571 54000000 		.4byte	.LVL105
 4042 0575 0100     		.2byte	0x1
 4043 0577 51       		.byte	0x51
 4044 0578 00000000 		.4byte	0
 4045 057c 00000000 		.4byte	0
 4046              	.LLST35:
 4047 0580 02000000 		.4byte	.LVL95
 4048 0584 50000000 		.4byte	.LVL103
 4049 0588 0200     		.2byte	0x2
 4050 058a 30       		.byte	0x30
 4051 058b 9F       		.byte	0x9f
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 112


 4052 058c 50000000 		.4byte	.LVL103
 4053 0590 52000000 		.4byte	.LVL104
 4054 0594 0100     		.2byte	0x1
 4055 0596 50       		.byte	0x50
 4056 0597 52000000 		.4byte	.LVL104
 4057 059b 54000000 		.4byte	.LVL105
 4058 059f 0200     		.2byte	0x2
 4059 05a1 30       		.byte	0x30
 4060 05a2 9F       		.byte	0x9f
 4061 05a3 54000000 		.4byte	.LVL105
 4062 05a7 68000000 		.4byte	.LFE24
 4063 05ab 0100     		.2byte	0x1
 4064 05ad 50       		.byte	0x50
 4065 05ae 00000000 		.4byte	0
 4066 05b2 00000000 		.4byte	0
 4067              	.LLST36:
 4068 05b6 12000000 		.4byte	.LVL96
 4069 05ba 46000000 		.4byte	.LVL101
 4070 05be 0100     		.2byte	0x1
 4071 05c0 54       		.byte	0x54
 4072 05c1 46000000 		.4byte	.LVL101
 4073 05c5 52000000 		.4byte	.LVL104
 4074 05c9 1200     		.2byte	0x12
 4075 05cb 75       		.byte	0x75
 4076 05cc 00       		.sleb128 0
 4077 05cd 33       		.byte	0x33
 4078 05ce 24       		.byte	0x24
 4079 05cf 75       		.byte	0x75
 4080 05d0 00       		.sleb128 0
 4081 05d1 1C       		.byte	0x1c
 4082 05d2 33       		.byte	0x33
 4083 05d3 24       		.byte	0x24
 4084 05d4 76       		.byte	0x76
 4085 05d5 00       		.sleb128 0
 4086 05d6 22       		.byte	0x22
 4087 05d7 06       		.byte	0x6
 4088 05d8 F3       		.byte	0xf3
 4089 05d9 01       		.uleb128 0x1
 4090 05da 50       		.byte	0x50
 4091 05db 22       		.byte	0x22
 4092 05dc 9F       		.byte	0x9f
 4093 05dd 52000000 		.4byte	.LVL104
 4094 05e1 54000000 		.4byte	.LVL105
 4095 05e5 0100     		.2byte	0x1
 4096 05e7 54       		.byte	0x54
 4097 05e8 54000000 		.4byte	.LVL105
 4098 05ec 54000000 		.4byte	.LVL106
 4099 05f0 1200     		.2byte	0x12
 4100 05f2 75       		.byte	0x75
 4101 05f3 00       		.sleb128 0
 4102 05f4 33       		.byte	0x33
 4103 05f5 24       		.byte	0x24
 4104 05f6 75       		.byte	0x75
 4105 05f7 00       		.sleb128 0
 4106 05f8 1C       		.byte	0x1c
 4107 05f9 33       		.byte	0x33
 4108 05fa 24       		.byte	0x24
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 113


 4109 05fb 76       		.byte	0x76
 4110 05fc 00       		.sleb128 0
 4111 05fd 22       		.byte	0x22
 4112 05fe 06       		.byte	0x6
 4113 05ff F3       		.byte	0xf3
 4114 0600 01       		.uleb128 0x1
 4115 0601 50       		.byte	0x50
 4116 0602 22       		.byte	0x22
 4117 0603 9F       		.byte	0x9f
 4118 0604 00000000 		.4byte	0
 4119 0608 00000000 		.4byte	0
 4120              	.LLST37:
 4121 060c 00000000 		.4byte	.LVL107
 4122 0610 1D000000 		.4byte	.LVL110-1
 4123 0614 0100     		.2byte	0x1
 4124 0616 50       		.byte	0x50
 4125 0617 1D000000 		.4byte	.LVL110-1
 4126 061b 36000000 		.4byte	.LVL114
 4127 061f 0400     		.2byte	0x4
 4128 0621 F3       		.byte	0xf3
 4129 0622 01       		.uleb128 0x1
 4130 0623 50       		.byte	0x50
 4131 0624 9F       		.byte	0x9f
 4132 0625 36000000 		.4byte	.LVL114
 4133 0629 38000000 		.4byte	.LVL115
 4134 062d 0100     		.2byte	0x1
 4135 062f 50       		.byte	0x50
 4136 0630 38000000 		.4byte	.LVL115
 4137 0634 4C000000 		.4byte	.LFE25
 4138 0638 0400     		.2byte	0x4
 4139 063a F3       		.byte	0xf3
 4140 063b 01       		.uleb128 0x1
 4141 063c 50       		.byte	0x50
 4142 063d 9F       		.byte	0x9f
 4143 063e 00000000 		.4byte	0
 4144 0642 00000000 		.4byte	0
 4145              	.LLST38:
 4146 0646 00000000 		.4byte	.LVL107
 4147 064a 1D000000 		.4byte	.LVL110-1
 4148 064e 0100     		.2byte	0x1
 4149 0650 51       		.byte	0x51
 4150 0651 1D000000 		.4byte	.LVL110-1
 4151 0655 1E000000 		.4byte	.LVL110
 4152 0659 0400     		.2byte	0x4
 4153 065b F3       		.byte	0xf3
 4154 065c 01       		.uleb128 0x1
 4155 065d 51       		.byte	0x51
 4156 065e 9F       		.byte	0x9f
 4157 065f 1E000000 		.4byte	.LVL110
 4158 0663 27000000 		.4byte	.LVL111-1
 4159 0667 0100     		.2byte	0x1
 4160 0669 50       		.byte	0x50
 4161 066a 36000000 		.4byte	.LVL114
 4162 066e 38000000 		.4byte	.LVL115
 4163 0672 0100     		.2byte	0x1
 4164 0674 51       		.byte	0x51
 4165 0675 00000000 		.4byte	0
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 114


 4166 0679 00000000 		.4byte	0
 4167              	.LLST39:
 4168 067d 02000000 		.4byte	.LVL108
 4169 0681 34000000 		.4byte	.LVL113
 4170 0685 0A00     		.2byte	0xa
 4171 0687 9E       		.byte	0x9e
 4172 0688 08       		.uleb128 0x8
 4173 0689 00000000 		.8byte	0
 4173      00000000 
 4174 0691 36000000 		.4byte	.LVL114
 4175 0695 38000000 		.4byte	.LVL115
 4176 0699 0A00     		.2byte	0xa
 4177 069b 9E       		.byte	0x9e
 4178 069c 08       		.uleb128 0x8
 4179 069d 00000000 		.8byte	0
 4179      00000000 
 4180 06a5 00000000 		.4byte	0
 4181 06a9 00000000 		.4byte	0
 4182              	.LLST40:
 4183 06ad 12000000 		.4byte	.LVL109
 4184 06b1 2A000000 		.4byte	.LVL112
 4185 06b5 0100     		.2byte	0x1
 4186 06b7 54       		.byte	0x54
 4187 06b8 2A000000 		.4byte	.LVL112
 4188 06bc 36000000 		.4byte	.LVL114
 4189 06c0 1200     		.2byte	0x12
 4190 06c2 75       		.byte	0x75
 4191 06c3 00       		.sleb128 0
 4192 06c4 33       		.byte	0x33
 4193 06c5 24       		.byte	0x24
 4194 06c6 75       		.byte	0x75
 4195 06c7 00       		.sleb128 0
 4196 06c8 1C       		.byte	0x1c
 4197 06c9 33       		.byte	0x33
 4198 06ca 24       		.byte	0x24
 4199 06cb 76       		.byte	0x76
 4200 06cc 00       		.sleb128 0
 4201 06cd 22       		.byte	0x22
 4202 06ce 06       		.byte	0x6
 4203 06cf F3       		.byte	0xf3
 4204 06d0 01       		.uleb128 0x1
 4205 06d1 50       		.byte	0x50
 4206 06d2 22       		.byte	0x22
 4207 06d3 9F       		.byte	0x9f
 4208 06d4 36000000 		.4byte	.LVL114
 4209 06d8 38000000 		.4byte	.LVL115
 4210 06dc 0100     		.2byte	0x1
 4211 06de 54       		.byte	0x54
 4212 06df 38000000 		.4byte	.LVL115
 4213 06e3 38000000 		.4byte	.LVL116
 4214 06e7 1200     		.2byte	0x12
 4215 06e9 75       		.byte	0x75
 4216 06ea 00       		.sleb128 0
 4217 06eb 33       		.byte	0x33
 4218 06ec 24       		.byte	0x24
 4219 06ed 75       		.byte	0x75
 4220 06ee 00       		.sleb128 0
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 115


 4221 06ef 1C       		.byte	0x1c
 4222 06f0 33       		.byte	0x33
 4223 06f1 24       		.byte	0x24
 4224 06f2 76       		.byte	0x76
 4225 06f3 00       		.sleb128 0
 4226 06f4 22       		.byte	0x22
 4227 06f5 06       		.byte	0x6
 4228 06f6 F3       		.byte	0xf3
 4229 06f7 01       		.uleb128 0x1
 4230 06f8 50       		.byte	0x50
 4231 06f9 22       		.byte	0x22
 4232 06fa 9F       		.byte	0x9f
 4233 06fb 00000000 		.4byte	0
 4234 06ff 00000000 		.4byte	0
 4235              	.LLST41:
 4236 0703 06000000 		.4byte	.LVL117
 4237 0707 10000000 		.4byte	.LVL118
 4238 070b 0200     		.2byte	0x2
 4239 070d 30       		.byte	0x30
 4240 070e 9F       		.byte	0x9f
 4241 070f 10000000 		.4byte	.LVL118
 4242 0713 50000000 		.4byte	.LVL122
 4243 0717 0100     		.2byte	0x1
 4244 0719 54       		.byte	0x54
 4245 071a 50000000 		.4byte	.LVL122
 4246 071e 54000000 		.4byte	.LVL123
 4247 0722 0200     		.2byte	0x2
 4248 0724 30       		.byte	0x30
 4249 0725 9F       		.byte	0x9f
 4250 0726 54000000 		.4byte	.LVL123
 4251 072a 78000000 		.4byte	.LVL127
 4252 072e 0100     		.2byte	0x1
 4253 0730 54       		.byte	0x54
 4254 0731 00000000 		.4byte	0
 4255 0735 00000000 		.4byte	0
 4256              	.LLST42:
 4257 0739 06000000 		.4byte	.LVL117
 4258 073d 10000000 		.4byte	.LVL118
 4259 0741 0200     		.2byte	0x2
 4260 0743 30       		.byte	0x30
 4261 0744 9F       		.byte	0x9f
 4262 0745 10000000 		.4byte	.LVL118
 4263 0749 50000000 		.4byte	.LVL122
 4264 074d 0100     		.2byte	0x1
 4265 074f 57       		.byte	0x57
 4266 0750 50000000 		.4byte	.LVL122
 4267 0754 54000000 		.4byte	.LVL123
 4268 0758 0200     		.2byte	0x2
 4269 075a 30       		.byte	0x30
 4270 075b 9F       		.byte	0x9f
 4271 075c 54000000 		.4byte	.LVL123
 4272 0760 76000000 		.4byte	.LVL126
 4273 0764 0100     		.2byte	0x1
 4274 0766 57       		.byte	0x57
 4275 0767 76000000 		.4byte	.LVL126
 4276 076b 84000000 		.4byte	.LVL129
 4277 076f 0200     		.2byte	0x2
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 116


 4278 0771 30       		.byte	0x30
 4279 0772 9F       		.byte	0x9f
 4280 0773 00000000 		.4byte	0
 4281 0777 00000000 		.4byte	0
 4282              	.LLST43:
 4283 077b 10000000 		.4byte	.LVL118
 4284 077f 50000000 		.4byte	.LVL122
 4285 0783 0400     		.2byte	0x4
 4286 0785 0A       		.byte	0xa
 4287 0786 0010     		.2byte	0x1000
 4288 0788 9F       		.byte	0x9f
 4289 0789 00000000 		.4byte	0
 4290 078d 00000000 		.4byte	0
 4291              	.LLST44:
 4292 0791 00000000 		.4byte	.LVL134
 4293 0795 07000000 		.4byte	.LVL135-1
 4294 0799 0100     		.2byte	0x1
 4295 079b 50       		.byte	0x50
 4296 079c 07000000 		.4byte	.LVL135-1
 4297 07a0 0E000000 		.4byte	.LVL137
 4298 07a4 0100     		.2byte	0x1
 4299 07a6 54       		.byte	0x54
 4300 07a7 0E000000 		.4byte	.LVL137
 4301 07ab 10000000 		.4byte	.LFE2
 4302 07af 0400     		.2byte	0x4
 4303 07b1 F3       		.byte	0xf3
 4304 07b2 01       		.uleb128 0x1
 4305 07b3 50       		.byte	0x50
 4306 07b4 9F       		.byte	0x9f
 4307 07b5 00000000 		.4byte	0
 4308 07b9 00000000 		.4byte	0
 4309              	.LLST45:
 4310 07bd 00000000 		.4byte	.LVL138
 4311 07c1 0D000000 		.4byte	.LVL139-1
 4312 07c5 0100     		.2byte	0x1
 4313 07c7 50       		.byte	0x50
 4314 07c8 0D000000 		.4byte	.LVL139-1
 4315 07cc 5A000000 		.4byte	.LVL144
 4316 07d0 0100     		.2byte	0x1
 4317 07d2 54       		.byte	0x54
 4318 07d3 5A000000 		.4byte	.LVL144
 4319 07d7 70000000 		.4byte	.LFE6
 4320 07db 0400     		.2byte	0x4
 4321 07dd F3       		.byte	0xf3
 4322 07de 01       		.uleb128 0x1
 4323 07df 50       		.byte	0x50
 4324 07e0 9F       		.byte	0x9f
 4325 07e1 00000000 		.4byte	0
 4326 07e5 00000000 		.4byte	0
 4327              	.LLST46:
 4328 07e9 00000000 		.4byte	.LVL138
 4329 07ed 0D000000 		.4byte	.LVL139-1
 4330 07f1 0100     		.2byte	0x1
 4331 07f3 51       		.byte	0x51
 4332 07f4 0D000000 		.4byte	.LVL139-1
 4333 07f8 5A000000 		.4byte	.LVL145
 4334 07fc 0100     		.2byte	0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 117


 4335 07fe 56       		.byte	0x56
 4336 07ff 5A000000 		.4byte	.LVL145
 4337 0803 70000000 		.4byte	.LFE6
 4338 0807 0400     		.2byte	0x4
 4339 0809 F3       		.byte	0xf3
 4340 080a 01       		.uleb128 0x1
 4341 080b 51       		.byte	0x51
 4342 080c 9F       		.byte	0x9f
 4343 080d 00000000 		.4byte	0
 4344 0811 00000000 		.4byte	0
 4345              		.section	.debug_aranges,"",%progbits
 4346 0000 EC000000 		.4byte	0xec
 4347 0004 0200     		.2byte	0x2
 4348 0006 00000000 		.4byte	.Ldebug_info0
 4349 000a 04       		.byte	0x4
 4350 000b 00       		.byte	0
 4351 000c 0000     		.2byte	0
 4352 000e 0000     		.2byte	0
 4353 0010 00000000 		.4byte	.LFB5
 4354 0014 34000000 		.4byte	.LFE5-.LFB5
 4355 0018 00000000 		.4byte	.LFB13
 4356 001c 58000000 		.4byte	.LFE13-.LFB13
 4357 0020 00000000 		.4byte	.LFB3
 4358 0024 10000000 		.4byte	.LFE3-.LFB3
 4359 0028 00000000 		.4byte	.LFB4
 4360 002c AC000000 		.4byte	.LFE4-.LFB4
 4361 0030 00000000 		.4byte	.LFB7
 4362 0034 28000000 		.4byte	.LFE7-.LFB7
 4363 0038 00000000 		.4byte	.LFB9
 4364 003c 28000000 		.4byte	.LFE9-.LFB9
 4365 0040 00000000 		.4byte	.LFB10
 4366 0044 10000000 		.4byte	.LFE10-.LFB10
 4367 0048 00000000 		.4byte	.LFB11
 4368 004c 2C000000 		.4byte	.LFE11-.LFB11
 4369 0050 00000000 		.4byte	.LFB12
 4370 0054 38000000 		.4byte	.LFE12-.LFB12
 4371 0058 00000000 		.4byte	.LFB14
 4372 005c 54000000 		.4byte	.LFE14-.LFB14
 4373 0060 00000000 		.4byte	.LFB15
 4374 0064 64000000 		.4byte	.LFE15-.LFB15
 4375 0068 00000000 		.4byte	.LFB16
 4376 006c 1C000000 		.4byte	.LFE16-.LFB16
 4377 0070 00000000 		.4byte	.LFB17
 4378 0074 18000000 		.4byte	.LFE17-.LFB17
 4379 0078 00000000 		.4byte	.LFB18
 4380 007c 2C000000 		.4byte	.LFE18-.LFB18
 4381 0080 00000000 		.4byte	.LFB19
 4382 0084 2C000000 		.4byte	.LFE19-.LFB19
 4383 0088 00000000 		.4byte	.LFB20
 4384 008c 44000000 		.4byte	.LFE20-.LFB20
 4385 0090 00000000 		.4byte	.LFB21
 4386 0094 44000000 		.4byte	.LFE21-.LFB21
 4387 0098 00000000 		.4byte	.LFB22
 4388 009c 3C000000 		.4byte	.LFE22-.LFB22
 4389 00a0 00000000 		.4byte	.LFB23
 4390 00a4 54000000 		.4byte	.LFE23-.LFB23
 4391 00a8 00000000 		.4byte	.LFB24
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 118


 4392 00ac 68000000 		.4byte	.LFE24-.LFB24
 4393 00b0 00000000 		.4byte	.LFB25
 4394 00b4 4C000000 		.4byte	.LFE25-.LFB25
 4395 00b8 00000000 		.4byte	.LFB26
 4396 00bc A8000000 		.4byte	.LFE26-.LFB26
 4397 00c0 00000000 		.4byte	.LFB27
 4398 00c4 48000000 		.4byte	.LFE27-.LFB27
 4399 00c8 00000000 		.4byte	.LFB1
 4400 00cc 24000000 		.4byte	.LFE1-.LFB1
 4401 00d0 00000000 		.4byte	.LFB2
 4402 00d4 10000000 		.4byte	.LFE2-.LFB2
 4403 00d8 00000000 		.4byte	.LFB6
 4404 00dc 70000000 		.4byte	.LFE6-.LFB6
 4405 00e0 00000000 		.4byte	.LFB8
 4406 00e4 44000000 		.4byte	.LFE8-.LFB8
 4407 00e8 00000000 		.4byte	0
 4408 00ec 00000000 		.4byte	0
 4409              		.section	.debug_ranges,"",%progbits
 4410              	.Ldebug_ranges0:
 4411 0000 00000000 		.4byte	.LFB5
 4412 0004 34000000 		.4byte	.LFE5
 4413 0008 00000000 		.4byte	.LFB13
 4414 000c 58000000 		.4byte	.LFE13
 4415 0010 00000000 		.4byte	.LFB3
 4416 0014 10000000 		.4byte	.LFE3
 4417 0018 00000000 		.4byte	.LFB4
 4418 001c AC000000 		.4byte	.LFE4
 4419 0020 00000000 		.4byte	.LFB7
 4420 0024 28000000 		.4byte	.LFE7
 4421 0028 00000000 		.4byte	.LFB9
 4422 002c 28000000 		.4byte	.LFE9
 4423 0030 00000000 		.4byte	.LFB10
 4424 0034 10000000 		.4byte	.LFE10
 4425 0038 00000000 		.4byte	.LFB11
 4426 003c 2C000000 		.4byte	.LFE11
 4427 0040 00000000 		.4byte	.LFB12
 4428 0044 38000000 		.4byte	.LFE12
 4429 0048 00000000 		.4byte	.LFB14
 4430 004c 54000000 		.4byte	.LFE14
 4431 0050 00000000 		.4byte	.LFB15
 4432 0054 64000000 		.4byte	.LFE15
 4433 0058 00000000 		.4byte	.LFB16
 4434 005c 1C000000 		.4byte	.LFE16
 4435 0060 00000000 		.4byte	.LFB17
 4436 0064 18000000 		.4byte	.LFE17
 4437 0068 00000000 		.4byte	.LFB18
 4438 006c 2C000000 		.4byte	.LFE18
 4439 0070 00000000 		.4byte	.LFB19
 4440 0074 2C000000 		.4byte	.LFE19
 4441 0078 00000000 		.4byte	.LFB20
 4442 007c 44000000 		.4byte	.LFE20
 4443 0080 00000000 		.4byte	.LFB21
 4444 0084 44000000 		.4byte	.LFE21
 4445 0088 00000000 		.4byte	.LFB22
 4446 008c 3C000000 		.4byte	.LFE22
 4447 0090 00000000 		.4byte	.LFB23
 4448 0094 54000000 		.4byte	.LFE23
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 119


 4449 0098 00000000 		.4byte	.LFB24
 4450 009c 68000000 		.4byte	.LFE24
 4451 00a0 00000000 		.4byte	.LFB25
 4452 00a4 4C000000 		.4byte	.LFE25
 4453 00a8 00000000 		.4byte	.LFB26
 4454 00ac A8000000 		.4byte	.LFE26
 4455 00b0 00000000 		.4byte	.LFB27
 4456 00b4 48000000 		.4byte	.LFE27
 4457 00b8 00000000 		.4byte	.LFB1
 4458 00bc 24000000 		.4byte	.LFE1
 4459 00c0 00000000 		.4byte	.LFB2
 4460 00c4 10000000 		.4byte	.LFE2
 4461 00c8 00000000 		.4byte	.LFB6
 4462 00cc 70000000 		.4byte	.LFE6
 4463 00d0 00000000 		.4byte	.LFB8
 4464 00d4 44000000 		.4byte	.LFE8
 4465 00d8 00000000 		.4byte	0
 4466 00dc 00000000 		.4byte	0
 4467              		.section	.debug_line,"",%progbits
 4468              	.Ldebug_line0:
 4469 0000 AB030000 		.section	.debug_str,"MS",%progbits,1
 4469      02007E00 
 4469      00000201 
 4469      FB0E0D00 
 4469      01010101 
 4470              	.LASF10:
 4471 0000 75696E74 		.ascii	"uint16\000"
 4471      313600
 4472              	.LASF53:
 4473 0007 6368616E 		.ascii	"chanCount\000"
 4473      436F756E 
 4473      7400
 4474              	.LASF73:
 4475 0011 61646347 		.ascii	"adcGain\000"
 4475      61696E00 
 4476              	.LASF87:
 4477 0019 636F756E 		.ascii	"counts\000"
 4477      747300
 4478              	.LASF90:
 4479 0020 4144435F 		.ascii	"ADC_1_StartEx\000"
 4479      315F5374 
 4479      61727445 
 4479      7800
 4480              	.LASF94:
 4481 002e 4144435F 		.ascii	"ADC_1_StopConvert\000"
 4481      315F5374 
 4481      6F70436F 
 4481      6E766572 
 4481      7400
 4482              	.LASF7:
 4483 0040 6C6F6E67 		.ascii	"long long unsigned int\000"
 4483      206C6F6E 
 4483      6720756E 
 4483      7369676E 
 4483      65642069 
 4484              	.LASF88:
 4485 0057 4144435F 		.ascii	"ADC_1_Enable\000"
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 120


 4485      315F456E 
 4485      61626C65 
 4485      00
 4486              	.LASF102:
 4487 0064 4144435F 		.ascii	"ADC_1_intSarClock_Stop\000"
 4487      315F696E 
 4487      74536172 
 4487      436C6F63 
 4487      6B5F5374 
 4488              	.LASF6:
 4489 007b 6C6F6E67 		.ascii	"long long int\000"
 4489      206C6F6E 
 4489      6720696E 
 4489      7400
 4490              	.LASF0:
 4491 0089 7369676E 		.ascii	"signed char\000"
 4491      65642063 
 4491      68617200 
 4492              	.LASF85:
 4493 0095 4144435F 		.ascii	"ADC_1_Init\000"
 4493      315F496E 
 4493      697400
 4494              	.LASF36:
 4495 00a0 636C6B44 		.ascii	"clkDivider\000"
 4495      69766964 
 4495      657200
 4496              	.LASF44:
 4497 00ab 4144435F 		.ascii	"ADC_1_Stop\000"
 4497      315F5374 
 4497      6F7000
 4498              	.LASF13:
 4499 00b6 696E7433 		.ascii	"int32\000"
 4499      3200
 4500              	.LASF46:
 4501 00bc 4144435F 		.ascii	"ADC_1_InitConfig\000"
 4501      315F496E 
 4501      6974436F 
 4501      6E666967 
 4501      00
 4502              	.LASF4:
 4503 00cd 6C6F6E67 		.ascii	"long int\000"
 4503      20696E74 
 4503      00
 4504              	.LASF74:
 4505 00d6 4144435F 		.ascii	"ADC_1_RawCounts2Counts\000"
 4505      315F5261 
 4505      77436F75 
 4505      6E747332 
 4505      436F756E 
 4506              	.LASF9:
 4507 00ed 75696E74 		.ascii	"uint8\000"
 4507      3800
 4508              	.LASF108:
 4509 00f3 43794465 		.ascii	"CyDelayUs\000"
 4509      6C617955 
 4509      7300
 4510              	.LASF16:
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 121


 4511 00fd 646F7562 		.ascii	"double\000"
 4511      6C6500
 4512              	.LASF47:
 4513 0104 4144435F 		.ascii	"ADC_1_SetConvertMode\000"
 4513      315F5365 
 4513      74436F6E 
 4513      76657274 
 4513      4D6F6465 
 4514              	.LASF66:
 4515 0119 4144435F 		.ascii	"ADC_1_SetLimitMask\000"
 4515      315F5365 
 4515      744C696D 
 4515      69744D61 
 4515      736B00
 4516              	.LASF97:
 4517 012c 4144435F 		.ascii	"ADC_1_initVar\000"
 4517      315F696E 
 4517      69745661 
 4517      7200
 4518              	.LASF27:
 4519 013a 73616D70 		.ascii	"sampleTime01\000"
 4519      6C655469 
 4519      6D653031 
 4519      00
 4520              	.LASF11:
 4521 0147 75696E74 		.ascii	"uint32\000"
 4521      333200
 4522              	.LASF107:
 4523 014e 4379496E 		.ascii	"CyIntSetVector\000"
 4523      74536574 
 4523      56656374 
 4523      6F7200
 4524              	.LASF50:
 4525 015d 6D61736B 		.ascii	"mask\000"
 4525      00
 4526              	.LASF62:
 4527 0162 4144435F 		.ascii	"ADC_1_SetLowLimit\000"
 4527      315F5365 
 4527      744C6F77 
 4527      4C696D69 
 4527      7400
 4528              	.LASF113:
 4529 0174 4144435F 		.ascii	"ADC_1_SetDFTControl\000"
 4529      315F5365 
 4529      74444654 
 4529      436F6E74 
 4529      726F6C00 
 4530              	.LASF76:
 4531 0188 74656D70 		.ascii	"temp\000"
 4531      00
 4532              	.LASF54:
 4533 018d 7265744D 		.ascii	"retMode\000"
 4533      6F646500 
 4534              	.LASF8:
 4535 0195 756E7369 		.ascii	"unsigned int\000"
 4535      676E6564 
 4535      20696E74 
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 122


 4535      00
 4536              	.LASF32:
 4537 01a2 72616E67 		.ascii	"rangeIntMask\000"
 4537      65496E74 
 4537      4D61736B 
 4537      00
 4538              	.LASF86:
 4539 01af 636F6E66 		.ascii	"configNum\000"
 4539      69674E75 
 4539      6D00
 4540              	.LASF45:
 4541 01b9 4144435F 		.ascii	"ADC_1_StartConvert\000"
 4541      315F5374 
 4541      61727443 
 4541      6F6E7665 
 4541      727400
 4542              	.LASF5:
 4543 01cc 6C6F6E67 		.ascii	"long unsigned int\000"
 4543      20756E73 
 4543      69676E65 
 4543      6420696E 
 4543      7400
 4544              	.LASF96:
 4545 01de 4144435F 		.ascii	"ADC_1_channelsConfig\000"
 4545      315F6368 
 4545      616E6E65 
 4545      6C73436F 
 4545      6E666967 
 4546              	.LASF112:
 4547 01f3 433A5C55 		.ascii	"C:\\Users\\samue\\OneDrive\\Documents\\GitHub\\Li-C"
 4547      73657273 
 4547      5C73616D 
 4547      75655C4F 
 4547      6E654472 
 4548 0220 656C6C54 		.ascii	"ellTesting_Script\\TJ Temperature Spatial Profile.c"
 4548      65737469 
 4548      6E675F53 
 4548      63726970 
 4548      745C544A 
 4549 0252 7964736E 		.ascii	"ydsn\000"
 4549      00
 4550              	.LASF40:
 4551 0257 746D7052 		.ascii	"tmpRegVal\000"
 4551      65675661 
 4551      6C00
 4552              	.LASF52:
 4553 0261 656E6162 		.ascii	"enableMask\000"
 4553      6C654D61 
 4553      736B00
 4554              	.LASF64:
 4555 026c 4144435F 		.ascii	"ADC_1_SetHighLimit\000"
 4555      315F5365 
 4555      74486967 
 4555      684C696D 
 4555      697400
 4556              	.LASF77:
 4557 027f 61766572 		.ascii	"averageAdcSamplesDiv\000"
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 123


 4557      61676541 
 4557      64635361 
 4557      6D706C65 
 4557      73446976 
 4558              	.LASF3:
 4559 0294 73686F72 		.ascii	"short unsigned int\000"
 4559      7420756E 
 4559      7369676E 
 4559      65642069 
 4559      6E7400
 4560              	.LASF101:
 4561 02a7 4144435F 		.ascii	"ADC_1_allConfigs\000"
 4561      315F616C 
 4561      6C436F6E 
 4561      66696773 
 4561      00
 4562              	.LASF29:
 4563 02b8 72616E67 		.ascii	"rangeThres\000"
 4563      65546872 
 4563      657300
 4564              	.LASF81:
 4565 02c3 4144435F 		.ascii	"ADC_1_CountsTo_mVolts\000"
 4565      315F436F 
 4565      756E7473 
 4565      546F5F6D 
 4565      566F6C74 
 4566              	.LASF61:
 4567 02d9 66696E61 		.ascii	"finalResult\000"
 4567      6C526573 
 4567      756C7400 
 4568              	.LASF92:
 4569 02e5 4144435F 		.ascii	"ADC_1_SelectConfig\000"
 4569      315F5365 
 4569      6C656374 
 4569      436F6E66 
 4569      696700
 4570              	.LASF49:
 4571 02f8 4144435F 		.ascii	"ADC_1_SetEosMask\000"
 4571      315F5365 
 4571      74456F73 
 4571      4D61736B 
 4571      00
 4572              	.LASF67:
 4573 0309 6C696D69 		.ascii	"limitMask\000"
 4573      744D6173 
 4573      6B00
 4574              	.LASF78:
 4575 0313 72617743 		.ascii	"rawChannel\000"
 4575      68616E6E 
 4575      656C00
 4576              	.LASF24:
 4577 031e 6E756D43 		.ascii	"numChannels\000"
 4577      68616E6E 
 4577      656C7300 
 4578              	.LASF42:
 4579 032a 6368616E 		.ascii	"chanConfig\000"
 4579      436F6E66 
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 124


 4579      696700
 4580              	.LASF19:
 4581 0335 72656733 		.ascii	"reg32\000"
 4581      3200
 4582              	.LASF41:
 4583 033b 69735369 		.ascii	"isSigned\000"
 4583      676E6564 
 4583      00
 4584              	.LASF58:
 4585 0344 61646352 		.ascii	"adcResult\000"
 4585      6573756C 
 4585      7400
 4586              	.LASF14:
 4587 034e 666C6F61 		.ascii	"float32\000"
 4587      74333200 
 4588              	.LASF22:
 4589 0356 73697A65 		.ascii	"sizetype\000"
 4589      74797065 
 4589      00
 4590              	.LASF104:
 4591 035f 4144435F 		.ascii	"ADC_1_intSarClock_StartEx\000"
 4591      315F696E 
 4591      74536172 
 4591      436C6F63 
 4591      6B5F5374 
 4592              	.LASF63:
 4593 0379 6C6F774C 		.ascii	"lowLimit\000"
 4593      696D6974 
 4593      00
 4594              	.LASF21:
 4595 0382 6C6F6E67 		.ascii	"long double\000"
 4595      20646F75 
 4595      626C6500 
 4596              	.LASF91:
 4597 038e 61646472 		.ascii	"address\000"
 4597      65737300 
 4598              	.LASF28:
 4599 0396 73616D70 		.ascii	"sampleTime23\000"
 4599      6C655469 
 4599      6D653233 
 4599      00
 4600              	.LASF33:
 4601 03a3 73617449 		.ascii	"satIntMask\000"
 4601      6E744D61 
 4601      736B00
 4602              	.LASF72:
 4603 03ae 4144435F 		.ascii	"ADC_1_SetGain\000"
 4603      315F5365 
 4603      74476169 
 4603      6E00
 4604              	.LASF69:
 4605 03bc 7361744D 		.ascii	"satMask\000"
 4605      61736B00 
 4606              	.LASF17:
 4607 03c4 696E7436 		.ascii	"int64\000"
 4607      3400
 4608              	.LASF106:
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 125


 4609 03ca 4379496E 		.ascii	"CyIntSetPriority\000"
 4609      74536574 
 4609      5072696F 
 4609      72697479 
 4609      00
 4610              	.LASF15:
 4611 03db 666C6F61 		.ascii	"float\000"
 4611      7400
 4612              	.LASF109:
 4613 03e1 4144435F 		.ascii	"ADC_1_IRQ_StartEx\000"
 4613      315F4952 
 4613      515F5374 
 4613      61727445 
 4613      7800
 4614              	.LASF65:
 4615 03f3 68696768 		.ascii	"highLimit\000"
 4615      4C696D69 
 4615      7400
 4616              	.LASF99:
 4617 03fd 4144435F 		.ascii	"ADC_1_offset\000"
 4617      315F6F66 
 4617      66736574 
 4617      00
 4618              	.LASF31:
 4619 040a 6368616E 		.ascii	"chanEn\000"
 4619      456E00
 4620              	.LASF111:
 4621 0411 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC_1.c\000"
 4621      72617465 
 4621      645F536F 
 4621      75726365 
 4621      5C50536F 
 4622              	.LASF68:
 4623 0430 4144435F 		.ascii	"ADC_1_SetSatMask\000"
 4623      315F5365 
 4623      74536174 
 4623      4D61736B 
 4623      00
 4624              	.LASF1:
 4625 0441 756E7369 		.ascii	"unsigned char\000"
 4625      676E6564 
 4625      20636861 
 4625      7200
 4626              	.LASF57:
 4627 044f 4144435F 		.ascii	"ADC_1_GetResult16\000"
 4627      315F4765 
 4627      74526573 
 4627      756C7431 
 4627      3600
 4628              	.LASF100:
 4629 0461 4144435F 		.ascii	"ADC_1_countsPer10Volt\000"
 4629      315F636F 
 4629      756E7473 
 4629      50657231 
 4629      30566F6C 
 4630              	.LASF2:
 4631 0477 73686F72 		.ascii	"short int\000"
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 126


 4631      7420696E 
 4631      7400
 4632              	.LASF80:
 4633 0481 72657375 		.ascii	"result_Volts\000"
 4633      6C745F56 
 4633      6F6C7473 
 4633      00
 4634              	.LASF60:
 4635 048e 61646352 		.ascii	"adcResult16\000"
 4635      6573756C 
 4635      74313600 
 4636              	.LASF43:
 4637 049a 63684E75 		.ascii	"chNum\000"
 4637      6D00
 4638              	.LASF95:
 4639 04a0 4144435F 		.ascii	"ADC_1_currentConfig\000"
 4639      315F6375 
 4639      7272656E 
 4639      74436F6E 
 4639      66696700 
 4640              	.LASF34:
 4641 04b4 76726566 		.ascii	"vrefMvValue\000"
 4641      4D765661 
 4641      6C756500 
 4642              	.LASF110:
 4643 04c0 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4643      43313120 
 4643      352E342E 
 4643      31203230 
 4643      31363036 
 4644 04f3 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 4644      20726576 
 4644      6973696F 
 4644      6E203233 
 4644      37373135 
 4645 0526 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 4645      67202D66 
 4645      66756E63 
 4645      74696F6E 
 4645      2D736563 
 4646              	.LASF39:
 4647 0552 6368616E 		.ascii	"chan\000"
 4647      00
 4648              	.LASF18:
 4649 0557 63686172 		.ascii	"char\000"
 4649      00
 4650              	.LASF48:
 4651 055c 6D6F6465 		.ascii	"mode\000"
 4651      00
 4652              	.LASF20:
 4653 0561 63796973 		.ascii	"cyisraddress\000"
 4653      72616464 
 4653      72657373 
 4653      00
 4654              	.LASF38:
 4655 056e 636F6E66 		.ascii	"config\000"
 4655      696700
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 127


 4656              	.LASF79:
 4657 0575 4144435F 		.ascii	"ADC_1_CountsTo_Volts\000"
 4657      315F436F 
 4657      756E7473 
 4657      546F5F56 
 4657      6F6C7473 
 4658              	.LASF103:
 4659 058a 4144435F 		.ascii	"ADC_1_intSarClock_SetFractionalDividerRegister\000"
 4659      315F696E 
 4659      74536172 
 4659      436C6F63 
 4659      6B5F5365 
 4660              	.LASF114:
 4661 05b9 4144435F 		.ascii	"ADC_1_IsChannelSigned\000"
 4661      315F4973 
 4661      4368616E 
 4661      6E656C53 
 4661      69676E65 
 4662              	.LASF84:
 4663 05cf 72657375 		.ascii	"result_uVolts\000"
 4663      6C745F75 
 4663      566F6C74 
 4663      7300
 4664              	.LASF93:
 4665 05dd 72657374 		.ascii	"restart\000"
 4665      61727400 
 4666              	.LASF71:
 4667 05e5 6F666673 		.ascii	"offset\000"
 4667      657400
 4668              	.LASF25:
 4669 05ec 6374726C 		.ascii	"ctrl\000"
 4669      00
 4670              	.LASF35:
 4671 05f1 6D697363 		.ascii	"miscConfig\000"
 4671      436F6E66 
 4671      696700
 4672              	.LASF75:
 4673 05fc 61646343 		.ascii	"adcCounts\000"
 4673      6F756E74 
 4673      7300
 4674              	.LASF98:
 4675 0606 4144435F 		.ascii	"ADC_1_selected\000"
 4675      315F7365 
 4675      6C656374 
 4675      656400
 4676              	.LASF30:
 4677 0615 72616E67 		.ascii	"rangeCond\000"
 4677      65436F6E 
 4677      6400
 4678              	.LASF56:
 4679 061f 4144435F 		.ascii	"ADC_1_IsEndConversion\000"
 4679      315F4973 
 4679      456E6443 
 4679      6F6E7665 
 4679      7273696F 
 4680              	.LASF26:
 4681 0635 73616D70 		.ascii	"sampleCtrl\000"
ARM GAS  C:\Users\samue\AppData\Local\Temp\cc6x4V0l.s 			page 128


 4681      6C654374 
 4681      726C00
 4682              	.LASF37:
 4683 0640 4144435F 		.ascii	"ADC_1_CONFIG_STRUCT\000"
 4683      315F434F 
 4683      4E464947 
 4683      5F535452 
 4683      55435400 
 4684              	.LASF59:
 4685 0654 4144435F 		.ascii	"ADC_1_GetResult32\000"
 4685      315F4765 
 4685      74526573 
 4685      756C7433 
 4685      3200
 4686              	.LASF70:
 4687 0666 4144435F 		.ascii	"ADC_1_SetOffset\000"
 4687      315F5365 
 4687      744F6666 
 4687      73657400 
 4688              	.LASF12:
 4689 0676 696E7431 		.ascii	"int16\000"
 4689      3600
 4690              	.LASF51:
 4691 067c 4144435F 		.ascii	"ADC_1_SetChanMask\000"
 4691      315F5365 
 4691      74436861 
 4691      6E4D6173 
 4691      6B00
 4692              	.LASF82:
 4693 068e 72657375 		.ascii	"result_mVolts\000"
 4693      6C745F6D 
 4693      566F6C74 
 4693      7300
 4694              	.LASF23:
 4695 069c 6368616E 		.ascii	"channelBase\000"
 4695      6E656C42 
 4695      61736500 
 4696              	.LASF55:
 4697 06a8 656E644F 		.ascii	"endOfConversion\000"
 4697      66436F6E 
 4697      76657273 
 4697      696F6E00 
 4698              	.LASF89:
 4699 06b8 4144435F 		.ascii	"ADC_1_Start\000"
 4699      315F5374 
 4699      61727400 
 4700              	.LASF105:
 4701 06c4 43794861 		.ascii	"CyHalt\000"
 4701      6C7400
 4702              	.LASF83:
 4703 06cb 4144435F 		.ascii	"ADC_1_CountsTo_uVolts\000"
 4703      315F436F 
 4703      756E7473 
 4703      546F5F75 
 4703      566F6C74 
 4704              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
