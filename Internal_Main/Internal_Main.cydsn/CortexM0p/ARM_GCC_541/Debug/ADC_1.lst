ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADC_1_SetDFTControl,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	ADC_1_SetDFTControl, %function
  24              	ADC_1_SetDFTControl:
  25              	.LFB5:
  26              		.file 1 "Generated_Source\\PSoC4\\ADC_1.c"
   1:Generated_Source\PSoC4/ADC_1.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/ADC_1.c **** * \file     ADC_1.c
   3:Generated_Source\PSoC4/ADC_1.c **** * \version  3.10
   4:Generated_Source\PSoC4/ADC_1.c **** *
   5:Generated_Source\PSoC4/ADC_1.c **** * \brief
   6:Generated_Source\PSoC4/ADC_1.c **** * Provides the source code to the API for the ADC_1 Component.
   7:Generated_Source\PSoC4/ADC_1.c **** *
   8:Generated_Source\PSoC4/ADC_1.c **** ********************************************************************************
   9:Generated_Source\PSoC4/ADC_1.c **** * \copyright
  10:Generated_Source\PSoC4/ADC_1.c **** * (c) 2015-2018, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC4/ADC_1.c **** * This software, including source code, documentation and related
  12:Generated_Source\PSoC4/ADC_1.c **** * materials ("Software"), is owned by Cypress Semiconductor
  13:Generated_Source\PSoC4/ADC_1.c **** * Corporation ("Cypress") and is protected by and subject to worldwide
  14:Generated_Source\PSoC4/ADC_1.c **** * patent protection (United States and foreign), United States copyright
  15:Generated_Source\PSoC4/ADC_1.c **** * laws and international treaty provisions. Therefore, you may use this
  16:Generated_Source\PSoC4/ADC_1.c **** * Software only as provided in the license agreement accompanying the
  17:Generated_Source\PSoC4/ADC_1.c **** * software package from which you obtained this Software ("EULA").
  18:Generated_Source\PSoC4/ADC_1.c **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  19:Generated_Source\PSoC4/ADC_1.c **** * non-transferable license to copy, modify, and compile the
  20:Generated_Source\PSoC4/ADC_1.c **** * Software source code solely for use in connection with Cypress's
  21:Generated_Source\PSoC4/ADC_1.c **** * integrated circuit products. Any reproduction, modification, translation,
  22:Generated_Source\PSoC4/ADC_1.c **** * compilation, or representation of this Software except as specified
  23:Generated_Source\PSoC4/ADC_1.c **** * above is prohibited without the express written permission of Cypress.
  24:Generated_Source\PSoC4/ADC_1.c **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO
  25:Generated_Source\PSoC4/ADC_1.c **** * WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
  26:Generated_Source\PSoC4/ADC_1.c **** * BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
  27:Generated_Source\PSoC4/ADC_1.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  28:Generated_Source\PSoC4/ADC_1.c **** * PARTICULAR PURPOSE. Cypress reserves the right to make
  29:Generated_Source\PSoC4/ADC_1.c **** * changes to the Software without notice. Cypress does not assume any
  30:Generated_Source\PSoC4/ADC_1.c **** * liability arising out of the application or use of the Software or any
  31:Generated_Source\PSoC4/ADC_1.c **** * product or circuit described in the Software. Cypress does not
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 2


  32:Generated_Source\PSoC4/ADC_1.c **** * authorize its products for use in any products where a malfunction or
  33:Generated_Source\PSoC4/ADC_1.c **** * failure of the Cypress product may reasonably be expected to result in
  34:Generated_Source\PSoC4/ADC_1.c **** * significant property damage, injury or death ("High Risk Product"). By
  35:Generated_Source\PSoC4/ADC_1.c **** * including Cypress's product in a High Risk Product, the manufacturer
  36:Generated_Source\PSoC4/ADC_1.c **** * of such system or application assumes all risk of such use and in doing
  37:Generated_Source\PSoC4/ADC_1.c **** * so agrees to indemnify Cypress against all liability.
  38:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/ADC_1.c **** #include "ADC_1.h"
  40:Generated_Source\PSoC4/ADC_1.c **** 
  41:Generated_Source\PSoC4/ADC_1.c **** static void ADC_1_SetDFTControl(const ADC_1_CONFIG_STRUCT *config);
  42:Generated_Source\PSoC4/ADC_1.c **** static int32 ADC_1_IsChannelSigned(uint32 chan);
  43:Generated_Source\PSoC4/ADC_1.c **** #if(ADC_1_ANY_CONFIG_USES_FILTER != 0u)
  44:Generated_Source\PSoC4/ADC_1.c **** static void ADC_1_SetupComparatorTrim(void);
  45:Generated_Source\PSoC4/ADC_1.c **** static void ADC_1_UndoComparatorTrimSetup(void);
  46:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_RaiseOpampTrimToCrossing(uint32 startTrim);
  47:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_LowerOpampTrimToCrossing(uint32 startTrim);
  48:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_RaiseAgndTrimToCrossing(uint32 startTrim);
  49:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_LowerAgndTrimToCrossing(uint32 startTrim);
  50:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_SetOpampAndAgndTrim(uint32 opampTrim, uint32 agndTrim);
  51:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_SetOpampTrim(uint32 opampTrim);
  52:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_SetAgndTrim(uint32 agndTrim);
  53:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_IncOpampTrim(uint32 trim);
  54:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_DecOpampTrim(uint32 trim);
  55:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_IncAgndTrim(uint32 trim);
  56:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_DecAgndTrim(uint32 trim);
  57:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_GetCompStatus(void);
  58:Generated_Source\PSoC4/ADC_1.c **** #define OFFSET_SAMPLES (30)
  59:Generated_Source\PSoC4/ADC_1.c **** #endif
  60:Generated_Source\PSoC4/ADC_1.c **** 
  61:Generated_Source\PSoC4/ADC_1.c **** uint8 ADC_1_initVar = 0u;
  62:Generated_Source\PSoC4/ADC_1.c **** 
  63:Generated_Source\PSoC4/ADC_1.c **** uint8 ADC_1_selected = 0u; /* 0 if no configuration selected. 1 otherwise. */
  64:Generated_Source\PSoC4/ADC_1.c **** volatile int16 ADC_1_offset[ADC_1_TOTAL_CHANNELS_NUM];
  65:Generated_Source\PSoC4/ADC_1.c **** volatile int32 ADC_1_countsPer10Volt[ADC_1_TOTAL_CHANNELS_NUM];
  66:Generated_Source\PSoC4/ADC_1.c **** 
  67:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_currentConfig = 0u; /* Currently active configuration */
  68:Generated_Source\PSoC4/ADC_1.c **** 
  69:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
  70:Generated_Source\PSoC4/ADC_1.c **** * Local data allocation
  71:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
  72:Generated_Source\PSoC4/ADC_1.c **** /* Channels configuration generated by customiser */
  73:Generated_Source\PSoC4/ADC_1.c **** static const uint32 CYCODE ADC_1_channelsConfig[] = { 0x00000400UL,  };
  74:Generated_Source\PSoC4/ADC_1.c **** 
  75:Generated_Source\PSoC4/ADC_1.c **** /* Filter init */
  76:Generated_Source\PSoC4/ADC_1.c **** #if(ADC_1_ANY_CONFIG_USES_FILTER != 0u)
  77:Generated_Source\PSoC4/ADC_1.c ****     #if (0u != ADC_1_CFG0_FILTER_PRESENT)
  78:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG0_UABH_A_FILTER_INITPAIRSSIZE (19u)
  79:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG0_UABH_A_FILTER_initPairs[ADC_1_CFG0_UABH_A_FILTER_INI
  80:Generated_Source\PSoC4/ADC_1.c ****         {
  81:Generated_Source\PSoC4/ADC_1.c ****             /*OA_CTRL default always first element in initPairs*/
  82:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
  83:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_A_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_A_DEFAULT_OA_CTRL)}
  84:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_A_DEFAULT_SW_STATIC)}
  85:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_MODBIT_SRC_PTR  , ((uint32)ADC_1_UABH_A_INVAR_SW_MODBIT_SRC)}
  86:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_A_INVAR_SRAM_CTRL)}
  87:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG0_UABH_A_STARTUP_DELAY)}
  88:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_A_DEFAULT_SW_BOOST_CTRL)}
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 3


  89:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_A_DEFAULT_SW_CA_IN1)}
  90:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_OTHER_PTR       , ((uint32)ADC_1_UABH_A_DEFAULT_SW_OTHER)}
  91:Generated_Source\PSoC4/ADC_1.c **** 
  92:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG0_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
  93:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
  94:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_IN0)}
  95:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_TOP)}
  96:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN0)}
  97:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN1)}
  98:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CF_BOT)}
  99:Generated_Source\PSoC4/ADC_1.c **** 
 100:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 101:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG0_UABH_A_LOWQDYN_CAP_CTRL)}
 102:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_CFG0_UABH_A_LOWQDYN_SW_CB_IN0)}
 103:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_CFG0_UABH_A_LOWQDYN_SW_CB_IN1)}
 104:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG0_UABH_A_LOWQDYN_SW_CB_TOP)}
 105:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG0_UABH_A_LOWQDYN_SW_CC_TOP)}
 106:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG0_UABH_A_LOWQDYN_CAP_ABCF_VAL
 107:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG0_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 108:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 109:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_IN0)}
 110:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_TOP)}
 111:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN0)}
 112:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN1)}
 113:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN0)}
 114:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN1)}
 115:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_TOP)}
 116:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CF_BOT)}
 117:Generated_Source\PSoC4/ADC_1.c **** 
 118:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 119:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG0_UABH_A_HIGHQDYN_CAP_CTRL)}
 120:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG0_UABH_A_HIGHQDYN_SW_CB_TOP)}
 121:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG0_UABH_A_HIGHQDYN_CAP_ABCF_VA
 122:Generated_Source\PSoC4/ADC_1.c ****             #endif /* (ADC_1_CFG0_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 123:Generated_Source\PSoC4/ADC_1.c ****         };
 124:Generated_Source\PSoC4/ADC_1.c **** 
 125:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG0_UABH_B_FILTER_INITPAIRSSIZE (19u)
 126:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG0_UABH_B_FILTER_initPairs[ADC_1_CFG0_UABH_B_FILTER_INI
 127:Generated_Source\PSoC4/ADC_1.c ****         {
 128:Generated_Source\PSoC4/ADC_1.c ****             /*OA_CTRL default always first element in initPairs*/
 129:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
 130:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_B_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_B_DEFAULT_OA_CTRL)}
 131:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_B_DEFAULT_SW_STATIC)}
 132:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_MODBIT_SRC_PTR  , ((uint32)ADC_1_UABH_B_INVAR_SW_MODBIT_SRC)}
 133:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_B_INVAR_SRAM_CTRL)}
 134:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG0_UABH_B_STARTUP_DELAY)}
 135:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_B_DEFAULT_SW_BOOST_CTRL)}
 136:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_OTHER_PTR  , ((uint32)ADC_1_UABH_B_DEFAULT_SW_OTHER)}
 137:Generated_Source\PSoC4/ADC_1.c **** 
 138:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG0_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
 139:Generated_Source\PSoC4/ADC_1.c ****                         /* Filter-invariant registers */
 140:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN0)}
 141:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN1)}
 142:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_TOP)}
 143:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN0)}
 144:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN1)}
 145:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_TOP)}
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 4


 146:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN0)}
 147:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN1)}
 148:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CF_BOT)}
 149:Generated_Source\PSoC4/ADC_1.c **** 
 150:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 151:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG0_UABH_B_LOWQDYN_CAP_CTRL)}
 152:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG0_UABH_B_LOWQDYN_SW_CC_TOP)}
 153:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG0_UABH_B_LOWQDYN_CAP_ABCF_VAL
 154:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG0_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 155:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 156:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN0)}
 157:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN1)}
 158:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_TOP)}
 159:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN0)}
 160:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN1)}
 161:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN0)}
 162:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN1)}
 163:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CF_BOT)}
 164:Generated_Source\PSoC4/ADC_1.c **** 
 165:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 166:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG0_UABH_B_HIGHQDYN_CAP_CTRL)}
 167:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG0_UABH_B_HIGHQDYN_SW_CB_TOP)}
 168:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG0_UABH_B_HIGHQDYN_SW_CC_TOP)}
 169:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG0_UABH_B_HIGHQDYN_CAP_ABCF_VA
 170:Generated_Source\PSoC4/ADC_1.c ****             #endif /* #if (ADC_1_CFG0_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 171:Generated_Source\PSoC4/ADC_1.c ****         };
 172:Generated_Source\PSoC4/ADC_1.c **** 
 173:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG0_UABH_A_FILTER_config = {
 174:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_waveConfig,
 175:Generated_Source\PSoC4/ADC_1.c ****             (CyUAB_reg_pair*) ADC_1_CFG0_UABH_A_FILTER_initPairs,
 176:Generated_Source\PSoC4/ADC_1.c ****             CyUAB_SHARED_SW_CFG(ADC_1_UABH_A_PARAM_REF_TIED,ADC_1_UABH_A_PARAM_AGND_TIED,
 177:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_A_PARAM_SW_CC,ADC_1_UABH_A_PARAM_SW_BB,ADC_1_UABH_A_PARAM_SW_AA),
 178:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_NUM_STEPS,
 179:Generated_Source\PSoC4/ADC_1.c ****             (uint8)(ADC_1_UABH_A_ELEMENT_COUNT(ADC_1_CFG0_UABH_A_FILTER_initPairs))
 180:Generated_Source\PSoC4/ADC_1.c ****         };
 181:Generated_Source\PSoC4/ADC_1.c **** 
 182:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG0_UABH_B_FILTER_config = {
 183:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_waveConfig,
 184:Generated_Source\PSoC4/ADC_1.c ****         (CyUAB_reg_pair*) ADC_1_CFG0_UABH_B_FILTER_initPairs,
 185:Generated_Source\PSoC4/ADC_1.c ****         CyUAB_SHARED_SW_CFG(ADC_1_UABH_B_PARAM_REF_TIED,ADC_1_UABH_B_PARAM_AGND_TIED,
 186:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_B_PARAM_SW_CC,ADC_1_UABH_B_PARAM_SW_BB,ADC_1_UABH_B_PARAM_SW_AA),
 187:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_NUM_STEPS,
 188:Generated_Source\PSoC4/ADC_1.c ****         (uint8)(ADC_1_UABH_B_ELEMENT_COUNT(ADC_1_CFG0_UABH_B_FILTER_initPairs))
 189:Generated_Source\PSoC4/ADC_1.c ****     };
 190:Generated_Source\PSoC4/ADC_1.c ****     #endif /* (0u != ADC_1_CFG0_FILTER_PRESENT) */
 191:Generated_Source\PSoC4/ADC_1.c ****     #if (0u != ADC_1_CFG1_FILTER_PRESENT)
 192:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG1_UABH_A_FILTER_INITPAIRSSIZE (19u)
 193:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG1_UABH_A_FILTER_initPairs[ADC_1_CFG1_UABH_A_FILTER_INI
 194:Generated_Source\PSoC4/ADC_1.c ****         {
 195:Generated_Source\PSoC4/ADC_1.c ****             /*OA_CTRL default always first element in initPairs*/
 196:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
 197:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_A_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_A_DEFAULT_OA_CTRL)}
 198:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_A_DEFAULT_SW_STATIC)}
 199:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_MODBIT_SRC_PTR  , ((uint32)ADC_1_UABH_A_INVAR_SW_MODBIT_SRC)}
 200:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_A_INVAR_SRAM_CTRL)}
 201:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG1_UABH_A_STARTUP_DELAY)}
 202:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_A_DEFAULT_SW_BOOST_CTRL)}
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 5


 203:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_A_DEFAULT_SW_CA_IN1)}
 204:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_OTHER_PTR       , ((uint32)ADC_1_UABH_A_DEFAULT_SW_OTHER)}
 205:Generated_Source\PSoC4/ADC_1.c **** 
 206:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG1_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
 207:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 208:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_IN0)}
 209:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_TOP)}
 210:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN0)}
 211:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN1)}
 212:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CF_BOT)}
 213:Generated_Source\PSoC4/ADC_1.c **** 
 214:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 215:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG1_UABH_A_LOWQDYN_CAP_CTRL)}
 216:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_CFG1_UABH_A_LOWQDYN_SW_CB_IN0)}
 217:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_CFG1_UABH_A_LOWQDYN_SW_CB_IN1)}
 218:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG1_UABH_A_LOWQDYN_SW_CB_TOP)}
 219:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG1_UABH_A_LOWQDYN_SW_CC_TOP)}
 220:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG1_UABH_A_LOWQDYN_CAP_ABCF_VAL
 221:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG1_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 222:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 223:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_IN0)}
 224:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_TOP)}
 225:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN0)}
 226:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN1)}
 227:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN0)}
 228:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN1)}
 229:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_TOP)}
 230:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CF_BOT)}
 231:Generated_Source\PSoC4/ADC_1.c **** 
 232:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 233:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG1_UABH_A_HIGHQDYN_CAP_CTRL)}
 234:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG1_UABH_A_HIGHQDYN_SW_CB_TOP)}
 235:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG1_UABH_A_HIGHQDYN_CAP_ABCF_VA
 236:Generated_Source\PSoC4/ADC_1.c ****             #endif /* (ADC_1_CFG1_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 237:Generated_Source\PSoC4/ADC_1.c ****         };
 238:Generated_Source\PSoC4/ADC_1.c **** 
 239:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG1_UABH_B_FILTER_INITPAIRSSIZE (19u)
 240:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG1_UABH_B_FILTER_initPairs[ADC_1_CFG1_UABH_B_FILTER_INI
 241:Generated_Source\PSoC4/ADC_1.c ****         {
 242:Generated_Source\PSoC4/ADC_1.c ****             /*OA_CTRL default always first element in initPairs*/
 243:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
 244:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_B_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_B_DEFAULT_OA_CTRL)}
 245:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_B_DEFAULT_SW_STATIC)}
 246:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_MODBIT_SRC_PTR  , ((uint32)ADC_1_UABH_B_INVAR_SW_MODBIT_SRC)}
 247:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_B_INVAR_SRAM_CTRL)}
 248:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG1_UABH_B_STARTUP_DELAY)}
 249:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_B_DEFAULT_SW_BOOST_CTRL)}
 250:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_OTHER_PTR       , ((uint32)ADC_1_UABH_B_DEFAULT_SW_OTHER)}
 251:Generated_Source\PSoC4/ADC_1.c **** 
 252:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG1_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
 253:Generated_Source\PSoC4/ADC_1.c ****                         /* Filter-invariant registers */
 254:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN0)}
 255:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN1)}
 256:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_TOP)}
 257:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN0)}
 258:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN1)}
 259:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_TOP)}
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 6


 260:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN0)}
 261:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN1)}
 262:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CF_BOT)}
 263:Generated_Source\PSoC4/ADC_1.c **** 
 264:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 265:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG1_UABH_B_LOWQDYN_CAP_CTRL)}
 266:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG1_UABH_B_LOWQDYN_SW_CC_TOP)}
 267:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG1_UABH_B_LOWQDYN_CAP_ABCF_VAL
 268:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG1_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 269:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 270:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN0)}
 271:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN1)}
 272:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_TOP)}
 273:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN0)}
 274:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN1)}
 275:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN0)}
 276:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN1)}
 277:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CF_BOT)}
 278:Generated_Source\PSoC4/ADC_1.c **** 
 279:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 280:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG1_UABH_B_HIGHQDYN_CAP_CTRL)}
 281:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG1_UABH_B_HIGHQDYN_SW_CB_TOP)}
 282:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG1_UABH_B_HIGHQDYN_SW_CC_TOP)}
 283:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG1_UABH_B_HIGHQDYN_CAP_ABCF_VA
 284:Generated_Source\PSoC4/ADC_1.c ****             #endif /* #if (ADC_1_CFG1_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 285:Generated_Source\PSoC4/ADC_1.c ****         };
 286:Generated_Source\PSoC4/ADC_1.c **** 
 287:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG1_UABH_A_FILTER_config = {
 288:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_waveConfig,
 289:Generated_Source\PSoC4/ADC_1.c ****             (CyUAB_reg_pair*) ADC_1_CFG1_UABH_A_FILTER_initPairs,
 290:Generated_Source\PSoC4/ADC_1.c ****             CyUAB_SHARED_SW_CFG(ADC_1_UABH_A_PARAM_REF_TIED,ADC_1_UABH_A_PARAM_AGND_TIED,
 291:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_A_PARAM_SW_CC,ADC_1_UABH_A_PARAM_SW_BB,ADC_1_UABH_A_PARAM_SW_AA),
 292:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_NUM_STEPS,
 293:Generated_Source\PSoC4/ADC_1.c ****             (uint8)(ADC_1_UABH_A_ELEMENT_COUNT(ADC_1_CFG1_UABH_A_FILTER_initPairs))
 294:Generated_Source\PSoC4/ADC_1.c ****         };
 295:Generated_Source\PSoC4/ADC_1.c **** 
 296:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG1_UABH_B_FILTER_config = {
 297:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_waveConfig,
 298:Generated_Source\PSoC4/ADC_1.c ****         (CyUAB_reg_pair*) ADC_1_CFG1_UABH_B_FILTER_initPairs,
 299:Generated_Source\PSoC4/ADC_1.c ****         CyUAB_SHARED_SW_CFG(ADC_1_UABH_B_PARAM_REF_TIED,ADC_1_UABH_B_PARAM_AGND_TIED,
 300:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_B_PARAM_SW_CC,ADC_1_UABH_B_PARAM_SW_BB,ADC_1_UABH_B_PARAM_SW_AA),
 301:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_NUM_STEPS,
 302:Generated_Source\PSoC4/ADC_1.c ****         (uint8)(ADC_1_UABH_B_ELEMENT_COUNT(ADC_1_CFG1_UABH_B_FILTER_initPairs))
 303:Generated_Source\PSoC4/ADC_1.c ****     };
 304:Generated_Source\PSoC4/ADC_1.c ****     #endif /* (0u != ADC_1_CFG1_FILTER_PRESENT) */
 305:Generated_Source\PSoC4/ADC_1.c ****     #if (0u != ADC_1_CFG2_FILTER_PRESENT)
 306:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG2_UABH_A_FILTER_INITPAIRSSIZE (19u)
 307:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG2_UABH_A_FILTER_initPairs[ADC_1_CFG2_UABH_A_FILTER_INI
 308:Generated_Source\PSoC4/ADC_1.c ****         {
 309:Generated_Source\PSoC4/ADC_1.c ****             /*OA_CTRL default always first element in initPairs*/
 310:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
 311:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_A_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_A_DEFAULT_OA_CTRL)}
 312:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_A_DEFAULT_SW_STATIC)}
 313:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_MODBIT_SRC_PTR  , ((uint32)ADC_1_UABH_A_INVAR_SW_MODBIT_SRC)}
 314:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_A_INVAR_SRAM_CTRL)}
 315:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG2_UABH_A_STARTUP_DELAY)}
 316:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_A_DEFAULT_SW_BOOST_CTRL)}
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 7


 317:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_A_DEFAULT_SW_CA_IN1)}
 318:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_OTHER_PTR       , ((uint32)ADC_1_UABH_A_DEFAULT_SW_OTHER)}
 319:Generated_Source\PSoC4/ADC_1.c **** 
 320:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG2_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
 321:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 322:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_IN0)}
 323:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_TOP)}
 324:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN0)}
 325:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN1)}
 326:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CF_BOT)}
 327:Generated_Source\PSoC4/ADC_1.c **** 
 328:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 329:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG2_UABH_A_LOWQDYN_CAP_CTRL)}
 330:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_CFG2_UABH_A_LOWQDYN_SW_CB_IN0)}
 331:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_CFG2_UABH_A_LOWQDYN_SW_CB_IN1)}
 332:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG2_UABH_A_LOWQDYN_SW_CB_TOP)}
 333:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG2_UABH_A_LOWQDYN_SW_CC_TOP)}
 334:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG2_UABH_A_LOWQDYN_CAP_ABCF_VAL
 335:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG2_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 336:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 337:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_IN0)}
 338:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_TOP)}
 339:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN0)}
 340:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN1)}
 341:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN0)}
 342:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN1)}
 343:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_TOP)}
 344:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CF_BOT)}
 345:Generated_Source\PSoC4/ADC_1.c **** 
 346:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 347:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG2_UABH_A_HIGHQDYN_CAP_CTRL)}
 348:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG2_UABH_A_HIGHQDYN_SW_CB_TOP)}
 349:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG2_UABH_A_HIGHQDYN_CAP_ABCF_VA
 350:Generated_Source\PSoC4/ADC_1.c ****             #endif /* (ADC_1_CFG2_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 351:Generated_Source\PSoC4/ADC_1.c ****         };
 352:Generated_Source\PSoC4/ADC_1.c **** 
 353:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG2_UABH_B_FILTER_INITPAIRSSIZE (19u)
 354:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG2_UABH_B_FILTER_initPairs[ADC_1_CFG2_UABH_B_FILTER_INI
 355:Generated_Source\PSoC4/ADC_1.c ****         {
 356:Generated_Source\PSoC4/ADC_1.c ****             /*OA_CTRL default always first element in initPairs*/
 357:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
 358:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_B_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_B_DEFAULT_OA_CTRL)}
 359:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_B_DEFAULT_SW_STATIC)}
 360:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_MODBIT_SRC_PTR  , ((uint32)ADC_1_UABH_B_INVAR_SW_MODBIT_SRC)}
 361:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_B_INVAR_SRAM_CTRL)}
 362:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG2_UABH_B_STARTUP_DELAY)}
 363:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_B_DEFAULT_SW_BOOST_CTRL)}
 364:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_OTHER_PTR       , ((uint32)ADC_1_UABH_B_DEFAULT_SW_OTHER)}
 365:Generated_Source\PSoC4/ADC_1.c **** 
 366:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG2_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
 367:Generated_Source\PSoC4/ADC_1.c ****                         /* Filter-invariant registers */
 368:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN0)}
 369:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN1)}
 370:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_TOP)}
 371:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN0)}
 372:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN1)}
 373:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_TOP)}
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 8


 374:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN0)}
 375:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN1)}
 376:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CF_BOT)}
 377:Generated_Source\PSoC4/ADC_1.c **** 
 378:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 379:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG2_UABH_B_LOWQDYN_CAP_CTRL)}
 380:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG2_UABH_B_LOWQDYN_SW_CC_TOP)}
 381:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG2_UABH_B_LOWQDYN_CAP_ABCF_VAL
 382:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG2_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 383:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 384:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN0)}
 385:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN1)}
 386:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_TOP)}
 387:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN0)}
 388:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN1)}
 389:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN0)}
 390:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN1)}
 391:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CF_BOT)}
 392:Generated_Source\PSoC4/ADC_1.c **** 
 393:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 394:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG2_UABH_B_HIGHQDYN_CAP_CTRL)}
 395:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG2_UABH_B_HIGHQDYN_SW_CB_TOP)}
 396:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG2_UABH_B_HIGHQDYN_SW_CC_TOP)}
 397:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG2_UABH_B_HIGHQDYN_CAP_ABCF_VA
 398:Generated_Source\PSoC4/ADC_1.c ****             #endif /* #if (ADC_1_CFG2_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 399:Generated_Source\PSoC4/ADC_1.c ****         };
 400:Generated_Source\PSoC4/ADC_1.c **** 
 401:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG2_UABH_A_FILTER_config = {
 402:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_waveConfig,
 403:Generated_Source\PSoC4/ADC_1.c ****             (CyUAB_reg_pair*) ADC_1_CFG2_UABH_A_FILTER_initPairs,
 404:Generated_Source\PSoC4/ADC_1.c ****             CyUAB_SHARED_SW_CFG(ADC_1_UABH_A_PARAM_REF_TIED,ADC_1_UABH_A_PARAM_AGND_TIED,
 405:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_A_PARAM_SW_CC,ADC_1_UABH_A_PARAM_SW_BB,ADC_1_UABH_A_PARAM_SW_AA),
 406:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_NUM_STEPS,
 407:Generated_Source\PSoC4/ADC_1.c ****             (uint8)(ADC_1_UABH_A_ELEMENT_COUNT(ADC_1_CFG2_UABH_A_FILTER_initPairs))
 408:Generated_Source\PSoC4/ADC_1.c ****         };
 409:Generated_Source\PSoC4/ADC_1.c **** 
 410:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG2_UABH_B_FILTER_config = {
 411:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_waveConfig,
 412:Generated_Source\PSoC4/ADC_1.c ****         (CyUAB_reg_pair*) ADC_1_CFG2_UABH_B_FILTER_initPairs,
 413:Generated_Source\PSoC4/ADC_1.c ****         CyUAB_SHARED_SW_CFG(ADC_1_UABH_B_PARAM_REF_TIED,ADC_1_UABH_B_PARAM_AGND_TIED,
 414:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_B_PARAM_SW_CC,ADC_1_UABH_B_PARAM_SW_BB,ADC_1_UABH_B_PARAM_SW_AA),
 415:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_NUM_STEPS,
 416:Generated_Source\PSoC4/ADC_1.c ****         (uint8)(ADC_1_UABH_B_ELEMENT_COUNT(ADC_1_CFG2_UABH_B_FILTER_initPairs))
 417:Generated_Source\PSoC4/ADC_1.c ****     };
 418:Generated_Source\PSoC4/ADC_1.c ****     #endif /* (0u != ADC_1_CFG2_FILTER_PRESENT) */
 419:Generated_Source\PSoC4/ADC_1.c ****     #if (0u != ADC_1_CFG3_FILTER_PRESENT)
 420:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG3_UABH_A_FILTER_INITPAIRSSIZE (19u)
 421:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG3_UABH_A_FILTER_initPairs[ADC_1_CFG3_UABH_A_FILTER_INI
 422:Generated_Source\PSoC4/ADC_1.c ****         {
 423:Generated_Source\PSoC4/ADC_1.c ****             /*OA_CTRL default always first element in initPairs*/
 424:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
 425:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_A_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_A_DEFAULT_OA_CTRL)}
 426:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_A_DEFAULT_SW_STATIC)}
 427:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_MODBIT_SRC_PTR  , ((uint32)ADC_1_UABH_A_INVAR_SW_MODBIT_SRC)}
 428:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_A_INVAR_SRAM_CTRL)}
 429:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG3_UABH_A_STARTUP_DELAY)}
 430:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_A_DEFAULT_SW_BOOST_CTRL)}
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 9


 431:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_A_DEFAULT_SW_CA_IN1)}
 432:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_OTHER_PTR       , ((uint32)ADC_1_UABH_A_DEFAULT_SW_OTHER)}
 433:Generated_Source\PSoC4/ADC_1.c **** 
 434:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG3_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
 435:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 436:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_IN0)}
 437:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_TOP)}
 438:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN0)}
 439:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN1)}
 440:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CF_BOT)}
 441:Generated_Source\PSoC4/ADC_1.c **** 
 442:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 443:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG3_UABH_A_LOWQDYN_CAP_CTRL)}
 444:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_CFG3_UABH_A_LOWQDYN_SW_CB_IN0)}
 445:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_CFG3_UABH_A_LOWQDYN_SW_CB_IN1)}
 446:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG3_UABH_A_LOWQDYN_SW_CB_TOP)}
 447:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG3_UABH_A_LOWQDYN_SW_CC_TOP)}
 448:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG3_UABH_A_LOWQDYN_CAP_ABCF_VAL
 449:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG3_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 450:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 451:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_IN0)}
 452:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_TOP)}
 453:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN0)}
 454:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN1)}
 455:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN0)}
 456:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN1)}
 457:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_TOP)}
 458:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CF_BOT)}
 459:Generated_Source\PSoC4/ADC_1.c **** 
 460:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 461:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG3_UABH_A_HIGHQDYN_CAP_CTRL)}
 462:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG3_UABH_A_HIGHQDYN_SW_CB_TOP)}
 463:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG3_UABH_A_HIGHQDYN_CAP_ABCF_VA
 464:Generated_Source\PSoC4/ADC_1.c ****             #endif /* (ADC_1_CFG3_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 465:Generated_Source\PSoC4/ADC_1.c ****         };
 466:Generated_Source\PSoC4/ADC_1.c **** 
 467:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG3_UABH_B_FILTER_INITPAIRSSIZE (19u)
 468:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG3_UABH_B_FILTER_initPairs[ADC_1_CFG3_UABH_B_FILTER_INI
 469:Generated_Source\PSoC4/ADC_1.c ****         {
 470:Generated_Source\PSoC4/ADC_1.c ****             /*OA_CTRL default always first element in initPairs*/
 471:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
 472:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_B_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_B_DEFAULT_OA_CTRL)}
 473:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_B_DEFAULT_SW_STATIC)}
 474:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_MODBIT_SRC_PTR  , ((uint32)ADC_1_UABH_B_INVAR_SW_MODBIT_SRC)}
 475:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_B_INVAR_SRAM_CTRL)}
 476:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG3_UABH_B_STARTUP_DELAY)}
 477:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_B_DEFAULT_SW_BOOST_CTRL)}
 478:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_OTHER_PTR       , ((uint32)ADC_1_UABH_B_DEFAULT_SW_OTHER)}
 479:Generated_Source\PSoC4/ADC_1.c **** 
 480:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG3_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
 481:Generated_Source\PSoC4/ADC_1.c ****                         /* Filter-invariant registers */
 482:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN0)}
 483:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN1)}
 484:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_TOP)}
 485:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN0)}
 486:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN1)}
 487:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_TOP)}
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 10


 488:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN0)}
 489:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN1)}
 490:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CF_BOT)}
 491:Generated_Source\PSoC4/ADC_1.c **** 
 492:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 493:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG3_UABH_B_LOWQDYN_CAP_CTRL)}
 494:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG3_UABH_B_LOWQDYN_SW_CC_TOP)}
 495:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG3_UABH_B_LOWQDYN_CAP_ABCF_VAL
 496:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG3_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 497:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 498:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN0)}
 499:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN1)}
 500:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_TOP)}
 501:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN0)}
 502:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN1)}
 503:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN0)}
 504:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN1)}
 505:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CF_BOT)}
 506:Generated_Source\PSoC4/ADC_1.c **** 
 507:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 508:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG3_UABH_B_HIGHQDYN_CAP_CTRL)}
 509:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG3_UABH_B_HIGHQDYN_SW_CB_TOP)}
 510:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG3_UABH_B_HIGHQDYN_SW_CC_TOP)}
 511:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG3_UABH_B_HIGHQDYN_CAP_ABCF_VA
 512:Generated_Source\PSoC4/ADC_1.c ****             #endif /* #if (ADC_1_CFG3_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 513:Generated_Source\PSoC4/ADC_1.c ****         };
 514:Generated_Source\PSoC4/ADC_1.c **** 
 515:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG3_UABH_A_FILTER_config = {
 516:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_waveConfig,
 517:Generated_Source\PSoC4/ADC_1.c ****             (CyUAB_reg_pair*) ADC_1_CFG3_UABH_A_FILTER_initPairs,
 518:Generated_Source\PSoC4/ADC_1.c ****             CyUAB_SHARED_SW_CFG(ADC_1_UABH_A_PARAM_REF_TIED,ADC_1_UABH_A_PARAM_AGND_TIED,
 519:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_A_PARAM_SW_CC,ADC_1_UABH_A_PARAM_SW_BB,ADC_1_UABH_A_PARAM_SW_AA),
 520:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_NUM_STEPS,
 521:Generated_Source\PSoC4/ADC_1.c ****             (uint8)(ADC_1_UABH_A_ELEMENT_COUNT(ADC_1_CFG3_UABH_A_FILTER_initPairs))
 522:Generated_Source\PSoC4/ADC_1.c ****         };
 523:Generated_Source\PSoC4/ADC_1.c **** 
 524:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG3_UABH_B_FILTER_config = {
 525:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_waveConfig,
 526:Generated_Source\PSoC4/ADC_1.c ****         (CyUAB_reg_pair*) ADC_1_CFG3_UABH_B_FILTER_initPairs,
 527:Generated_Source\PSoC4/ADC_1.c ****         CyUAB_SHARED_SW_CFG(ADC_1_UABH_B_PARAM_REF_TIED,ADC_1_UABH_B_PARAM_AGND_TIED,
 528:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_B_PARAM_SW_CC,ADC_1_UABH_B_PARAM_SW_BB,ADC_1_UABH_B_PARAM_SW_AA),
 529:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_NUM_STEPS,
 530:Generated_Source\PSoC4/ADC_1.c ****         (uint8)(ADC_1_UABH_B_ELEMENT_COUNT(ADC_1_CFG3_UABH_B_FILTER_initPairs))
 531:Generated_Source\PSoC4/ADC_1.c ****     };
 532:Generated_Source\PSoC4/ADC_1.c ****     #endif /* (0u != ADC_1_CFG3_FILTER_PRESENT) */
 533:Generated_Source\PSoC4/ADC_1.c **** 
 534:Generated_Source\PSoC4/ADC_1.c **** 
 535:Generated_Source\PSoC4/ADC_1.c **** #endif /* (ADC_1_ANY_CONFIG_USES_FILTER  != 0u)  */
 536:Generated_Source\PSoC4/ADC_1.c **** 
 537:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 538:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_Start
 539:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 540:Generated_Source\PSoC4/ADC_1.c **** *
 541:Generated_Source\PSoC4/ADC_1.c **** * \brief Performs all required initialization for this component and enables the
 542:Generated_Source\PSoC4/ADC_1.c **** *  power. The power will be set to the appropriate power based on the clock
 543:Generated_Source\PSoC4/ADC_1.c **** *  frequency.
 544:Generated_Source\PSoC4/ADC_1.c **** *
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 11


 545:Generated_Source\PSoC4/ADC_1.c **** * \param None
 546:Generated_Source\PSoC4/ADC_1.c **** *
 547:Generated_Source\PSoC4/ADC_1.c **** * \return None
 548:Generated_Source\PSoC4/ADC_1.c **** *
 549:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 550:Generated_Source\PSoC4/ADC_1.c **** *
 551:Generated_Source\PSoC4/ADC_1.c **** * \globalvars
 552:Generated_Source\PSoC4/ADC_1.c **** *  \ref ADC_1_initVar (RW)
 553:Generated_Source\PSoC4/ADC_1.c **** *
 554:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 555:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_Start(void)
 556:Generated_Source\PSoC4/ADC_1.c **** {
 557:Generated_Source\PSoC4/ADC_1.c ****     if (ADC_1_INIT_VAR_INIT_FLAG != (ADC_1_INIT_VAR_INIT_FLAG & ADC_1_initVar))
 558:Generated_Source\PSoC4/ADC_1.c ****     {
 559:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_Init();
 560:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_initVar |= ADC_1_INIT_VAR_INIT_FLAG;
 561:Generated_Source\PSoC4/ADC_1.c ****     }
 562:Generated_Source\PSoC4/ADC_1.c **** 
 563:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_Enable();
 564:Generated_Source\PSoC4/ADC_1.c **** 
 565:Generated_Source\PSoC4/ADC_1.c ****     return;
 566:Generated_Source\PSoC4/ADC_1.c **** }
 567:Generated_Source\PSoC4/ADC_1.c **** 
 568:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 569:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_StartEx
 570:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 571:Generated_Source\PSoC4/ADC_1.c **** *
 572:Generated_Source\PSoC4/ADC_1.c **** * \brief This function starts the ADC_1 and sets the Interrupt
 573:Generated_Source\PSoC4/ADC_1.c **** * Service Routine to the provided address using the
 574:Generated_Source\PSoC4/ADC_1.c **** * ADC_1_IRQ_StartEx() function. Refer to the Interrupt component
 575:Generated_Source\PSoC4/ADC_1.c **** * datasheet for more information on the ADC_1_IRQ_StartEx() function.
 576:Generated_Source\PSoC4/ADC_1.c **** *
 577:Generated_Source\PSoC4/ADC_1.c **** * \param address This is the address of a user defined function for the ISR.
 578:Generated_Source\PSoC4/ADC_1.c **** *
 579:Generated_Source\PSoC4/ADC_1.c **** * \return None
 580:Generated_Source\PSoC4/ADC_1.c **** *
 581:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 582:Generated_Source\PSoC4/ADC_1.c **** *
 583:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 584:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_StartEx(cyisraddress address)
 585:Generated_Source\PSoC4/ADC_1.c **** {
 586:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_Start();
 587:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_IRQ_StartEx(address);
 588:Generated_Source\PSoC4/ADC_1.c ****     return;
 589:Generated_Source\PSoC4/ADC_1.c **** }
 590:Generated_Source\PSoC4/ADC_1.c **** 
 591:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 592:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_Stop
 593:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 594:Generated_Source\PSoC4/ADC_1.c **** *
 595:Generated_Source\PSoC4/ADC_1.c **** * \brief This function stops ADC conversions and puts the ADC into its lowest
 596:Generated_Source\PSoC4/ADC_1.c **** * power mode.
 597:Generated_Source\PSoC4/ADC_1.c **** *
 598:Generated_Source\PSoC4/ADC_1.c **** * \param None
 599:Generated_Source\PSoC4/ADC_1.c **** *
 600:Generated_Source\PSoC4/ADC_1.c **** * \return None
 601:Generated_Source\PSoC4/ADC_1.c **** *
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 12


 602:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect
 603:Generated_Source\PSoC4/ADC_1.c **** * Do not use the ADC_1_Stop() API to halt conversions. Instead use the
 604:Generated_Source\PSoC4/ADC_1.c **** * ADC_1_StopConvert() API. If you use the ADC_1_Stop() API
 605:Generated_Source\PSoC4/ADC_1.c **** * to halt conversions then later use the ADC_1_Start() and
 606:Generated_Source\PSoC4/ADC_1.c **** * ADC_1_StartConvert() APIs to resume conversions, the first channel
 607:Generated_Source\PSoC4/ADC_1.c **** * of the scan may be corrupt. The ADC_1_StopConvert() API will enable
 608:Generated_Source\PSoC4/ADC_1.c **** * the ADC_1 to complete the current scan of channels. After the
 609:Generated_Source\PSoC4/ADC_1.c **** * channel scan is complete, the ADC_1 will stop all conversions, which
 610:Generated_Source\PSoC4/ADC_1.c **** * can be detected by the use of an ISR or the ADC_1_IsEndConversion()
 611:Generated_Source\PSoC4/ADC_1.c **** * flag.
 612:Generated_Source\PSoC4/ADC_1.c **** *
 613:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 614:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_Stop(void)
 615:Generated_Source\PSoC4/ADC_1.c **** {
 616:Generated_Source\PSoC4/ADC_1.c ****     #if(0u != ADC_1_ANY_CONFIG_USES_FILTER)
 617:Generated_Source\PSoC4/ADC_1.c ****         if((ADC_1_allConfigs[ADC_1_currentConfig].miscConfig
 618:Generated_Source\PSoC4/ADC_1.c ****            & ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
 619:Generated_Source\PSoC4/ADC_1.c ****            == ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
 620:Generated_Source\PSoC4/ADC_1.c ****         {
 621:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_Stop();
 622:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_B_Stop();
 623:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_FILTERAGND2SAR_BUFFER_Stop();
 624:Generated_Source\PSoC4/ADC_1.c ****         }
 625:Generated_Source\PSoC4/ADC_1.c ****     #endif /* ADC_1_ANY_CONFIG_USES_FILTER != 0u */
 626:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_CTRL_REG &= (uint32)~ADC_1_SAR_CTRL_ENABLED_MSK;
 627:Generated_Source\PSoC4/ADC_1.c ****     return;
 628:Generated_Source\PSoC4/ADC_1.c **** }
 629:Generated_Source\PSoC4/ADC_1.c **** 
 630:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
 631:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_InitConfig
 632:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
 633:Generated_Source\PSoC4/ADC_1.c **** *
 634:Generated_Source\PSoC4/ADC_1.c **** * \brief Configures all of the registers for a given configuration for scanning.
 635:Generated_Source\PSoC4/ADC_1.c **** *
 636:Generated_Source\PSoC4/ADC_1.c **** * \param
 637:Generated_Source\PSoC4/ADC_1.c **** * config: Pointer to the configuration structure
 638:Generated_Source\PSoC4/ADC_1.c **** *
 639:Generated_Source\PSoC4/ADC_1.c **** * \return None
 640:Generated_Source\PSoC4/ADC_1.c **** *
 641:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 642:Generated_Source\PSoC4/ADC_1.c **** *
 643:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 644:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_InitConfig(const ADC_1_CONFIG_STRUCT *config)
 645:Generated_Source\PSoC4/ADC_1.c **** {
 646:Generated_Source\PSoC4/ADC_1.c ****     uint32 chNum;
 647:Generated_Source\PSoC4/ADC_1.c ****     uint32 tmpRegVal;
 648:Generated_Source\PSoC4/ADC_1.c **** 
 649:Generated_Source\PSoC4/ADC_1.c ****     /* If there is an internal SAR clock, set up its divider values. */
 650:Generated_Source\PSoC4/ADC_1.c ****     #if (ADC_1_CLOCK_INTERNAL)
 651:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_intSarClock_Stop();
 652:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_intSarClock_SetFractionalDividerRegister(config->clkDivider, 0u);
 653:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_intSarClock_Start();
 654:Generated_Source\PSoC4/ADC_1.c ****     #endif /* ADC_1_CLOCK_INTERNAL */
 655:Generated_Source\PSoC4/ADC_1.c **** 
 656:Generated_Source\PSoC4/ADC_1.c ****     /* If the current configuration has a filter, set up the UAB clock divider values. */
 657:Generated_Source\PSoC4/ADC_1.c ****     #if(0u != ADC_1_ANY_CONFIG_USES_FILTER)
 658:Generated_Source\PSoC4/ADC_1.c ****         if((config->miscConfig & ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 13


 659:Generated_Source\PSoC4/ADC_1.c ****             == ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
 660:Generated_Source\PSoC4/ADC_1.c ****         {
 661:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_intUabClock_Stop();
 662:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_intUabClock_SetFractionalDividerRegister(config->filterClkDivider, 0u);
 663:Generated_Source\PSoC4/ADC_1.c ****             #if defined(ADC_1_cy_psoc4_sar_1__CLOCK_DIV_ID)
 664:Generated_Source\PSoC4/ADC_1.c ****                 /* If the SAR clock divider ID is known,
 665:Generated_Source\PSoC4/ADC_1.c ****                  * start the internal UAB divider aligned to the SAR divider. */
 666:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_intUabClock_StartEx(ADC_1_cy_psoc4_sar_1__CLOCK_DIV_ID);
 667:Generated_Source\PSoC4/ADC_1.c ****             #else
 668:Generated_Source\PSoC4/ADC_1.c ****                 /* Otherwise start it unaligned. */
 669:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_intUabClock_Start();
 670:Generated_Source\PSoC4/ADC_1.c ****             #endif
 671:Generated_Source\PSoC4/ADC_1.c ****         }
 672:Generated_Source\PSoC4/ADC_1.c ****     #endif /* ADC_1_ANY_CONFIG_USES_FILTER != 0u */
 673:Generated_Source\PSoC4/ADC_1.c **** 
 674:Generated_Source\PSoC4/ADC_1.c ****     /* Init SAR and MUX registers */
 675:Generated_Source\PSoC4/ADC_1.c ****     /* Enable the SAR internal pump when global pump is enabled */
 676:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_CTRL_REG = config->ctrl
 677:Generated_Source\PSoC4/ADC_1.c ****         | (((ADC_1_PUMP_CTRL_REG & ADC_1_PUMP_CTRL_ENABLED) != 0u)
 678:Generated_Source\PSoC4/ADC_1.c ****             ? ADC_1_SAR_CTRL_BOOSTPUMP_EN_MSK : 0u);
 679:Generated_Source\PSoC4/ADC_1.c **** 
 680:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SAMPLE_CTRL_REG = config->sampleCtrl;
 681:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_THRES_REG = config->rangeThres;
 682:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_COND_REG = config->rangeCond;
 683:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SAMPLE_TIME01_REG = config->sampleTime01;
 684:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SAMPLE_TIME23_REG = config->sampleTime23;
 685:Generated_Source\PSoC4/ADC_1.c **** 
 686:Generated_Source\PSoC4/ADC_1.c ****     /* Connect Vminus to VSSA when even one channel is single-ended or multiple channels configured
 687:Generated_Source\PSoC4/ADC_1.c ****     if(1u == ADC_1_MUX_SWITCH0_INIT)
 688:Generated_Source\PSoC4/ADC_1.c ****     {
 689:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_MUX_SWITCH0_REG |= ADC_1_MUX_FW_VSSA_VMINUS;
 690:Generated_Source\PSoC4/ADC_1.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 691:Generated_Source\PSoC4/ADC_1.c ****         if(1ul < config->numChannels)
 692:Generated_Source\PSoC4/ADC_1.c ****         {
 693:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_MUX_SWITCH_HW_CTRL_REG |= ADC_1_MUX_FW_VSSA_VMINUS;
 694:Generated_Source\PSoC4/ADC_1.c ****         }
 695:Generated_Source\PSoC4/ADC_1.c ****     }
 696:Generated_Source\PSoC4/ADC_1.c **** 
 697:Generated_Source\PSoC4/ADC_1.c ****     /* Clear and set interrupt masks */
 698:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SATURATE_INTR_MASK_REG = 0u;
 699:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_INTR_MASK_REG = 0u;
 700:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SATURATE_INTR_MASK_REG = config->satIntMask;
 701:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_INTR_MASK_REG = config->rangeIntMask;
 702:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_INTR_MASK_REG = ADC_1_EOS_MASK;
 703:Generated_Source\PSoC4/ADC_1.c **** 
 704:Generated_Source\PSoC4/ADC_1.c ****     for(chNum = 0u; chNum < config->numChannels; chNum++)
 705:Generated_Source\PSoC4/ADC_1.c ****     {
 706:Generated_Source\PSoC4/ADC_1.c ****         tmpRegVal = (ADC_1_channelsConfig[config->channelBase + chNum]
 707:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_CHANNEL_CONFIG_MASK);
 708:Generated_Source\PSoC4/ADC_1.c **** 
 709:Generated_Source\PSoC4/ADC_1.c ****         #if(ADC_1_TOTAL_CHANNELS_NUM > 1)
 710:Generated_Source\PSoC4/ADC_1.c ****             tmpRegVal |= ADC_1_InputsPlacement[config->channelBase + chNum];
 711:Generated_Source\PSoC4/ADC_1.c ****             /*Non-paired differential channels set NEG_ADDR_EN and clear DIFFERENTIAL_EN */
 712:Generated_Source\PSoC4/ADC_1.c ****             if(0u != (ADC_1_InputsPlacement[config->channelBase + chNum] & ADC_1_CHANNEL_CONFIG_NEG
 713:Generated_Source\PSoC4/ADC_1.c ****             {
 714:Generated_Source\PSoC4/ADC_1.c ****                 tmpRegVal &= ~ADC_1_SAR_CHAN_CONFIG_DIFFERENTIAL_EN_MSK;
 715:Generated_Source\PSoC4/ADC_1.c ****             }
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 14


 716:Generated_Source\PSoC4/ADC_1.c ****         #endif
 717:Generated_Source\PSoC4/ADC_1.c **** 
 718:Generated_Source\PSoC4/ADC_1.c ****         CY_SET_REG32((reg32 *)(ADC_1_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 719:Generated_Source\PSoC4/ADC_1.c ****     }
 720:Generated_Source\PSoC4/ADC_1.c **** 
 721:Generated_Source\PSoC4/ADC_1.c ****     return;
 722:Generated_Source\PSoC4/ADC_1.c **** }
 723:Generated_Source\PSoC4/ADC_1.c **** 
 724:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
 725:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetDFTControl
 726:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
 727:Generated_Source\PSoC4/ADC_1.c **** *
 728:Generated_Source\PSoC4/ADC_1.c **** * \brief Internal function to configure the DFT_CTRL register.
 729:Generated_Source\PSoC4/ADC_1.c **** * This register is a non-retention register therefore it resets
 730:Generated_Source\PSoC4/ADC_1.c **** * when the SAR block is powered down.
 731:Generated_Source\PSoC4/ADC_1.c **** * The register must be configured every time the SAR block is enabled.
 732:Generated_Source\PSoC4/ADC_1.c **** *
 733:Generated_Source\PSoC4/ADC_1.c **** * \param
 734:Generated_Source\PSoC4/ADC_1.c **** * config: Pointer to the configuration structure
 735:Generated_Source\PSoC4/ADC_1.c **** *
 736:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 737:Generated_Source\PSoC4/ADC_1.c **** static void ADC_1_SetDFTControl(const ADC_1_CONFIG_STRUCT *config)
 738:Generated_Source\PSoC4/ADC_1.c **** {
  27              		.loc 1 738 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 739:Generated_Source\PSoC4/ADC_1.c ****     /* Double the non-overlap delay and latch enable time when using */
 740:Generated_Source\PSoC4/ADC_1.c ****     /* internal reference without bypass cap */
 741:Generated_Source\PSoC4/ADC_1.c ****     uint32 tmpRegVal = ADC_1_SAR_DFT_CTRL_REG;
  33              		.loc 1 741 0
  34 0000 0A4B     		ldr	r3, .L5
  35 0002 1B68     		ldr	r3, [r3]
  36              	.LVL1:
 742:Generated_Source\PSoC4/ADC_1.c ****     if(((config->ctrl & ADC_1__SAR_CTRL_VREF_BYP_AND_SEL_MSK)
  37              		.loc 1 742 0
  38 0004 8268     		ldr	r2, [r0, #8]
  39 0006 F021     		movs	r1, #240
  40 0008 0A40     		ands	r2, r1
  41 000a 402A     		cmp	r2, #64
  42 000c 01D0     		beq	.L2
 743:Generated_Source\PSoC4/ADC_1.c ****         == ADC_1__INTERNAL1024)
 744:Generated_Source\PSoC4/ADC_1.c ****         || ((config->ctrl & ADC_1__SAR_CTRL_VREF_BYP_AND_SEL_MSK)
  43              		.loc 1 744 0
  44 000e 002A     		cmp	r2, #0
  45 0010 04D1     		bne	.L3
  46              	.L2:
 745:Generated_Source\PSoC4/ADC_1.c ****         == ADC_1__INTERNALVREF))
 746:Generated_Source\PSoC4/ADC_1.c ****     {
 747:Generated_Source\PSoC4/ADC_1.c ****         tmpRegVal &= ~ADC_1_SAR_DFT_CTRL_DCEN_MSK;
  47              		.loc 1 747 0
  48 0012 074A     		ldr	r2, .L5+4
  49 0014 1340     		ands	r3, r2
  50              	.LVL2:
 748:Generated_Source\PSoC4/ADC_1.c ****         tmpRegVal |= ADC_1_SAR_DFT_CTRL_DLY_INC_MSK;
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 15


  51              		.loc 1 748 0
  52 0016 0122     		movs	r2, #1
  53 0018 1343     		orrs	r3, r2
  54              	.LVL3:
  55 001a 04E0     		b	.L4
  56              	.L3:
  57              	.LVL4:
  58 001c 0122     		movs	r2, #1
  59 001e 9343     		bics	r3, r2
  60              	.LVL5:
 749:Generated_Source\PSoC4/ADC_1.c ****     }
 750:Generated_Source\PSoC4/ADC_1.c ****     else
 751:Generated_Source\PSoC4/ADC_1.c ****     {
 752:Generated_Source\PSoC4/ADC_1.c ****         tmpRegVal |= ADC_1_SAR_DFT_CTRL_DCEN_MSK;
 753:Generated_Source\PSoC4/ADC_1.c ****         tmpRegVal &= (uint32)~ADC_1_SAR_DFT_CTRL_DLY_INC_MSK;
  61              		.loc 1 753 0
  62 0020 8022     		movs	r2, #128
  63 0022 9205     		lsls	r2, r2, #22
  64 0024 1343     		orrs	r3, r2
  65              	.LVL6:
  66              	.L4:
 754:Generated_Source\PSoC4/ADC_1.c ****     }
 755:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_DFT_CTRL_REG = tmpRegVal;
  67              		.loc 1 755 0
  68 0026 014A     		ldr	r2, .L5
  69 0028 1360     		str	r3, [r2]
 756:Generated_Source\PSoC4/ADC_1.c **** }
  70              		.loc 1 756 0
  71              		@ sp needed
  72 002a 7047     		bx	lr
  73              	.L6:
  74              		.align	2
  75              	.L5:
  76 002c 30003A40 		.word	1077542960
  77 0030 FFFFFFDF 		.word	-536870913
  78              		.cfi_endproc
  79              	.LFE5:
  80              		.size	ADC_1_SetDFTControl, .-ADC_1_SetDFTControl
  81              		.section	.text.ADC_1_IsChannelSigned,"ax",%progbits
  82              		.align	2
  83              		.code	16
  84              		.thumb_func
  85              		.type	ADC_1_IsChannelSigned, %function
  86              	ADC_1_IsChannelSigned:
  87              	.LFB13:
 757:Generated_Source\PSoC4/ADC_1.c **** 
 758:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
 759:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SelectConfig
 760:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
 761:Generated_Source\PSoC4/ADC_1.c **** *
 762:Generated_Source\PSoC4/ADC_1.c **** * \brief Selects the predefined configuration for scanning. Disables
 763:Generated_Source\PSoC4/ADC_1.c **** * and re-enables the SAR and filter (if filter used).
 764:Generated_Source\PSoC4/ADC_1.c **** *
 765:Generated_Source\PSoC4/ADC_1.c **** * \param config Number of configuration  in the ADC_1.
 766:Generated_Source\PSoC4/ADC_1.c **** *
 767:Generated_Source\PSoC4/ADC_1.c **** * \param restart Set to 1u to restart the ADC_1 after
 768:Generated_Source\PSoC4/ADC_1.c **** * selecting the configuration.
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 16


 769:Generated_Source\PSoC4/ADC_1.c **** *
 770:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 771:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SelectConfig(uint32 config, uint32 restart)
 772:Generated_Source\PSoC4/ADC_1.c **** {
 773:Generated_Source\PSoC4/ADC_1.c ****     /* Check whether the configuration number is valid or not */
 774:Generated_Source\PSoC4/ADC_1.c ****     if(ADC_1_TOTAL_CONFIGS > config)
 775:Generated_Source\PSoC4/ADC_1.c ****     {
 776:Generated_Source\PSoC4/ADC_1.c ****         /* Stop the ADC before changing configurations */
 777:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_Stop();
 778:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_selected = 1u;
 779:Generated_Source\PSoC4/ADC_1.c **** 
 780:Generated_Source\PSoC4/ADC_1.c ****         if(0u == ADC_1_initVar)
 781:Generated_Source\PSoC4/ADC_1.c ****         {
 782:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_Init();
 783:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_initVar |= ADC_1_INIT_VAR_INIT_FLAG;
 784:Generated_Source\PSoC4/ADC_1.c ****         }
 785:Generated_Source\PSoC4/ADC_1.c ****         #if (ADC_1_VREF_ROUTED)
 786:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_vrefAMux_DisconnectAll();
 787:Generated_Source\PSoC4/ADC_1.c ****         #endif
 788:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_InitConfig(&ADC_1_allConfigs[config]);
 789:Generated_Source\PSoC4/ADC_1.c ****         #if (ADC_1_VREF_ROUTED)
 790:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_vrefAMux_Select((uint8)config);
 791:Generated_Source\PSoC4/ADC_1.c ****         #endif
 792:Generated_Source\PSoC4/ADC_1.c ****         #if(0u != ADC_1_ANY_CONFIG_USES_FILTER)
 793:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_filterVinMux_Select((uint8)config);
 794:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_filterInit(config);
 795:Generated_Source\PSoC4/ADC_1.c ****         #endif
 796:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_CHAN_EN_REG = ADC_1_allConfigs[config].chanEn;
 797:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_RANGE_INTR_MASK_REG = ADC_1_allConfigs[config].rangeIntMask;
 798:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_SATURATE_INTR_MASK_REG = ADC_1_allConfigs[config].satIntMask;
 799:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_currentConfig = config;
 800:Generated_Source\PSoC4/ADC_1.c **** 
 801:Generated_Source\PSoC4/ADC_1.c ****         if(1u == restart)
 802:Generated_Source\PSoC4/ADC_1.c ****         {
 803:Generated_Source\PSoC4/ADC_1.c ****             /* Restart the ADC */
 804:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_Start();
 805:Generated_Source\PSoC4/ADC_1.c **** 
 806:Generated_Source\PSoC4/ADC_1.c ****             /* Restart the scan */
 807:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_StartConvert();
 808:Generated_Source\PSoC4/ADC_1.c ****         }
 809:Generated_Source\PSoC4/ADC_1.c ****     }
 810:Generated_Source\PSoC4/ADC_1.c ****     return;
 811:Generated_Source\PSoC4/ADC_1.c **** }
 812:Generated_Source\PSoC4/ADC_1.c **** 
 813:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 814:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_StartConvert
 815:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 816:Generated_Source\PSoC4/ADC_1.c **** *
 817:Generated_Source\PSoC4/ADC_1.c **** * \brief In continuous mode, this API starts the conversion process and it runs
 818:Generated_Source\PSoC4/ADC_1.c **** * continuously.
 819:Generated_Source\PSoC4/ADC_1.c **** 
 820:Generated_Source\PSoC4/ADC_1.c **** * In Single Shot mode, the function triggers a single scan and
 821:Generated_Source\PSoC4/ADC_1.c **** * every scan requires a call of this function. The mode is set with the
 822:Generated_Source\PSoC4/ADC_1.c **** * Sample Mode parameter in the customizer. The customizer setting can be
 823:Generated_Source\PSoC4/ADC_1.c **** * overridden at run time with the ADC_1_SetConvertMode() function.
 824:Generated_Source\PSoC4/ADC_1.c **** *
 825:Generated_Source\PSoC4/ADC_1.c **** * \param None
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 17


 826:Generated_Source\PSoC4/ADC_1.c **** *
 827:Generated_Source\PSoC4/ADC_1.c **** * \return None
 828:Generated_Source\PSoC4/ADC_1.c **** *
 829:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 830:Generated_Source\PSoC4/ADC_1.c **** *
 831:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 832:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_StartConvert(void)
 833:Generated_Source\PSoC4/ADC_1.c **** {
 834:Generated_Source\PSoC4/ADC_1.c ****     /* Freerunning mode */
 835:Generated_Source\PSoC4/ADC_1.c ****     if((ADC_1_SAR_SAMPLE_CTRL_REG
 836:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 837:Generated_Source\PSoC4/ADC_1.c ****         == ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 838:Generated_Source\PSoC4/ADC_1.c ****     {
 839:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_SAMPLE_CTRL_REG |= ADC_1_SAR_SAMPLE_CTRL_CONTINUOUS_MSK ;
 840:Generated_Source\PSoC4/ADC_1.c ****     }
 841:Generated_Source\PSoC4/ADC_1.c ****     else /* Firmware trigger */
 842:Generated_Source\PSoC4/ADC_1.c ****     {
 843:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_START_CTRL_REG = ADC_1_SAR_START_CTRL_FW_TRIGGER_MSK;
 844:Generated_Source\PSoC4/ADC_1.c ****     }
 845:Generated_Source\PSoC4/ADC_1.c **** 
 846:Generated_Source\PSoC4/ADC_1.c ****     return;
 847:Generated_Source\PSoC4/ADC_1.c **** }
 848:Generated_Source\PSoC4/ADC_1.c **** 
 849:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 850:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_StopConvert
 851:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 852:Generated_Source\PSoC4/ADC_1.c **** *
 853:Generated_Source\PSoC4/ADC_1.c **** * \brief Forces the ADC_1 to stop conversions. If a conversion is
 854:Generated_Source\PSoC4/ADC_1.c **** * currently executing, that conversion will complete, but no further conversions
 855:Generated_Source\PSoC4/ADC_1.c **** * will occur.
 856:Generated_Source\PSoC4/ADC_1.c **** *
 857:Generated_Source\PSoC4/ADC_1.c **** * \param None
 858:Generated_Source\PSoC4/ADC_1.c **** *
 859:Generated_Source\PSoC4/ADC_1.c **** * \return None
 860:Generated_Source\PSoC4/ADC_1.c **** *
 861:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 862:Generated_Source\PSoC4/ADC_1.c **** *
 863:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 864:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_StopConvert(void)
 865:Generated_Source\PSoC4/ADC_1.c **** {
 866:Generated_Source\PSoC4/ADC_1.c ****     if((ADC_1_SAR_SAMPLE_CTRL_REG
 867:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 868:Generated_Source\PSoC4/ADC_1.c ****         == ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 869:Generated_Source\PSoC4/ADC_1.c ****     {
 870:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_SAMPLE_CTRL_REG &= ~ADC_1_SAR_SAMPLE_CTRL_CONTINUOUS_MSK;
 871:Generated_Source\PSoC4/ADC_1.c **** 
 872:Generated_Source\PSoC4/ADC_1.c ****         if((ADC_1_allConfigs[ADC_1_currentConfig].miscConfig
 873:Generated_Source\PSoC4/ADC_1.c ****             & ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
 874:Generated_Source\PSoC4/ADC_1.c ****             == ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
 875:Generated_Source\PSoC4/ADC_1.c ****         {
 876:Generated_Source\PSoC4/ADC_1.c ****             /* Re-synchronize the Filter if a filter is present */
 877:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_Stop();
 878:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_Start();
 879:Generated_Source\PSoC4/ADC_1.c ****         }
 880:Generated_Source\PSoC4/ADC_1.c ****     }
 881:Generated_Source\PSoC4/ADC_1.c **** 
 882:Generated_Source\PSoC4/ADC_1.c ****     return;
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 18


 883:Generated_Source\PSoC4/ADC_1.c **** }
 884:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 885:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetConvertMode
 886:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 887:Generated_Source\PSoC4/ADC_1.c **** *
 888:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets the conversion mode to either Single-Shot or continuous. This
 889:Generated_Source\PSoC4/ADC_1.c **** * function overrides the settings applied in the customizer. Changing
 890:Generated_Source\PSoC4/ADC_1.c **** * configurations will restore the values set in the customizer.
 891:Generated_Source\PSoC4/ADC_1.c **** *
 892:Generated_Source\PSoC4/ADC_1.c **** * \param mode Sets the conversion mode. See table below for details.
 893:Generated_Source\PSoC4/ADC_1.c **** * | Options                          | Description                             |
 894:Generated_Source\PSoC4/ADC_1.c **** * | :------------------------------- | :-------------------------------------- |
 895:Generated_Source\PSoC4/ADC_1.c **** * | ADC_1_SINGLE_SHOT     | Calling the ADC_1_StartConvert() function after setting mode this will 
 896:Generated_Source\PSoC4/ADC_1.c **** * | ADC_1_CONTINUOUS      | Calling the ADC_1_StartConvert() function after setting this mode trigg
 897:Generated_Source\PSoC4/ADC_1.c **** *
 898:Generated_Source\PSoC4/ADC_1.c **** * \return None
 899:Generated_Source\PSoC4/ADC_1.c **** *
 900:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 901:Generated_Source\PSoC4/ADC_1.c **** *
 902:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 903:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetConvertMode(uint32 mode)
 904:Generated_Source\PSoC4/ADC_1.c **** {
 905:Generated_Source\PSoC4/ADC_1.c ****     if(ADC_1_CONTINUOUS == mode)
 906:Generated_Source\PSoC4/ADC_1.c ****     {
 907:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_SAMPLE_CTRL_REG |= ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK;
 908:Generated_Source\PSoC4/ADC_1.c ****     }
 909:Generated_Source\PSoC4/ADC_1.c ****     else
 910:Generated_Source\PSoC4/ADC_1.c ****     {
 911:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_SAMPLE_CTRL_REG &= ~ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK;
 912:Generated_Source\PSoC4/ADC_1.c ****     }
 913:Generated_Source\PSoC4/ADC_1.c **** }
 914:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
 915:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_IRQ_Enable
 916:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
 917:Generated_Source\PSoC4/ADC_1.c **** *
 918:Generated_Source\PSoC4/ADC_1.c **** * \brief Enables interrupts to occur at the end of a conversion. Global
 919:Generated_Source\PSoC4/ADC_1.c **** * interrupts must also be enabled for the ADC_1 interrupts to occur.
 920:Generated_Source\PSoC4/ADC_1.c **** *
 921:Generated_Source\PSoC4/ADC_1.c **** * \param None
 922:Generated_Source\PSoC4/ADC_1.c **** *
 923:Generated_Source\PSoC4/ADC_1.c **** * \return None
 924:Generated_Source\PSoC4/ADC_1.c **** *
 925:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 926:Generated_Source\PSoC4/ADC_1.c **** *
 927:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 928:Generated_Source\PSoC4/ADC_1.c **** 
 929:Generated_Source\PSoC4/ADC_1.c **** 
 930:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
 931:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_IRQ_Disable
 932:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
 933:Generated_Source\PSoC4/ADC_1.c **** *
 934:Generated_Source\PSoC4/ADC_1.c **** * \brief Disables end of conversion interrupts.
 935:Generated_Source\PSoC4/ADC_1.c **** *
 936:Generated_Source\PSoC4/ADC_1.c **** * \param None
 937:Generated_Source\PSoC4/ADC_1.c **** *
 938:Generated_Source\PSoC4/ADC_1.c **** * \return None
 939:Generated_Source\PSoC4/ADC_1.c **** *
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 19


 940:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 941:Generated_Source\PSoC4/ADC_1.c **** *
 942:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 943:Generated_Source\PSoC4/ADC_1.c **** 
 944:Generated_Source\PSoC4/ADC_1.c **** 
 945:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 946:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetEosMask
 947:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 948:Generated_Source\PSoC4/ADC_1.c **** *
 949:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets of clears the End of Scan (EOS) interrupt mask.
 950:Generated_Source\PSoC4/ADC_1.c **** *
 951:Generated_Source\PSoC4/ADC_1.c **** * \param mask 1 to set the mask, 0 to clear the mask.
 952:Generated_Source\PSoC4/ADC_1.c **** *
 953:Generated_Source\PSoC4/ADC_1.c **** * \return None
 954:Generated_Source\PSoC4/ADC_1.c **** *
 955:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect All other bits in the INTR register are cleared by this function.
 956:Generated_Source\PSoC4/ADC_1.c **** *
 957:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 958:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetEosMask(uint32 mask)
 959:Generated_Source\PSoC4/ADC_1.c **** {
 960:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_INTR_MASK_REG = mask & ADC_1_EOS_MASK;
 961:Generated_Source\PSoC4/ADC_1.c **** 
 962:Generated_Source\PSoC4/ADC_1.c ****     return;
 963:Generated_Source\PSoC4/ADC_1.c **** }
 964:Generated_Source\PSoC4/ADC_1.c **** 
 965:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
 966:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetChanMask
 967:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
 968:Generated_Source\PSoC4/ADC_1.c **** *
 969:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets enable/disable mask for all channels in current configuration.
 970:Generated_Source\PSoC4/ADC_1.c **** *
 971:Generated_Source\PSoC4/ADC_1.c **** *
 972:Generated_Source\PSoC4/ADC_1.c **** * \param enableMask
 973:Generated_Source\PSoC4/ADC_1.c **** *  Channel enable/disable mask.
 974:Generated_Source\PSoC4/ADC_1.c **** *
 975:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect
 976:Generated_Source\PSoC4/ADC_1.c **** *  None.
 977:Generated_Source\PSoC4/ADC_1.c **** *
 978:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 979:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetChanMask(uint32 enableMask)
 980:Generated_Source\PSoC4/ADC_1.c **** {
 981:Generated_Source\PSoC4/ADC_1.c ****     uint32 chanCount = ADC_1_allConfigs[ADC_1_currentConfig].numChannels;
 982:Generated_Source\PSoC4/ADC_1.c ****     enableMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 983:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_CHAN_EN_REG = enableMask;
 984:Generated_Source\PSoC4/ADC_1.c ****     return;
 985:Generated_Source\PSoC4/ADC_1.c **** }
 986:Generated_Source\PSoC4/ADC_1.c **** 
 987:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 988:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_IsEndConversion
 989:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 990:Generated_Source\PSoC4/ADC_1.c **** *
 991:Generated_Source\PSoC4/ADC_1.c **** * \brief Immediately returns the status of the conversion or does not return
 992:Generated_Source\PSoC4/ADC_1.c **** * (blocking) until the conversion completes, depending on the retMode parameter.
 993:Generated_Source\PSoC4/ADC_1.c **** *
 994:Generated_Source\PSoC4/ADC_1.c **** * \param retMode Check conversion return mode. See the following table for
 995:Generated_Source\PSoC4/ADC_1.c **** * options.
 996:Generated_Source\PSoC4/ADC_1.c **** * | Options                              | Description                             |
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 20


 997:Generated_Source\PSoC4/ADC_1.c **** * | :-------------------------------     | :-------------------------------------- |
 998:Generated_Source\PSoC4/ADC_1.c **** * | ADC_1_RETURN_STATUS       | Immediately returns the conversion status for sequential channels. 
 999:Generated_Source\PSoC4/ADC_1.c **** * | ADC_1_WAIT_FOR_RESULT     | Does not return a result until the ADC_1 conversion of all sequenti
1000:Generated_Source\PSoC4/ADC_1.c **** *
1001:Generated_Source\PSoC4/ADC_1.c **** * \return uint8: If a nonzero value is returned, the last conversion is complete.
1002:Generated_Source\PSoC4/ADC_1.c **** * If the returned value is zero, the ADC_1 is still calculating the last result.
1003:Generated_Source\PSoC4/ADC_1.c **** *
1004:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect This function reads the end of conversion status, and clears it afterward.
1005:Generated_Source\PSoC4/ADC_1.c **** *
1006:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1007:Generated_Source\PSoC4/ADC_1.c **** uint32 ADC_1_IsEndConversion(uint32 retMode)
1008:Generated_Source\PSoC4/ADC_1.c **** {
1009:Generated_Source\PSoC4/ADC_1.c ****     uint32 endOfConversion = 0u;
1010:Generated_Source\PSoC4/ADC_1.c ****     uint32 wdt = 0x3FFFFFFuL; /* Watchdog timer for blocking while loop */
1011:Generated_Source\PSoC4/ADC_1.c ****     if((ADC_1_RETURN_STATUS == retMode) || (ADC_1_WAIT_FOR_RESULT == retMode))
1012:Generated_Source\PSoC4/ADC_1.c ****     {
1013:Generated_Source\PSoC4/ADC_1.c ****         do
1014:Generated_Source\PSoC4/ADC_1.c ****         {
1015:Generated_Source\PSoC4/ADC_1.c ****             endOfConversion = ADC_1_SAR_INTR_REG & ADC_1_EOS_MASK;
1016:Generated_Source\PSoC4/ADC_1.c ****             wdt--;
1017:Generated_Source\PSoC4/ADC_1.c ****         }while(((0u == endOfConversion)
1018:Generated_Source\PSoC4/ADC_1.c ****             && (((uint32) retMode & ADC_1_WAIT_FOR_RESULT) != 0u))
1019:Generated_Source\PSoC4/ADC_1.c ****             && (0uL != wdt));
1020:Generated_Source\PSoC4/ADC_1.c **** 
1021:Generated_Source\PSoC4/ADC_1.c ****         if(0u != endOfConversion)
1022:Generated_Source\PSoC4/ADC_1.c ****         {
1023:Generated_Source\PSoC4/ADC_1.c ****             /* Clear EOS bit */
1024:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_SAR_INTR_REG = ADC_1_EOS_MASK;
1025:Generated_Source\PSoC4/ADC_1.c ****         }
1026:Generated_Source\PSoC4/ADC_1.c ****     }
1027:Generated_Source\PSoC4/ADC_1.c **** 
1028:Generated_Source\PSoC4/ADC_1.c ****     return endOfConversion;
1029:Generated_Source\PSoC4/ADC_1.c **** }
1030:Generated_Source\PSoC4/ADC_1.c **** 
1031:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
1032:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_IsChannelSigned(uint32 chan)
1033:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
1034:Generated_Source\PSoC4/ADC_1.c **** *
1035:Generated_Source\PSoC4/ADC_1.c **** * Determines if the provided channel is in signed format.
1036:Generated_Source\PSoC4/ADC_1.c **** *
1037:Generated_Source\PSoC4/ADC_1.c **** * \param chan The ADC_1 channel to check.
1038:Generated_Source\PSoC4/ADC_1.c **** *
1039:Generated_Source\PSoC4/ADC_1.c **** * \return None
1040:Generated_Source\PSoC4/ADC_1.c **** *
1041:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1042:Generated_Source\PSoC4/ADC_1.c **** *
1043:Generated_Source\PSoC4/ADC_1.c **** *
1044:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1045:Generated_Source\PSoC4/ADC_1.c **** static int32 ADC_1_IsChannelSigned(uint32 chan)
1046:Generated_Source\PSoC4/ADC_1.c **** {
  88              		.loc 1 1046 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              		@ link register save eliminated.
  93              	.LVL7:
1047:Generated_Source\PSoC4/ADC_1.c ****     int32 isSigned = 0;
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 21


1048:Generated_Source\PSoC4/ADC_1.c ****     uint32 chanConfig;
1049:Generated_Source\PSoC4/ADC_1.c **** 
1050:Generated_Source\PSoC4/ADC_1.c ****     chanConfig = CY_GET_REG32((reg32 *)(ADC_1_SAR_CHAN_CONFIG_IND + (uint32)(chan << 2u)));
  94              		.loc 1 1050 0
  95 0000 8000     		lsls	r0, r0, #2
  96              	.LVL8:
  97 0002 114B     		ldr	r3, .L12
  98 0004 9C46     		mov	ip, r3
  99 0006 6044     		add	r0, r0, ip
 100 0008 0268     		ldr	r2, [r0]
 101              	.LVL9:
1051:Generated_Source\PSoC4/ADC_1.c ****     /* If differential mode */
1052:Generated_Source\PSoC4/ADC_1.c ****     if(0u != (chanConfig & ADC_1_CHANNEL_CONFIG_DIFF_ALL_MSK))
 102              		.loc 1 1052 0
 103 000a 104B     		ldr	r3, .L12+4
 104 000c 1A42     		tst	r2, r3
 105 000e 0BD0     		beq	.L8
1053:Generated_Source\PSoC4/ADC_1.c ****     {
1054:Generated_Source\PSoC4/ADC_1.c ****         /*If signed differential */
1055:Generated_Source\PSoC4/ADC_1.c ****         if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
 106              		.loc 1 1055 0
 107 0010 0F4B     		ldr	r3, .L12+8
 108 0012 1A68     		ldr	r2, [r3]
 109              	.LVL10:
 110 0014 D300     		lsls	r3, r2, #3
 111 0016 9A1A     		subs	r2, r3, r2
 112 0018 D300     		lsls	r3, r2, #3
 113 001a 0E4A     		ldr	r2, .L12+12
 114 001c D318     		adds	r3, r2, r3
 115 001e DB68     		ldr	r3, [r3, #12]
 116 0020 1B07     		lsls	r3, r3, #28
 117 0022 0DD4     		bmi	.L10
1047:Generated_Source\PSoC4/ADC_1.c ****     uint32 chanConfig;
 118              		.loc 1 1047 0
 119 0024 0020     		movs	r0, #0
 120 0026 0EE0     		b	.L9
 121              	.LVL11:
 122              	.L8:
1056:Generated_Source\PSoC4/ADC_1.c ****             & ADC_1_SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_MSK) != 0u)
1057:Generated_Source\PSoC4/ADC_1.c ****         {
1058:Generated_Source\PSoC4/ADC_1.c ****             isSigned = 1;
1059:Generated_Source\PSoC4/ADC_1.c ****         }
1060:Generated_Source\PSoC4/ADC_1.c ****     }
1061:Generated_Source\PSoC4/ADC_1.c ****     else
1062:Generated_Source\PSoC4/ADC_1.c ****     {
1063:Generated_Source\PSoC4/ADC_1.c ****         if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
 123              		.loc 1 1063 0
 124 0028 094B     		ldr	r3, .L12+8
 125 002a 1A68     		ldr	r2, [r3]
 126              	.LVL12:
 127 002c D300     		lsls	r3, r2, #3
 128 002e 9A1A     		subs	r2, r3, r2
 129 0030 D300     		lsls	r3, r2, #3
 130 0032 084A     		ldr	r2, .L12+12
 131 0034 D318     		adds	r3, r2, r3
 132 0036 DB68     		ldr	r3, [r3, #12]
 133 0038 5B07     		lsls	r3, r3, #29
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 22


 134 003a 03D4     		bmi	.L11
1047:Generated_Source\PSoC4/ADC_1.c ****     uint32 chanConfig;
 135              		.loc 1 1047 0
 136 003c 0020     		movs	r0, #0
 137 003e 02E0     		b	.L9
 138              	.L10:
1058:Generated_Source\PSoC4/ADC_1.c ****         }
 139              		.loc 1 1058 0
 140 0040 0120     		movs	r0, #1
 141 0042 00E0     		b	.L9
 142              	.L11:
1064:Generated_Source\PSoC4/ADC_1.c ****             & ADC_1_SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_MSK) != 0u)
1065:Generated_Source\PSoC4/ADC_1.c ****         {
1066:Generated_Source\PSoC4/ADC_1.c ****             isSigned = 1;
 143              		.loc 1 1066 0
 144 0044 0120     		movs	r0, #1
 145              	.L9:
 146              	.LVL13:
1067:Generated_Source\PSoC4/ADC_1.c ****         }
1068:Generated_Source\PSoC4/ADC_1.c ****     }
1069:Generated_Source\PSoC4/ADC_1.c ****     return isSigned;
1070:Generated_Source\PSoC4/ADC_1.c **** }
 147              		.loc 1 1070 0
 148              		@ sp needed
 149 0046 7047     		bx	lr
 150              	.L13:
 151              		.align	2
 152              	.L12:
 153 0048 80003A40 		.word	1077543040
 154 004c 00010001 		.word	16777472
 155 0050 00000000 		.word	.LANCHOR0
 156 0054 00000000 		.word	ADC_1_allConfigs
 157              		.cfi_endproc
 158              	.LFE13:
 159              		.size	ADC_1_IsChannelSigned, .-ADC_1_IsChannelSigned
 160              		.section	.text.ADC_1_Stop,"ax",%progbits
 161              		.align	2
 162              		.global	ADC_1_Stop
 163              		.code	16
 164              		.thumb_func
 165              		.type	ADC_1_Stop, %function
 166              	ADC_1_Stop:
 167              	.LFB3:
 615:Generated_Source\PSoC4/ADC_1.c ****     #if(0u != ADC_1_ANY_CONFIG_USES_FILTER)
 168              		.loc 1 615 0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172              		@ link register save eliminated.
 626:Generated_Source\PSoC4/ADC_1.c ****     return;
 173              		.loc 1 626 0
 174 0000 024A     		ldr	r2, .L15
 175 0002 1368     		ldr	r3, [r2]
 176 0004 5B00     		lsls	r3, r3, #1
 177 0006 5B08     		lsrs	r3, r3, #1
 178 0008 1360     		str	r3, [r2]
 628:Generated_Source\PSoC4/ADC_1.c **** 
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 23


 179              		.loc 1 628 0
 180              		@ sp needed
 181 000a 7047     		bx	lr
 182              	.L16:
 183              		.align	2
 184              	.L15:
 185 000c 00003A40 		.word	1077542912
 186              		.cfi_endproc
 187              	.LFE3:
 188              		.size	ADC_1_Stop, .-ADC_1_Stop
 189              		.section	.text.ADC_1_InitConfig,"ax",%progbits
 190              		.align	2
 191              		.global	ADC_1_InitConfig
 192              		.code	16
 193              		.thumb_func
 194              		.type	ADC_1_InitConfig, %function
 195              	ADC_1_InitConfig:
 196              	.LFB4:
 645:Generated_Source\PSoC4/ADC_1.c ****     uint32 chNum;
 197              		.loc 1 645 0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201              	.LVL14:
 202 0000 10B5     		push	{r4, lr}
 203              		.cfi_def_cfa_offset 8
 204              		.cfi_offset 4, -8
 205              		.cfi_offset 14, -4
 206 0002 0400     		movs	r4, r0
 651:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_intSarClock_SetFractionalDividerRegister(config->clkDivider, 0u);
 207              		.loc 1 651 0
 208 0004 FFF7FEFF 		bl	ADC_1_intSarClock_Stop
 209              	.LVL15:
 652:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_intSarClock_Start();
 210              		.loc 1 652 0
 211 0008 A08E     		ldrh	r0, [r4, #52]
 212 000a 0021     		movs	r1, #0
 213 000c FFF7FEFF 		bl	ADC_1_intSarClock_SetFractionalDividerRegister
 214              	.LVL16:
 653:Generated_Source\PSoC4/ADC_1.c ****     #endif /* ADC_1_CLOCK_INTERNAL */
 215              		.loc 1 653 0
 216 0010 FF20     		movs	r0, #255
 217 0012 FFF7FEFF 		bl	ADC_1_intSarClock_StartEx
 218              	.LVL17:
 676:Generated_Source\PSoC4/ADC_1.c ****         | (((ADC_1_PUMP_CTRL_REG & ADC_1_PUMP_CTRL_ENABLED) != 0u)
 219              		.loc 1 676 0
 220 0016 A368     		ldr	r3, [r4, #8]
 677:Generated_Source\PSoC4/ADC_1.c ****             ? ADC_1_SAR_CTRL_BOOSTPUMP_EN_MSK : 0u);
 221              		.loc 1 677 0
 222 0018 204A     		ldr	r2, .L23
 223 001a 1268     		ldr	r2, [r2]
 224 001c 002A     		cmp	r2, #0
 225 001e 02DA     		bge	.L22
 226 0020 8022     		movs	r2, #128
 227 0022 5203     		lsls	r2, r2, #13
 228 0024 00E0     		b	.L18
 229              	.L22:
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 24


 230 0026 0022     		movs	r2, #0
 231              	.L18:
 677:Generated_Source\PSoC4/ADC_1.c ****             ? ADC_1_SAR_CTRL_BOOSTPUMP_EN_MSK : 0u);
 232              		.loc 1 677 0 is_stmt 0 discriminator 4
 233 0028 1343     		orrs	r3, r2
 676:Generated_Source\PSoC4/ADC_1.c ****         | (((ADC_1_PUMP_CTRL_REG & ADC_1_PUMP_CTRL_ENABLED) != 0u)
 234              		.loc 1 676 0 is_stmt 1 discriminator 4
 235 002a 1D4A     		ldr	r2, .L23+4
 236 002c 1360     		str	r3, [r2]
 680:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_THRES_REG = config->rangeThres;
 237              		.loc 1 680 0 discriminator 4
 238 002e 1D4B     		ldr	r3, .L23+8
 239 0030 E268     		ldr	r2, [r4, #12]
 240 0032 1A60     		str	r2, [r3]
 681:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_COND_REG = config->rangeCond;
 241              		.loc 1 681 0 discriminator 4
 242 0034 1C4B     		ldr	r3, .L23+12
 243 0036 A269     		ldr	r2, [r4, #24]
 244 0038 1A60     		str	r2, [r3]
 682:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SAMPLE_TIME01_REG = config->sampleTime01;
 245              		.loc 1 682 0 discriminator 4
 246 003a 1C4B     		ldr	r3, .L23+16
 247 003c E269     		ldr	r2, [r4, #28]
 248 003e 1A60     		str	r2, [r3]
 683:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SAMPLE_TIME23_REG = config->sampleTime23;
 249              		.loc 1 683 0 discriminator 4
 250 0040 1B4B     		ldr	r3, .L23+20
 251 0042 2269     		ldr	r2, [r4, #16]
 252 0044 1A60     		str	r2, [r3]
 684:Generated_Source\PSoC4/ADC_1.c **** 
 253              		.loc 1 684 0 discriminator 4
 254 0046 1B4B     		ldr	r3, .L23+24
 255 0048 6269     		ldr	r2, [r4, #20]
 256 004a 1A60     		str	r2, [r3]
 689:Generated_Source\PSoC4/ADC_1.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 257              		.loc 1 689 0 discriminator 4
 258 004c 1A4A     		ldr	r2, .L23+28
 259 004e 1368     		ldr	r3, [r2]
 260 0050 8021     		movs	r1, #128
 261 0052 4902     		lsls	r1, r1, #9
 262 0054 0B43     		orrs	r3, r1
 263 0056 1360     		str	r3, [r2]
 691:Generated_Source\PSoC4/ADC_1.c ****         {
 264              		.loc 1 691 0 discriminator 4
 265 0058 6368     		ldr	r3, [r4, #4]
 266 005a 012B     		cmp	r3, #1
 267 005c 03D9     		bls	.L19
 693:Generated_Source\PSoC4/ADC_1.c ****         }
 268              		.loc 1 693 0
 269 005e 174A     		ldr	r2, .L23+32
 270 0060 1368     		ldr	r3, [r2]
 271 0062 0B43     		orrs	r3, r1
 272 0064 1360     		str	r3, [r2]
 273              	.L19:
 698:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_INTR_MASK_REG = 0u;
 274              		.loc 1 698 0
 275 0066 164A     		ldr	r2, .L23+36
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 25


 276 0068 0021     		movs	r1, #0
 277 006a 1160     		str	r1, [r2]
 699:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SATURATE_INTR_MASK_REG = config->satIntMask;
 278              		.loc 1 699 0
 279 006c 154B     		ldr	r3, .L23+40
 280 006e 1960     		str	r1, [r3]
 700:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_INTR_MASK_REG = config->rangeIntMask;
 281              		.loc 1 700 0
 282 0070 A16A     		ldr	r1, [r4, #40]
 283 0072 1160     		str	r1, [r2]
 701:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_INTR_MASK_REG = ADC_1_EOS_MASK;
 284              		.loc 1 701 0
 285 0074 626A     		ldr	r2, [r4, #36]
 286 0076 1A60     		str	r2, [r3]
 702:Generated_Source\PSoC4/ADC_1.c **** 
 287              		.loc 1 702 0
 288 0078 0122     		movs	r2, #1
 289 007a 134B     		ldr	r3, .L23+44
 290 007c 1A60     		str	r2, [r3]
 291              	.LVL18:
 704:Generated_Source\PSoC4/ADC_1.c ****     {
 292              		.loc 1 704 0
 293 007e 0023     		movs	r3, #0
 294 0080 07E0     		b	.L20
 295              	.LVL19:
 296              	.L21:
 718:Generated_Source\PSoC4/ADC_1.c ****     }
 297              		.loc 1 718 0 discriminator 3
 298 0082 9A00     		lsls	r2, r3, #2
 299 0084 1149     		ldr	r1, .L23+48
 300 0086 8C46     		mov	ip, r1
 301 0088 6244     		add	r2, r2, ip
 302 008a 8021     		movs	r1, #128
 303 008c C900     		lsls	r1, r1, #3
 304 008e 1160     		str	r1, [r2]
 704:Generated_Source\PSoC4/ADC_1.c ****     {
 305              		.loc 1 704 0 discriminator 3
 306 0090 0133     		adds	r3, r3, #1
 307              	.LVL20:
 308              	.L20:
 704:Generated_Source\PSoC4/ADC_1.c ****     {
 309              		.loc 1 704 0 is_stmt 0 discriminator 1
 310 0092 6268     		ldr	r2, [r4, #4]
 311 0094 9342     		cmp	r3, r2
 312 0096 F4D3     		bcc	.L21
 722:Generated_Source\PSoC4/ADC_1.c **** 
 313              		.loc 1 722 0 is_stmt 1
 314              		@ sp needed
 315              	.LVL21:
 316 0098 10BD     		pop	{r4, pc}
 317              	.L24:
 318 009a C046     		.align	2
 319              	.L23:
 320 009c 80033A40 		.word	1077543808
 321 00a0 00003A40 		.word	1077542912
 322 00a4 04003A40 		.word	1077542916
 323 00a8 18003A40 		.word	1077542936
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 26


 324 00ac 1C003A40 		.word	1077542940
 325 00b0 10003A40 		.word	1077542928
 326 00b4 14003A40 		.word	1077542932
 327 00b8 00033A40 		.word	1077543680
 328 00bc 40033A40 		.word	1077543744
 329 00c0 28023A40 		.word	1077543464
 330 00c4 38023A40 		.word	1077543480
 331 00c8 18023A40 		.word	1077543448
 332 00cc 80003A40 		.word	1077543040
 333              		.cfi_endproc
 334              	.LFE4:
 335              		.size	ADC_1_InitConfig, .-ADC_1_InitConfig
 336              		.section	.text.ADC_1_StartConvert,"ax",%progbits
 337              		.align	2
 338              		.global	ADC_1_StartConvert
 339              		.code	16
 340              		.thumb_func
 341              		.type	ADC_1_StartConvert, %function
 342              	ADC_1_StartConvert:
 343              	.LFB7:
 833:Generated_Source\PSoC4/ADC_1.c ****     /* Freerunning mode */
 344              		.loc 1 833 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348              		@ link register save eliminated.
 835:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 349              		.loc 1 835 0
 350 0000 074B     		ldr	r3, .L28
 351 0002 1B68     		ldr	r3, [r3]
 352 0004 5B03     		lsls	r3, r3, #13
 353 0006 06D5     		bpl	.L26
 839:Generated_Source\PSoC4/ADC_1.c ****     }
 354              		.loc 1 839 0
 355 0008 054A     		ldr	r2, .L28
 356 000a 1368     		ldr	r3, [r2]
 357 000c 8021     		movs	r1, #128
 358 000e 4902     		lsls	r1, r1, #9
 359 0010 0B43     		orrs	r3, r1
 360 0012 1360     		str	r3, [r2]
 361 0014 02E0     		b	.L25
 362              	.L26:
 843:Generated_Source\PSoC4/ADC_1.c ****     }
 363              		.loc 1 843 0
 364 0016 0122     		movs	r2, #1
 365 0018 024B     		ldr	r3, .L28+4
 366 001a 1A60     		str	r2, [r3]
 367              	.L25:
 847:Generated_Source\PSoC4/ADC_1.c **** 
 368              		.loc 1 847 0
 369              		@ sp needed
 370 001c 7047     		bx	lr
 371              	.L29:
 372 001e C046     		.align	2
 373              	.L28:
 374 0020 04003A40 		.word	1077542916
 375 0024 24003A40 		.word	1077542948
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 27


 376              		.cfi_endproc
 377              	.LFE7:
 378              		.size	ADC_1_StartConvert, .-ADC_1_StartConvert
 379              		.section	.text.ADC_1_SetConvertMode,"ax",%progbits
 380              		.align	2
 381              		.global	ADC_1_SetConvertMode
 382              		.code	16
 383              		.thumb_func
 384              		.type	ADC_1_SetConvertMode, %function
 385              	ADC_1_SetConvertMode:
 386              	.LFB9:
 904:Generated_Source\PSoC4/ADC_1.c ****     if(ADC_1_CONTINUOUS == mode)
 387              		.loc 1 904 0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 0
 390              		@ frame_needed = 0, uses_anonymous_args = 0
 391              		@ link register save eliminated.
 392              	.LVL22:
 905:Generated_Source\PSoC4/ADC_1.c ****     {
 393              		.loc 1 905 0
 394 0000 0128     		cmp	r0, #1
 395 0002 06D1     		bne	.L31
 907:Generated_Source\PSoC4/ADC_1.c ****     }
 396              		.loc 1 907 0
 397 0004 064A     		ldr	r2, .L33
 398 0006 1368     		ldr	r3, [r2]
 399 0008 8021     		movs	r1, #128
 400 000a C902     		lsls	r1, r1, #11
 401 000c 0B43     		orrs	r3, r1
 402 000e 1360     		str	r3, [r2]
 403 0010 04E0     		b	.L30
 404              	.L31:
 911:Generated_Source\PSoC4/ADC_1.c ****     }
 405              		.loc 1 911 0
 406 0012 034A     		ldr	r2, .L33
 407 0014 1168     		ldr	r1, [r2]
 408 0016 034B     		ldr	r3, .L33+4
 409 0018 0B40     		ands	r3, r1
 410 001a 1360     		str	r3, [r2]
 411              	.L30:
 913:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
 412              		.loc 1 913 0
 413              		@ sp needed
 414 001c 7047     		bx	lr
 415              	.L34:
 416 001e C046     		.align	2
 417              	.L33:
 418 0020 04003A40 		.word	1077542916
 419 0024 FFFFFBFF 		.word	-262145
 420              		.cfi_endproc
 421              	.LFE9:
 422              		.size	ADC_1_SetConvertMode, .-ADC_1_SetConvertMode
 423              		.section	.text.ADC_1_SetEosMask,"ax",%progbits
 424              		.align	2
 425              		.global	ADC_1_SetEosMask
 426              		.code	16
 427              		.thumb_func
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 28


 428              		.type	ADC_1_SetEosMask, %function
 429              	ADC_1_SetEosMask:
 430              	.LFB10:
 959:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_INTR_MASK_REG = mask & ADC_1_EOS_MASK;
 431              		.loc 1 959 0
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 0
 434              		@ frame_needed = 0, uses_anonymous_args = 0
 435              		@ link register save eliminated.
 436              	.LVL23:
 960:Generated_Source\PSoC4/ADC_1.c **** 
 437              		.loc 1 960 0
 438 0000 0123     		movs	r3, #1
 439 0002 1840     		ands	r0, r3
 440              	.LVL24:
 441 0004 014B     		ldr	r3, .L36
 442 0006 1860     		str	r0, [r3]
 963:Generated_Source\PSoC4/ADC_1.c **** 
 443              		.loc 1 963 0
 444              		@ sp needed
 445 0008 7047     		bx	lr
 446              	.L37:
 447 000a C046     		.align	2
 448              	.L36:
 449 000c 18023A40 		.word	1077543448
 450              		.cfi_endproc
 451              	.LFE10:
 452              		.size	ADC_1_SetEosMask, .-ADC_1_SetEosMask
 453              		.section	.text.ADC_1_SetChanMask,"ax",%progbits
 454              		.align	2
 455              		.global	ADC_1_SetChanMask
 456              		.code	16
 457              		.thumb_func
 458              		.type	ADC_1_SetChanMask, %function
 459              	ADC_1_SetChanMask:
 460              	.LFB11:
 980:Generated_Source\PSoC4/ADC_1.c ****     uint32 chanCount = ADC_1_allConfigs[ADC_1_currentConfig].numChannels;
 461              		.loc 1 980 0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 0
 464              		@ frame_needed = 0, uses_anonymous_args = 0
 465              		@ link register save eliminated.
 466              	.LVL25:
 981:Generated_Source\PSoC4/ADC_1.c ****     enableMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 467              		.loc 1 981 0
 468 0000 074B     		ldr	r3, .L39
 469 0002 1A68     		ldr	r2, [r3]
 470 0004 D300     		lsls	r3, r2, #3
 471 0006 9A1A     		subs	r2, r3, r2
 472 0008 D300     		lsls	r3, r2, #3
 473 000a 064A     		ldr	r2, .L39+4
 474 000c D318     		adds	r3, r2, r3
 475 000e 5A68     		ldr	r2, [r3, #4]
 476              	.LVL26:
 982:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_CHAN_EN_REG = enableMask;
 477              		.loc 1 982 0
 478 0010 0123     		movs	r3, #1
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 29


 479 0012 9340     		lsls	r3, r3, r2
 480 0014 013B     		subs	r3, r3, #1
 481 0016 1840     		ands	r0, r3
 482              	.LVL27:
 983:Generated_Source\PSoC4/ADC_1.c ****     return;
 483              		.loc 1 983 0
 484 0018 034B     		ldr	r3, .L39+8
 485 001a 1860     		str	r0, [r3]
 985:Generated_Source\PSoC4/ADC_1.c **** 
 486              		.loc 1 985 0
 487              		@ sp needed
 488 001c 7047     		bx	lr
 489              	.L40:
 490 001e C046     		.align	2
 491              	.L39:
 492 0020 00000000 		.word	.LANCHOR0
 493 0024 00000000 		.word	ADC_1_allConfigs
 494 0028 20003A40 		.word	1077542944
 495              		.cfi_endproc
 496              	.LFE11:
 497              		.size	ADC_1_SetChanMask, .-ADC_1_SetChanMask
 498              		.section	.text.ADC_1_IsEndConversion,"ax",%progbits
 499              		.align	2
 500              		.global	ADC_1_IsEndConversion
 501              		.code	16
 502              		.thumb_func
 503              		.type	ADC_1_IsEndConversion, %function
 504              	ADC_1_IsEndConversion:
 505              	.LFB12:
1008:Generated_Source\PSoC4/ADC_1.c ****     uint32 endOfConversion = 0u;
 506              		.loc 1 1008 0
 507              		.cfi_startproc
 508              		@ args = 0, pretend = 0, frame = 0
 509              		@ frame_needed = 0, uses_anonymous_args = 0
 510              		@ link register save eliminated.
 511              	.LVL28:
 512 0000 0100     		movs	r1, r0
 513              	.LVL29:
1011:Generated_Source\PSoC4/ADC_1.c ****     {
 514              		.loc 1 1011 0
 515 0002 431E     		subs	r3, r0, #1
 516 0004 012B     		cmp	r3, #1
 517 0006 11D8     		bhi	.L45
 518 0008 094A     		ldr	r2, .L46
 519              	.LVL30:
 520              	.L44:
1015:Generated_Source\PSoC4/ADC_1.c ****             wdt--;
 521              		.loc 1 1015 0 discriminator 1
 522 000a 0A4B     		ldr	r3, .L46+4
 523 000c 1B68     		ldr	r3, [r3]
 524 000e 0120     		movs	r0, #1
 525 0010 1840     		ands	r0, r3
 526              	.LVL31:
1016:Generated_Source\PSoC4/ADC_1.c ****         }while(((0u == endOfConversion)
 527              		.loc 1 1016 0 discriminator 1
 528 0012 013A     		subs	r2, r2, #1
 529              	.LVL32:
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 30


1019:Generated_Source\PSoC4/ADC_1.c **** 
 530              		.loc 1 1019 0 discriminator 1
 531 0014 0028     		cmp	r0, #0
 532 0016 03D1     		bne	.L43
1018:Generated_Source\PSoC4/ADC_1.c ****             && (0uL != wdt));
 533              		.loc 1 1018 0
 534 0018 8B07     		lsls	r3, r1, #30
 535 001a 01D5     		bpl	.L43
1019:Generated_Source\PSoC4/ADC_1.c **** 
 536              		.loc 1 1019 0
 537 001c 002A     		cmp	r2, #0
 538 001e F4D1     		bne	.L44
 539              	.L43:
1021:Generated_Source\PSoC4/ADC_1.c ****         {
 540              		.loc 1 1021 0
 541 0020 0028     		cmp	r0, #0
 542 0022 04D0     		beq	.L42
1024:Generated_Source\PSoC4/ADC_1.c ****         }
 543              		.loc 1 1024 0
 544 0024 0122     		movs	r2, #1
 545              	.LVL33:
 546 0026 034B     		ldr	r3, .L46+4
 547 0028 1A60     		str	r2, [r3]
 548 002a 00E0     		b	.L42
 549              	.LVL34:
 550              	.L45:
1009:Generated_Source\PSoC4/ADC_1.c ****     uint32 wdt = 0x3FFFFFFuL; /* Watchdog timer for blocking while loop */
 551              		.loc 1 1009 0
 552 002c 0020     		movs	r0, #0
 553              	.LVL35:
 554              	.L42:
1029:Generated_Source\PSoC4/ADC_1.c **** 
 555              		.loc 1 1029 0
 556              		@ sp needed
 557 002e 7047     		bx	lr
 558              	.L47:
 559              		.align	2
 560              	.L46:
 561 0030 FFFFFF03 		.word	67108863
 562 0034 10023A40 		.word	1077543440
 563              		.cfi_endproc
 564              	.LFE12:
 565              		.size	ADC_1_IsEndConversion, .-ADC_1_IsEndConversion
 566              		.section	.text.ADC_1_GetResult16,"ax",%progbits
 567              		.align	2
 568              		.global	ADC_1_GetResult16
 569              		.code	16
 570              		.thumb_func
 571              		.type	ADC_1_GetResult16, %function
 572              	ADC_1_GetResult16:
 573              	.LFB14:
1071:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1072:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_GetResult16
1073:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1074:Generated_Source\PSoC4/ADC_1.c **** *
1075:Generated_Source\PSoC4/ADC_1.c **** * \brief Gets the data available in the channel result data register
1076:Generated_Source\PSoC4/ADC_1.c **** *
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 31


1077:Generated_Source\PSoC4/ADC_1.c **** * \param chan The ADC_1 channel to read the result from. The first
1078:Generated_Source\PSoC4/ADC_1.c **** * channel is 0 and the injection channel if enabled is the number of valid
1079:Generated_Source\PSoC4/ADC_1.c **** * channels.
1080:Generated_Source\PSoC4/ADC_1.c **** *
1081:Generated_Source\PSoC4/ADC_1.c **** * \return Returns converted data as a signed 16-bit integer.
1082:Generated_Source\PSoC4/ADC_1.c **** *
1083:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1084:Generated_Source\PSoC4/ADC_1.c **** *
1085:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1086:Generated_Source\PSoC4/ADC_1.c **** int16 ADC_1_GetResult16(uint32 chan)
1087:Generated_Source\PSoC4/ADC_1.c **** {
 574              		.loc 1 1087 0
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 0
 577              		@ frame_needed = 0, uses_anonymous_args = 0
 578              	.LVL36:
 579 0000 10B5     		push	{r4, lr}
 580              		.cfi_def_cfa_offset 8
 581              		.cfi_offset 4, -8
 582              		.cfi_offset 14, -4
 583 0002 0400     		movs	r4, r0
1088:Generated_Source\PSoC4/ADC_1.c ****     uint32 adcResult;
1089:Generated_Source\PSoC4/ADC_1.c **** 
1090:Generated_Source\PSoC4/ADC_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1091:Generated_Source\PSoC4/ADC_1.c ****     CYASSERT(chan < ADC_1_allConfigs[ADC_1_currentConfig].numChannels);
 584              		.loc 1 1091 0
 585 0004 104B     		ldr	r3, .L52
 586 0006 1A68     		ldr	r2, [r3]
 587 0008 D300     		lsls	r3, r2, #3
 588 000a 9A1A     		subs	r2, r3, r2
 589 000c D300     		lsls	r3, r2, #3
 590 000e 0F4A     		ldr	r2, .L52+4
 591 0010 D318     		adds	r3, r2, r3
 592 0012 5B68     		ldr	r3, [r3, #4]
 593 0014 8342     		cmp	r3, r0
 594 0016 02D8     		bhi	.L49
 595              		.loc 1 1091 0 is_stmt 0 discriminator 1
 596 0018 0020     		movs	r0, #0
 597              	.LVL37:
 598 001a FFF7FEFF 		bl	CyHalt
 599              	.LVL38:
 600              	.L49:
1092:Generated_Source\PSoC4/ADC_1.c **** 
1093:Generated_Source\PSoC4/ADC_1.c ****     if(ADC_1_allConfigs[ADC_1_currentConfig].numChannels > chan)
 601              		.loc 1 1093 0 is_stmt 1
 602 001e 0A4B     		ldr	r3, .L52
 603 0020 1A68     		ldr	r2, [r3]
 604 0022 D300     		lsls	r3, r2, #3
 605 0024 9A1A     		subs	r2, r3, r2
 606 0026 D300     		lsls	r3, r2, #3
 607 0028 084A     		ldr	r2, .L52+4
 608 002a D318     		adds	r3, r2, r3
 609 002c 5B68     		ldr	r3, [r3, #4]
 610 002e 9C42     		cmp	r4, r3
 611 0030 07D2     		bcs	.L51
1094:Generated_Source\PSoC4/ADC_1.c ****     {
1095:Generated_Source\PSoC4/ADC_1.c ****         adcResult = CY_GET_REG32((reg32 *)(ADC_1_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 32


 612              		.loc 1 1095 0
 613 0032 A400     		lsls	r4, r4, #2
 614              	.LVL39:
 615 0034 064B     		ldr	r3, .L52+8
 616 0036 9C46     		mov	ip, r3
 617 0038 6444     		add	r4, r4, ip
 618 003a 2068     		ldr	r0, [r4]
 619 003c 0004     		lsls	r0, r0, #16
 620 003e 000C     		lsrs	r0, r0, #16
 621              	.LVL40:
 622 0040 00E0     		b	.L50
 623              	.LVL41:
 624              	.L51:
1096:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_RESULT_MASK;
1097:Generated_Source\PSoC4/ADC_1.c ****     }
1098:Generated_Source\PSoC4/ADC_1.c ****     else
1099:Generated_Source\PSoC4/ADC_1.c ****     {
1100:Generated_Source\PSoC4/ADC_1.c ****         adcResult = 0u;
 625              		.loc 1 1100 0
 626 0042 0020     		movs	r0, #0
 627              	.LVL42:
 628              	.L50:
1101:Generated_Source\PSoC4/ADC_1.c ****     }
1102:Generated_Source\PSoC4/ADC_1.c **** 
1103:Generated_Source\PSoC4/ADC_1.c ****     return (int16) adcResult;
 629              		.loc 1 1103 0
 630 0044 00B2     		sxth	r0, r0
 631              	.LVL43:
1104:Generated_Source\PSoC4/ADC_1.c **** }
 632              		.loc 1 1104 0
 633              		@ sp needed
 634 0046 10BD     		pop	{r4, pc}
 635              	.L53:
 636              		.align	2
 637              	.L52:
 638 0048 00000000 		.word	.LANCHOR0
 639 004c 00000000 		.word	ADC_1_allConfigs
 640 0050 80013A40 		.word	1077543296
 641              		.cfi_endproc
 642              	.LFE14:
 643              		.size	ADC_1_GetResult16, .-ADC_1_GetResult16
 644              		.section	.text.ADC_1_GetResult32,"ax",%progbits
 645              		.align	2
 646              		.global	ADC_1_GetResult32
 647              		.code	16
 648              		.thumb_func
 649              		.type	ADC_1_GetResult32, %function
 650              	ADC_1_GetResult32:
 651              	.LFB15:
1105:Generated_Source\PSoC4/ADC_1.c **** 
1106:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1107:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_GetResult32
1108:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1109:Generated_Source\PSoC4/ADC_1.c **** *
1110:Generated_Source\PSoC4/ADC_1.c **** * \brief Gets the data available in the channel result data register.
1111:Generated_Source\PSoC4/ADC_1.c **** *
1112:Generated_Source\PSoC4/ADC_1.c **** * \param chan The ADC_1 channel to read the result from. The first
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 33


1113:Generated_Source\PSoC4/ADC_1.c **** * channel is 0 and the injection channel if enabled is the number of valid
1114:Generated_Source\PSoC4/ADC_1.c **** * channels.
1115:Generated_Source\PSoC4/ADC_1.c **** *
1116:Generated_Source\PSoC4/ADC_1.c **** * \return Returns converted data as a signed 32-bit integer.
1117:Generated_Source\PSoC4/ADC_1.c **** *
1118:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1119:Generated_Source\PSoC4/ADC_1.c **** *
1120:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1121:Generated_Source\PSoC4/ADC_1.c **** int32 ADC_1_GetResult32(uint32 chan)
1122:Generated_Source\PSoC4/ADC_1.c **** {
 652              		.loc 1 1122 0
 653              		.cfi_startproc
 654              		@ args = 0, pretend = 0, frame = 0
 655              		@ frame_needed = 0, uses_anonymous_args = 0
 656              	.LVL44:
 657 0000 70B5     		push	{r4, r5, r6, lr}
 658              		.cfi_def_cfa_offset 16
 659              		.cfi_offset 4, -16
 660              		.cfi_offset 5, -12
 661              		.cfi_offset 6, -8
 662              		.cfi_offset 14, -4
 663 0002 0500     		movs	r5, r0
1123:Generated_Source\PSoC4/ADC_1.c ****     uint32 adcResult;
1124:Generated_Source\PSoC4/ADC_1.c ****     int16 adcResult16;
1125:Generated_Source\PSoC4/ADC_1.c ****     int32 finalResult;
1126:Generated_Source\PSoC4/ADC_1.c **** 
1127:Generated_Source\PSoC4/ADC_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1128:Generated_Source\PSoC4/ADC_1.c ****     CYASSERT(chan < ADC_1_allConfigs[ADC_1_currentConfig].numChannels);
 664              		.loc 1 1128 0
 665 0004 144B     		ldr	r3, .L60
 666 0006 1A68     		ldr	r2, [r3]
 667 0008 D300     		lsls	r3, r2, #3
 668 000a 9A1A     		subs	r2, r3, r2
 669 000c D300     		lsls	r3, r2, #3
 670 000e 134A     		ldr	r2, .L60+4
 671 0010 D318     		adds	r3, r2, r3
 672 0012 5B68     		ldr	r3, [r3, #4]
 673 0014 8342     		cmp	r3, r0
 674 0016 02D8     		bhi	.L55
 675              		.loc 1 1128 0 is_stmt 0 discriminator 1
 676 0018 0020     		movs	r0, #0
 677              	.LVL45:
 678 001a FFF7FEFF 		bl	CyHalt
 679              	.LVL46:
 680              	.L55:
1129:Generated_Source\PSoC4/ADC_1.c **** 
1130:Generated_Source\PSoC4/ADC_1.c ****     if(ADC_1_allConfigs[ADC_1_currentConfig].numChannels > chan)
 681              		.loc 1 1130 0 is_stmt 1
 682 001e 0E4B     		ldr	r3, .L60
 683 0020 1A68     		ldr	r2, [r3]
 684 0022 D300     		lsls	r3, r2, #3
 685 0024 9A1A     		subs	r2, r3, r2
 686 0026 D300     		lsls	r3, r2, #3
 687 0028 0C4A     		ldr	r2, .L60+4
 688 002a D318     		adds	r3, r2, r3
 689 002c 5B68     		ldr	r3, [r3, #4]
 690 002e 9D42     		cmp	r5, r3
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 34


 691 0030 07D2     		bcs	.L59
1131:Generated_Source\PSoC4/ADC_1.c ****     {
1132:Generated_Source\PSoC4/ADC_1.c ****         adcResult = CY_GET_REG32((reg32 *)(ADC_1_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 692              		.loc 1 1132 0
 693 0032 AB00     		lsls	r3, r5, #2
 694 0034 0A4A     		ldr	r2, .L60+8
 695 0036 9446     		mov	ip, r2
 696 0038 6344     		add	r3, r3, ip
 697 003a 1C68     		ldr	r4, [r3]
 698 003c 2404     		lsls	r4, r4, #16
 699 003e 240C     		lsrs	r4, r4, #16
 700              	.LVL47:
 701 0040 00E0     		b	.L56
 702              	.LVL48:
 703              	.L59:
1133:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_RESULT_MASK;
1134:Generated_Source\PSoC4/ADC_1.c ****     }
1135:Generated_Source\PSoC4/ADC_1.c ****     else
1136:Generated_Source\PSoC4/ADC_1.c ****     {
1137:Generated_Source\PSoC4/ADC_1.c ****         adcResult = 0u;
 704              		.loc 1 1137 0
 705 0042 0024     		movs	r4, #0
 706              	.L56:
 707              	.LVL49:
1138:Generated_Source\PSoC4/ADC_1.c ****     }
1139:Generated_Source\PSoC4/ADC_1.c ****     /* Sign extend if channel is signed format */
1140:Generated_Source\PSoC4/ADC_1.c ****     if(ADC_1_IsChannelSigned(chan) == 1)
 708              		.loc 1 1140 0
 709 0044 2800     		movs	r0, r5
 710 0046 FFF7FEFF 		bl	ADC_1_IsChannelSigned
 711              	.LVL50:
 712 004a 0128     		cmp	r0, #1
 713 004c 01D1     		bne	.L57
 714              	.LVL51:
1141:Generated_Source\PSoC4/ADC_1.c ****     {
1142:Generated_Source\PSoC4/ADC_1.c ****         adcResult16 = (int16) adcResult;
1143:Generated_Source\PSoC4/ADC_1.c ****         finalResult = (int32) adcResult16;
 715              		.loc 1 1143 0
 716 004e 20B2     		sxth	r0, r4
 717              	.LVL52:
 718 0050 00E0     		b	.L58
 719              	.LVL53:
 720              	.L57:
1144:Generated_Source\PSoC4/ADC_1.c ****     }
1145:Generated_Source\PSoC4/ADC_1.c ****     else
1146:Generated_Source\PSoC4/ADC_1.c ****     {
1147:Generated_Source\PSoC4/ADC_1.c ****         finalResult = (int32) adcResult;
 721              		.loc 1 1147 0
 722 0052 2000     		movs	r0, r4
 723              	.LVL54:
 724              	.L58:
1148:Generated_Source\PSoC4/ADC_1.c ****     }
1149:Generated_Source\PSoC4/ADC_1.c ****     return finalResult;
1150:Generated_Source\PSoC4/ADC_1.c **** }
 725              		.loc 1 1150 0
 726              		@ sp needed
 727              	.LVL55:
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 35


 728              	.LVL56:
 729 0054 70BD     		pop	{r4, r5, r6, pc}
 730              	.L61:
 731 0056 C046     		.align	2
 732              	.L60:
 733 0058 00000000 		.word	.LANCHOR0
 734 005c 00000000 		.word	ADC_1_allConfigs
 735 0060 80013A40 		.word	1077543296
 736              		.cfi_endproc
 737              	.LFE15:
 738              		.size	ADC_1_GetResult32, .-ADC_1_GetResult32
 739              		.section	.text.ADC_1_SetLowLimit,"ax",%progbits
 740              		.align	2
 741              		.global	ADC_1_SetLowLimit
 742              		.code	16
 743              		.thumb_func
 744              		.type	ADC_1_SetLowLimit, %function
 745              	ADC_1_SetLowLimit:
 746              	.LFB16:
1151:Generated_Source\PSoC4/ADC_1.c **** 
1152:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1153:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetLowLimit
1154:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1155:Generated_Source\PSoC4/ADC_1.c **** *
1156:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets the low limit parameter for a limit condition.
1157:Generated_Source\PSoC4/ADC_1.c **** *
1158:Generated_Source\PSoC4/ADC_1.c **** * \param lowLimit The low limit for a limit condition.
1159:Generated_Source\PSoC4/ADC_1.c **** *
1160:Generated_Source\PSoC4/ADC_1.c **** * \return None
1161:Generated_Source\PSoC4/ADC_1.c **** *
1162:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1163:Generated_Source\PSoC4/ADC_1.c **** *
1164:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1165:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetLowLimit(uint32 lowLimit)
1166:Generated_Source\PSoC4/ADC_1.c **** {
 747              		.loc 1 1166 0
 748              		.cfi_startproc
 749              		@ args = 0, pretend = 0, frame = 0
 750              		@ frame_needed = 0, uses_anonymous_args = 0
 751              		@ link register save eliminated.
 752              	.LVL57:
1167:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_THRES_REG &= ~(uint32)(ADC_1_SAR_RANGE_THRES_RANGE_LOW_MSK);
 753              		.loc 1 1167 0
 754 0000 054A     		ldr	r2, .L63
 755 0002 1368     		ldr	r3, [r2]
 756 0004 1B0C     		lsrs	r3, r3, #16
 757 0006 1B04     		lsls	r3, r3, #16
 758 0008 1360     		str	r3, [r2]
1168:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_THRES_REG |= lowLimit & ADC_1_SAR_RANGE_THRES_RANGE_LOW_MSK;
 759              		.loc 1 1168 0
 760 000a 1368     		ldr	r3, [r2]
 761 000c 0004     		lsls	r0, r0, #16
 762              	.LVL58:
 763 000e 000C     		lsrs	r0, r0, #16
 764 0010 1843     		orrs	r0, r3
 765 0012 1060     		str	r0, [r2]
1169:Generated_Source\PSoC4/ADC_1.c ****     return;
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 36


1170:Generated_Source\PSoC4/ADC_1.c **** }
 766              		.loc 1 1170 0
 767              		@ sp needed
 768 0014 7047     		bx	lr
 769              	.L64:
 770 0016 C046     		.align	2
 771              	.L63:
 772 0018 18003A40 		.word	1077542936
 773              		.cfi_endproc
 774              	.LFE16:
 775              		.size	ADC_1_SetLowLimit, .-ADC_1_SetLowLimit
 776              		.section	.text.ADC_1_SetHighLimit,"ax",%progbits
 777              		.align	2
 778              		.global	ADC_1_SetHighLimit
 779              		.code	16
 780              		.thumb_func
 781              		.type	ADC_1_SetHighLimit, %function
 782              	ADC_1_SetHighLimit:
 783              	.LFB17:
1171:Generated_Source\PSoC4/ADC_1.c **** 
1172:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1173:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetHighLimit
1174:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1175:Generated_Source\PSoC4/ADC_1.c **** *
1176:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets the high limit parameter for a limit condition.
1177:Generated_Source\PSoC4/ADC_1.c **** *
1178:Generated_Source\PSoC4/ADC_1.c **** * \param highLimit The high limit for a limit condition.
1179:Generated_Source\PSoC4/ADC_1.c **** *
1180:Generated_Source\PSoC4/ADC_1.c **** * \return None
1181:Generated_Source\PSoC4/ADC_1.c **** *
1182:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1183:Generated_Source\PSoC4/ADC_1.c **** *
1184:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1185:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetHighLimit(uint32 highLimit)
1186:Generated_Source\PSoC4/ADC_1.c **** {
 784              		.loc 1 1186 0
 785              		.cfi_startproc
 786              		@ args = 0, pretend = 0, frame = 0
 787              		@ frame_needed = 0, uses_anonymous_args = 0
 788              		@ link register save eliminated.
 789              	.LVL59:
1187:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_THRES_REG &= ~(uint32)(ADC_1_SAR_RANGE_THRES_RANGE_HIGH_MSK);
 790              		.loc 1 1187 0
 791 0000 044A     		ldr	r2, .L66
 792 0002 1368     		ldr	r3, [r2]
 793 0004 1B04     		lsls	r3, r3, #16
 794 0006 1B0C     		lsrs	r3, r3, #16
 795 0008 1360     		str	r3, [r2]
1188:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_1_SAR_RANGE_THRES_RANGE_HIGH_SHFT);
 796              		.loc 1 1188 0
 797 000a 1368     		ldr	r3, [r2]
 798 000c 0004     		lsls	r0, r0, #16
 799              	.LVL60:
 800 000e 1843     		orrs	r0, r3
 801 0010 1060     		str	r0, [r2]
1189:Generated_Source\PSoC4/ADC_1.c ****     return;
1190:Generated_Source\PSoC4/ADC_1.c **** }
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 37


 802              		.loc 1 1190 0
 803              		@ sp needed
 804 0012 7047     		bx	lr
 805              	.L67:
 806              		.align	2
 807              	.L66:
 808 0014 18003A40 		.word	1077542936
 809              		.cfi_endproc
 810              	.LFE17:
 811              		.size	ADC_1_SetHighLimit, .-ADC_1_SetHighLimit
 812              		.section	.text.ADC_1_SetLimitMask,"ax",%progbits
 813              		.align	2
 814              		.global	ADC_1_SetLimitMask
 815              		.code	16
 816              		.thumb_func
 817              		.type	ADC_1_SetLimitMask, %function
 818              	ADC_1_SetLimitMask:
 819              	.LFB18:
1191:Generated_Source\PSoC4/ADC_1.c **** 
1192:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1193:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetLimitMask
1194:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1195:Generated_Source\PSoC4/ADC_1.c **** *
1196:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets the channel limit condition mask.
1197:Generated_Source\PSoC4/ADC_1.c **** *
1198:Generated_Source\PSoC4/ADC_1.c **** * \param limitMask Sets which channels that may cause a limit condition interrupt.
1199:Generated_Source\PSoC4/ADC_1.c **** * Setting bits for channels that do not exist will have no effect. For example,
1200:Generated_Source\PSoC4/ADC_1.c **** * if only 6  channels were enabled, setting a mask of 0x0103 would only enable
1201:Generated_Source\PSoC4/ADC_1.c **** * the last two channels (0 and 1).
1202:Generated_Source\PSoC4/ADC_1.c **** *
1203:Generated_Source\PSoC4/ADC_1.c **** * \return None
1204:Generated_Source\PSoC4/ADC_1.c **** *
1205:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1206:Generated_Source\PSoC4/ADC_1.c **** *
1207:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1208:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetLimitMask(uint32 limitMask)
1209:Generated_Source\PSoC4/ADC_1.c **** {
 820              		.loc 1 1209 0
 821              		.cfi_startproc
 822              		@ args = 0, pretend = 0, frame = 0
 823              		@ frame_needed = 0, uses_anonymous_args = 0
 824              		@ link register save eliminated.
 825              	.LVL61:
1210:Generated_Source\PSoC4/ADC_1.c ****     uint32 chanCount = ADC_1_allConfigs[ADC_1_currentConfig].numChannels;
 826              		.loc 1 1210 0
 827 0000 074B     		ldr	r3, .L69
 828 0002 1A68     		ldr	r2, [r3]
 829 0004 D300     		lsls	r3, r2, #3
 830 0006 9A1A     		subs	r2, r3, r2
 831 0008 D300     		lsls	r3, r2, #3
 832 000a 064A     		ldr	r2, .L69+4
 833 000c D318     		adds	r3, r2, r3
 834 000e 5A68     		ldr	r2, [r3, #4]
 835              	.LVL62:
1211:Generated_Source\PSoC4/ADC_1.c ****     limitMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 836              		.loc 1 1211 0
 837 0010 0123     		movs	r3, #1
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 38


 838 0012 9340     		lsls	r3, r3, r2
 839 0014 013B     		subs	r3, r3, #1
 840 0016 1840     		ands	r0, r3
 841              	.LVL63:
1212:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_INTR_MASK_REG = limitMask;
 842              		.loc 1 1212 0
 843 0018 034B     		ldr	r3, .L69+8
 844 001a 1860     		str	r0, [r3]
1213:Generated_Source\PSoC4/ADC_1.c ****     return;
1214:Generated_Source\PSoC4/ADC_1.c **** }
 845              		.loc 1 1214 0
 846              		@ sp needed
 847 001c 7047     		bx	lr
 848              	.L70:
 849 001e C046     		.align	2
 850              	.L69:
 851 0020 00000000 		.word	.LANCHOR0
 852 0024 00000000 		.word	ADC_1_allConfigs
 853 0028 38023A40 		.word	1077543480
 854              		.cfi_endproc
 855              	.LFE18:
 856              		.size	ADC_1_SetLimitMask, .-ADC_1_SetLimitMask
 857              		.section	.text.ADC_1_SetSatMask,"ax",%progbits
 858              		.align	2
 859              		.global	ADC_1_SetSatMask
 860              		.code	16
 861              		.thumb_func
 862              		.type	ADC_1_SetSatMask, %function
 863              	ADC_1_SetSatMask:
 864              	.LFB19:
1215:Generated_Source\PSoC4/ADC_1.c **** 
1216:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1217:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetSatMask
1218:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1219:Generated_Source\PSoC4/ADC_1.c **** *
1220:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets the channel saturation event mask.
1221:Generated_Source\PSoC4/ADC_1.c **** *
1222:Generated_Source\PSoC4/ADC_1.c **** * \param satMask Sets which channels that may cause a saturation event interrupt.
1223:Generated_Source\PSoC4/ADC_1.c **** * Setting bits for channels that do not exist will have no effect. For example,
1224:Generated_Source\PSoC4/ADC_1.c **** * if only 8 channels were enabled, setting a mask of 0x01C0 would only enable two
1225:Generated_Source\PSoC4/ADC_1.c **** * channels (6 and 7).
1226:Generated_Source\PSoC4/ADC_1.c **** *
1227:Generated_Source\PSoC4/ADC_1.c **** * \return None
1228:Generated_Source\PSoC4/ADC_1.c **** *
1229:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1230:Generated_Source\PSoC4/ADC_1.c **** *
1231:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1232:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetSatMask(uint32 satMask)
1233:Generated_Source\PSoC4/ADC_1.c **** {
 865              		.loc 1 1233 0
 866              		.cfi_startproc
 867              		@ args = 0, pretend = 0, frame = 0
 868              		@ frame_needed = 0, uses_anonymous_args = 0
 869              		@ link register save eliminated.
 870              	.LVL64:
1234:Generated_Source\PSoC4/ADC_1.c ****     uint32 chanCount = ADC_1_allConfigs[ADC_1_currentConfig].numChannels;
 871              		.loc 1 1234 0
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 39


 872 0000 074B     		ldr	r3, .L72
 873 0002 1A68     		ldr	r2, [r3]
 874 0004 D300     		lsls	r3, r2, #3
 875 0006 9A1A     		subs	r2, r3, r2
 876 0008 D300     		lsls	r3, r2, #3
 877 000a 064A     		ldr	r2, .L72+4
 878 000c D318     		adds	r3, r2, r3
 879 000e 5A68     		ldr	r2, [r3, #4]
 880              	.LVL65:
1235:Generated_Source\PSoC4/ADC_1.c ****     satMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 881              		.loc 1 1235 0
 882 0010 0123     		movs	r3, #1
 883 0012 9340     		lsls	r3, r3, r2
 884 0014 013B     		subs	r3, r3, #1
 885 0016 1840     		ands	r0, r3
 886              	.LVL66:
1236:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SATURATE_INTR_MASK_REG = satMask;
 887              		.loc 1 1236 0
 888 0018 034B     		ldr	r3, .L72+8
 889 001a 1860     		str	r0, [r3]
1237:Generated_Source\PSoC4/ADC_1.c ****     return;
1238:Generated_Source\PSoC4/ADC_1.c **** }
 890              		.loc 1 1238 0
 891              		@ sp needed
 892 001c 7047     		bx	lr
 893              	.L73:
 894 001e C046     		.align	2
 895              	.L72:
 896 0020 00000000 		.word	.LANCHOR0
 897 0024 00000000 		.word	ADC_1_allConfigs
 898 0028 28023A40 		.word	1077543464
 899              		.cfi_endproc
 900              	.LFE19:
 901              		.size	ADC_1_SetSatMask, .-ADC_1_SetSatMask
 902              		.section	.text.ADC_1_SetOffset,"ax",%progbits
 903              		.align	2
 904              		.global	ADC_1_SetOffset
 905              		.code	16
 906              		.thumb_func
 907              		.type	ADC_1_SetOffset, %function
 908              	ADC_1_SetOffset:
 909              	.LFB20:
1239:Generated_Source\PSoC4/ADC_1.c **** 
1240:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1241:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetOffset
1242:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1243:Generated_Source\PSoC4/ADC_1.c **** *
1244:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets the ADC offset that is used by the functions ADC_1_CountsTo_uVolts,
1245:Generated_Source\PSoC4/ADC_1.c **** * ADC_1_CountsTo_mVolts, and ADC_1_CountsTo_Volts.
1246:Generated_Source\PSoC4/ADC_1.c **** *
1247:Generated_Source\PSoC4/ADC_1.c **** * Offset is applied to counts before unit scaling and gain.  All CountsTo_[mV, uV, V]olts()
1248:Generated_Source\PSoC4/ADC_1.c **** * functions use the following equation:
1249:Generated_Source\PSoC4/ADC_1.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1250:Generated_Source\PSoC4/ADC_1.c **** * See CountsTo_Volts() for more about this formula.
1251:Generated_Source\PSoC4/ADC_1.c **** *
1252:Generated_Source\PSoC4/ADC_1.c **** * To set channel 0's offset based on known V_offset_mV, use:
1253:Generated_Source\PSoC4/ADC_1.c **** *     ADC_1_SetOffset(0uL, -1 * V_offset_mV * (1uL << (Resolution - 1)) / V_ref_mV);
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 40


1254:Generated_Source\PSoC4/ADC_1.c **** *
1255:Generated_Source\PSoC4/ADC_1.c **** * \param chan ADC_1 channel number.
1256:Generated_Source\PSoC4/ADC_1.c **** *
1257:Generated_Source\PSoC4/ADC_1.c **** * \param offset This value is a measured value when the inputs are shorted or
1258:Generated_Source\PSoC4/ADC_1.c **** * connected to the same input voltage.
1259:Generated_Source\PSoC4/ADC_1.c **** *
1260:Generated_Source\PSoC4/ADC_1.c **** * \return None
1261:Generated_Source\PSoC4/ADC_1.c **** *
1262:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1263:Generated_Source\PSoC4/ADC_1.c **** *
1264:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1265:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetOffset(uint32 chan, int16 offset)
1266:Generated_Source\PSoC4/ADC_1.c **** {
 910              		.loc 1 1266 0
 911              		.cfi_startproc
 912              		@ args = 0, pretend = 0, frame = 0
 913              		@ frame_needed = 0, uses_anonymous_args = 0
 914              	.LVL67:
 915 0000 70B5     		push	{r4, r5, r6, lr}
 916              		.cfi_def_cfa_offset 16
 917              		.cfi_offset 4, -16
 918              		.cfi_offset 5, -12
 919              		.cfi_offset 6, -8
 920              		.cfi_offset 14, -4
 921 0002 0500     		movs	r5, r0
 922 0004 0C00     		movs	r4, r1
1267:Generated_Source\PSoC4/ADC_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1268:Generated_Source\PSoC4/ADC_1.c ****     CYASSERT(chan < ADC_1_allConfigs[ADC_1_currentConfig].numChannels);
 923              		.loc 1 1268 0
 924 0006 0C4B     		ldr	r3, .L76
 925 0008 1A68     		ldr	r2, [r3]
 926 000a D300     		lsls	r3, r2, #3
 927 000c 9A1A     		subs	r2, r3, r2
 928 000e D300     		lsls	r3, r2, #3
 929 0010 0A4A     		ldr	r2, .L76+4
 930 0012 D318     		adds	r3, r2, r3
 931 0014 5B68     		ldr	r3, [r3, #4]
 932 0016 8342     		cmp	r3, r0
 933 0018 02D8     		bhi	.L75
 934              		.loc 1 1268 0 is_stmt 0 discriminator 1
 935 001a 0020     		movs	r0, #0
 936              	.LVL68:
 937 001c FFF7FEFF 		bl	CyHalt
 938              	.LVL69:
 939              	.L75:
1269:Generated_Source\PSoC4/ADC_1.c **** 
1270:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_offset[ADC_1_allConfigs[ADC_1_currentConfig].channelBase + chan] = offset;
 940              		.loc 1 1270 0 is_stmt 1
 941 0020 054B     		ldr	r3, .L76
 942 0022 1A68     		ldr	r2, [r3]
 943 0024 D300     		lsls	r3, r2, #3
 944 0026 9B1A     		subs	r3, r3, r2
 945 0028 DA00     		lsls	r2, r3, #3
 946 002a 044B     		ldr	r3, .L76+4
 947 002c D058     		ldr	r0, [r2, r3]
 948 002e 2818     		adds	r0, r5, r0
 949 0030 4000     		lsls	r0, r0, #1
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 41


 950 0032 034B     		ldr	r3, .L76+8
 951 0034 C452     		strh	r4, [r0, r3]
1271:Generated_Source\PSoC4/ADC_1.c ****     return;
1272:Generated_Source\PSoC4/ADC_1.c **** }
 952              		.loc 1 1272 0
 953              		@ sp needed
 954              	.LVL70:
 955 0036 70BD     		pop	{r4, r5, r6, pc}
 956              	.L77:
 957              		.align	2
 958              	.L76:
 959 0038 00000000 		.word	.LANCHOR0
 960 003c 00000000 		.word	ADC_1_allConfigs
 961 0040 00000000 		.word	ADC_1_offset
 962              		.cfi_endproc
 963              	.LFE20:
 964              		.size	ADC_1_SetOffset, .-ADC_1_SetOffset
 965              		.section	.text.ADC_1_SetGain,"ax",%progbits
 966              		.align	2
 967              		.global	ADC_1_SetGain
 968              		.code	16
 969              		.thumb_func
 970              		.type	ADC_1_SetGain, %function
 971              	ADC_1_SetGain:
 972              	.LFB21:
1273:Generated_Source\PSoC4/ADC_1.c **** 
1274:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1275:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetGain
1276:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1277:Generated_Source\PSoC4/ADC_1.c **** *
1278:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets the ADC_1 gain in counts per 10 volt for the voltage
1279:Generated_Source\PSoC4/ADC_1.c **** * conversion functions. This value is set by default by the reference and
1280:Generated_Source\PSoC4/ADC_1.c **** * input range settings. Gain is applied after offset and unit scaling.  All
1281:Generated_Source\PSoC4/ADC_1.c **** * CountsTo_[mV, uV, V]olts() functions use the following equation:
1282:Generated_Source\PSoC4/ADC_1.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1283:Generated_Source\PSoC4/ADC_1.c **** * See CountsTo_Volts() for more about this formula.
1284:Generated_Source\PSoC4/ADC_1.c **** *
1285:Generated_Source\PSoC4/ADC_1.c **** * To set channel 0's gain based on known V_ref_mV, use:
1286:Generated_Source\PSoC4/ADC_1.c **** *     ADC_1_SetGain(0uL, 10000 * (1uL << (Resolution - 1)) / V_ref_mV);
1287:Generated_Source\PSoC4/ADC_1.c **** *
1288:Generated_Source\PSoC4/ADC_1.c **** * \param chan ADC_1 channel number.
1289:Generated_Source\PSoC4/ADC_1.c **** *
1290:Generated_Source\PSoC4/ADC_1.c **** * \param adcGain ADC_1 gain in counts per 10 volt.
1291:Generated_Source\PSoC4/ADC_1.c **** *
1292:Generated_Source\PSoC4/ADC_1.c **** * \return None
1293:Generated_Source\PSoC4/ADC_1.c **** *
1294:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1295:Generated_Source\PSoC4/ADC_1.c **** *
1296:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1297:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetGain(uint32 chan, int32 adcGain)
1298:Generated_Source\PSoC4/ADC_1.c **** {
 973              		.loc 1 1298 0
 974              		.cfi_startproc
 975              		@ args = 0, pretend = 0, frame = 0
 976              		@ frame_needed = 0, uses_anonymous_args = 0
 977              	.LVL71:
 978 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 42


 979              		.cfi_def_cfa_offset 16
 980              		.cfi_offset 4, -16
 981              		.cfi_offset 5, -12
 982              		.cfi_offset 6, -8
 983              		.cfi_offset 14, -4
 984 0002 0500     		movs	r5, r0
 985 0004 0C00     		movs	r4, r1
1299:Generated_Source\PSoC4/ADC_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1300:Generated_Source\PSoC4/ADC_1.c ****     CYASSERT(chan < ADC_1_allConfigs[ADC_1_currentConfig].numChannels);
 986              		.loc 1 1300 0
 987 0006 0C4B     		ldr	r3, .L80
 988 0008 1A68     		ldr	r2, [r3]
 989 000a D300     		lsls	r3, r2, #3
 990 000c 9A1A     		subs	r2, r3, r2
 991 000e D300     		lsls	r3, r2, #3
 992 0010 0A4A     		ldr	r2, .L80+4
 993 0012 D318     		adds	r3, r2, r3
 994 0014 5B68     		ldr	r3, [r3, #4]
 995 0016 8342     		cmp	r3, r0
 996 0018 02D8     		bhi	.L79
 997              		.loc 1 1300 0 is_stmt 0 discriminator 1
 998 001a 0020     		movs	r0, #0
 999              	.LVL72:
 1000 001c FFF7FEFF 		bl	CyHalt
 1001              	.LVL73:
 1002              	.L79:
1301:Generated_Source\PSoC4/ADC_1.c **** 
1302:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_countsPer10Volt[ADC_1_allConfigs[ADC_1_currentConfig].channelBase + chan]
 1003              		.loc 1 1302 0 is_stmt 1
 1004 0020 054B     		ldr	r3, .L80
 1005 0022 1A68     		ldr	r2, [r3]
 1006 0024 D300     		lsls	r3, r2, #3
 1007 0026 9B1A     		subs	r3, r3, r2
 1008 0028 DA00     		lsls	r2, r3, #3
 1009 002a 044B     		ldr	r3, .L80+4
 1010 002c D058     		ldr	r0, [r2, r3]
 1011 002e 2818     		adds	r0, r5, r0
1303:Generated_Source\PSoC4/ADC_1.c ****     = adcGain;
 1012              		.loc 1 1303 0
 1013 0030 8000     		lsls	r0, r0, #2
 1014 0032 034B     		ldr	r3, .L80+8
 1015 0034 C450     		str	r4, [r0, r3]
1304:Generated_Source\PSoC4/ADC_1.c ****     return;
1305:Generated_Source\PSoC4/ADC_1.c **** }
 1016              		.loc 1 1305 0
 1017              		@ sp needed
 1018              	.LVL74:
 1019              	.LVL75:
 1020 0036 70BD     		pop	{r4, r5, r6, pc}
 1021              	.L81:
 1022              		.align	2
 1023              	.L80:
 1024 0038 00000000 		.word	.LANCHOR0
 1025 003c 00000000 		.word	ADC_1_allConfigs
 1026 0040 00000000 		.word	ADC_1_countsPer10Volt
 1027              		.cfi_endproc
 1028              	.LFE21:
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 43


 1029              		.size	ADC_1_SetGain, .-ADC_1_SetGain
 1030              		.global	__aeabi_uidiv
 1031              		.global	__aeabi_idiv
 1032              		.section	.text.ADC_1_RawCounts2Counts,"ax",%progbits
 1033              		.align	2
 1034              		.global	ADC_1_RawCounts2Counts
 1035              		.code	16
 1036              		.thumb_func
 1037              		.type	ADC_1_RawCounts2Counts, %function
 1038              	ADC_1_RawCounts2Counts:
 1039              	.LFB22:
1306:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1307:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_RawCounts2Counts
1308:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1309:Generated_Source\PSoC4/ADC_1.c **** *
1310:Generated_Source\PSoC4/ADC_1.c **** * \brief Converts the output of the SAR to an idealized count value.
1311:Generated_Source\PSoC4/ADC_1.c **** *
1312:Generated_Source\PSoC4/ADC_1.c **** * Divides by averaging amount, if needed, and subtracts offset.
1313:Generated_Source\PSoC4/ADC_1.c **** *
1314:Generated_Source\PSoC4/ADC_1.c **** * \param chan ADC_1 channel number.
1315:Generated_Source\PSoC4/ADC_1.c **** *
1316:Generated_Source\PSoC4/ADC_1.c **** * \param adcCounts Result from the ADC_1 conversion.
1317:Generated_Source\PSoC4/ADC_1.c **** *
1318:Generated_Source\PSoC4/ADC_1.c **** * \return Averaged and offset counts.
1319:Generated_Source\PSoC4/ADC_1.c **** *
1320:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1321:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1322:Generated_Source\PSoC4/ADC_1.c **** int16 ADC_1_RawCounts2Counts(uint32 chan, int16 adcCounts)
1323:Generated_Source\PSoC4/ADC_1.c **** {
 1040              		.loc 1 1323 0
 1041              		.cfi_startproc
 1042              		@ args = 0, pretend = 0, frame = 0
 1043              		@ frame_needed = 0, uses_anonymous_args = 0
 1044              	.LVL76:
 1045 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1046              		.cfi_def_cfa_offset 24
 1047              		.cfi_offset 3, -24
 1048              		.cfi_offset 4, -20
 1049              		.cfi_offset 5, -16
 1050              		.cfi_offset 6, -12
 1051              		.cfi_offset 7, -8
 1052              		.cfi_offset 14, -4
 1053 0002 0600     		movs	r6, r0
 1054 0004 0C00     		movs	r4, r1
1324:Generated_Source\PSoC4/ADC_1.c ****     uint32 temp;
1325:Generated_Source\PSoC4/ADC_1.c ****     uint32 averageAdcSamplesDiv;
1326:Generated_Source\PSoC4/ADC_1.c ****     uint32 rawChannel;
1327:Generated_Source\PSoC4/ADC_1.c ****     rawChannel = ADC_1_allConfigs[ADC_1_currentConfig].channelBase + chan;
 1055              		.loc 1 1327 0
 1056 0006 1D4B     		ldr	r3, .L88
 1057 0008 1968     		ldr	r1, [r3]
 1058              	.LVL77:
 1059 000a 1D48     		ldr	r0, .L88+4
 1060              	.LVL78:
 1061 000c CB00     		lsls	r3, r1, #3
 1062 000e 5D1A     		subs	r5, r3, r1
 1063 0010 EA00     		lsls	r2, r5, #3
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 44


 1064 0012 1558     		ldr	r5, [r2, r0]
 1065 0014 AD19     		adds	r5, r5, r6
 1066              	.LVL79:
1328:Generated_Source\PSoC4/ADC_1.c **** 
1329:Generated_Source\PSoC4/ADC_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1330:Generated_Source\PSoC4/ADC_1.c ****     CYASSERT(chan < ADC_1_allConfigs[ADC_1_currentConfig].numChannels);
 1067              		.loc 1 1330 0
 1068 0016 8218     		adds	r2, r0, r2
 1069 0018 5368     		ldr	r3, [r2, #4]
 1070 001a 9E42     		cmp	r6, r3
 1071 001c 02D3     		bcc	.L83
 1072              		.loc 1 1330 0 is_stmt 0 discriminator 1
 1073 001e 0020     		movs	r0, #0
 1074 0020 FFF7FEFF 		bl	CyHalt
 1075              	.LVL80:
 1076              	.L83:
1331:Generated_Source\PSoC4/ADC_1.c **** 
1332:Generated_Source\PSoC4/ADC_1.c ****     /* Divide the adcCount when accumulate averaging mode selected */
1333:Generated_Source\PSoC4/ADC_1.c ****     /* If Average mode != fixed */
1334:Generated_Source\PSoC4/ADC_1.c ****     if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
 1077              		.loc 1 1334 0 is_stmt 1
 1078 0024 154B     		ldr	r3, .L88
 1079 0026 1A68     		ldr	r2, [r3]
 1080 0028 D300     		lsls	r3, r2, #3
 1081 002a 9A1A     		subs	r2, r3, r2
 1082 002c D300     		lsls	r3, r2, #3
 1083 002e 144A     		ldr	r2, .L88+4
 1084 0030 D318     		adds	r3, r2, r3
 1085 0032 DA68     		ldr	r2, [r3, #12]
 1086 0034 1306     		lsls	r3, r2, #24
 1087 0036 1AD4     		bmi	.L84
1335:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_SAR_SAMPLE_CTRL_AVG_SHIFT_MSK)
1336:Generated_Source\PSoC4/ADC_1.c ****         != ADC_1_SAR_SAMPLE_CTRL_AVG_SHIFT_MSK)
1337:Generated_Source\PSoC4/ADC_1.c ****     {
1338:Generated_Source\PSoC4/ADC_1.c ****         /* If Channel uses averaging */
1339:Generated_Source\PSoC4/ADC_1.c ****         if((ADC_1_channelsConfig[rawChannel] & ADC_1_SAR_CHAN_CONFIG_AVG_EN_MSK) != 0u)
1340:Generated_Source\PSoC4/ADC_1.c ****         {
1341:Generated_Source\PSoC4/ADC_1.c ****             /* Divide by 2^(AVG_CNT + 1) */
1342:Generated_Source\PSoC4/ADC_1.c ****             averageAdcSamplesDiv = ((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
1343:Generated_Source\PSoC4/ADC_1.c ****                 & ADC_1_SAR_SAMPLE_CTRL_AVG_CNT_MSK)
1344:Generated_Source\PSoC4/ADC_1.c ****                 >> ADC_1_SAR_SAMPLE_CTRL_AVG_CNT_SHFT);
 1088              		.loc 1 1344 0
 1089 0038 1309     		lsrs	r3, r2, #4
1342:Generated_Source\PSoC4/ADC_1.c ****                 & ADC_1_SAR_SAMPLE_CTRL_AVG_CNT_MSK)
 1090              		.loc 1 1342 0
 1091 003a 0721     		movs	r1, #7
 1092 003c 0B40     		ands	r3, r1
 1093              	.LVL81:
1345:Generated_Source\PSoC4/ADC_1.c ****             averageAdcSamplesDiv = (1uL << (averageAdcSamplesDiv + 1uL));
 1094              		.loc 1 1345 0
 1095 003e 0133     		adds	r3, r3, #1
 1096              	.LVL82:
 1097 0040 0127     		movs	r7, #1
 1098 0042 9F40     		lsls	r7, r7, r3
 1099              	.LVL83:
1346:Generated_Source\PSoC4/ADC_1.c ****                         /* When it's "Sequential, Sum", divider limit is 16 */
1347:Generated_Source\PSoC4/ADC_1.c ****             /* If Mode is ACCUNDUMP */
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 45


1348:Generated_Source\PSoC4/ADC_1.c ****             if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
 1100              		.loc 1 1348 0
 1101 0044 D305     		lsls	r3, r2, #23
 1102 0046 02D4     		bmi	.L85
1349:Generated_Source\PSoC4/ADC_1.c ****                 & ADC_1_SAR_SAMPLE_CTRL_AVG_MODE_MSK)
1350:Generated_Source\PSoC4/ADC_1.c ****                 != ADC_1_SAR_SAMPLE_CTRL_AVG_MODE_MSK)
1351:Generated_Source\PSoC4/ADC_1.c ****             {
1352:Generated_Source\PSoC4/ADC_1.c ****                 if (averageAdcSamplesDiv > 16uL)
 1103              		.loc 1 1352 0
 1104 0048 102F     		cmp	r7, #16
 1105 004a 00D9     		bls	.L85
1353:Generated_Source\PSoC4/ADC_1.c ****                 {
1354:Generated_Source\PSoC4/ADC_1.c ****                     averageAdcSamplesDiv = 16uL;
 1106              		.loc 1 1354 0
 1107 004c 1027     		movs	r7, #16
 1108              	.LVL84:
 1109              	.L85:
1355:Generated_Source\PSoC4/ADC_1.c ****                 }
1356:Generated_Source\PSoC4/ADC_1.c ****             }
1357:Generated_Source\PSoC4/ADC_1.c ****             /* If unsigned format, prevent sign extension */
1358:Generated_Source\PSoC4/ADC_1.c ****             if(0 == ADC_1_IsChannelSigned(chan))
 1110              		.loc 1 1358 0
 1111 004e 3000     		movs	r0, r6
 1112 0050 FFF7FEFF 		bl	ADC_1_IsChannelSigned
 1113              	.LVL85:
 1114 0054 0028     		cmp	r0, #0
 1115 0056 05D1     		bne	.L86
1359:Generated_Source\PSoC4/ADC_1.c ****             {
1360:Generated_Source\PSoC4/ADC_1.c ****                 temp = ((uint16) adcCounts / averageAdcSamplesDiv);
 1116              		.loc 1 1360 0
 1117 0058 A0B2     		uxth	r0, r4
 1118 005a 3900     		movs	r1, r7
 1119 005c FFF7FEFF 		bl	__aeabi_uidiv
 1120              	.LVL86:
1361:Generated_Source\PSoC4/ADC_1.c ****                 adcCounts = (int16) temp;
 1121              		.loc 1 1361 0
 1122 0060 04B2     		sxth	r4, r0
 1123              	.LVL87:
 1124 0062 04E0     		b	.L84
 1125              	.LVL88:
 1126              	.L86:
1362:Generated_Source\PSoC4/ADC_1.c ****             }
1363:Generated_Source\PSoC4/ADC_1.c ****             else
1364:Generated_Source\PSoC4/ADC_1.c ****             {
1365:Generated_Source\PSoC4/ADC_1.c ****                 adcCounts /= (int16) averageAdcSamplesDiv;
 1127              		.loc 1 1365 0
 1128 0064 39B2     		sxth	r1, r7
 1129 0066 2000     		movs	r0, r4
 1130 0068 FFF7FEFF 		bl	__aeabi_idiv
 1131              	.LVL89:
 1132 006c 04B2     		sxth	r4, r0
 1133              	.LVL90:
 1134              	.L84:
1366:Generated_Source\PSoC4/ADC_1.c ****             }
1367:Generated_Source\PSoC4/ADC_1.c ****         }
1368:Generated_Source\PSoC4/ADC_1.c ****     }
1369:Generated_Source\PSoC4/ADC_1.c ****     /* Subtract ADC offset */
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 46


1370:Generated_Source\PSoC4/ADC_1.c ****     adcCounts -= ADC_1_offset[rawChannel];
 1135              		.loc 1 1370 0
 1136 006e 6D00     		lsls	r5, r5, #1
 1137              	.LVL91:
 1138 0070 044B     		ldr	r3, .L88+8
 1139 0072 E85A     		ldrh	r0, [r5, r3]
 1140 0074 00B2     		sxth	r0, r0
 1141 0076 201A     		subs	r0, r4, r0
 1142 0078 00B2     		sxth	r0, r0
 1143              	.LVL92:
1371:Generated_Source\PSoC4/ADC_1.c ****     return adcCounts;
1372:Generated_Source\PSoC4/ADC_1.c **** }
 1144              		.loc 1 1372 0
 1145              		@ sp needed
 1146              	.LVL93:
 1147 007a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1148              	.L89:
 1149              		.align	2
 1150              	.L88:
 1151 007c 00000000 		.word	.LANCHOR0
 1152 0080 00000000 		.word	ADC_1_allConfigs
 1153 0084 00000000 		.word	ADC_1_offset
 1154              		.cfi_endproc
 1155              	.LFE22:
 1156              		.size	ADC_1_RawCounts2Counts, .-ADC_1_RawCounts2Counts
 1157              		.global	__aeabi_i2f
 1158              		.global	__aeabi_fmul
 1159              		.global	__aeabi_fdiv
 1160              		.section	.text.ADC_1_CountsTo_Volts,"ax",%progbits
 1161              		.align	2
 1162              		.global	ADC_1_CountsTo_Volts
 1163              		.code	16
 1164              		.thumb_func
 1165              		.type	ADC_1_CountsTo_Volts, %function
 1166              	ADC_1_CountsTo_Volts:
 1167              	.LFB23:
1373:Generated_Source\PSoC4/ADC_1.c **** 
1374:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1375:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_CountsTo_Volts
1376:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1377:Generated_Source\PSoC4/ADC_1.c **** *
1378:Generated_Source\PSoC4/ADC_1.c **** * \brief Converts the ADC output to Volts as a float32. For example, if the ADC
1379:Generated_Source\PSoC4/ADC_1.c **** * measured 0.534 volts, the return value would be 0.534.
1380:Generated_Source\PSoC4/ADC_1.c **** * The calculation of voltage depends on the contents of ADC_1_offset[],
1381:Generated_Source\PSoC4/ADC_1.c **** * ADC_1_countsPer10Volt[], and other parameters.  The equation used is:
1382:Generated_Source\PSoC4/ADC_1.c **** *
1383:Generated_Source\PSoC4/ADC_1.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1384:Generated_Source\PSoC4/ADC_1.c **** * -Counts = Raw Counts from SAR register
1385:Generated_Source\PSoC4/ADC_1.c **** * -AvgDivider = divider based on averaging mode
1386:Generated_Source\PSoC4/ADC_1.c **** *     -Sequential, Sum: AvgDivider = number averaged
1387:Generated_Source\PSoC4/ADC_1.c **** *         Note: The divider should be a maximum of 16. If using more averages,
1388:Generated_Source\PSoC4/ADC_1.c **** *         pre-scale Counts by (number averaged / 16)
1389:Generated_Source\PSoC4/ADC_1.c **** *     -Interleaved, Sum: AvgDivider = number averaged
1390:Generated_Source\PSoC4/ADC_1.c **** *     -Sequential, Fixed: AvgDivider = 1
1391:Generated_Source\PSoC4/ADC_1.c **** * -Offset = ADC_1_offset[]
1392:Generated_Source\PSoC4/ADC_1.c **** * -TEN_VOLT = 10V constant and unit scalar.
1393:Generated_Source\PSoC4/ADC_1.c **** * -Gain = ADC_1_countsPer10Volt[]
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 47


1394:Generated_Source\PSoC4/ADC_1.c **** *
1395:Generated_Source\PSoC4/ADC_1.c **** * When the Vref is based on Vdda, the value used for Vdda is set for the project
1396:Generated_Source\PSoC4/ADC_1.c **** * in the System tab of the DWR.
1397:Generated_Source\PSoC4/ADC_1.c **** *
1398:Generated_Source\PSoC4/ADC_1.c **** * \param chan ADC_1 channel number.
1399:Generated_Source\PSoC4/ADC_1.c **** *
1400:Generated_Source\PSoC4/ADC_1.c **** * \param adcCounts Result from the ADC_1 conversion.
1401:Generated_Source\PSoC4/ADC_1.c **** *
1402:Generated_Source\PSoC4/ADC_1.c **** * \return Result in Volts.
1403:Generated_Source\PSoC4/ADC_1.c **** *
1404:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1405:Generated_Source\PSoC4/ADC_1.c **** *
1406:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1407:Generated_Source\PSoC4/ADC_1.c **** float32 ADC_1_CountsTo_Volts(uint32 chan, int16 adcCounts)
1408:Generated_Source\PSoC4/ADC_1.c **** {
 1168              		.loc 1 1408 0
 1169              		.cfi_startproc
 1170              		@ args = 0, pretend = 0, frame = 0
 1171              		@ frame_needed = 0, uses_anonymous_args = 0
 1172              	.LVL94:
 1173 0000 70B5     		push	{r4, r5, r6, lr}
 1174              		.cfi_def_cfa_offset 16
 1175              		.cfi_offset 4, -16
 1176              		.cfi_offset 5, -12
 1177              		.cfi_offset 6, -8
 1178              		.cfi_offset 14, -4
 1179              	.LVL95:
1409:Generated_Source\PSoC4/ADC_1.c ****     float32 result_Volts = 0.0f;
1410:Generated_Source\PSoC4/ADC_1.c ****     uint32 rawChannel;
1411:Generated_Source\PSoC4/ADC_1.c ****     rawChannel = ADC_1_allConfigs[ADC_1_currentConfig].channelBase + chan;
 1180              		.loc 1 1411 0
 1181 0002 104B     		ldr	r3, .L93
 1182 0004 1D68     		ldr	r5, [r3]
 1183 0006 104E     		ldr	r6, .L93+4
 1184 0008 EB00     		lsls	r3, r5, #3
 1185 000a 5C1B     		subs	r4, r3, r5
 1186 000c E200     		lsls	r2, r4, #3
 1187 000e 9459     		ldr	r4, [r2, r6]
 1188 0010 2418     		adds	r4, r4, r0
 1189              	.LVL96:
1412:Generated_Source\PSoC4/ADC_1.c **** 
1413:Generated_Source\PSoC4/ADC_1.c ****     if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
 1190              		.loc 1 1413 0
 1191 0012 B218     		adds	r2, r6, r2
 1192 0014 D368     		ldr	r3, [r2, #12]
 1193 0016 9B07     		lsls	r3, r3, #30
 1194 0018 11D4     		bmi	.L92
1414:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1415:Generated_Source\PSoC4/ADC_1.c ****         != ADC_1_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1416:Generated_Source\PSoC4/ADC_1.c ****     {
1417:Generated_Source\PSoC4/ADC_1.c ****         adcCounts = ADC_1_RawCounts2Counts(chan, adcCounts);
 1195              		.loc 1 1417 0
 1196 001a FFF7FEFF 		bl	ADC_1_RawCounts2Counts
 1197              	.LVL97:
1418:Generated_Source\PSoC4/ADC_1.c **** 
1419:Generated_Source\PSoC4/ADC_1.c ****         result_Volts = ((float32)adcCounts * ADC_1_10V_COUNTS)
 1198              		.loc 1 1419 0
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 48


 1199 001e FFF7FEFF 		bl	__aeabi_i2f
 1200              	.LVL98:
 1201 0022 0A49     		ldr	r1, .L93+8
 1202 0024 FFF7FEFF 		bl	__aeabi_fmul
 1203              	.LVL99:
 1204 0028 051C     		adds	r5, r0, #0
1420:Generated_Source\PSoC4/ADC_1.c ****             / (float32)ADC_1_countsPer10Volt[rawChannel];
 1205              		.loc 1 1420 0
 1206 002a A400     		lsls	r4, r4, #2
 1207              	.LVL100:
 1208 002c 084B     		ldr	r3, .L93+12
 1209 002e E058     		ldr	r0, [r4, r3]
 1210 0030 FFF7FEFF 		bl	__aeabi_i2f
 1211              	.LVL101:
 1212 0034 011C     		adds	r1, r0, #0
1419:Generated_Source\PSoC4/ADC_1.c ****             / (float32)ADC_1_countsPer10Volt[rawChannel];
 1213              		.loc 1 1419 0
 1214 0036 281C     		adds	r0, r5, #0
 1215 0038 FFF7FEFF 		bl	__aeabi_fdiv
 1216              	.LVL102:
 1217 003c 00E0     		b	.L91
 1218              	.LVL103:
 1219              	.L92:
1409:Generated_Source\PSoC4/ADC_1.c ****     uint32 rawChannel;
 1220              		.loc 1 1409 0
 1221 003e 0020     		movs	r0, #0
 1222              	.LVL104:
 1223              	.L91:
1421:Generated_Source\PSoC4/ADC_1.c ****     }
1422:Generated_Source\PSoC4/ADC_1.c ****     return result_Volts;
1423:Generated_Source\PSoC4/ADC_1.c **** }
 1224              		.loc 1 1423 0
 1225              		@ sp needed
 1226 0040 70BD     		pop	{r4, r5, r6, pc}
 1227              	.L94:
 1228 0042 C046     		.align	2
 1229              	.L93:
 1230 0044 00000000 		.word	.LANCHOR0
 1231 0048 00000000 		.word	ADC_1_allConfigs
 1232 004c 00002041 		.word	1092616192
 1233 0050 00000000 		.word	ADC_1_countsPer10Volt
 1234              		.cfi_endproc
 1235              	.LFE23:
 1236              		.size	ADC_1_CountsTo_Volts, .-ADC_1_CountsTo_Volts
 1237              		.section	.text.ADC_1_CountsTo_mVolts,"ax",%progbits
 1238              		.align	2
 1239              		.global	ADC_1_CountsTo_mVolts
 1240              		.code	16
 1241              		.thumb_func
 1242              		.type	ADC_1_CountsTo_mVolts, %function
 1243              	ADC_1_CountsTo_mVolts:
 1244              	.LFB24:
1424:Generated_Source\PSoC4/ADC_1.c **** 
1425:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1426:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_CountsTo_mVolts
1427:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1428:Generated_Source\PSoC4/ADC_1.c **** *
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 49


1429:Generated_Source\PSoC4/ADC_1.c **** * \brief Converts the ADC output to millivolts as an int16. For example, if the ADC
1430:Generated_Source\PSoC4/ADC_1.c **** * measured 0.534 volts, the return value would be 534.
1431:Generated_Source\PSoC4/ADC_1.c **** * The calculation of voltage depends on the contents of ADC_1_offset[],
1432:Generated_Source\PSoC4/ADC_1.c **** * ADC_1_countsPer10Volt[], and other parameters.  The equation used is:
1433:Generated_Source\PSoC4/ADC_1.c **** *
1434:Generated_Source\PSoC4/ADC_1.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1435:Generated_Source\PSoC4/ADC_1.c **** * -Counts = Raw Counts from SAR register
1436:Generated_Source\PSoC4/ADC_1.c **** * -AvgDivider = divider based on averaging mode
1437:Generated_Source\PSoC4/ADC_1.c **** *     -Sequential, Sum: AvgDivider = number averaged
1438:Generated_Source\PSoC4/ADC_1.c **** *         Note: The divider should be a maximum of 16. If using more averages,
1439:Generated_Source\PSoC4/ADC_1.c **** *         pre-scale Counts by (number averaged / 16)
1440:Generated_Source\PSoC4/ADC_1.c **** *     -Interleaved, Sum: AvgDivider = number averaged
1441:Generated_Source\PSoC4/ADC_1.c **** *     -Sequential, Fixed: AvgDivider = 1
1442:Generated_Source\PSoC4/ADC_1.c **** * -Offset = ADC_1_offset[]
1443:Generated_Source\PSoC4/ADC_1.c **** * -TEN_VOLT = 10V constant and unit scalar.
1444:Generated_Source\PSoC4/ADC_1.c **** * -Gain = ADC_1_countsPer10Volt[]
1445:Generated_Source\PSoC4/ADC_1.c **** *
1446:Generated_Source\PSoC4/ADC_1.c **** * When the Vref is based on Vdda, the value used for Vdda is set for the project
1447:Generated_Source\PSoC4/ADC_1.c **** * in the System tab of the DWR.
1448:Generated_Source\PSoC4/ADC_1.c **** *
1449:Generated_Source\PSoC4/ADC_1.c **** * \param chan ADC_1 channel number.
1450:Generated_Source\PSoC4/ADC_1.c **** *
1451:Generated_Source\PSoC4/ADC_1.c **** * \param adcCounts Result from the ADC_1 conversion.
1452:Generated_Source\PSoC4/ADC_1.c **** *
1453:Generated_Source\PSoC4/ADC_1.c **** * \return Result in mV.
1454:Generated_Source\PSoC4/ADC_1.c **** *
1455:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None.
1456:Generated_Source\PSoC4/ADC_1.c **** *
1457:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1458:Generated_Source\PSoC4/ADC_1.c **** int16 ADC_1_CountsTo_mVolts(uint32 chan, int16 adcCounts)
1459:Generated_Source\PSoC4/ADC_1.c **** {
 1245              		.loc 1 1459 0
 1246              		.cfi_startproc
 1247              		@ args = 0, pretend = 0, frame = 0
 1248              		@ frame_needed = 0, uses_anonymous_args = 0
 1249              	.LVL105:
 1250 0000 70B5     		push	{r4, r5, r6, lr}
 1251              		.cfi_def_cfa_offset 16
 1252              		.cfi_offset 4, -16
 1253              		.cfi_offset 5, -12
 1254              		.cfi_offset 6, -8
 1255              		.cfi_offset 14, -4
 1256              	.LVL106:
1460:Generated_Source\PSoC4/ADC_1.c ****     int16 result_mVolts = 0;
1461:Generated_Source\PSoC4/ADC_1.c ****     uint32 rawChannel;
1462:Generated_Source\PSoC4/ADC_1.c **** 
1463:Generated_Source\PSoC4/ADC_1.c ****     rawChannel = ADC_1_allConfigs[ADC_1_currentConfig].channelBase + chan;
 1257              		.loc 1 1463 0
 1258 0002 154B     		ldr	r3, .L100
 1259 0004 1D68     		ldr	r5, [r3]
 1260 0006 154E     		ldr	r6, .L100+4
 1261 0008 EB00     		lsls	r3, r5, #3
 1262 000a 5C1B     		subs	r4, r3, r5
 1263 000c E200     		lsls	r2, r4, #3
 1264 000e 9459     		ldr	r4, [r2, r6]
 1265 0010 2418     		adds	r4, r4, r0
 1266              	.LVL107:
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 50


1464:Generated_Source\PSoC4/ADC_1.c **** 
1465:Generated_Source\PSoC4/ADC_1.c ****     if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
 1267              		.loc 1 1465 0
 1268 0012 B218     		adds	r2, r6, r2
 1269 0014 D368     		ldr	r3, [r2, #12]
 1270 0016 9B07     		lsls	r3, r3, #30
 1271 0018 1BD4     		bmi	.L99
1466:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1467:Generated_Source\PSoC4/ADC_1.c ****         != ADC_1_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1468:Generated_Source\PSoC4/ADC_1.c ****     {
1469:Generated_Source\PSoC4/ADC_1.c ****         adcCounts = ADC_1_RawCounts2Counts(chan, adcCounts);
 1272              		.loc 1 1469 0
 1273 001a FFF7FEFF 		bl	ADC_1_RawCounts2Counts
 1274              	.LVL108:
1470:Generated_Source\PSoC4/ADC_1.c **** 
1471:Generated_Source\PSoC4/ADC_1.c ****         result_mVolts = (int16)((((int32)adcCounts * ADC_1_10MV_COUNTS) + ( (adcCounts > 0) ?
 1275              		.loc 1 1471 0
 1276 001e 1049     		ldr	r1, .L100+8
 1277 0020 4143     		muls	r1, r0
1472:Generated_Source\PSoC4/ADC_1.c ****                  (ADC_1_countsPer10Volt[rawChannel] / 2)
1473:Generated_Source\PSoC4/ADC_1.c ****                 : (-(ADC_1_countsPer10Volt[rawChannel] / 2)) ))
 1278              		.loc 1 1473 0
 1279 0022 0028     		cmp	r0, #0
 1280 0024 06DD     		ble	.L97
1472:Generated_Source\PSoC4/ADC_1.c ****                  (ADC_1_countsPer10Volt[rawChannel] / 2)
 1281              		.loc 1 1472 0 discriminator 1
 1282 0026 A300     		lsls	r3, r4, #2
 1283 0028 0E4A     		ldr	r2, .L100+12
 1284 002a 9B58     		ldr	r3, [r3, r2]
 1285              		.loc 1 1473 0 discriminator 1
 1286 002c D80F     		lsrs	r0, r3, #31
 1287              	.LVL109:
 1288 002e C318     		adds	r3, r0, r3
 1289 0030 5B10     		asrs	r3, r3, #1
 1290 0032 06E0     		b	.L98
 1291              	.LVL110:
 1292              	.L97:
 1293              		.loc 1 1473 0 is_stmt 0 discriminator 2
 1294 0034 A300     		lsls	r3, r4, #2
 1295 0036 0B4A     		ldr	r2, .L100+12
 1296 0038 9A58     		ldr	r2, [r3, r2]
 1297 003a D30F     		lsrs	r3, r2, #31
 1298 003c 9A18     		adds	r2, r3, r2
 1299 003e 5210     		asrs	r2, r2, #1
 1300 0040 5342     		rsbs	r3, r2, #0
 1301              	.LVL111:
 1302              	.L98:
1471:Generated_Source\PSoC4/ADC_1.c ****                  (ADC_1_countsPer10Volt[rawChannel] / 2)
 1303              		.loc 1 1471 0 is_stmt 1
 1304 0042 5818     		adds	r0, r3, r1
1474:Generated_Source\PSoC4/ADC_1.c ****                  / ADC_1_countsPer10Volt[rawChannel]);
 1305              		.loc 1 1474 0
 1306 0044 A400     		lsls	r4, r4, #2
 1307              	.LVL112:
 1308 0046 074B     		ldr	r3, .L100+12
 1309 0048 E158     		ldr	r1, [r4, r3]
 1310 004a FFF7FEFF 		bl	__aeabi_idiv
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 51


 1311              	.LVL113:
1471:Generated_Source\PSoC4/ADC_1.c ****                  (ADC_1_countsPer10Volt[rawChannel] / 2)
 1312              		.loc 1 1471 0
 1313 004e 00B2     		sxth	r0, r0
 1314              	.LVL114:
 1315 0050 00E0     		b	.L96
 1316              	.LVL115:
 1317              	.L99:
1460:Generated_Source\PSoC4/ADC_1.c ****     uint32 rawChannel;
 1318              		.loc 1 1460 0
 1319 0052 0020     		movs	r0, #0
 1320              	.LVL116:
 1321              	.L96:
1475:Generated_Source\PSoC4/ADC_1.c ****     }
1476:Generated_Source\PSoC4/ADC_1.c ****     return result_mVolts;
1477:Generated_Source\PSoC4/ADC_1.c **** }
 1322              		.loc 1 1477 0
 1323              		@ sp needed
 1324              	.LVL117:
 1325 0054 70BD     		pop	{r4, r5, r6, pc}
 1326              	.L101:
 1327 0056 C046     		.align	2
 1328              	.L100:
 1329 0058 00000000 		.word	.LANCHOR0
 1330 005c 00000000 		.word	ADC_1_allConfigs
 1331 0060 10270000 		.word	10000
 1332 0064 00000000 		.word	ADC_1_countsPer10Volt
 1333              		.cfi_endproc
 1334              	.LFE24:
 1335              		.size	ADC_1_CountsTo_mVolts, .-ADC_1_CountsTo_mVolts
 1336              		.global	__aeabi_lmul
 1337              		.global	__aeabi_ldivmod
 1338              		.section	.text.ADC_1_CountsTo_uVolts,"ax",%progbits
 1339              		.align	2
 1340              		.global	ADC_1_CountsTo_uVolts
 1341              		.code	16
 1342              		.thumb_func
 1343              		.type	ADC_1_CountsTo_uVolts, %function
 1344              	ADC_1_CountsTo_uVolts:
 1345              	.LFB25:
1478:Generated_Source\PSoC4/ADC_1.c **** 
1479:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1480:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_CountsTo_uVolts
1481:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1482:Generated_Source\PSoC4/ADC_1.c **** *
1483:Generated_Source\PSoC4/ADC_1.c **** * \brief Converts the ADC output to microvolts as an int32. For example, if the ADC
1484:Generated_Source\PSoC4/ADC_1.c **** * measured 0.534 volts, the return value would be 534000.
1485:Generated_Source\PSoC4/ADC_1.c **** * The calculation of voltage depends on the contents of ADC_1_offset[],
1486:Generated_Source\PSoC4/ADC_1.c **** * ADC_1_countsPer10Volt[], and other parameters.  The equation used is:
1487:Generated_Source\PSoC4/ADC_1.c **** *
1488:Generated_Source\PSoC4/ADC_1.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1489:Generated_Source\PSoC4/ADC_1.c **** * -Counts = Raw Counts from SAR register
1490:Generated_Source\PSoC4/ADC_1.c **** * -AvgDivider = divider based on averaging mode
1491:Generated_Source\PSoC4/ADC_1.c **** *     -Sequential, Sum: AvgDivider = number averaged
1492:Generated_Source\PSoC4/ADC_1.c **** *         Note: The divider should be a maximum of 16. If using more averages,
1493:Generated_Source\PSoC4/ADC_1.c **** *         pre-scale Counts by (number averaged / 16)
1494:Generated_Source\PSoC4/ADC_1.c **** *     -Interleaved, Sum: AvgDivider = number averaged
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 52


1495:Generated_Source\PSoC4/ADC_1.c **** *     -Sequential, Fixed: AvgDivider = 1
1496:Generated_Source\PSoC4/ADC_1.c **** * -Offset = ADC_1_offset[]
1497:Generated_Source\PSoC4/ADC_1.c **** * -TEN_VOLT = 10V constant and unit scalar.
1498:Generated_Source\PSoC4/ADC_1.c **** * -Gain = ADC_1_countsPer10Volt[]
1499:Generated_Source\PSoC4/ADC_1.c **** *
1500:Generated_Source\PSoC4/ADC_1.c **** * When the Vref is based on Vdda, the value used for Vdda is set for the project
1501:Generated_Source\PSoC4/ADC_1.c **** * in the System tab of the DWR.
1502:Generated_Source\PSoC4/ADC_1.c **** *
1503:Generated_Source\PSoC4/ADC_1.c **** * \param chan ADC_1 channel number.
1504:Generated_Source\PSoC4/ADC_1.c **** *
1505:Generated_Source\PSoC4/ADC_1.c **** * \param adcCounts Result from the ADC_1 conversion.
1506:Generated_Source\PSoC4/ADC_1.c **** *
1507:Generated_Source\PSoC4/ADC_1.c **** * \return Result in microvolts.
1508:Generated_Source\PSoC4/ADC_1.c **** *
1509:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1510:Generated_Source\PSoC4/ADC_1.c **** *
1511:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1512:Generated_Source\PSoC4/ADC_1.c **** int32 ADC_1_CountsTo_uVolts(uint32 chan, int16 adcCounts)
1513:Generated_Source\PSoC4/ADC_1.c **** {
 1346              		.loc 1 1513 0
 1347              		.cfi_startproc
 1348              		@ args = 0, pretend = 0, frame = 0
 1349              		@ frame_needed = 0, uses_anonymous_args = 0
 1350              	.LVL118:
 1351 0000 70B5     		push	{r4, r5, r6, lr}
 1352              		.cfi_def_cfa_offset 16
 1353              		.cfi_offset 4, -16
 1354              		.cfi_offset 5, -12
 1355              		.cfi_offset 6, -8
 1356              		.cfi_offset 14, -4
 1357              	.LVL119:
1514:Generated_Source\PSoC4/ADC_1.c ****     int64 result_uVolts = 0;
1515:Generated_Source\PSoC4/ADC_1.c ****     uint32 rawChannel;
1516:Generated_Source\PSoC4/ADC_1.c ****     rawChannel = ADC_1_allConfigs[ADC_1_currentConfig].channelBase + chan;
 1358              		.loc 1 1516 0
 1359 0002 0E4B     		ldr	r3, .L105
 1360 0004 1D68     		ldr	r5, [r3]
 1361 0006 0E4E     		ldr	r6, .L105+4
 1362 0008 EB00     		lsls	r3, r5, #3
 1363 000a 5C1B     		subs	r4, r3, r5
 1364 000c E200     		lsls	r2, r4, #3
 1365 000e 9459     		ldr	r4, [r2, r6]
 1366 0010 2418     		adds	r4, r4, r0
 1367              	.LVL120:
1517:Generated_Source\PSoC4/ADC_1.c **** 
1518:Generated_Source\PSoC4/ADC_1.c ****     if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
 1368              		.loc 1 1518 0
 1369 0012 B218     		adds	r2, r6, r2
 1370 0014 D368     		ldr	r3, [r2, #12]
 1371 0016 9B07     		lsls	r3, r3, #30
 1372 0018 0DD4     		bmi	.L104
1519:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1520:Generated_Source\PSoC4/ADC_1.c ****         != ADC_1_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1521:Generated_Source\PSoC4/ADC_1.c ****     {
1522:Generated_Source\PSoC4/ADC_1.c ****         adcCounts = ADC_1_RawCounts2Counts(chan, adcCounts);
 1373              		.loc 1 1522 0
 1374 001a FFF7FEFF 		bl	ADC_1_RawCounts2Counts
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 53


 1375              	.LVL121:
1523:Generated_Source\PSoC4/ADC_1.c **** 
1524:Generated_Source\PSoC4/ADC_1.c ****         result_uVolts = ((int64)adcCounts * ADC_1_10UV_COUNTS)
 1376              		.loc 1 1524 0
 1377 001e C117     		asrs	r1, r0, #31
 1378 0020 084A     		ldr	r2, .L105+8
 1379 0022 0023     		movs	r3, #0
 1380 0024 FFF7FEFF 		bl	__aeabi_lmul
 1381              	.LVL122:
1525:Generated_Source\PSoC4/ADC_1.c ****             / ADC_1_countsPer10Volt[rawChannel];
 1382              		.loc 1 1525 0
 1383 0028 A400     		lsls	r4, r4, #2
 1384              	.LVL123:
 1385 002a 074B     		ldr	r3, .L105+12
 1386 002c E258     		ldr	r2, [r4, r3]
 1387 002e D317     		asrs	r3, r2, #31
1524:Generated_Source\PSoC4/ADC_1.c ****             / ADC_1_countsPer10Volt[rawChannel];
 1388              		.loc 1 1524 0
 1389 0030 FFF7FEFF 		bl	__aeabi_ldivmod
 1390              	.LVL124:
 1391 0034 00E0     		b	.L103
 1392              	.LVL125:
 1393              	.L104:
1514:Generated_Source\PSoC4/ADC_1.c ****     uint32 rawChannel;
 1394              		.loc 1 1514 0
 1395 0036 0020     		movs	r0, #0
 1396              	.LVL126:
 1397              	.L103:
1526:Generated_Source\PSoC4/ADC_1.c ****     }
1527:Generated_Source\PSoC4/ADC_1.c ****     return ( (int32)result_uVolts );
1528:Generated_Source\PSoC4/ADC_1.c **** }
 1398              		.loc 1 1528 0
 1399              		@ sp needed
 1400              	.LVL127:
 1401 0038 70BD     		pop	{r4, r5, r6, pc}
 1402              	.L106:
 1403 003a C046     		.align	2
 1404              	.L105:
 1405 003c 00000000 		.word	.LANCHOR0
 1406 0040 00000000 		.word	ADC_1_allConfigs
 1407 0044 80969800 		.word	10000000
 1408 0048 00000000 		.word	ADC_1_countsPer10Volt
 1409              		.cfi_endproc
 1410              	.LFE25:
 1411              		.size	ADC_1_CountsTo_uVolts, .-ADC_1_CountsTo_uVolts
 1412              		.section	.text.ADC_1_Init,"ax",%progbits
 1413              		.align	2
 1414              		.global	ADC_1_Init
 1415              		.code	16
 1416              		.thumb_func
 1417              		.type	ADC_1_Init, %function
 1418              	ADC_1_Init:
 1419              	.LFB26:
1529:Generated_Source\PSoC4/ADC_1.c **** 
1530:Generated_Source\PSoC4/ADC_1.c **** #if(0u != ADC_1_ANY_CONFIG_USES_FILTER)
1531:Generated_Source\PSoC4/ADC_1.c **** 
1532:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 54


1533:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_TrimFilterVos
1534:Generated_Source\PSoC4/ADC_1.c ****     ****************************************************************************//**
1535:Generated_Source\PSoC4/ADC_1.c ****     *
1536:Generated_Source\PSoC4/ADC_1.c ****     * \brief Run an algorithm to reduce voltage offset using the UAB's opamp and
1537:Generated_Source\PSoC4/ADC_1.c ****     * agnd buffer trim.
1538:Generated_Source\PSoC4/ADC_1.c ****     *
1539:Generated_Source\PSoC4/ADC_1.c ****     * During trimming, the filter inputs are disconnected from the UAB block,
1540:Generated_Source\PSoC4/ADC_1.c ****     * the non-inverting input of both UAB opamps are connected to Agnd,
1541:Generated_Source\PSoC4/ADC_1.c ****     * and SAR is used as a comparator.
1542:Generated_Source\PSoC4/ADC_1.c ****     *
1543:Generated_Source\PSoC4/ADC_1.c ****     * Trimming is done by comparing the filter output with Agnd.
1544:Generated_Source\PSoC4/ADC_1.c ****     * The algorithm steps through the Opamp trim codes first and then the
1545:Generated_Source\PSoC4/ADC_1.c ****     * Agnd trim codes to find where the filter output crosses Agnd.
1546:Generated_Source\PSoC4/ADC_1.c ****     * For each trim code, a blocking delay is used to allow the filter output
1547:Generated_Source\PSoC4/ADC_1.c ****     * to settle before reading the comparator status. This delay is equivalent
1548:Generated_Source\PSoC4/ADC_1.c ****     * to 9 * tau, where tau is the filter time constant:
1549:Generated_Source\PSoC4/ADC_1.c ****     *
1550:Generated_Source\PSoC4/ADC_1.c ****     * tau = 1 / (2 * pi * (Fcorner or Bandwidth))
1551:Generated_Source\PSoC4/ADC_1.c ****     *
1552:Generated_Source\PSoC4/ADC_1.c ****     * The time constant is calculated using the bandwidth for Band pass and
1553:Generated_Source\PSoC4/ADC_1.c ****     * Band stop and the corner frequency for Low pass and High pass.
1554:Generated_Source\PSoC4/ADC_1.c ****     * The algorithm can check up to 40 different trim codes, but it will typically
1555:Generated_Source\PSoC4/ADC_1.c ****     * complete in much less time.
1556:Generated_Source\PSoC4/ADC_1.c ****     *
1557:Generated_Source\PSoC4/ADC_1.c ****     * Once trimming is complete, the UAB is restored to its original configuration.
1558:Generated_Source\PSoC4/ADC_1.c ****     *
1559:Generated_Source\PSoC4/ADC_1.c ****     * \Note
1560:Generated_Source\PSoC4/ADC_1.c ****     * The ADC conversions must be started and Agnd must be supplied to the
1561:Generated_Source\PSoC4/ADC_1.c ****     * component before calling this function.
1562:Generated_Source\PSoC4/ADC_1.c ****     *
1563:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1564:Generated_Source\PSoC4/ADC_1.c ****     void ADC_1_TrimFilterVos(void)
1565:Generated_Source\PSoC4/ADC_1.c ****     {
1566:Generated_Source\PSoC4/ADC_1.c ****         uint32 opampTrim = 0uL;
1567:Generated_Source\PSoC4/ADC_1.c ****         uint32 agndTrim = 0uL;
1568:Generated_Source\PSoC4/ADC_1.c ****         uint32 compStatus = 0uL;
1569:Generated_Source\PSoC4/ADC_1.c **** 
1570:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SetupComparatorTrim();
1571:Generated_Source\PSoC4/ADC_1.c **** 
1572:Generated_Source\PSoC4/ADC_1.c ****         /* Sweep from center to crossing */
1573:Generated_Source\PSoC4/ADC_1.c ****         compStatus = ADC_1_SetOpampAndAgndTrim(ADC_1_OPAMP_TRIM_POS_BASE, ADC_1_AGND_TRIM_POS_BASE)
1574:Generated_Source\PSoC4/ADC_1.c ****         if (0uL == compStatus)
1575:Generated_Source\PSoC4/ADC_1.c ****         {
1576:Generated_Source\PSoC4/ADC_1.c ****             opampTrim = ADC_1_RaiseOpampTrimToCrossing(ADC_1_OPAMP_TRIM_POS_BASE);
1577:Generated_Source\PSoC4/ADC_1.c ****             agndTrim = ADC_1_RaiseAgndTrimToCrossing(ADC_1_AGND_TRIM_POS_BASE);
1578:Generated_Source\PSoC4/ADC_1.c ****             if ((agndTrim == (ADC_1_AGND_TRIM_POS_LIMIT - 1uL))
1579:Generated_Source\PSoC4/ADC_1.c ****                 && (opampTrim != (ADC_1_OPAMP_TRIM_POS_LIMIT - 1uL)))
1580:Generated_Source\PSoC4/ADC_1.c ****             {
1581:Generated_Source\PSoC4/ADC_1.c ****                 opampTrim = ADC_1_IncOpampTrim(opampTrim);
1582:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_SetOpampAndAgndTrim(opampTrim, ADC_1_AGND_TRIM_POS_BASE);
1583:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_LowerAgndTrimToCrossing(ADC_1_AGND_TRIM_POS_BASE);
1584:Generated_Source\PSoC4/ADC_1.c ****             }
1585:Generated_Source\PSoC4/ADC_1.c ****         }
1586:Generated_Source\PSoC4/ADC_1.c ****         else
1587:Generated_Source\PSoC4/ADC_1.c ****         {
1588:Generated_Source\PSoC4/ADC_1.c ****             opampTrim = ADC_1_LowerOpampTrimToCrossing(ADC_1_OPAMP_TRIM_POS_BASE);
1589:Generated_Source\PSoC4/ADC_1.c ****             agndTrim = ADC_1_LowerAgndTrimToCrossing(ADC_1_AGND_TRIM_POS_BASE);
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 55


1590:Generated_Source\PSoC4/ADC_1.c ****             if ((agndTrim == (ADC_1_AGND_TRIM_NEG_LIMIT - 1uL))
1591:Generated_Source\PSoC4/ADC_1.c ****                 && (opampTrim != (ADC_1_OPAMP_TRIM_NEG_LIMIT - 1uL)))
1592:Generated_Source\PSoC4/ADC_1.c ****             {
1593:Generated_Source\PSoC4/ADC_1.c ****                 opampTrim = ADC_1_DecOpampTrim(opampTrim);
1594:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_SetOpampAndAgndTrim(opampTrim, ADC_1_AGND_TRIM_POS_BASE);
1595:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_RaiseAgndTrimToCrossing(ADC_1_AGND_TRIM_POS_BASE);
1596:Generated_Source\PSoC4/ADC_1.c ****             }
1597:Generated_Source\PSoC4/ADC_1.c ****         }
1598:Generated_Source\PSoC4/ADC_1.c **** 
1599:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UndoComparatorTrimSetup();
1600:Generated_Source\PSoC4/ADC_1.c ****     }
1601:Generated_Source\PSoC4/ADC_1.c **** 
1602:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1603:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_SetupComparatorTrim
1604:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1605:Generated_Source\PSoC4/ADC_1.c ****     *
1606:Generated_Source\PSoC4/ADC_1.c ****     * Make proper connections to being trimming the Agnd buffer
1607:Generated_Source\PSoC4/ADC_1.c ****     * and Opamp offset.
1608:Generated_Source\PSoC4/ADC_1.c ****     *
1609:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1610:Generated_Source\PSoC4/ADC_1.c ****     static void ADC_1_SetupComparatorTrim(void)
1611:Generated_Source\PSoC4/ADC_1.c ****     {
1612:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_filterVinMux_Select(ADC_1_FILTER_AMUX_CHANNEL);
1613:Generated_Source\PSoC4/ADC_1.c ****     }
1614:Generated_Source\PSoC4/ADC_1.c **** 
1615:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1616:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_UndoComparatorTrimSetup
1617:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1618:Generated_Source\PSoC4/ADC_1.c ****     *
1619:Generated_Source\PSoC4/ADC_1.c ****     * Undo all changes made in ADC_1_SetupComparatorTrim()
1620:Generated_Source\PSoC4/ADC_1.c ****     * to bring the Component back to normal operation.
1621:Generated_Source\PSoC4/ADC_1.c ****     *
1622:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1623:Generated_Source\PSoC4/ADC_1.c ****     static void ADC_1_UndoComparatorTrimSetup(void)
1624:Generated_Source\PSoC4/ADC_1.c ****     {
1625:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_filterVinMux_Select((uint8)ADC_1_currentConfig);
1626:Generated_Source\PSoC4/ADC_1.c ****     }
1627:Generated_Source\PSoC4/ADC_1.c **** 
1628:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1629:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_RaiseOpampTrimToCrossing
1630:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1631:Generated_Source\PSoC4/ADC_1.c ****     *
1632:Generated_Source\PSoC4/ADC_1.c ****     * Step through the Opamp trim codes in increasing order
1633:Generated_Source\PSoC4/ADC_1.c ****     * to find the point where the offset crosses Agnd.
1634:Generated_Source\PSoC4/ADC_1.c ****     *
1635:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1636:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_RaiseOpampTrimToCrossing(uint32 startTrim)
1637:Generated_Source\PSoC4/ADC_1.c ****     {
1638:Generated_Source\PSoC4/ADC_1.c ****         uint32 opampTrim;
1639:Generated_Source\PSoC4/ADC_1.c ****         uint32 lastOpampTrim;
1640:Generated_Source\PSoC4/ADC_1.c ****         uint32 compStatus;
1641:Generated_Source\PSoC4/ADC_1.c **** 
1642:Generated_Source\PSoC4/ADC_1.c ****         lastOpampTrim = startTrim;
1643:Generated_Source\PSoC4/ADC_1.c ****         for (opampTrim = startTrim;
1644:Generated_Source\PSoC4/ADC_1.c ****             opampTrim != ADC_1_OPAMP_TRIM_NEG_LIMIT;
1645:Generated_Source\PSoC4/ADC_1.c ****             opampTrim = ADC_1_IncOpampTrim(opampTrim))
1646:Generated_Source\PSoC4/ADC_1.c ****         {
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 56


1647:Generated_Source\PSoC4/ADC_1.c ****             compStatus = ADC_1_SetOpampAndAgndTrim(opampTrim, ADC_1_AGND_TRIM_POS_BASE);
1648:Generated_Source\PSoC4/ADC_1.c ****             if (0uL != compStatus)
1649:Generated_Source\PSoC4/ADC_1.c ****             {
1650:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_SetOpampTrim(lastOpampTrim);
1651:Generated_Source\PSoC4/ADC_1.c ****                 break;
1652:Generated_Source\PSoC4/ADC_1.c ****             }
1653:Generated_Source\PSoC4/ADC_1.c ****             lastOpampTrim = opampTrim;
1654:Generated_Source\PSoC4/ADC_1.c ****         }
1655:Generated_Source\PSoC4/ADC_1.c **** 
1656:Generated_Source\PSoC4/ADC_1.c ****         return lastOpampTrim;
1657:Generated_Source\PSoC4/ADC_1.c ****     }
1658:Generated_Source\PSoC4/ADC_1.c **** 
1659:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1660:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_LowerOpampTrimToCrossing
1661:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1662:Generated_Source\PSoC4/ADC_1.c ****     *
1663:Generated_Source\PSoC4/ADC_1.c ****     * Step through the Opamp trim codes in decreasing order
1664:Generated_Source\PSoC4/ADC_1.c ****     * to find the point where the offset crosses Agnd.
1665:Generated_Source\PSoC4/ADC_1.c ****     *
1666:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1667:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_LowerOpampTrimToCrossing(uint32 startTrim)
1668:Generated_Source\PSoC4/ADC_1.c ****     {
1669:Generated_Source\PSoC4/ADC_1.c ****         uint32 opampTrim;
1670:Generated_Source\PSoC4/ADC_1.c ****         uint32 lastOpampTrim;
1671:Generated_Source\PSoC4/ADC_1.c ****         uint32 compStatus;
1672:Generated_Source\PSoC4/ADC_1.c **** 
1673:Generated_Source\PSoC4/ADC_1.c ****         lastOpampTrim = startTrim;
1674:Generated_Source\PSoC4/ADC_1.c ****         for (opampTrim = startTrim;
1675:Generated_Source\PSoC4/ADC_1.c ****             opampTrim != ADC_1_OPAMP_TRIM_NEG_LIMIT;
1676:Generated_Source\PSoC4/ADC_1.c ****             opampTrim = ADC_1_DecOpampTrim(opampTrim))
1677:Generated_Source\PSoC4/ADC_1.c ****         {
1678:Generated_Source\PSoC4/ADC_1.c ****             compStatus = ADC_1_SetOpampAndAgndTrim(opampTrim, ADC_1_AGND_TRIM_POS_BASE);
1679:Generated_Source\PSoC4/ADC_1.c ****             if (0uL == compStatus)
1680:Generated_Source\PSoC4/ADC_1.c ****             {
1681:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_SetOpampTrim(lastOpampTrim);
1682:Generated_Source\PSoC4/ADC_1.c ****                 break;
1683:Generated_Source\PSoC4/ADC_1.c ****             }
1684:Generated_Source\PSoC4/ADC_1.c ****             lastOpampTrim = opampTrim;
1685:Generated_Source\PSoC4/ADC_1.c ****         }
1686:Generated_Source\PSoC4/ADC_1.c **** 
1687:Generated_Source\PSoC4/ADC_1.c ****         return lastOpampTrim;
1688:Generated_Source\PSoC4/ADC_1.c ****     }
1689:Generated_Source\PSoC4/ADC_1.c **** 
1690:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1691:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_RaiseAgndTrimToCrossing
1692:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1693:Generated_Source\PSoC4/ADC_1.c ****     *
1694:Generated_Source\PSoC4/ADC_1.c ****     * Step through the Agnd trim codes in increasing order
1695:Generated_Source\PSoC4/ADC_1.c ****     * to find the point where the offset crosses Agnd.
1696:Generated_Source\PSoC4/ADC_1.c ****     *
1697:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1698:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_RaiseAgndTrimToCrossing(uint32 startTrim)
1699:Generated_Source\PSoC4/ADC_1.c ****     {
1700:Generated_Source\PSoC4/ADC_1.c ****         uint32 agndTrim;
1701:Generated_Source\PSoC4/ADC_1.c ****         uint32 lastAgndTrim;
1702:Generated_Source\PSoC4/ADC_1.c ****         uint32 compStatus;
1703:Generated_Source\PSoC4/ADC_1.c **** 
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 57


1704:Generated_Source\PSoC4/ADC_1.c ****         lastAgndTrim = startTrim;
1705:Generated_Source\PSoC4/ADC_1.c ****         for (agndTrim = startTrim;
1706:Generated_Source\PSoC4/ADC_1.c ****             agndTrim != ADC_1_AGND_TRIM_NEG_LIMIT;
1707:Generated_Source\PSoC4/ADC_1.c ****             agndTrim = ADC_1_IncAgndTrim(agndTrim))
1708:Generated_Source\PSoC4/ADC_1.c ****         {
1709:Generated_Source\PSoC4/ADC_1.c ****             compStatus = ADC_1_SetAgndTrim(agndTrim);
1710:Generated_Source\PSoC4/ADC_1.c ****             if (0uL != compStatus)
1711:Generated_Source\PSoC4/ADC_1.c ****             {
1712:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_SetAgndTrim(lastAgndTrim);
1713:Generated_Source\PSoC4/ADC_1.c ****                 break;
1714:Generated_Source\PSoC4/ADC_1.c ****             }
1715:Generated_Source\PSoC4/ADC_1.c ****             lastAgndTrim = agndTrim;
1716:Generated_Source\PSoC4/ADC_1.c ****         }
1717:Generated_Source\PSoC4/ADC_1.c **** 
1718:Generated_Source\PSoC4/ADC_1.c ****         return lastAgndTrim;
1719:Generated_Source\PSoC4/ADC_1.c ****     }
1720:Generated_Source\PSoC4/ADC_1.c **** 
1721:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1722:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_LowerAgndTrimToCrossing
1723:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1724:Generated_Source\PSoC4/ADC_1.c ****     *
1725:Generated_Source\PSoC4/ADC_1.c ****     * Step through the Agnd trim codes in decreasing order
1726:Generated_Source\PSoC4/ADC_1.c ****     * to find the point where the offset crosses Agnd.
1727:Generated_Source\PSoC4/ADC_1.c ****     *
1728:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1729:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_LowerAgndTrimToCrossing(uint32 startTrim)
1730:Generated_Source\PSoC4/ADC_1.c ****     {
1731:Generated_Source\PSoC4/ADC_1.c ****         uint32 agndTrim = startTrim;
1732:Generated_Source\PSoC4/ADC_1.c ****         uint32 lastAgndTrim = agndTrim;
1733:Generated_Source\PSoC4/ADC_1.c ****         uint32 compStatus = 1uL;
1734:Generated_Source\PSoC4/ADC_1.c **** 
1735:Generated_Source\PSoC4/ADC_1.c ****         lastAgndTrim = startTrim;
1736:Generated_Source\PSoC4/ADC_1.c ****         for (agndTrim = startTrim;
1737:Generated_Source\PSoC4/ADC_1.c ****             agndTrim != ADC_1_AGND_TRIM_NEG_LIMIT;
1738:Generated_Source\PSoC4/ADC_1.c ****             agndTrim = ADC_1_DecAgndTrim(agndTrim))
1739:Generated_Source\PSoC4/ADC_1.c ****         {
1740:Generated_Source\PSoC4/ADC_1.c ****             compStatus = ADC_1_SetAgndTrim(agndTrim);
1741:Generated_Source\PSoC4/ADC_1.c ****             if (0uL == compStatus)
1742:Generated_Source\PSoC4/ADC_1.c ****             {
1743:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_SetAgndTrim(lastAgndTrim);
1744:Generated_Source\PSoC4/ADC_1.c ****                 break;
1745:Generated_Source\PSoC4/ADC_1.c ****             }
1746:Generated_Source\PSoC4/ADC_1.c ****             lastAgndTrim = agndTrim;
1747:Generated_Source\PSoC4/ADC_1.c ****         }
1748:Generated_Source\PSoC4/ADC_1.c **** 
1749:Generated_Source\PSoC4/ADC_1.c ****         return lastAgndTrim;
1750:Generated_Source\PSoC4/ADC_1.c ****     }
1751:Generated_Source\PSoC4/ADC_1.c **** 
1752:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1753:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_SetOpampAndAgndTrim
1754:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1755:Generated_Source\PSoC4/ADC_1.c ****     *
1756:Generated_Source\PSoC4/ADC_1.c ****     * Write the Agnd and Opamp trim codes and return the comparator status.
1757:Generated_Source\PSoC4/ADC_1.c ****     *
1758:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1759:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_SetOpampAndAgndTrim(uint32 opampTrim, uint32 agndTrim)
1760:Generated_Source\PSoC4/ADC_1.c ****     {
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 58


1761:Generated_Source\PSoC4/ADC_1.c ****         uint32 trimRegVal = ADC_1_UABH_A_OA_TRIM_OA_REG;
1762:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal &= ~(ADC_1_OPAMP_TRIM_MASK << CyUAB_OA_OFFSET_SHIFT);
1763:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal |= (opampTrim << CyUAB_OA_OFFSET_SHIFT);
1764:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_A_OA_TRIM_OA_REG = trimRegVal;
1765:Generated_Source\PSoC4/ADC_1.c **** 
1766:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal = ADC_1_UABH_A_OA_TRIM_AGND_REG;
1767:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal &= ~(ADC_1_AGND_TRIM_MASK << CyUAB_AGND_OFFSET_SHIFT);
1768:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal |= (agndTrim << CyUAB_AGND_OFFSET_SHIFT);
1769:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_A_OA_TRIM_AGND_REG = trimRegVal;
1770:Generated_Source\PSoC4/ADC_1.c **** 
1771:Generated_Source\PSoC4/ADC_1.c ****         return ADC_1_GetCompStatus();
1772:Generated_Source\PSoC4/ADC_1.c ****     }
1773:Generated_Source\PSoC4/ADC_1.c **** 
1774:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1775:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_SetOpampTrim
1776:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1777:Generated_Source\PSoC4/ADC_1.c ****     *
1778:Generated_Source\PSoC4/ADC_1.c ****     * Write the Opamp trim code and return the comparator status.
1779:Generated_Source\PSoC4/ADC_1.c ****     *
1780:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1781:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_SetOpampTrim(uint32 opampTrim)
1782:Generated_Source\PSoC4/ADC_1.c ****     {
1783:Generated_Source\PSoC4/ADC_1.c ****         uint32 trimRegVal = ADC_1_UABH_A_OA_TRIM_OA_REG;
1784:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal &= ~(ADC_1_OPAMP_TRIM_MASK << CyUAB_OA_OFFSET_SHIFT);
1785:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal |= (opampTrim << CyUAB_OA_OFFSET_SHIFT);
1786:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_A_OA_TRIM_OA_REG = trimRegVal;
1787:Generated_Source\PSoC4/ADC_1.c **** 
1788:Generated_Source\PSoC4/ADC_1.c ****         return ADC_1_GetCompStatus();
1789:Generated_Source\PSoC4/ADC_1.c ****     }
1790:Generated_Source\PSoC4/ADC_1.c **** 
1791:Generated_Source\PSoC4/ADC_1.c **** 
1792:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1793:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_SetAgndTrim
1794:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1795:Generated_Source\PSoC4/ADC_1.c ****     *
1796:Generated_Source\PSoC4/ADC_1.c ****     * Write the Agnd trim code and return the comparator status.
1797:Generated_Source\PSoC4/ADC_1.c ****     *
1798:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1799:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_SetAgndTrim(uint32 agndTrim)
1800:Generated_Source\PSoC4/ADC_1.c ****     {
1801:Generated_Source\PSoC4/ADC_1.c ****         uint32 trimRegVal = ADC_1_UABH_A_OA_TRIM_AGND_REG;
1802:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal &= ~(ADC_1_AGND_TRIM_MASK << CyUAB_AGND_OFFSET_SHIFT);
1803:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal |= (agndTrim << CyUAB_AGND_OFFSET_SHIFT);
1804:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_A_OA_TRIM_AGND_REG = trimRegVal;
1805:Generated_Source\PSoC4/ADC_1.c **** 
1806:Generated_Source\PSoC4/ADC_1.c ****         return ADC_1_GetCompStatus();
1807:Generated_Source\PSoC4/ADC_1.c ****     }
1808:Generated_Source\PSoC4/ADC_1.c **** 
1809:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1810:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_GetCompStatus
1811:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1812:Generated_Source\PSoC4/ADC_1.c ****     *
1813:Generated_Source\PSoC4/ADC_1.c ****     * Delays to allow filter to settle before reading the ADC result.
1814:Generated_Source\PSoC4/ADC_1.c ****     * Returns 1 if the filter output is greater than AGND, else 0.
1815:Generated_Source\PSoC4/ADC_1.c ****     *
1816:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1817:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_GetCompStatus(void)
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 59


1818:Generated_Source\PSoC4/ADC_1.c ****     {
1819:Generated_Source\PSoC4/ADC_1.c ****         uint32 compStatus = 0UL;
1820:Generated_Source\PSoC4/ADC_1.c ****         int16 zeroCode = 0;
1821:Generated_Source\PSoC4/ADC_1.c **** 
1822:Generated_Source\PSoC4/ADC_1.c ****         CyDelayUs(ADC_1_allConfigs[ADC_1_currentConfig].filterTrimDelay);
1823:Generated_Source\PSoC4/ADC_1.c **** 
1824:Generated_Source\PSoC4/ADC_1.c ****         /*If unsigned differential */
1825:Generated_Source\PSoC4/ADC_1.c ****         if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
1826:Generated_Source\PSoC4/ADC_1.c ****             & ADC_1_SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_MSK) == 0U)
1827:Generated_Source\PSoC4/ADC_1.c ****         {
1828:Generated_Source\PSoC4/ADC_1.c ****             zeroCode = 0x800;
1829:Generated_Source\PSoC4/ADC_1.c ****         }
1830:Generated_Source\PSoC4/ADC_1.c **** 
1831:Generated_Source\PSoC4/ADC_1.c ****         if (ADC_1_GetResult16(ADC_1_FILTER_ADC_CHANNEL) < zeroCode)
1832:Generated_Source\PSoC4/ADC_1.c ****         {
1833:Generated_Source\PSoC4/ADC_1.c ****             compStatus = 1UL;
1834:Generated_Source\PSoC4/ADC_1.c ****         }
1835:Generated_Source\PSoC4/ADC_1.c **** 
1836:Generated_Source\PSoC4/ADC_1.c ****         return compStatus;
1837:Generated_Source\PSoC4/ADC_1.c ****     }
1838:Generated_Source\PSoC4/ADC_1.c **** 
1839:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1840:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_IncOpampTrim
1841:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1842:Generated_Source\PSoC4/ADC_1.c ****     *
1843:Generated_Source\PSoC4/ADC_1.c ****     * Increments the Opamp trim code by one. Note that Opamp trim code is
1844:Generated_Source\PSoC4/ADC_1.c ****     * a 4-bit sign-magnitude value.
1845:Generated_Source\PSoC4/ADC_1.c ****     *
1846:Generated_Source\PSoC4/ADC_1.c ****     * Skips OPAMP_TRIM_NEG_BASE because it is the same as POS_BASE.
1847:Generated_Source\PSoC4/ADC_1.c ****     *
1848:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1849:Generated_Source\PSoC4/ADC_1.c ****     /* Skips OPAMP_TRIM_NEG_BASE because it is the same as POS_BASE. */
1850:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_IncOpampTrim(uint32 trim)
1851:Generated_Source\PSoC4/ADC_1.c ****     {
1852:Generated_Source\PSoC4/ADC_1.c **** 
1853:Generated_Source\PSoC4/ADC_1.c ****         if (trim < (ADC_1_OPAMP_TRIM_POS_LIMIT - 1uL))
1854:Generated_Source\PSoC4/ADC_1.c ****         {
1855:Generated_Source\PSoC4/ADC_1.c ****             trim = trim + 1uL;
1856:Generated_Source\PSoC4/ADC_1.c ****         }
1857:Generated_Source\PSoC4/ADC_1.c ****         else if ((ADC_1_OPAMP_TRIM_POS_LIMIT - 1uL) == trim)
1858:Generated_Source\PSoC4/ADC_1.c ****         {
1859:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_OPAMP_TRIM_NEG_LIMIT;
1860:Generated_Source\PSoC4/ADC_1.c ****         }
1861:Generated_Source\PSoC4/ADC_1.c ****         else if (trim <= (ADC_1_OPAMP_TRIM_NEG_BASE + 1uL))
1862:Generated_Source\PSoC4/ADC_1.c ****         {
1863:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_OPAMP_TRIM_POS_BASE;
1864:Generated_Source\PSoC4/ADC_1.c ****         }
1865:Generated_Source\PSoC4/ADC_1.c ****         else
1866:Generated_Source\PSoC4/ADC_1.c ****         {
1867:Generated_Source\PSoC4/ADC_1.c ****             trim = trim - 1uL;
1868:Generated_Source\PSoC4/ADC_1.c ****         }
1869:Generated_Source\PSoC4/ADC_1.c **** 
1870:Generated_Source\PSoC4/ADC_1.c ****         return trim;
1871:Generated_Source\PSoC4/ADC_1.c ****     }
1872:Generated_Source\PSoC4/ADC_1.c **** 
1873:Generated_Source\PSoC4/ADC_1.c **** 
1874:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 60


1875:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_DecOpampTrim
1876:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1877:Generated_Source\PSoC4/ADC_1.c ****     *
1878:Generated_Source\PSoC4/ADC_1.c ****     * Decrements the Opamp trim code by one. Note that Opamp trim code is
1879:Generated_Source\PSoC4/ADC_1.c ****     * a 4-bit sign-magnitude value.
1880:Generated_Source\PSoC4/ADC_1.c ****     *
1881:Generated_Source\PSoC4/ADC_1.c ****     * Skips OPAMP_TRIM_NEG_BASE because it is the same as POS_BASE.
1882:Generated_Source\PSoC4/ADC_1.c ****     *
1883:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1884:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_DecOpampTrim(uint32 trim)
1885:Generated_Source\PSoC4/ADC_1.c ****     {
1886:Generated_Source\PSoC4/ADC_1.c **** 
1887:Generated_Source\PSoC4/ADC_1.c ****         if (ADC_1_OPAMP_TRIM_POS_BASE == trim)
1888:Generated_Source\PSoC4/ADC_1.c ****         {
1889:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_OPAMP_TRIM_NEG_BASE + 1uL;
1890:Generated_Source\PSoC4/ADC_1.c ****         }
1891:Generated_Source\PSoC4/ADC_1.c ****         else if (trim < ADC_1_OPAMP_TRIM_POS_LIMIT)
1892:Generated_Source\PSoC4/ADC_1.c ****         {
1893:Generated_Source\PSoC4/ADC_1.c ****             trim = trim - 1uL;
1894:Generated_Source\PSoC4/ADC_1.c ****         }
1895:Generated_Source\PSoC4/ADC_1.c ****         else if (trim < ADC_1_OPAMP_TRIM_NEG_LIMIT)
1896:Generated_Source\PSoC4/ADC_1.c ****         {
1897:Generated_Source\PSoC4/ADC_1.c ****             trim = trim + 1uL;
1898:Generated_Source\PSoC4/ADC_1.c ****         }
1899:Generated_Source\PSoC4/ADC_1.c ****         else
1900:Generated_Source\PSoC4/ADC_1.c ****         {
1901:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_OPAMP_TRIM_POS_LIMIT - 1uL;
1902:Generated_Source\PSoC4/ADC_1.c ****         }
1903:Generated_Source\PSoC4/ADC_1.c **** 
1904:Generated_Source\PSoC4/ADC_1.c ****         return trim;
1905:Generated_Source\PSoC4/ADC_1.c ****     }
1906:Generated_Source\PSoC4/ADC_1.c **** 
1907:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1908:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_IncAgndTrim
1909:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1910:Generated_Source\PSoC4/ADC_1.c ****     *
1911:Generated_Source\PSoC4/ADC_1.c ****     * Increments the Agnd trim code by one. Note that Agnd trim code is
1912:Generated_Source\PSoC4/ADC_1.c ****     * a 5-bit sign-magnitude value.
1913:Generated_Source\PSoC4/ADC_1.c ****     *
1914:Generated_Source\PSoC4/ADC_1.c ****     * Skips AGND_TRIM_NEG_BASE because it is the same as POS_BASE.
1915:Generated_Source\PSoC4/ADC_1.c ****     *
1916:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1917:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_IncAgndTrim(uint32 trim)
1918:Generated_Source\PSoC4/ADC_1.c ****     {
1919:Generated_Source\PSoC4/ADC_1.c **** 
1920:Generated_Source\PSoC4/ADC_1.c ****         if (trim < (ADC_1_AGND_TRIM_POS_LIMIT - 1uL))
1921:Generated_Source\PSoC4/ADC_1.c ****         {
1922:Generated_Source\PSoC4/ADC_1.c ****             trim = trim + 1uL;
1923:Generated_Source\PSoC4/ADC_1.c ****         }
1924:Generated_Source\PSoC4/ADC_1.c ****         else if ((ADC_1_AGND_TRIM_POS_LIMIT - 1uL) == trim)
1925:Generated_Source\PSoC4/ADC_1.c ****         {
1926:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_AGND_TRIM_NEG_LIMIT;
1927:Generated_Source\PSoC4/ADC_1.c ****         }
1928:Generated_Source\PSoC4/ADC_1.c ****         else if (trim <= (ADC_1_AGND_TRIM_NEG_BASE + 1uL))
1929:Generated_Source\PSoC4/ADC_1.c ****         {
1930:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_AGND_TRIM_POS_BASE;
1931:Generated_Source\PSoC4/ADC_1.c ****         }
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 61


1932:Generated_Source\PSoC4/ADC_1.c ****         else
1933:Generated_Source\PSoC4/ADC_1.c ****         {
1934:Generated_Source\PSoC4/ADC_1.c ****             trim = trim - 1uL;
1935:Generated_Source\PSoC4/ADC_1.c ****         }
1936:Generated_Source\PSoC4/ADC_1.c **** 
1937:Generated_Source\PSoC4/ADC_1.c ****         return trim;
1938:Generated_Source\PSoC4/ADC_1.c ****     }
1939:Generated_Source\PSoC4/ADC_1.c **** 
1940:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1941:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_DecAgndTrim
1942:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1943:Generated_Source\PSoC4/ADC_1.c ****     *
1944:Generated_Source\PSoC4/ADC_1.c ****     * Decrements the Agnd trim code by one. Note that Agnd trim code is
1945:Generated_Source\PSoC4/ADC_1.c ****     * a 5-bit sign-magnitude value.
1946:Generated_Source\PSoC4/ADC_1.c ****     *
1947:Generated_Source\PSoC4/ADC_1.c ****     * Skips AGND_TRIM_NEG_BASE because it is the same as POS_BASE.
1948:Generated_Source\PSoC4/ADC_1.c ****     *
1949:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1950:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_DecAgndTrim(uint32 trim)
1951:Generated_Source\PSoC4/ADC_1.c ****     {
1952:Generated_Source\PSoC4/ADC_1.c **** 
1953:Generated_Source\PSoC4/ADC_1.c ****         if (trim == ADC_1_AGND_TRIM_POS_BASE)
1954:Generated_Source\PSoC4/ADC_1.c ****         {
1955:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_AGND_TRIM_NEG_BASE + 1uL;
1956:Generated_Source\PSoC4/ADC_1.c ****         }
1957:Generated_Source\PSoC4/ADC_1.c ****         else if (trim < ADC_1_AGND_TRIM_POS_LIMIT)
1958:Generated_Source\PSoC4/ADC_1.c ****         {
1959:Generated_Source\PSoC4/ADC_1.c ****             trim = trim - 1uL;
1960:Generated_Source\PSoC4/ADC_1.c ****         }
1961:Generated_Source\PSoC4/ADC_1.c ****         else if (trim < ADC_1_AGND_TRIM_NEG_LIMIT)
1962:Generated_Source\PSoC4/ADC_1.c ****         {
1963:Generated_Source\PSoC4/ADC_1.c ****             trim = trim + 1uL;
1964:Generated_Source\PSoC4/ADC_1.c ****         }
1965:Generated_Source\PSoC4/ADC_1.c ****         else
1966:Generated_Source\PSoC4/ADC_1.c ****         {
1967:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_AGND_TRIM_POS_LIMIT - 1uL;
1968:Generated_Source\PSoC4/ADC_1.c ****         }
1969:Generated_Source\PSoC4/ADC_1.c **** 
1970:Generated_Source\PSoC4/ADC_1.c ****         return trim;
1971:Generated_Source\PSoC4/ADC_1.c ****     }
1972:Generated_Source\PSoC4/ADC_1.c **** 
1973:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1974:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_filterInit
1975:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1976:Generated_Source\PSoC4/ADC_1.c ****     *
1977:Generated_Source\PSoC4/ADC_1.c ****     * Initializes the UAB halves and the CTB buffer between the AGND and the SAR.
1978:Generated_Source\PSoC4/ADC_1.c ****     *
1979:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1980:Generated_Source\PSoC4/ADC_1.c ****     void ADC_1_filterInit(uint32 configNum)
1981:Generated_Source\PSoC4/ADC_1.c ****     {
1982:Generated_Source\PSoC4/ADC_1.c ****         /* Configure the common filter settings if any configuration filters */
1983:Generated_Source\PSoC4/ADC_1.c ****         switch (configNum)
1984:Generated_Source\PSoC4/ADC_1.c ****         {
1985:Generated_Source\PSoC4/ADC_1.c ****             #if (0u != ADC_1_CFG0_FILTER_PRESENT)
1986:Generated_Source\PSoC4/ADC_1.c ****             case 0u:
1987:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_A_Init(&ADC_1_CFG0_UABH_A_FILTER_config);
1988:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_B_Init(&ADC_1_CFG0_UABH_B_FILTER_config);
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 62


1989:Generated_Source\PSoC4/ADC_1.c ****             break;
1990:Generated_Source\PSoC4/ADC_1.c ****             #endif
1991:Generated_Source\PSoC4/ADC_1.c ****             #if (0u != ADC_1_CFG1_FILTER_PRESENT)
1992:Generated_Source\PSoC4/ADC_1.c ****             case 1u:
1993:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_A_Init(&ADC_1_CFG1_UABH_A_FILTER_config);
1994:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_B_Init(&ADC_1_CFG1_UABH_B_FILTER_config);
1995:Generated_Source\PSoC4/ADC_1.c ****             break;
1996:Generated_Source\PSoC4/ADC_1.c ****             #endif
1997:Generated_Source\PSoC4/ADC_1.c ****             #if (0u != ADC_1_CFG2_FILTER_PRESENT)
1998:Generated_Source\PSoC4/ADC_1.c ****             case 2u:
1999:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_A_Init(&ADC_1_CFG2_UABH_A_FILTER_config);
2000:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_B_Init(&ADC_1_CFG2_UABH_B_FILTER_config);
2001:Generated_Source\PSoC4/ADC_1.c ****             break;
2002:Generated_Source\PSoC4/ADC_1.c ****             #endif
2003:Generated_Source\PSoC4/ADC_1.c ****             #if (0u != ADC_1_CFG3_FILTER_PRESENT)
2004:Generated_Source\PSoC4/ADC_1.c ****             case 3u:
2005:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_A_Init(&ADC_1_CFG3_UABH_A_FILTER_config);
2006:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_B_Init(&ADC_1_CFG3_UABH_B_FILTER_config);
2007:Generated_Source\PSoC4/ADC_1.c ****             break;
2008:Generated_Source\PSoC4/ADC_1.c ****             #endif
2009:Generated_Source\PSoC4/ADC_1.c ****             default:
2010:Generated_Source\PSoC4/ADC_1.c ****             break;
2011:Generated_Source\PSoC4/ADC_1.c ****         }
2012:Generated_Source\PSoC4/ADC_1.c **** 
2013:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_FILTERAGND2SAR_BUFFER_Init();
2014:Generated_Source\PSoC4/ADC_1.c ****     }
2015:Generated_Source\PSoC4/ADC_1.c **** #endif /* ADC_1_ANY_CONFIG_USES_FILTER != 0u */
2016:Generated_Source\PSoC4/ADC_1.c **** 
2017:Generated_Source\PSoC4/ADC_1.c **** 
2018:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
2019:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_Init
2020:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
2021:Generated_Source\PSoC4/ADC_1.c **** *
2022:Generated_Source\PSoC4/ADC_1.c **** * \brief Initialize the component according to parameters defined in the
2023:Generated_Source\PSoC4/ADC_1.c **** * customizer.
2024:Generated_Source\PSoC4/ADC_1.c **** *
2025:Generated_Source\PSoC4/ADC_1.c **** * \param None
2026:Generated_Source\PSoC4/ADC_1.c **** *
2027:Generated_Source\PSoC4/ADC_1.c **** * \return None
2028:Generated_Source\PSoC4/ADC_1.c **** *
2029:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
2030:Generated_Source\PSoC4/ADC_1.c **** *
2031:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
2032:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_Init(void)
2033:Generated_Source\PSoC4/ADC_1.c **** {
 1420              		.loc 1 2033 0
 1421              		.cfi_startproc
 1422              		@ args = 0, pretend = 0, frame = 0
 1423              		@ frame_needed = 0, uses_anonymous_args = 0
 1424 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1425              		.cfi_def_cfa_offset 20
 1426              		.cfi_offset 4, -20
 1427              		.cfi_offset 5, -16
 1428              		.cfi_offset 6, -12
 1429              		.cfi_offset 7, -8
 1430              		.cfi_offset 14, -4
 1431 0002 4746     		mov	r7, r8
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 63


 1432 0004 80B4     		push	{r7}
 1433              		.cfi_def_cfa_offset 24
 1434              		.cfi_offset 8, -24
 1435              	.LVL128:
2034:Generated_Source\PSoC4/ADC_1.c ****     uint32 chNum = 0ul;
2035:Generated_Source\PSoC4/ADC_1.c ****     uint32 configNum = 0u;
2036:Generated_Source\PSoC4/ADC_1.c ****     int32 counts;
2037:Generated_Source\PSoC4/ADC_1.c **** 
2038:Generated_Source\PSoC4/ADC_1.c ****     if(0u == ADC_1_initVar)
 1436              		.loc 1 2038 0
 1437 0006 2D4B     		ldr	r3, .L115
 1438 0008 1B79     		ldrb	r3, [r3, #4]
 1439 000a 002B     		cmp	r3, #0
 1440 000c 38D0     		beq	.L114
 1441 000e 51E0     		b	.L107
 1442              	.LVL129:
 1443              	.L113:
2039:Generated_Source\PSoC4/ADC_1.c ****     {
2040:Generated_Source\PSoC4/ADC_1.c ****         /* Set offset and countsPer10Volt for all channels */
2041:Generated_Source\PSoC4/ADC_1.c ****         for(chNum = 0ul; chNum < ADC_1_TOTAL_CHANNELS_NUM; chNum++)
2042:Generated_Source\PSoC4/ADC_1.c ****         {
2043:Generated_Source\PSoC4/ADC_1.c ****             if((ADC_1_channelsConfig[chNum] & ADC_1_SAR_CHAN_CONFIG_RESOLUTION_MSK) != 0u)
2044:Generated_Source\PSoC4/ADC_1.c ****             {
2045:Generated_Source\PSoC4/ADC_1.c ****                 if((ADC_1_allConfigs[configNum].sampleCtrl
2046:Generated_Source\PSoC4/ADC_1.c ****                     & ADC_1_SAR_SAMPLE_CTRL_SUB_RESOLUTION_MSK)
2047:Generated_Source\PSoC4/ADC_1.c ****                     == ADC_1_SUB_RESOLUTION_10B)
2048:Generated_Source\PSoC4/ADC_1.c ****                 {
2049:Generated_Source\PSoC4/ADC_1.c ****                     counts = (int32) ADC_1_SAR_WRK_MAX_10BIT;
2050:Generated_Source\PSoC4/ADC_1.c ****                 }
2051:Generated_Source\PSoC4/ADC_1.c ****                 else
2052:Generated_Source\PSoC4/ADC_1.c ****                 {
2053:Generated_Source\PSoC4/ADC_1.c ****                     counts = (int32) ADC_1_SAR_WRK_MAX_8BIT;
2054:Generated_Source\PSoC4/ADC_1.c ****                 }
2055:Generated_Source\PSoC4/ADC_1.c ****             }
2056:Generated_Source\PSoC4/ADC_1.c ****             else
2057:Generated_Source\PSoC4/ADC_1.c ****             {
2058:Generated_Source\PSoC4/ADC_1.c ****                counts = (int32)ADC_1_SAR_WRK_MAX_12BIT;
2059:Generated_Source\PSoC4/ADC_1.c ****             }
2060:Generated_Source\PSoC4/ADC_1.c **** 
2061:Generated_Source\PSoC4/ADC_1.c ****             /* Single Ended Channel */
2062:Generated_Source\PSoC4/ADC_1.c ****             if((ADC_1_channelsConfig[chNum] & ADC_1_SAR_CHAN_CONFIG_DIFFERENTIAL_EN_MSK) == 0u)
2063:Generated_Source\PSoC4/ADC_1.c ****             {
2064:Generated_Source\PSoC4/ADC_1.c ****                 if(((ADC_1_allConfigs[configNum].sampleCtrl
 1444              		.loc 1 2064 0
 1445 0010 EA00     		lsls	r2, r5, #3
 1446 0012 521B     		subs	r2, r2, r5
 1447 0014 D300     		lsls	r3, r2, #3
 1448 0016 2A4A     		ldr	r2, .L115+4
 1449 0018 D318     		adds	r3, r2, r3
 1450 001a DB68     		ldr	r3, [r3, #12]
 1451 001c 5B07     		lsls	r3, r3, #29
 1452 001e 0FD5     		bpl	.L110
2065:Generated_Source\PSoC4/ADC_1.c ****                     & ADC_1_SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_MSK)
2066:Generated_Source\PSoC4/ADC_1.c ****                     == ADC_1_SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_MSK) &&
2067:Generated_Source\PSoC4/ADC_1.c ****                     ((ADC_1_allConfigs[configNum].ctrl & ADC_1_SAR_CTRL_NEG_SEL_MSK)
 1453              		.loc 1 2067 0
 1454 0020 EA00     		lsls	r2, r5, #3
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 64


 1455 0022 521B     		subs	r2, r2, r5
 1456 0024 D300     		lsls	r3, r2, #3
 1457 0026 264A     		ldr	r2, .L115+4
 1458 0028 D318     		adds	r3, r2, r3
 1459 002a 9B68     		ldr	r3, [r3, #8]
 1460 002c E022     		movs	r2, #224
 1461 002e 1201     		lsls	r2, r2, #4
 1462 0030 1340     		ands	r3, r2
2066:Generated_Source\PSoC4/ADC_1.c ****                     ((ADC_1_allConfigs[configNum].ctrl & ADC_1_SAR_CTRL_NEG_SEL_MSK)
 1463              		.loc 1 2066 0
 1464 0032 9342     		cmp	r3, r2
 1465 0034 04D1     		bne	.L110
2068:Generated_Source\PSoC4/ADC_1.c ****                     == ADC_1_NEG_VREF_SHIFTED))
2069:Generated_Source\PSoC4/ADC_1.c ****                 {
2070:Generated_Source\PSoC4/ADC_1.c ****                     /* Set offset to the minus half scale to convert results to unsigned format */
2071:Generated_Source\PSoC4/ADC_1.c ****                     ADC_1_offset[chNum] = (int16)(counts / -2);
 1466              		.loc 1 2071 0
 1467 0036 6300     		lsls	r3, r4, #1
 1468 0038 2249     		ldr	r1, .L115+8
 1469 003a 234A     		ldr	r2, .L115+12
 1470 003c 9952     		strh	r1, [r3, r2]
 1471 003e 03E0     		b	.L111
 1472              	.L110:
2072:Generated_Source\PSoC4/ADC_1.c ****                 }
2073:Generated_Source\PSoC4/ADC_1.c ****                 else
2074:Generated_Source\PSoC4/ADC_1.c ****                 {
2075:Generated_Source\PSoC4/ADC_1.c ****                     ADC_1_offset[chNum] = 0;
 1473              		.loc 1 2075 0
 1474 0040 6300     		lsls	r3, r4, #1
 1475 0042 0021     		movs	r1, #0
 1476 0044 204A     		ldr	r2, .L115+12
 1477 0046 9952     		strh	r1, [r3, r2]
 1478              	.L111:
2076:Generated_Source\PSoC4/ADC_1.c ****                 }
2077:Generated_Source\PSoC4/ADC_1.c **** 
2078:Generated_Source\PSoC4/ADC_1.c ****             }
2079:Generated_Source\PSoC4/ADC_1.c ****             else    /* Differential channel */
2080:Generated_Source\PSoC4/ADC_1.c ****             {
2081:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_offset[chNum] = 0;
2082:Generated_Source\PSoC4/ADC_1.c ****             }
2083:Generated_Source\PSoC4/ADC_1.c **** 
2084:Generated_Source\PSoC4/ADC_1.c ****             /* Calculate gain in counts per 10 volts with rounding */
2085:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_countsPer10Volt[chNum] = (int16)(((counts * ADC_1_10MV_COUNTS) \
2086:Generated_Source\PSoC4/ADC_1.c ****                             + ADC_1_allConfigs[configNum].vrefMvValue) \
 1479              		.loc 1 2086 0
 1480 0048 1D4B     		ldr	r3, .L115+4
 1481 004a 9846     		mov	r8, r3
 1482 004c EF00     		lsls	r7, r5, #3
 1483 004e 7B1B     		subs	r3, r7, r5
 1484 0050 DE00     		lsls	r6, r3, #3
 1485 0052 4644     		add	r6, r6, r8
 1486 0054 F16A     		ldr	r1, [r6, #44]
 1487 0056 1D4B     		ldr	r3, .L115+16
 1488 0058 C818     		adds	r0, r1, r3
2087:Generated_Source\PSoC4/ADC_1.c ****                             / (ADC_1_allConfigs[configNum].vrefMvValue * 2));
 1489              		.loc 1 2087 0
 1490 005a 4900     		lsls	r1, r1, #1
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 65


 1491 005c FFF7FEFF 		bl	__aeabi_idiv
 1492              	.LVL130:
2085:Generated_Source\PSoC4/ADC_1.c ****                             + ADC_1_allConfigs[configNum].vrefMvValue) \
 1493              		.loc 1 2085 0
 1494 0060 00B2     		sxth	r0, r0
 1495 0062 A300     		lsls	r3, r4, #2
 1496 0064 1A4A     		ldr	r2, .L115+20
 1497 0066 9850     		str	r0, [r3, r2]
2088:Generated_Source\PSoC4/ADC_1.c **** 
2089:Generated_Source\PSoC4/ADC_1.c ****             /* Increment configuration number after rolling over to the next configuration*/
2090:Generated_Source\PSoC4/ADC_1.c ****             if((ADC_1_allConfigs[configNum].channelBase
 1498              		.loc 1 2090 0
 1499 0068 7F1B     		subs	r7, r7, r5
 1500 006a FB00     		lsls	r3, r7, #3
 1501 006c 4246     		mov	r2, r8
 1502 006e 9A58     		ldr	r2, [r3, r2]
2091:Generated_Source\PSoC4/ADC_1.c ****                 + (ADC_1_allConfigs[configNum].numChannels - 1uL)) == chNum)
 1503              		.loc 1 2091 0
 1504 0070 7368     		ldr	r3, [r6, #4]
 1505 0072 D318     		adds	r3, r2, r3
 1506 0074 013B     		subs	r3, r3, #1
2090:Generated_Source\PSoC4/ADC_1.c ****                 + (ADC_1_allConfigs[configNum].numChannels - 1uL)) == chNum)
 1507              		.loc 1 2090 0
 1508 0076 9C42     		cmp	r4, r3
 1509 0078 00D1     		bne	.L112
2092:Generated_Source\PSoC4/ADC_1.c ****             {
2093:Generated_Source\PSoC4/ADC_1.c ****                 configNum++;
 1510              		.loc 1 2093 0
 1511 007a 0135     		adds	r5, r5, #1
 1512              	.LVL131:
 1513              	.L112:
2041:Generated_Source\PSoC4/ADC_1.c ****         {
 1514              		.loc 1 2041 0 discriminator 2
 1515 007c 0134     		adds	r4, r4, #1
 1516              	.LVL132:
 1517 007e 01E0     		b	.L108
 1518              	.LVL133:
 1519              	.L114:
 1520 0080 0025     		movs	r5, #0
 1521 0082 0024     		movs	r4, #0
 1522              	.LVL134:
 1523              	.L108:
2041:Generated_Source\PSoC4/ADC_1.c ****         {
 1524              		.loc 1 2041 0 is_stmt 0 discriminator 1
 1525 0084 002C     		cmp	r4, #0
 1526 0086 C3D0     		beq	.L113
2094:Generated_Source\PSoC4/ADC_1.c ****             }
2095:Generated_Source\PSoC4/ADC_1.c ****         } /* for(chNum = 0ul; chNum < ADC_1_TOTAL_CHANNELS_NUM; chNum++) */
2096:Generated_Source\PSoC4/ADC_1.c **** 
2097:Generated_Source\PSoC4/ADC_1.c ****         /* Start and set interrupt vector */
2098:Generated_Source\PSoC4/ADC_1.c ****         CyIntSetPriority(ADC_1_INTC_NUMBER, ADC_1_INTC_PRIOR_NUMBER);
 1527              		.loc 1 2098 0 is_stmt 1
 1528 0088 0021     		movs	r1, #0
 1529 008a 0F20     		movs	r0, #15
 1530 008c FFF7FEFF 		bl	CyIntSetPriority
 1531              	.LVL135:
2099:Generated_Source\PSoC4/ADC_1.c ****         (void)CyIntSetVector(ADC_1_INTC_NUMBER, &ADC_1_ISR);
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 66


 1532              		.loc 1 2099 0
 1533 0090 1049     		ldr	r1, .L115+24
 1534 0092 0F20     		movs	r0, #15
 1535 0094 FFF7FEFF 		bl	CyIntSetVector
 1536              	.LVL136:
2100:Generated_Source\PSoC4/ADC_1.c **** 
2101:Generated_Source\PSoC4/ADC_1.c ****         /* Initialize configuration zero if SelectConfig has not been called */
2102:Generated_Source\PSoC4/ADC_1.c ****         if(0u == ADC_1_selected)
 1537              		.loc 1 2102 0
 1538 0098 084B     		ldr	r3, .L115
 1539 009a 5B79     		ldrb	r3, [r3, #5]
 1540 009c 002B     		cmp	r3, #0
 1541 009e 09D1     		bne	.L107
2103:Generated_Source\PSoC4/ADC_1.c ****         {
2104:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_selected = 1u;
 1542              		.loc 1 2104 0
 1543 00a0 0122     		movs	r2, #1
 1544 00a2 064B     		ldr	r3, .L115
 1545 00a4 5A71     		strb	r2, [r3, #5]
 1546              	.LVL137:
2105:Generated_Source\PSoC4/ADC_1.c ****             configNum = 0u;
2106:Generated_Source\PSoC4/ADC_1.c ****             /* Change Vref selection if is was routed by Creator. Break. */
2107:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_VREF_ROUTED)
2108:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_vrefAMux_DisconnectAll();
2109:Generated_Source\PSoC4/ADC_1.c ****             #endif
2110:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_InitConfig(&ADC_1_allConfigs[configNum]);
 1547              		.loc 1 2110 0
 1548 00a6 064C     		ldr	r4, .L115+4
 1549              	.LVL138:
 1550 00a8 2000     		movs	r0, r4
 1551 00aa FFF7FEFF 		bl	ADC_1_InitConfig
 1552              	.LVL139:
2111:Generated_Source\PSoC4/ADC_1.c ****             /* Change Vref selection if is was routed by Creator. Make. */
2112:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_VREF_ROUTED)
2113:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_vrefAMux_Select((uint8)configNum);
2114:Generated_Source\PSoC4/ADC_1.c ****             #endif
2115:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_SAR_CHAN_EN_REG = ADC_1_allConfigs[configNum].chanEn;
 1553              		.loc 1 2115 0
 1554 00ae 226A     		ldr	r2, [r4, #32]
 1555 00b0 094B     		ldr	r3, .L115+28
 1556 00b2 1A60     		str	r2, [r3]
 1557              	.LVL140:
 1558              	.L107:
2116:Generated_Source\PSoC4/ADC_1.c ****             #if(0u != ADC_1_ANY_CONFIG_USES_FILTER)
2117:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_filterVinMux_Select((uint8)configNum);
2118:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_filterInit(configNum);
2119:Generated_Source\PSoC4/ADC_1.c ****             #endif
2120:Generated_Source\PSoC4/ADC_1.c ****         }
2121:Generated_Source\PSoC4/ADC_1.c ****     }
2122:Generated_Source\PSoC4/ADC_1.c ****     return;
2123:Generated_Source\PSoC4/ADC_1.c **** }
 1559              		.loc 1 2123 0
 1560              		@ sp needed
 1561 00b4 04BC     		pop	{r2}
 1562 00b6 9046     		mov	r8, r2
 1563 00b8 F0BD     		pop	{r4, r5, r6, r7, pc}
 1564              	.L116:
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 67


 1565 00ba C046     		.align	2
 1566              	.L115:
 1567 00bc 00000000 		.word	.LANCHOR0
 1568 00c0 00000000 		.word	ADC_1_allConfigs
 1569 00c4 00F8FFFF 		.word	-2048
 1570 00c8 00000000 		.word	ADC_1_offset
 1571 00cc 00007102 		.word	40960000
 1572 00d0 00000000 		.word	ADC_1_countsPer10Volt
 1573 00d4 00000000 		.word	ADC_1_ISR
 1574 00d8 20003A40 		.word	1077542944
 1575              		.cfi_endproc
 1576              	.LFE26:
 1577              		.size	ADC_1_Init, .-ADC_1_Init
 1578              		.section	.text.ADC_1_Enable,"ax",%progbits
 1579              		.align	2
 1580              		.global	ADC_1_Enable
 1581              		.code	16
 1582              		.thumb_func
 1583              		.type	ADC_1_Enable, %function
 1584              	ADC_1_Enable:
 1585              	.LFB27:
2124:Generated_Source\PSoC4/ADC_1.c **** 
2125:Generated_Source\PSoC4/ADC_1.c **** 
2126:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
2127:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_Enable
2128:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
2129:Generated_Source\PSoC4/ADC_1.c **** *
2130:Generated_Source\PSoC4/ADC_1.c **** * \brief Enables the component.
2131:Generated_Source\PSoC4/ADC_1.c **** *
2132:Generated_Source\PSoC4/ADC_1.c **** * \param None
2133:Generated_Source\PSoC4/ADC_1.c **** *
2134:Generated_Source\PSoC4/ADC_1.c **** * \return None
2135:Generated_Source\PSoC4/ADC_1.c **** *
2136:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect
2137:Generated_Source\PSoC4/ADC_1.c **** *  None
2138:Generated_Source\PSoC4/ADC_1.c **** *
2139:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
2140:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_Enable(void)
2141:Generated_Source\PSoC4/ADC_1.c **** {
 1586              		.loc 1 2141 0
 1587              		.cfi_startproc
 1588              		@ args = 0, pretend = 0, frame = 0
 1589              		@ frame_needed = 0, uses_anonymous_args = 0
 1590 0000 10B5     		push	{r4, lr}
 1591              		.cfi_def_cfa_offset 8
 1592              		.cfi_offset 4, -8
 1593              		.cfi_offset 14, -4
2142:Generated_Source\PSoC4/ADC_1.c **** 
2143:Generated_Source\PSoC4/ADC_1.c ****     #if(0u != ADC_1_ANY_CONFIG_USES_FILTER)
2144:Generated_Source\PSoC4/ADC_1.c ****         if((ADC_1_allConfigs[ADC_1_currentConfig].miscConfig
2145:Generated_Source\PSoC4/ADC_1.c ****             & ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
2146:Generated_Source\PSoC4/ADC_1.c ****             == ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
2147:Generated_Source\PSoC4/ADC_1.c ****         {
2148:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_FILTERAGND2SAR_BUFFER_Enable();
2149:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_Enable();
2150:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_B_Enable();
2151:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_B_Run(1u);
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 68


2152:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_Run(1u);
2153:Generated_Source\PSoC4/ADC_1.c ****         }
2154:Generated_Source\PSoC4/ADC_1.c ****     #endif /* ADC_1_ANY_CONFIG_USES_FILTER != 0u */
2155:Generated_Source\PSoC4/ADC_1.c **** 
2156:Generated_Source\PSoC4/ADC_1.c ****     if (0u == (ADC_1_SAR_CTRL_REG & ADC_1_SAR_CTRL_ENABLED_MSK))
 1594              		.loc 1 2156 0
 1595 0002 0D4B     		ldr	r3, .L120
 1596 0004 1B68     		ldr	r3, [r3]
 1597 0006 002B     		cmp	r3, #0
 1598 0008 0CDB     		blt	.L118
 1599              	.L119:
2157:Generated_Source\PSoC4/ADC_1.c ****     {
2158:Generated_Source\PSoC4/ADC_1.c ****         while (0u != (ADC_1_SAR_STATUS_REG & ADC_1_BUSY_MSK))
 1600              		.loc 1 2158 0 discriminator 1
 1601 000a 0C4B     		ldr	r3, .L120+4
 1602 000c 1B68     		ldr	r3, [r3]
 1603 000e 002B     		cmp	r3, #0
 1604 0010 FBDB     		blt	.L119
2159:Generated_Source\PSoC4/ADC_1.c ****         {
2160:Generated_Source\PSoC4/ADC_1.c ****             /* wait for SAR to go idle to avoid deadlock */
2161:Generated_Source\PSoC4/ADC_1.c ****         }
2162:Generated_Source\PSoC4/ADC_1.c **** 
2163:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_CTRL_REG |= ADC_1_SAR_CTRL_ENABLED_MSK;
 1605              		.loc 1 2163 0
 1606 0012 094A     		ldr	r2, .L120
 1607 0014 1368     		ldr	r3, [r2]
 1608 0016 8021     		movs	r1, #128
 1609 0018 0906     		lsls	r1, r1, #24
 1610 001a 0B43     		orrs	r3, r1
 1611 001c 1360     		str	r3, [r2]
2164:Generated_Source\PSoC4/ADC_1.c **** 
2165:Generated_Source\PSoC4/ADC_1.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
2166:Generated_Source\PSoC4/ADC_1.c ****         CyDelayUs(ADC_1_10US_DELAY);
 1612              		.loc 1 2166 0
 1613 001e 0A20     		movs	r0, #10
 1614 0020 FFF7FEFF 		bl	CyDelayUs
 1615              	.LVL141:
 1616              	.L118:
2167:Generated_Source\PSoC4/ADC_1.c ****     }
2168:Generated_Source\PSoC4/ADC_1.c **** 
2169:Generated_Source\PSoC4/ADC_1.c ****     /* Must set the DFT_CTRL register after enabling the SAR as it is a non-retention register. */
2170:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SetDFTControl(&ADC_1_allConfigs[ADC_1_currentConfig]);
 1617              		.loc 1 2170 0
 1618 0024 064B     		ldr	r3, .L120+8
 1619 0026 1A68     		ldr	r2, [r3]
 1620 0028 D300     		lsls	r3, r2, #3
 1621 002a 9B1A     		subs	r3, r3, r2
 1622 002c D800     		lsls	r0, r3, #3
 1623 002e 054B     		ldr	r3, .L120+12
 1624 0030 C018     		adds	r0, r0, r3
 1625 0032 FFF7FEFF 		bl	ADC_1_SetDFTControl
 1626              	.LVL142:
2171:Generated_Source\PSoC4/ADC_1.c **** 
2172:Generated_Source\PSoC4/ADC_1.c ****     return;
2173:Generated_Source\PSoC4/ADC_1.c **** }
 1627              		.loc 1 2173 0
 1628              		@ sp needed
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 69


 1629 0036 10BD     		pop	{r4, pc}
 1630              	.L121:
 1631              		.align	2
 1632              	.L120:
 1633 0038 00003A40 		.word	1077542912
 1634 003c A0023A40 		.word	1077543584
 1635 0040 00000000 		.word	.LANCHOR0
 1636 0044 00000000 		.word	ADC_1_allConfigs
 1637              		.cfi_endproc
 1638              	.LFE27:
 1639              		.size	ADC_1_Enable, .-ADC_1_Enable
 1640              		.section	.text.ADC_1_Start,"ax",%progbits
 1641              		.align	2
 1642              		.global	ADC_1_Start
 1643              		.code	16
 1644              		.thumb_func
 1645              		.type	ADC_1_Start, %function
 1646              	ADC_1_Start:
 1647              	.LFB1:
 556:Generated_Source\PSoC4/ADC_1.c ****     if (ADC_1_INIT_VAR_INIT_FLAG != (ADC_1_INIT_VAR_INIT_FLAG & ADC_1_initVar))
 1648              		.loc 1 556 0
 1649              		.cfi_startproc
 1650              		@ args = 0, pretend = 0, frame = 0
 1651              		@ frame_needed = 0, uses_anonymous_args = 0
 1652 0000 10B5     		push	{r4, lr}
 1653              		.cfi_def_cfa_offset 8
 1654              		.cfi_offset 4, -8
 1655              		.cfi_offset 14, -4
 557:Generated_Source\PSoC4/ADC_1.c ****     {
 1656              		.loc 1 557 0
 1657 0002 074B     		ldr	r3, .L124
 1658 0004 1B79     		ldrb	r3, [r3, #4]
 1659 0006 DB07     		lsls	r3, r3, #31
 1660 0008 06D4     		bmi	.L123
 559:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_initVar |= ADC_1_INIT_VAR_INIT_FLAG;
 1661              		.loc 1 559 0
 1662 000a FFF7FEFF 		bl	ADC_1_Init
 1663              	.LVL143:
 560:Generated_Source\PSoC4/ADC_1.c ****     }
 1664              		.loc 1 560 0
 1665 000e 044A     		ldr	r2, .L124
 1666 0010 1179     		ldrb	r1, [r2, #4]
 1667 0012 0123     		movs	r3, #1
 1668 0014 0B43     		orrs	r3, r1
 1669 0016 1371     		strb	r3, [r2, #4]
 1670              	.L123:
 563:Generated_Source\PSoC4/ADC_1.c **** 
 1671              		.loc 1 563 0
 1672 0018 FFF7FEFF 		bl	ADC_1_Enable
 1673              	.LVL144:
 566:Generated_Source\PSoC4/ADC_1.c **** 
 1674              		.loc 1 566 0
 1675              		@ sp needed
 1676 001c 10BD     		pop	{r4, pc}
 1677              	.L125:
 1678 001e C046     		.align	2
 1679              	.L124:
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 70


 1680 0020 00000000 		.word	.LANCHOR0
 1681              		.cfi_endproc
 1682              	.LFE1:
 1683              		.size	ADC_1_Start, .-ADC_1_Start
 1684              		.section	.text.ADC_1_StartEx,"ax",%progbits
 1685              		.align	2
 1686              		.global	ADC_1_StartEx
 1687              		.code	16
 1688              		.thumb_func
 1689              		.type	ADC_1_StartEx, %function
 1690              	ADC_1_StartEx:
 1691              	.LFB2:
 585:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_Start();
 1692              		.loc 1 585 0
 1693              		.cfi_startproc
 1694              		@ args = 0, pretend = 0, frame = 0
 1695              		@ frame_needed = 0, uses_anonymous_args = 0
 1696              	.LVL145:
 1697 0000 10B5     		push	{r4, lr}
 1698              		.cfi_def_cfa_offset 8
 1699              		.cfi_offset 4, -8
 1700              		.cfi_offset 14, -4
 1701 0002 0400     		movs	r4, r0
 586:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_IRQ_StartEx(address);
 1702              		.loc 1 586 0
 1703 0004 FFF7FEFF 		bl	ADC_1_Start
 1704              	.LVL146:
 587:Generated_Source\PSoC4/ADC_1.c ****     return;
 1705              		.loc 1 587 0
 1706 0008 2000     		movs	r0, r4
 1707 000a FFF7FEFF 		bl	ADC_1_IRQ_StartEx
 1708              	.LVL147:
 589:Generated_Source\PSoC4/ADC_1.c **** 
 1709              		.loc 1 589 0
 1710              		@ sp needed
 1711              	.LVL148:
 1712 000e 10BD     		pop	{r4, pc}
 1713              		.cfi_endproc
 1714              	.LFE2:
 1715              		.size	ADC_1_StartEx, .-ADC_1_StartEx
 1716              		.section	.text.ADC_1_SelectConfig,"ax",%progbits
 1717              		.align	2
 1718              		.global	ADC_1_SelectConfig
 1719              		.code	16
 1720              		.thumb_func
 1721              		.type	ADC_1_SelectConfig, %function
 1722              	ADC_1_SelectConfig:
 1723              	.LFB6:
 772:Generated_Source\PSoC4/ADC_1.c ****     /* Check whether the configuration number is valid or not */
 1724              		.loc 1 772 0
 1725              		.cfi_startproc
 1726              		@ args = 0, pretend = 0, frame = 0
 1727              		@ frame_needed = 0, uses_anonymous_args = 0
 1728              	.LVL149:
 1729 0000 70B5     		push	{r4, r5, r6, lr}
 1730              		.cfi_def_cfa_offset 16
 1731              		.cfi_offset 4, -16
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 71


 1732              		.cfi_offset 5, -12
 1733              		.cfi_offset 6, -8
 1734              		.cfi_offset 14, -4
 1735 0002 0400     		movs	r4, r0
 1736 0004 0E00     		movs	r6, r1
 774:Generated_Source\PSoC4/ADC_1.c ****     {
 1737              		.loc 1 774 0
 1738 0006 0028     		cmp	r0, #0
 1739 0008 27D1     		bne	.L127
 777:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_selected = 1u;
 1740              		.loc 1 777 0
 1741 000a FFF7FEFF 		bl	ADC_1_Stop
 1742              	.LVL150:
 778:Generated_Source\PSoC4/ADC_1.c **** 
 1743              		.loc 1 778 0
 1744 000e 134B     		ldr	r3, .L130
 1745 0010 0122     		movs	r2, #1
 1746 0012 5A71     		strb	r2, [r3, #5]
 780:Generated_Source\PSoC4/ADC_1.c ****         {
 1747              		.loc 1 780 0
 1748 0014 1B79     		ldrb	r3, [r3, #4]
 1749 0016 002B     		cmp	r3, #0
 1750 0018 06D1     		bne	.L129
 782:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_initVar |= ADC_1_INIT_VAR_INIT_FLAG;
 1751              		.loc 1 782 0
 1752 001a FFF7FEFF 		bl	ADC_1_Init
 1753              	.LVL151:
 783:Generated_Source\PSoC4/ADC_1.c ****         }
 1754              		.loc 1 783 0
 1755 001e 0F4A     		ldr	r2, .L130
 1756 0020 1179     		ldrb	r1, [r2, #4]
 1757 0022 0123     		movs	r3, #1
 1758 0024 0B43     		orrs	r3, r1
 1759 0026 1371     		strb	r3, [r2, #4]
 1760              	.L129:
 788:Generated_Source\PSoC4/ADC_1.c ****         #if (ADC_1_VREF_ROUTED)
 1761              		.loc 1 788 0
 1762 0028 E300     		lsls	r3, r4, #3
 1763 002a 1B1B     		subs	r3, r3, r4
 1764 002c DD00     		lsls	r5, r3, #3
 1765 002e 0C4B     		ldr	r3, .L130+4
 1766 0030 ED18     		adds	r5, r5, r3
 1767 0032 2800     		movs	r0, r5
 1768 0034 FFF7FEFF 		bl	ADC_1_InitConfig
 1769              	.LVL152:
 796:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_RANGE_INTR_MASK_REG = ADC_1_allConfigs[config].rangeIntMask;
 1770              		.loc 1 796 0
 1771 0038 0A4B     		ldr	r3, .L130+8
 1772 003a 2A6A     		ldr	r2, [r5, #32]
 1773 003c 1A60     		str	r2, [r3]
 797:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_SATURATE_INTR_MASK_REG = ADC_1_allConfigs[config].satIntMask;
 1774              		.loc 1 797 0
 1775 003e 0A4B     		ldr	r3, .L130+12
 1776 0040 6A6A     		ldr	r2, [r5, #36]
 1777 0042 1A60     		str	r2, [r3]
 798:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_currentConfig = config;
 1778              		.loc 1 798 0
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 72


 1779 0044 AA6A     		ldr	r2, [r5, #40]
 1780 0046 094B     		ldr	r3, .L130+16
 1781 0048 1A60     		str	r2, [r3]
 799:Generated_Source\PSoC4/ADC_1.c **** 
 1782              		.loc 1 799 0
 1783 004a 044B     		ldr	r3, .L130
 1784 004c 1C60     		str	r4, [r3]
 801:Generated_Source\PSoC4/ADC_1.c ****         {
 1785              		.loc 1 801 0
 1786 004e 012E     		cmp	r6, #1
 1787 0050 03D1     		bne	.L127
 804:Generated_Source\PSoC4/ADC_1.c **** 
 1788              		.loc 1 804 0
 1789 0052 FFF7FEFF 		bl	ADC_1_Start
 1790              	.LVL153:
 807:Generated_Source\PSoC4/ADC_1.c ****         }
 1791              		.loc 1 807 0
 1792 0056 FFF7FEFF 		bl	ADC_1_StartConvert
 1793              	.LVL154:
 1794              	.L127:
 811:Generated_Source\PSoC4/ADC_1.c **** 
 1795              		.loc 1 811 0
 1796              		@ sp needed
 1797              	.LVL155:
 1798              	.LVL156:
 1799 005a 70BD     		pop	{r4, r5, r6, pc}
 1800              	.L131:
 1801              		.align	2
 1802              	.L130:
 1803 005c 00000000 		.word	.LANCHOR0
 1804 0060 00000000 		.word	ADC_1_allConfigs
 1805 0064 20003A40 		.word	1077542944
 1806 0068 38023A40 		.word	1077543480
 1807 006c 28023A40 		.word	1077543464
 1808              		.cfi_endproc
 1809              	.LFE6:
 1810              		.size	ADC_1_SelectConfig, .-ADC_1_SelectConfig
 1811              		.section	.text.ADC_1_StopConvert,"ax",%progbits
 1812              		.align	2
 1813              		.global	ADC_1_StopConvert
 1814              		.code	16
 1815              		.thumb_func
 1816              		.type	ADC_1_StopConvert, %function
 1817              	ADC_1_StopConvert:
 1818              	.LFB8:
 865:Generated_Source\PSoC4/ADC_1.c ****     if((ADC_1_SAR_SAMPLE_CTRL_REG
 1819              		.loc 1 865 0
 1820              		.cfi_startproc
 1821              		@ args = 0, pretend = 0, frame = 0
 1822              		@ frame_needed = 0, uses_anonymous_args = 0
 1823 0000 10B5     		push	{r4, lr}
 1824              		.cfi_def_cfa_offset 8
 1825              		.cfi_offset 4, -8
 1826              		.cfi_offset 14, -4
 866:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 1827              		.loc 1 866 0
 1828 0002 0C4B     		ldr	r3, .L134
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 73


 1829 0004 1B68     		ldr	r3, [r3]
 1830 0006 5B03     		lsls	r3, r3, #13
 1831 0008 12D5     		bpl	.L132
 870:Generated_Source\PSoC4/ADC_1.c **** 
 1832              		.loc 1 870 0
 1833 000a 0A4A     		ldr	r2, .L134
 1834 000c 1168     		ldr	r1, [r2]
 1835 000e 0A4B     		ldr	r3, .L134+4
 1836 0010 0B40     		ands	r3, r1
 1837 0012 1360     		str	r3, [r2]
 872:Generated_Source\PSoC4/ADC_1.c ****             & ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
 1838              		.loc 1 872 0
 1839 0014 094B     		ldr	r3, .L134+8
 1840 0016 1A68     		ldr	r2, [r3]
 1841 0018 D300     		lsls	r3, r2, #3
 1842 001a 9A1A     		subs	r2, r3, r2
 1843 001c D300     		lsls	r3, r2, #3
 1844 001e 084A     		ldr	r2, .L134+12
 1845 0020 D318     		adds	r3, r2, r3
 1846 0022 1B6B     		ldr	r3, [r3, #48]
 1847 0024 9B07     		lsls	r3, r3, #30
 1848 0026 03D5     		bpl	.L132
 877:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_Start();
 1849              		.loc 1 877 0
 1850 0028 FFF7FEFF 		bl	ADC_1_Stop
 1851              	.LVL157:
 878:Generated_Source\PSoC4/ADC_1.c ****         }
 1852              		.loc 1 878 0
 1853 002c FFF7FEFF 		bl	ADC_1_Start
 1854              	.LVL158:
 1855              	.L132:
 883:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 1856              		.loc 1 883 0
 1857              		@ sp needed
 1858 0030 10BD     		pop	{r4, pc}
 1859              	.L135:
 1860 0032 C046     		.align	2
 1861              	.L134:
 1862 0034 04003A40 		.word	1077542916
 1863 0038 FFFFFEFF 		.word	-65537
 1864 003c 00000000 		.word	.LANCHOR0
 1865 0040 00000000 		.word	ADC_1_allConfigs
 1866              		.cfi_endproc
 1867              	.LFE8:
 1868              		.size	ADC_1_StopConvert, .-ADC_1_StopConvert
 1869              		.comm	ADC_1_countsPer10Volt,4,4
 1870              		.comm	ADC_1_offset,2,4
 1871              		.global	ADC_1_selected
 1872              		.global	ADC_1_initVar
 1873              		.bss
 1874              		.align	2
 1875              		.set	.LANCHOR0,. + 0
 1876              		.type	ADC_1_currentConfig, %object
 1877              		.size	ADC_1_currentConfig, 4
 1878              	ADC_1_currentConfig:
 1879 0000 00000000 		.space	4
 1880              		.type	ADC_1_initVar, %object
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 74


 1881              		.size	ADC_1_initVar, 1
 1882              	ADC_1_initVar:
 1883 0004 00       		.space	1
 1884              		.type	ADC_1_selected, %object
 1885              		.size	ADC_1_selected, 1
 1886              	ADC_1_selected:
 1887 0005 00       		.space	1
 1888              		.text
 1889              	.Letext0:
 1890              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1891              		.file 3 "Generated_Source\\PSoC4\\ADC_1.h"
 1892              		.file 4 "Generated_Source\\PSoC4\\ADC_1_intSarClock.h"
 1893              		.file 5 "Generated_Source\\PSoC4\\CyLib.h"
 1894              		.file 6 "Generated_Source\\PSoC4\\ADC_1_IRQ.h"
 1895              		.section	.debug_info,"",%progbits
 1896              	.Ldebug_info0:
 1897 0000 6D0A0000 		.4byte	0xa6d
 1898 0004 0400     		.2byte	0x4
 1899 0006 00000000 		.4byte	.Ldebug_abbrev0
 1900 000a 04       		.byte	0x4
 1901 000b 01       		.uleb128 0x1
 1902 000c B4040000 		.4byte	.LASF110
 1903 0010 0C       		.byte	0xc
 1904 0011 F4030000 		.4byte	.LASF111
 1905 0015 94020000 		.4byte	.LASF112
 1906 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1907 001d 00000000 		.4byte	0
 1908 0021 00000000 		.4byte	.Ldebug_line0
 1909 0025 02       		.uleb128 0x2
 1910 0026 01       		.byte	0x1
 1911 0027 06       		.byte	0x6
 1912 0028 72000000 		.4byte	.LASF0
 1913 002c 02       		.uleb128 0x2
 1914 002d 01       		.byte	0x1
 1915 002e 08       		.byte	0x8
 1916 002f 24040000 		.4byte	.LASF1
 1917 0033 02       		.uleb128 0x2
 1918 0034 02       		.byte	0x2
 1919 0035 05       		.byte	0x5
 1920 0036 5A040000 		.4byte	.LASF2
 1921 003a 02       		.uleb128 0x2
 1922 003b 02       		.byte	0x2
 1923 003c 07       		.byte	0x7
 1924 003d 30020000 		.4byte	.LASF3
 1925 0041 02       		.uleb128 0x2
 1926 0042 04       		.byte	0x4
 1927 0043 05       		.byte	0x5
 1928 0044 B6000000 		.4byte	.LASF4
 1929 0048 02       		.uleb128 0x2
 1930 0049 04       		.byte	0x4
 1931 004a 07       		.byte	0x7
 1932 004b B5010000 		.4byte	.LASF5
 1933 004f 02       		.uleb128 0x2
 1934 0050 08       		.byte	0x8
 1935 0051 05       		.byte	0x5
 1936 0052 64000000 		.4byte	.LASF6
 1937 0056 02       		.uleb128 0x2
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 75


 1938 0057 08       		.byte	0x8
 1939 0058 07       		.byte	0x7
 1940 0059 40000000 		.4byte	.LASF7
 1941 005d 03       		.uleb128 0x3
 1942 005e 04       		.byte	0x4
 1943 005f 05       		.byte	0x5
 1944 0060 696E7400 		.ascii	"int\000"
 1945 0064 02       		.uleb128 0x2
 1946 0065 04       		.byte	0x4
 1947 0066 07       		.byte	0x7
 1948 0067 7E010000 		.4byte	.LASF8
 1949 006b 04       		.uleb128 0x4
 1950 006c D6000000 		.4byte	.LASF9
 1951 0070 02       		.byte	0x2
 1952 0071 FC01     		.2byte	0x1fc
 1953 0073 2C000000 		.4byte	0x2c
 1954 0077 04       		.uleb128 0x4
 1955 0078 00000000 		.4byte	.LASF10
 1956 007c 02       		.byte	0x2
 1957 007d FD01     		.2byte	0x1fd
 1958 007f 3A000000 		.4byte	0x3a
 1959 0083 04       		.uleb128 0x4
 1960 0084 30010000 		.4byte	.LASF11
 1961 0088 02       		.byte	0x2
 1962 0089 FE01     		.2byte	0x1fe
 1963 008b 48000000 		.4byte	0x48
 1964 008f 04       		.uleb128 0x4
 1965 0090 6A060000 		.4byte	.LASF12
 1966 0094 02       		.byte	0x2
 1967 0095 0002     		.2byte	0x200
 1968 0097 33000000 		.4byte	0x33
 1969 009b 04       		.uleb128 0x4
 1970 009c 9F000000 		.4byte	.LASF13
 1971 00a0 02       		.byte	0x2
 1972 00a1 0102     		.2byte	0x201
 1973 00a3 41000000 		.4byte	0x41
 1974 00a7 04       		.uleb128 0x4
 1975 00a8 31030000 		.4byte	.LASF14
 1976 00ac 02       		.byte	0x2
 1977 00ad 0202     		.2byte	0x202
 1978 00af B3000000 		.4byte	0xb3
 1979 00b3 02       		.uleb128 0x2
 1980 00b4 04       		.byte	0x4
 1981 00b5 04       		.byte	0x4
 1982 00b6 BE030000 		.4byte	.LASF15
 1983 00ba 02       		.uleb128 0x2
 1984 00bb 08       		.byte	0x8
 1985 00bc 04       		.byte	0x4
 1986 00bd E6000000 		.4byte	.LASF16
 1987 00c1 04       		.uleb128 0x4
 1988 00c2 A7030000 		.4byte	.LASF17
 1989 00c6 02       		.byte	0x2
 1990 00c7 0702     		.2byte	0x207
 1991 00c9 4F000000 		.4byte	0x4f
 1992 00cd 02       		.uleb128 0x2
 1993 00ce 01       		.byte	0x1
 1994 00cf 08       		.byte	0x8
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 76


 1995 00d0 4B050000 		.4byte	.LASF18
 1996 00d4 04       		.uleb128 0x4
 1997 00d5 18030000 		.4byte	.LASF19
 1998 00d9 02       		.byte	0x2
 1999 00da A802     		.2byte	0x2a8
 2000 00dc E0000000 		.4byte	0xe0
 2001 00e0 05       		.uleb128 0x5
 2002 00e1 83000000 		.4byte	0x83
 2003 00e5 04       		.uleb128 0x4
 2004 00e6 55050000 		.4byte	.LASF20
 2005 00ea 02       		.byte	0x2
 2006 00eb B802     		.2byte	0x2b8
 2007 00ed F1000000 		.4byte	0xf1
 2008 00f1 06       		.uleb128 0x6
 2009 00f2 04       		.byte	0x4
 2010 00f3 F7000000 		.4byte	0xf7
 2011 00f7 07       		.uleb128 0x7
 2012 00f8 02       		.uleb128 0x2
 2013 00f9 08       		.byte	0x8
 2014 00fa 04       		.byte	0x4
 2015 00fb 65030000 		.4byte	.LASF21
 2016 00ff 02       		.uleb128 0x2
 2017 0100 04       		.byte	0x4
 2018 0101 07       		.byte	0x7
 2019 0102 39030000 		.4byte	.LASF22
 2020 0106 08       		.uleb128 0x8
 2021 0107 38       		.byte	0x38
 2022 0108 03       		.byte	0x3
 2023 0109 5D       		.byte	0x5d
 2024 010a B7010000 		.4byte	0x1b7
 2025 010e 09       		.uleb128 0x9
 2026 010f 90060000 		.4byte	.LASF23
 2027 0113 03       		.byte	0x3
 2028 0114 5F       		.byte	0x5f
 2029 0115 83000000 		.4byte	0x83
 2030 0119 00       		.byte	0
 2031 011a 09       		.uleb128 0x9
 2032 011b 01030000 		.4byte	.LASF24
 2033 011f 03       		.byte	0x3
 2034 0120 60       		.byte	0x60
 2035 0121 83000000 		.4byte	0x83
 2036 0125 04       		.byte	0x4
 2037 0126 09       		.uleb128 0x9
 2038 0127 E0050000 		.4byte	.LASF25
 2039 012b 03       		.byte	0x3
 2040 012c 61       		.byte	0x61
 2041 012d 83000000 		.4byte	0x83
 2042 0131 08       		.byte	0x8
 2043 0132 09       		.uleb128 0x9
 2044 0133 29060000 		.4byte	.LASF26
 2045 0137 03       		.byte	0x3
 2046 0138 64       		.byte	0x64
 2047 0139 83000000 		.4byte	0x83
 2048 013d 0C       		.byte	0xc
 2049 013e 09       		.uleb128 0x9
 2050 013f 23010000 		.4byte	.LASF27
 2051 0143 03       		.byte	0x3
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 77


 2052 0144 65       		.byte	0x65
 2053 0145 83000000 		.4byte	0x83
 2054 0149 10       		.byte	0x10
 2055 014a 09       		.uleb128 0x9
 2056 014b 79030000 		.4byte	.LASF28
 2057 014f 03       		.byte	0x3
 2058 0150 66       		.byte	0x66
 2059 0151 83000000 		.4byte	0x83
 2060 0155 14       		.byte	0x14
 2061 0156 09       		.uleb128 0x9
 2062 0157 54020000 		.4byte	.LASF29
 2063 015b 03       		.byte	0x3
 2064 015c 67       		.byte	0x67
 2065 015d 83000000 		.4byte	0x83
 2066 0161 18       		.byte	0x18
 2067 0162 09       		.uleb128 0x9
 2068 0163 09060000 		.4byte	.LASF30
 2069 0167 03       		.byte	0x3
 2070 0168 68       		.byte	0x68
 2071 0169 83000000 		.4byte	0x83
 2072 016d 1C       		.byte	0x1c
 2073 016e 09       		.uleb128 0x9
 2074 016f ED030000 		.4byte	.LASF31
 2075 0173 03       		.byte	0x3
 2076 0174 69       		.byte	0x69
 2077 0175 83000000 		.4byte	0x83
 2078 0179 20       		.byte	0x20
 2079 017a 09       		.uleb128 0x9
 2080 017b 8B010000 		.4byte	.LASF32
 2081 017f 03       		.byte	0x3
 2082 0180 6A       		.byte	0x6a
 2083 0181 83000000 		.4byte	0x83
 2084 0185 24       		.byte	0x24
 2085 0186 09       		.uleb128 0x9
 2086 0187 86030000 		.4byte	.LASF33
 2087 018b 03       		.byte	0x3
 2088 018c 6B       		.byte	0x6b
 2089 018d 83000000 		.4byte	0x83
 2090 0191 28       		.byte	0x28
 2091 0192 09       		.uleb128 0x9
 2092 0193 A8040000 		.4byte	.LASF34
 2093 0197 03       		.byte	0x3
 2094 0198 6C       		.byte	0x6c
 2095 0199 9B000000 		.4byte	0x9b
 2096 019d 2C       		.byte	0x2c
 2097 019e 09       		.uleb128 0x9
 2098 019f E5050000 		.4byte	.LASF35
 2099 01a3 03       		.byte	0x3
 2100 01a4 6E       		.byte	0x6e
 2101 01a5 83000000 		.4byte	0x83
 2102 01a9 30       		.byte	0x30
 2103 01aa 09       		.uleb128 0x9
 2104 01ab 89000000 		.4byte	.LASF36
 2105 01af 03       		.byte	0x3
 2106 01b0 75       		.byte	0x75
 2107 01b1 77000000 		.4byte	0x77
 2108 01b5 34       		.byte	0x34
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 78


 2109 01b6 00       		.byte	0
 2110 01b7 0A       		.uleb128 0xa
 2111 01b8 34060000 		.4byte	.LASF37
 2112 01bc 03       		.byte	0x3
 2113 01bd 7C       		.byte	0x7c
 2114 01be 06010000 		.4byte	0x106
 2115 01c2 0B       		.uleb128 0xb
 2116 01c3 5D010000 		.4byte	.LASF113
 2117 01c7 01       		.byte	0x1
 2118 01c8 E102     		.2byte	0x2e1
 2119 01ca 00000000 		.4byte	.LFB5
 2120 01ce 34000000 		.4byte	.LFE5-.LFB5
 2121 01d2 01       		.uleb128 0x1
 2122 01d3 9C       		.byte	0x9c
 2123 01d4 F7010000 		.4byte	0x1f7
 2124 01d8 0C       		.uleb128 0xc
 2125 01d9 62050000 		.4byte	.LASF38
 2126 01dd 01       		.byte	0x1
 2127 01de E102     		.2byte	0x2e1
 2128 01e0 F7010000 		.4byte	0x1f7
 2129 01e4 01       		.uleb128 0x1
 2130 01e5 50       		.byte	0x50
 2131 01e6 0D       		.uleb128 0xd
 2132 01e7 F3010000 		.4byte	.LASF40
 2133 01eb 01       		.byte	0x1
 2134 01ec E502     		.2byte	0x2e5
 2135 01ee 83000000 		.4byte	0x83
 2136 01f2 00000000 		.4byte	.LLST0
 2137 01f6 00       		.byte	0
 2138 01f7 06       		.uleb128 0x6
 2139 01f8 04       		.byte	0x4
 2140 01f9 FD010000 		.4byte	0x1fd
 2141 01fd 0E       		.uleb128 0xe
 2142 01fe B7010000 		.4byte	0x1b7
 2143 0202 0F       		.uleb128 0xf
 2144 0203 AD050000 		.4byte	.LASF114
 2145 0207 01       		.byte	0x1
 2146 0208 1504     		.2byte	0x415
 2147 020a 9B000000 		.4byte	0x9b
 2148 020e 00000000 		.4byte	.LFB13
 2149 0212 58000000 		.4byte	.LFE13-.LFB13
 2150 0216 01       		.uleb128 0x1
 2151 0217 9C       		.byte	0x9c
 2152 0218 4D020000 		.4byte	0x24d
 2153 021c 10       		.uleb128 0x10
 2154 021d 46050000 		.4byte	.LASF39
 2155 0221 01       		.byte	0x1
 2156 0222 1504     		.2byte	0x415
 2157 0224 83000000 		.4byte	0x83
 2158 0228 2F000000 		.4byte	.LLST1
 2159 022c 0D       		.uleb128 0xd
 2160 022d 1E030000 		.4byte	.LASF41
 2161 0231 01       		.byte	0x1
 2162 0232 1704     		.2byte	0x417
 2163 0234 9B000000 		.4byte	0x9b
 2164 0238 50000000 		.4byte	.LLST2
 2165 023c 0D       		.uleb128 0xd
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 79


 2166 023d 0D030000 		.4byte	.LASF42
 2167 0241 01       		.byte	0x1
 2168 0242 1804     		.2byte	0x418
 2169 0244 83000000 		.4byte	0x83
 2170 0248 6F000000 		.4byte	.LLST3
 2171 024c 00       		.byte	0
 2172 024d 11       		.uleb128 0x11
 2173 024e 94000000 		.4byte	.LASF44
 2174 0252 01       		.byte	0x1
 2175 0253 6602     		.2byte	0x266
 2176 0255 00000000 		.4byte	.LFB3
 2177 0259 10000000 		.4byte	.LFE3-.LFB3
 2178 025d 01       		.uleb128 0x1
 2179 025e 9C       		.byte	0x9c
 2180 025f 12       		.uleb128 0x12
 2181 0260 A5000000 		.4byte	.LASF46
 2182 0264 01       		.byte	0x1
 2183 0265 8402     		.2byte	0x284
 2184 0267 00000000 		.4byte	.LFB4
 2185 026b D0000000 		.4byte	.LFE4-.LFB4
 2186 026f 01       		.uleb128 0x1
 2187 0270 9C       		.byte	0x9c
 2188 0271 D2020000 		.4byte	0x2d2
 2189 0275 10       		.uleb128 0x10
 2190 0276 62050000 		.4byte	.LASF38
 2191 027a 01       		.byte	0x1
 2192 027b 8402     		.2byte	0x284
 2193 027d F7010000 		.4byte	0x1f7
 2194 0281 8D000000 		.4byte	.LLST4
 2195 0285 0D       		.uleb128 0xd
 2196 0286 8E040000 		.4byte	.LASF43
 2197 028a 01       		.byte	0x1
 2198 028b 8602     		.2byte	0x286
 2199 028d 83000000 		.4byte	0x83
 2200 0291 B9000000 		.4byte	.LLST5
 2201 0295 0D       		.uleb128 0xd
 2202 0296 F3010000 		.4byte	.LASF40
 2203 029a 01       		.byte	0x1
 2204 029b 8702     		.2byte	0x287
 2205 029d 83000000 		.4byte	0x83
 2206 02a1 D8000000 		.4byte	.LLST6
 2207 02a5 13       		.uleb128 0x13
 2208 02a6 08000000 		.4byte	.LVL15
 2209 02aa 180A0000 		.4byte	0xa18
 2210 02ae 14       		.uleb128 0x14
 2211 02af 10000000 		.4byte	.LVL16
 2212 02b3 230A0000 		.4byte	0xa23
 2213 02b7 C1020000 		.4byte	0x2c1
 2214 02bb 15       		.uleb128 0x15
 2215 02bc 01       		.uleb128 0x1
 2216 02bd 51       		.byte	0x51
 2217 02be 01       		.uleb128 0x1
 2218 02bf 30       		.byte	0x30
 2219 02c0 00       		.byte	0
 2220 02c1 16       		.uleb128 0x16
 2221 02c2 16000000 		.4byte	.LVL17
 2222 02c6 2E0A0000 		.4byte	0xa2e
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 80


 2223 02ca 15       		.uleb128 0x15
 2224 02cb 01       		.uleb128 0x1
 2225 02cc 50       		.byte	0x50
 2226 02cd 02       		.uleb128 0x2
 2227 02ce 08       		.byte	0x8
 2228 02cf FF       		.byte	0xff
 2229 02d0 00       		.byte	0
 2230 02d1 00       		.byte	0
 2231 02d2 11       		.uleb128 0x11
 2232 02d3 A2010000 		.4byte	.LASF45
 2233 02d7 01       		.byte	0x1
 2234 02d8 4003     		.2byte	0x340
 2235 02da 00000000 		.4byte	.LFB7
 2236 02de 28000000 		.4byte	.LFE7-.LFB7
 2237 02e2 01       		.uleb128 0x1
 2238 02e3 9C       		.byte	0x9c
 2239 02e4 12       		.uleb128 0x12
 2240 02e5 ED000000 		.4byte	.LASF47
 2241 02e9 01       		.byte	0x1
 2242 02ea 8703     		.2byte	0x387
 2243 02ec 00000000 		.4byte	.LFB9
 2244 02f0 28000000 		.4byte	.LFE9-.LFB9
 2245 02f4 01       		.uleb128 0x1
 2246 02f5 9C       		.byte	0x9c
 2247 02f6 09030000 		.4byte	0x309
 2248 02fa 0C       		.uleb128 0xc
 2249 02fb 50050000 		.4byte	.LASF48
 2250 02ff 01       		.byte	0x1
 2251 0300 8703     		.2byte	0x387
 2252 0302 83000000 		.4byte	0x83
 2253 0306 01       		.uleb128 0x1
 2254 0307 50       		.byte	0x50
 2255 0308 00       		.byte	0
 2256 0309 12       		.uleb128 0x12
 2257 030a 71040000 		.4byte	.LASF49
 2258 030e 01       		.byte	0x1
 2259 030f BE03     		.2byte	0x3be
 2260 0311 00000000 		.4byte	.LFB10
 2261 0315 10000000 		.4byte	.LFE10-.LFB10
 2262 0319 01       		.uleb128 0x1
 2263 031a 9C       		.byte	0x9c
 2264 031b 30030000 		.4byte	0x330
 2265 031f 10       		.uleb128 0x10
 2266 0320 46010000 		.4byte	.LASF50
 2267 0324 01       		.byte	0x1
 2268 0325 BE03     		.2byte	0x3be
 2269 0327 83000000 		.4byte	0x83
 2270 032b EE000000 		.4byte	.LLST7
 2271 032f 00       		.byte	0
 2272 0330 12       		.uleb128 0x12
 2273 0331 70060000 		.4byte	.LASF51
 2274 0335 01       		.byte	0x1
 2275 0336 D303     		.2byte	0x3d3
 2276 0338 00000000 		.4byte	.LFB11
 2277 033c 2C000000 		.4byte	.LFE11-.LFB11
 2278 0340 01       		.uleb128 0x1
 2279 0341 9C       		.byte	0x9c
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 81


 2280 0342 65030000 		.4byte	0x365
 2281 0346 10       		.uleb128 0x10
 2282 0347 FD010000 		.4byte	.LASF52
 2283 034b 01       		.byte	0x1
 2284 034c D303     		.2byte	0x3d3
 2285 034e 83000000 		.4byte	0x83
 2286 0352 0F010000 		.4byte	.LLST8
 2287 0356 17       		.uleb128 0x17
 2288 0357 07000000 		.4byte	.LASF53
 2289 035b 01       		.byte	0x1
 2290 035c D503     		.2byte	0x3d5
 2291 035e 83000000 		.4byte	0x83
 2292 0362 01       		.uleb128 0x1
 2293 0363 52       		.byte	0x52
 2294 0364 00       		.byte	0
 2295 0365 18       		.uleb128 0x18
 2296 0366 13060000 		.4byte	.LASF56
 2297 036a 01       		.byte	0x1
 2298 036b EF03     		.2byte	0x3ef
 2299 036d 83000000 		.4byte	0x83
 2300 0371 00000000 		.4byte	.LFB12
 2301 0375 38000000 		.4byte	.LFE12-.LFB12
 2302 0379 01       		.uleb128 0x1
 2303 037a 9C       		.byte	0x9c
 2304 037b B0030000 		.4byte	0x3b0
 2305 037f 10       		.uleb128 0x10
 2306 0380 76010000 		.4byte	.LASF54
 2307 0384 01       		.byte	0x1
 2308 0385 EF03     		.2byte	0x3ef
 2309 0387 83000000 		.4byte	0x83
 2310 038b 2D010000 		.4byte	.LLST9
 2311 038f 0D       		.uleb128 0xd
 2312 0390 9C060000 		.4byte	.LASF55
 2313 0394 01       		.byte	0x1
 2314 0395 F103     		.2byte	0x3f1
 2315 0397 83000000 		.4byte	0x83
 2316 039b 61010000 		.4byte	.LLST10
 2317 039f 19       		.uleb128 0x19
 2318 03a0 77647400 		.ascii	"wdt\000"
 2319 03a4 01       		.byte	0x1
 2320 03a5 F203     		.2byte	0x3f2
 2321 03a7 83000000 		.4byte	0x83
 2322 03ab 97010000 		.4byte	.LLST11
 2323 03af 00       		.byte	0
 2324 03b0 18       		.uleb128 0x18
 2325 03b1 32040000 		.4byte	.LASF57
 2326 03b5 01       		.byte	0x1
 2327 03b6 3E04     		.2byte	0x43e
 2328 03b8 8F000000 		.4byte	0x8f
 2329 03bc 00000000 		.4byte	.LFB14
 2330 03c0 54000000 		.4byte	.LFE14-.LFB14
 2331 03c4 01       		.uleb128 0x1
 2332 03c5 9C       		.byte	0x9c
 2333 03c6 FA030000 		.4byte	0x3fa
 2334 03ca 10       		.uleb128 0x10
 2335 03cb 46050000 		.4byte	.LASF39
 2336 03cf 01       		.byte	0x1
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 82


 2337 03d0 3E04     		.2byte	0x43e
 2338 03d2 83000000 		.4byte	0x83
 2339 03d6 CA010000 		.4byte	.LLST12
 2340 03da 0D       		.uleb128 0xd
 2341 03db 27030000 		.4byte	.LASF58
 2342 03df 01       		.byte	0x1
 2343 03e0 4004     		.2byte	0x440
 2344 03e2 83000000 		.4byte	0x83
 2345 03e6 0F020000 		.4byte	.LLST13
 2346 03ea 16       		.uleb128 0x16
 2347 03eb 1E000000 		.4byte	.LVL38
 2348 03ef 390A0000 		.4byte	0xa39
 2349 03f3 15       		.uleb128 0x15
 2350 03f4 01       		.uleb128 0x1
 2351 03f5 50       		.byte	0x50
 2352 03f6 01       		.uleb128 0x1
 2353 03f7 30       		.byte	0x30
 2354 03f8 00       		.byte	0
 2355 03f9 00       		.byte	0
 2356 03fa 18       		.uleb128 0x18
 2357 03fb 48060000 		.4byte	.LASF59
 2358 03ff 01       		.byte	0x1
 2359 0400 6104     		.2byte	0x461
 2360 0402 9B000000 		.4byte	0x9b
 2361 0406 00000000 		.4byte	.LFB15
 2362 040a 64000000 		.4byte	.LFE15-.LFB15
 2363 040e 01       		.uleb128 0x1
 2364 040f 9C       		.byte	0x9c
 2365 0410 78040000 		.4byte	0x478
 2366 0414 10       		.uleb128 0x10
 2367 0415 46050000 		.4byte	.LASF39
 2368 0419 01       		.byte	0x1
 2369 041a 6104     		.2byte	0x461
 2370 041c 83000000 		.4byte	0x83
 2371 0420 2D020000 		.4byte	.LLST14
 2372 0424 0D       		.uleb128 0xd
 2373 0425 27030000 		.4byte	.LASF58
 2374 0429 01       		.byte	0x1
 2375 042a 6304     		.2byte	0x463
 2376 042c 83000000 		.4byte	0x83
 2377 0430 59020000 		.4byte	.LLST15
 2378 0434 0D       		.uleb128 0xd
 2379 0435 82040000 		.4byte	.LASF60
 2380 0439 01       		.byte	0x1
 2381 043a 6404     		.2byte	0x464
 2382 043c 8F000000 		.4byte	0x8f
 2383 0440 77020000 		.4byte	.LLST16
 2384 0444 0D       		.uleb128 0xd
 2385 0445 75020000 		.4byte	.LASF61
 2386 0449 01       		.byte	0x1
 2387 044a 6504     		.2byte	0x465
 2388 044c 9B000000 		.4byte	0x9b
 2389 0450 8A020000 		.4byte	.LLST17
 2390 0454 14       		.uleb128 0x14
 2391 0455 1E000000 		.4byte	.LVL46
 2392 0459 390A0000 		.4byte	0xa39
 2393 045d 67040000 		.4byte	0x467
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 83


 2394 0461 15       		.uleb128 0x15
 2395 0462 01       		.uleb128 0x1
 2396 0463 50       		.byte	0x50
 2397 0464 01       		.uleb128 0x1
 2398 0465 30       		.byte	0x30
 2399 0466 00       		.byte	0
 2400 0467 16       		.uleb128 0x16
 2401 0468 4A000000 		.4byte	.LVL50
 2402 046c 02020000 		.4byte	0x202
 2403 0470 15       		.uleb128 0x15
 2404 0471 01       		.uleb128 0x1
 2405 0472 50       		.byte	0x50
 2406 0473 02       		.uleb128 0x2
 2407 0474 75       		.byte	0x75
 2408 0475 00       		.sleb128 0
 2409 0476 00       		.byte	0
 2410 0477 00       		.byte	0
 2411 0478 12       		.uleb128 0x12
 2412 0479 4B010000 		.4byte	.LASF62
 2413 047d 01       		.byte	0x1
 2414 047e 8D04     		.2byte	0x48d
 2415 0480 00000000 		.4byte	.LFB16
 2416 0484 1C000000 		.4byte	.LFE16-.LFB16
 2417 0488 01       		.uleb128 0x1
 2418 0489 9C       		.byte	0x9c
 2419 048a 9F040000 		.4byte	0x49f
 2420 048e 10       		.uleb128 0x10
 2421 048f 5C030000 		.4byte	.LASF63
 2422 0493 01       		.byte	0x1
 2423 0494 8D04     		.2byte	0x48d
 2424 0496 83000000 		.4byte	0x83
 2425 049a A8020000 		.4byte	.LLST18
 2426 049e 00       		.byte	0
 2427 049f 12       		.uleb128 0x12
 2428 04a0 08020000 		.4byte	.LASF64
 2429 04a4 01       		.byte	0x1
 2430 04a5 A104     		.2byte	0x4a1
 2431 04a7 00000000 		.4byte	.LFB17
 2432 04ab 18000000 		.4byte	.LFE17-.LFB17
 2433 04af 01       		.uleb128 0x1
 2434 04b0 9C       		.byte	0x9c
 2435 04b1 C6040000 		.4byte	0x4c6
 2436 04b5 10       		.uleb128 0x10
 2437 04b6 D6030000 		.4byte	.LASF65
 2438 04ba 01       		.byte	0x1
 2439 04bb A104     		.2byte	0x4a1
 2440 04bd 83000000 		.4byte	0x83
 2441 04c1 C9020000 		.4byte	.LLST19
 2442 04c5 00       		.byte	0
 2443 04c6 12       		.uleb128 0x12
 2444 04c7 02010000 		.4byte	.LASF66
 2445 04cb 01       		.byte	0x1
 2446 04cc B804     		.2byte	0x4b8
 2447 04ce 00000000 		.4byte	.LFB18
 2448 04d2 2C000000 		.4byte	.LFE18-.LFB18
 2449 04d6 01       		.uleb128 0x1
 2450 04d7 9C       		.byte	0x9c
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 84


 2451 04d8 FB040000 		.4byte	0x4fb
 2452 04dc 10       		.uleb128 0x10
 2453 04dd EC020000 		.4byte	.LASF67
 2454 04e1 01       		.byte	0x1
 2455 04e2 B804     		.2byte	0x4b8
 2456 04e4 83000000 		.4byte	0x83
 2457 04e8 EA020000 		.4byte	.LLST20
 2458 04ec 17       		.uleb128 0x17
 2459 04ed 07000000 		.4byte	.LASF53
 2460 04f1 01       		.byte	0x1
 2461 04f2 BA04     		.2byte	0x4ba
 2462 04f4 83000000 		.4byte	0x83
 2463 04f8 01       		.uleb128 0x1
 2464 04f9 52       		.byte	0x52
 2465 04fa 00       		.byte	0
 2466 04fb 12       		.uleb128 0x12
 2467 04fc 13040000 		.4byte	.LASF68
 2468 0500 01       		.byte	0x1
 2469 0501 D004     		.2byte	0x4d0
 2470 0503 00000000 		.4byte	.LFB19
 2471 0507 2C000000 		.4byte	.LFE19-.LFB19
 2472 050b 01       		.uleb128 0x1
 2473 050c 9C       		.byte	0x9c
 2474 050d 30050000 		.4byte	0x530
 2475 0511 10       		.uleb128 0x10
 2476 0512 9F030000 		.4byte	.LASF69
 2477 0516 01       		.byte	0x1
 2478 0517 D004     		.2byte	0x4d0
 2479 0519 83000000 		.4byte	0x83
 2480 051d 08030000 		.4byte	.LLST21
 2481 0521 17       		.uleb128 0x17
 2482 0522 07000000 		.4byte	.LASF53
 2483 0526 01       		.byte	0x1
 2484 0527 D204     		.2byte	0x4d2
 2485 0529 83000000 		.4byte	0x83
 2486 052d 01       		.uleb128 0x1
 2487 052e 52       		.byte	0x52
 2488 052f 00       		.byte	0
 2489 0530 12       		.uleb128 0x12
 2490 0531 5A060000 		.4byte	.LASF70
 2491 0535 01       		.byte	0x1
 2492 0536 F104     		.2byte	0x4f1
 2493 0538 00000000 		.4byte	.LFB20
 2494 053c 44000000 		.4byte	.LFE20-.LFB20
 2495 0540 01       		.uleb128 0x1
 2496 0541 9C       		.byte	0x9c
 2497 0542 76050000 		.4byte	0x576
 2498 0546 10       		.uleb128 0x10
 2499 0547 46050000 		.4byte	.LASF39
 2500 054b 01       		.byte	0x1
 2501 054c F104     		.2byte	0x4f1
 2502 054e 83000000 		.4byte	0x83
 2503 0552 26030000 		.4byte	.LLST22
 2504 0556 10       		.uleb128 0x10
 2505 0557 D9050000 		.4byte	.LASF71
 2506 055b 01       		.byte	0x1
 2507 055c F104     		.2byte	0x4f1
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 85


 2508 055e 8F000000 		.4byte	0x8f
 2509 0562 52030000 		.4byte	.LLST23
 2510 0566 16       		.uleb128 0x16
 2511 0567 20000000 		.4byte	.LVL69
 2512 056b 390A0000 		.4byte	0xa39
 2513 056f 15       		.uleb128 0x15
 2514 0570 01       		.uleb128 0x1
 2515 0571 50       		.byte	0x50
 2516 0572 01       		.uleb128 0x1
 2517 0573 30       		.byte	0x30
 2518 0574 00       		.byte	0
 2519 0575 00       		.byte	0
 2520 0576 12       		.uleb128 0x12
 2521 0577 91030000 		.4byte	.LASF72
 2522 057b 01       		.byte	0x1
 2523 057c 1105     		.2byte	0x511
 2524 057e 00000000 		.4byte	.LFB21
 2525 0582 44000000 		.4byte	.LFE21-.LFB21
 2526 0586 01       		.uleb128 0x1
 2527 0587 9C       		.byte	0x9c
 2528 0588 BC050000 		.4byte	0x5bc
 2529 058c 10       		.uleb128 0x10
 2530 058d 46050000 		.4byte	.LASF39
 2531 0591 01       		.byte	0x1
 2532 0592 1105     		.2byte	0x511
 2533 0594 83000000 		.4byte	0x83
 2534 0598 73030000 		.4byte	.LLST24
 2535 059c 10       		.uleb128 0x10
 2536 059d 11000000 		.4byte	.LASF73
 2537 05a1 01       		.byte	0x1
 2538 05a2 1105     		.2byte	0x511
 2539 05a4 9B000000 		.4byte	0x9b
 2540 05a8 9F030000 		.4byte	.LLST25
 2541 05ac 16       		.uleb128 0x16
 2542 05ad 20000000 		.4byte	.LVL73
 2543 05b1 390A0000 		.4byte	0xa39
 2544 05b5 15       		.uleb128 0x15
 2545 05b6 01       		.uleb128 0x1
 2546 05b7 50       		.byte	0x50
 2547 05b8 01       		.uleb128 0x1
 2548 05b9 30       		.byte	0x30
 2549 05ba 00       		.byte	0
 2550 05bb 00       		.byte	0
 2551 05bc 1A       		.uleb128 0x1a
 2552 05bd BF000000 		.4byte	.LASF74
 2553 05c1 01       		.byte	0x1
 2554 05c2 2A05     		.2byte	0x52a
 2555 05c4 8F000000 		.4byte	0x8f
 2556 05c8 00000000 		.4byte	.LFB22
 2557 05cc 88000000 		.4byte	.LFE22-.LFB22
 2558 05d0 01       		.uleb128 0x1
 2559 05d1 9C       		.byte	0x9c
 2560 05d2 4A060000 		.4byte	0x64a
 2561 05d6 10       		.uleb128 0x10
 2562 05d7 46050000 		.4byte	.LASF39
 2563 05db 01       		.byte	0x1
 2564 05dc 2A05     		.2byte	0x52a
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 86


 2565 05de 83000000 		.4byte	0x83
 2566 05e2 CC030000 		.4byte	.LLST26
 2567 05e6 10       		.uleb128 0x10
 2568 05e7 F0050000 		.4byte	.LASF75
 2569 05eb 01       		.byte	0x1
 2570 05ec 2A05     		.2byte	0x52a
 2571 05ee 8F000000 		.4byte	0x8f
 2572 05f2 F8030000 		.4byte	.LLST27
 2573 05f6 0D       		.uleb128 0xd
 2574 05f7 71010000 		.4byte	.LASF76
 2575 05fb 01       		.byte	0x1
 2576 05fc 2C05     		.2byte	0x52c
 2577 05fe 83000000 		.4byte	0x83
 2578 0602 48040000 		.4byte	.LLST28
 2579 0606 0D       		.uleb128 0xd
 2580 0607 1B020000 		.4byte	.LASF77
 2581 060b 01       		.byte	0x1
 2582 060c 2D05     		.2byte	0x52d
 2583 060e 83000000 		.4byte	0x83
 2584 0612 5B040000 		.4byte	.LLST29
 2585 0616 0D       		.uleb128 0xd
 2586 0617 F6020000 		.4byte	.LASF78
 2587 061b 01       		.byte	0x1
 2588 061c 2E05     		.2byte	0x52e
 2589 061e 83000000 		.4byte	0x83
 2590 0622 86040000 		.4byte	.LLST30
 2591 0626 14       		.uleb128 0x14
 2592 0627 24000000 		.4byte	.LVL80
 2593 062b 390A0000 		.4byte	0xa39
 2594 062f 39060000 		.4byte	0x639
 2595 0633 15       		.uleb128 0x15
 2596 0634 01       		.uleb128 0x1
 2597 0635 50       		.byte	0x50
 2598 0636 01       		.uleb128 0x1
 2599 0637 30       		.byte	0x30
 2600 0638 00       		.byte	0
 2601 0639 16       		.uleb128 0x16
 2602 063a 54000000 		.4byte	.LVL85
 2603 063e 02020000 		.4byte	0x202
 2604 0642 15       		.uleb128 0x15
 2605 0643 01       		.uleb128 0x1
 2606 0644 50       		.byte	0x50
 2607 0645 02       		.uleb128 0x2
 2608 0646 76       		.byte	0x76
 2609 0647 00       		.sleb128 0
 2610 0648 00       		.byte	0
 2611 0649 00       		.byte	0
 2612 064a 1A       		.uleb128 0x1a
 2613 064b 69050000 		.4byte	.LASF79
 2614 064f 01       		.byte	0x1
 2615 0650 7F05     		.2byte	0x57f
 2616 0652 A7000000 		.4byte	0xa7
 2617 0656 00000000 		.4byte	.LFB23
 2618 065a 54000000 		.4byte	.LFE23-.LFB23
 2619 065e 01       		.uleb128 0x1
 2620 065f 9C       		.byte	0x9c
 2621 0660 B6060000 		.4byte	0x6b6
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 87


 2622 0664 10       		.uleb128 0x10
 2623 0665 46050000 		.4byte	.LASF39
 2624 0669 01       		.byte	0x1
 2625 066a 7F05     		.2byte	0x57f
 2626 066c 83000000 		.4byte	0x83
 2627 0670 99040000 		.4byte	.LLST31
 2628 0674 10       		.uleb128 0x10
 2629 0675 F0050000 		.4byte	.LASF75
 2630 0679 01       		.byte	0x1
 2631 067a 7F05     		.2byte	0x57f
 2632 067c 8F000000 		.4byte	0x8f
 2633 0680 D3040000 		.4byte	.LLST32
 2634 0684 0D       		.uleb128 0xd
 2635 0685 64040000 		.4byte	.LASF80
 2636 0689 01       		.byte	0x1
 2637 068a 8105     		.2byte	0x581
 2638 068c A7000000 		.4byte	0xa7
 2639 0690 0A050000 		.4byte	.LLST33
 2640 0694 0D       		.uleb128 0xd
 2641 0695 F6020000 		.4byte	.LASF78
 2642 0699 01       		.byte	0x1
 2643 069a 8205     		.2byte	0x582
 2644 069c 83000000 		.4byte	0x83
 2645 06a0 48050000 		.4byte	.LLST34
 2646 06a4 16       		.uleb128 0x16
 2647 06a5 1E000000 		.4byte	.LVL97
 2648 06a9 BC050000 		.4byte	0x5bc
 2649 06ad 15       		.uleb128 0x15
 2650 06ae 01       		.uleb128 0x1
 2651 06af 50       		.byte	0x50
 2652 06b0 03       		.uleb128 0x3
 2653 06b1 F3       		.byte	0xf3
 2654 06b2 01       		.uleb128 0x1
 2655 06b3 50       		.byte	0x50
 2656 06b4 00       		.byte	0
 2657 06b5 00       		.byte	0
 2658 06b6 1A       		.uleb128 0x1a
 2659 06b7 5F020000 		.4byte	.LASF81
 2660 06bb 01       		.byte	0x1
 2661 06bc B205     		.2byte	0x5b2
 2662 06be 8F000000 		.4byte	0x8f
 2663 06c2 00000000 		.4byte	.LFB24
 2664 06c6 68000000 		.4byte	.LFE24-.LFB24
 2665 06ca 01       		.uleb128 0x1
 2666 06cb 9C       		.byte	0x9c
 2667 06cc 22070000 		.4byte	0x722
 2668 06d0 10       		.uleb128 0x10
 2669 06d1 46050000 		.4byte	.LASF39
 2670 06d5 01       		.byte	0x1
 2671 06d6 B205     		.2byte	0x5b2
 2672 06d8 83000000 		.4byte	0x83
 2673 06dc 66050000 		.4byte	.LLST35
 2674 06e0 10       		.uleb128 0x10
 2675 06e1 F0050000 		.4byte	.LASF75
 2676 06e5 01       		.byte	0x1
 2677 06e6 B205     		.2byte	0x5b2
 2678 06e8 8F000000 		.4byte	0x8f
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 88


 2679 06ec A0050000 		.4byte	.LLST36
 2680 06f0 0D       		.uleb128 0xd
 2681 06f1 82060000 		.4byte	.LASF82
 2682 06f5 01       		.byte	0x1
 2683 06f6 B405     		.2byte	0x5b4
 2684 06f8 8F000000 		.4byte	0x8f
 2685 06fc E2050000 		.4byte	.LLST37
 2686 0700 0D       		.uleb128 0xd
 2687 0701 F6020000 		.4byte	.LASF78
 2688 0705 01       		.byte	0x1
 2689 0706 B505     		.2byte	0x5b5
 2690 0708 83000000 		.4byte	0x83
 2691 070c 18060000 		.4byte	.LLST38
 2692 0710 16       		.uleb128 0x16
 2693 0711 1E000000 		.4byte	.LVL108
 2694 0715 BC050000 		.4byte	0x5bc
 2695 0719 15       		.uleb128 0x15
 2696 071a 01       		.uleb128 0x1
 2697 071b 50       		.byte	0x50
 2698 071c 03       		.uleb128 0x3
 2699 071d F3       		.byte	0xf3
 2700 071e 01       		.uleb128 0x1
 2701 071f 50       		.byte	0x50
 2702 0720 00       		.byte	0
 2703 0721 00       		.byte	0
 2704 0722 1A       		.uleb128 0x1a
 2705 0723 BF060000 		.4byte	.LASF83
 2706 0727 01       		.byte	0x1
 2707 0728 E805     		.2byte	0x5e8
 2708 072a 9B000000 		.4byte	0x9b
 2709 072e 00000000 		.4byte	.LFB25
 2710 0732 4C000000 		.4byte	.LFE25-.LFB25
 2711 0736 01       		.uleb128 0x1
 2712 0737 9C       		.byte	0x9c
 2713 0738 8E070000 		.4byte	0x78e
 2714 073c 10       		.uleb128 0x10
 2715 073d 46050000 		.4byte	.LASF39
 2716 0741 01       		.byte	0x1
 2717 0742 E805     		.2byte	0x5e8
 2718 0744 83000000 		.4byte	0x83
 2719 0748 6E060000 		.4byte	.LLST39
 2720 074c 10       		.uleb128 0x10
 2721 074d F0050000 		.4byte	.LASF75
 2722 0751 01       		.byte	0x1
 2723 0752 E805     		.2byte	0x5e8
 2724 0754 8F000000 		.4byte	0x8f
 2725 0758 A8060000 		.4byte	.LLST40
 2726 075c 0D       		.uleb128 0xd
 2727 075d C3050000 		.4byte	.LASF84
 2728 0761 01       		.byte	0x1
 2729 0762 EA05     		.2byte	0x5ea
 2730 0764 C1000000 		.4byte	0xc1
 2731 0768 DF060000 		.4byte	.LLST41
 2732 076c 0D       		.uleb128 0xd
 2733 076d F6020000 		.4byte	.LASF78
 2734 0771 01       		.byte	0x1
 2735 0772 EB05     		.2byte	0x5eb
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 89


 2736 0774 83000000 		.4byte	0x83
 2737 0778 0F070000 		.4byte	.LLST42
 2738 077c 16       		.uleb128 0x16
 2739 077d 1E000000 		.4byte	.LVL121
 2740 0781 BC050000 		.4byte	0x5bc
 2741 0785 15       		.uleb128 0x15
 2742 0786 01       		.uleb128 0x1
 2743 0787 50       		.byte	0x50
 2744 0788 03       		.uleb128 0x3
 2745 0789 F3       		.byte	0xf3
 2746 078a 01       		.uleb128 0x1
 2747 078b 50       		.byte	0x50
 2748 078c 00       		.byte	0
 2749 078d 00       		.byte	0
 2750 078e 1B       		.uleb128 0x1b
 2751 078f 7E000000 		.4byte	.LASF85
 2752 0793 01       		.byte	0x1
 2753 0794 F007     		.2byte	0x7f0
 2754 0796 00000000 		.4byte	.LFB26
 2755 079a DC000000 		.4byte	.LFE26-.LFB26
 2756 079e 01       		.uleb128 0x1
 2757 079f 9C       		.byte	0x9c
 2758 07a0 10080000 		.4byte	0x810
 2759 07a4 0D       		.uleb128 0xd
 2760 07a5 8E040000 		.4byte	.LASF43
 2761 07a9 01       		.byte	0x1
 2762 07aa F207     		.2byte	0x7f2
 2763 07ac 83000000 		.4byte	0x83
 2764 07b0 65070000 		.4byte	.LLST43
 2765 07b4 0D       		.uleb128 0xd
 2766 07b5 98010000 		.4byte	.LASF86
 2767 07b9 01       		.byte	0x1
 2768 07ba F307     		.2byte	0x7f3
 2769 07bc 83000000 		.4byte	0x83
 2770 07c0 9B070000 		.4byte	.LLST44
 2771 07c4 0D       		.uleb128 0xd
 2772 07c5 19000000 		.4byte	.LASF87
 2773 07c9 01       		.byte	0x1
 2774 07ca F407     		.2byte	0x7f4
 2775 07cc 9B000000 		.4byte	0x9b
 2776 07d0 DD070000 		.4byte	.LLST45
 2777 07d4 14       		.uleb128 0x14
 2778 07d5 90000000 		.4byte	.LVL135
 2779 07d9 440A0000 		.4byte	0xa44
 2780 07dd EC070000 		.4byte	0x7ec
 2781 07e1 15       		.uleb128 0x15
 2782 07e2 01       		.uleb128 0x1
 2783 07e3 50       		.byte	0x50
 2784 07e4 01       		.uleb128 0x1
 2785 07e5 3F       		.byte	0x3f
 2786 07e6 15       		.uleb128 0x15
 2787 07e7 01       		.uleb128 0x1
 2788 07e8 51       		.byte	0x51
 2789 07e9 01       		.uleb128 0x1
 2790 07ea 30       		.byte	0x30
 2791 07eb 00       		.byte	0
 2792 07ec 14       		.uleb128 0x14
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 90


 2793 07ed 98000000 		.4byte	.LVL136
 2794 07f1 4F0A0000 		.4byte	0xa4f
 2795 07f5 FF070000 		.4byte	0x7ff
 2796 07f9 15       		.uleb128 0x15
 2797 07fa 01       		.uleb128 0x1
 2798 07fb 50       		.byte	0x50
 2799 07fc 01       		.uleb128 0x1
 2800 07fd 3F       		.byte	0x3f
 2801 07fe 00       		.byte	0
 2802 07ff 16       		.uleb128 0x16
 2803 0800 AE000000 		.4byte	.LVL139
 2804 0804 5F020000 		.4byte	0x25f
 2805 0808 15       		.uleb128 0x15
 2806 0809 01       		.uleb128 0x1
 2807 080a 50       		.byte	0x50
 2808 080b 02       		.uleb128 0x2
 2809 080c 74       		.byte	0x74
 2810 080d 00       		.sleb128 0
 2811 080e 00       		.byte	0
 2812 080f 00       		.byte	0
 2813 0810 12       		.uleb128 0x12
 2814 0811 57000000 		.4byte	.LASF88
 2815 0815 01       		.byte	0x1
 2816 0816 5C08     		.2byte	0x85c
 2817 0818 00000000 		.4byte	.LFB27
 2818 081c 48000000 		.4byte	.LFE27-.LFB27
 2819 0820 01       		.uleb128 0x1
 2820 0821 9C       		.byte	0x9c
 2821 0822 43080000 		.4byte	0x843
 2822 0826 14       		.uleb128 0x14
 2823 0827 24000000 		.4byte	.LVL141
 2824 082b 5A0A0000 		.4byte	0xa5a
 2825 082f 39080000 		.4byte	0x839
 2826 0833 15       		.uleb128 0x15
 2827 0834 01       		.uleb128 0x1
 2828 0835 50       		.byte	0x50
 2829 0836 01       		.uleb128 0x1
 2830 0837 3A       		.byte	0x3a
 2831 0838 00       		.byte	0
 2832 0839 13       		.uleb128 0x13
 2833 083a 36000000 		.4byte	.LVL142
 2834 083e C2010000 		.4byte	0x1c2
 2835 0842 00       		.byte	0
 2836 0843 12       		.uleb128 0x12
 2837 0844 AC060000 		.4byte	.LASF89
 2838 0848 01       		.byte	0x1
 2839 0849 2B02     		.2byte	0x22b
 2840 084b 00000000 		.4byte	.LFB1
 2841 084f 24000000 		.4byte	.LFE1-.LFB1
 2842 0853 01       		.uleb128 0x1
 2843 0854 9C       		.byte	0x9c
 2844 0855 6C080000 		.4byte	0x86c
 2845 0859 13       		.uleb128 0x13
 2846 085a 0E000000 		.4byte	.LVL143
 2847 085e 8E070000 		.4byte	0x78e
 2848 0862 13       		.uleb128 0x13
 2849 0863 1C000000 		.4byte	.LVL144
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 91


 2850 0867 10080000 		.4byte	0x810
 2851 086b 00       		.byte	0
 2852 086c 12       		.uleb128 0x12
 2853 086d 20000000 		.4byte	.LASF90
 2854 0871 01       		.byte	0x1
 2855 0872 4802     		.2byte	0x248
 2856 0874 00000000 		.4byte	.LFB2
 2857 0878 10000000 		.4byte	.LFE2-.LFB2
 2858 087c 01       		.uleb128 0x1
 2859 087d 9C       		.byte	0x9c
 2860 087e AC080000 		.4byte	0x8ac
 2861 0882 10       		.uleb128 0x10
 2862 0883 71030000 		.4byte	.LASF91
 2863 0887 01       		.byte	0x1
 2864 0888 4802     		.2byte	0x248
 2865 088a E5000000 		.4byte	0xe5
 2866 088e F3070000 		.4byte	.LLST46
 2867 0892 13       		.uleb128 0x13
 2868 0893 08000000 		.4byte	.LVL146
 2869 0897 43080000 		.4byte	0x843
 2870 089b 16       		.uleb128 0x16
 2871 089c 0E000000 		.4byte	.LVL147
 2872 08a0 650A0000 		.4byte	0xa65
 2873 08a4 15       		.uleb128 0x15
 2874 08a5 01       		.uleb128 0x1
 2875 08a6 50       		.byte	0x50
 2876 08a7 02       		.uleb128 0x2
 2877 08a8 74       		.byte	0x74
 2878 08a9 00       		.sleb128 0
 2879 08aa 00       		.byte	0
 2880 08ab 00       		.byte	0
 2881 08ac 12       		.uleb128 0x12
 2882 08ad 81020000 		.4byte	.LASF92
 2883 08b1 01       		.byte	0x1
 2884 08b2 0303     		.2byte	0x303
 2885 08b4 00000000 		.4byte	.LFB6
 2886 08b8 70000000 		.4byte	.LFE6-.LFB6
 2887 08bc 01       		.uleb128 0x1
 2888 08bd 9C       		.byte	0x9c
 2889 08be 1B090000 		.4byte	0x91b
 2890 08c2 10       		.uleb128 0x10
 2891 08c3 62050000 		.4byte	.LASF38
 2892 08c7 01       		.byte	0x1
 2893 08c8 0303     		.2byte	0x303
 2894 08ca 83000000 		.4byte	0x83
 2895 08ce 1F080000 		.4byte	.LLST47
 2896 08d2 10       		.uleb128 0x10
 2897 08d3 D1050000 		.4byte	.LASF93
 2898 08d7 01       		.byte	0x1
 2899 08d8 0303     		.2byte	0x303
 2900 08da 83000000 		.4byte	0x83
 2901 08de 4B080000 		.4byte	.LLST48
 2902 08e2 13       		.uleb128 0x13
 2903 08e3 0E000000 		.4byte	.LVL150
 2904 08e7 4D020000 		.4byte	0x24d
 2905 08eb 13       		.uleb128 0x13
 2906 08ec 1E000000 		.4byte	.LVL151
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 92


 2907 08f0 8E070000 		.4byte	0x78e
 2908 08f4 14       		.uleb128 0x14
 2909 08f5 38000000 		.4byte	.LVL152
 2910 08f9 5F020000 		.4byte	0x25f
 2911 08fd 08090000 		.4byte	0x908
 2912 0901 15       		.uleb128 0x15
 2913 0902 01       		.uleb128 0x1
 2914 0903 50       		.byte	0x50
 2915 0904 02       		.uleb128 0x2
 2916 0905 75       		.byte	0x75
 2917 0906 00       		.sleb128 0
 2918 0907 00       		.byte	0
 2919 0908 13       		.uleb128 0x13
 2920 0909 56000000 		.4byte	.LVL153
 2921 090d 43080000 		.4byte	0x843
 2922 0911 13       		.uleb128 0x13
 2923 0912 5A000000 		.4byte	.LVL154
 2924 0916 D2020000 		.4byte	0x2d2
 2925 091a 00       		.byte	0
 2926 091b 12       		.uleb128 0x12
 2927 091c 2E000000 		.4byte	.LASF94
 2928 0920 01       		.byte	0x1
 2929 0921 6003     		.2byte	0x360
 2930 0923 00000000 		.4byte	.LFB8
 2931 0927 44000000 		.4byte	.LFE8-.LFB8
 2932 092b 01       		.uleb128 0x1
 2933 092c 9C       		.byte	0x9c
 2934 092d 44090000 		.4byte	0x944
 2935 0931 13       		.uleb128 0x13
 2936 0932 2C000000 		.4byte	.LVL157
 2937 0936 4D020000 		.4byte	0x24d
 2938 093a 13       		.uleb128 0x13
 2939 093b 30000000 		.4byte	.LVL158
 2940 093f 43080000 		.4byte	0x843
 2941 0943 00       		.byte	0
 2942 0944 1C       		.uleb128 0x1c
 2943 0945 94040000 		.4byte	.LASF95
 2944 0949 01       		.byte	0x1
 2945 094a 43       		.byte	0x43
 2946 094b 83000000 		.4byte	0x83
 2947 094f 05       		.uleb128 0x5
 2948 0950 03       		.byte	0x3
 2949 0951 00000000 		.4byte	ADC_1_currentConfig
 2950 0955 1D       		.uleb128 0x1d
 2951 0956 65090000 		.4byte	0x965
 2952 095a 65090000 		.4byte	0x965
 2953 095e 1E       		.uleb128 0x1e
 2954 095f FF000000 		.4byte	0xff
 2955 0963 00       		.byte	0
 2956 0964 00       		.byte	0
 2957 0965 0E       		.uleb128 0xe
 2958 0966 83000000 		.4byte	0x83
 2959 096a 1F       		.uleb128 0x1f
 2960 096b C7010000 		.4byte	.LASF96
 2961 096f 01       		.byte	0x1
 2962 0970 49       		.byte	0x49
 2963 0971 7A090000 		.4byte	0x97a
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 93


 2964 0975 04       		.byte	0x4
 2965 0976 00       		.byte	0
 2966 0977 04       		.byte	0x4
 2967 0978 00       		.byte	0
 2968 0979 00       		.byte	0
 2969 097a 0E       		.uleb128 0xe
 2970 097b 55090000 		.4byte	0x955
 2971 097f 20       		.uleb128 0x20
 2972 0980 15010000 		.4byte	.LASF97
 2973 0984 01       		.byte	0x1
 2974 0985 3D       		.byte	0x3d
 2975 0986 6B000000 		.4byte	0x6b
 2976 098a 05       		.uleb128 0x5
 2977 098b 03       		.byte	0x3
 2978 098c 00000000 		.4byte	ADC_1_initVar
 2979 0990 20       		.uleb128 0x20
 2980 0991 FA050000 		.4byte	.LASF98
 2981 0995 01       		.byte	0x1
 2982 0996 3F       		.byte	0x3f
 2983 0997 6B000000 		.4byte	0x6b
 2984 099b 05       		.uleb128 0x5
 2985 099c 03       		.byte	0x3
 2986 099d 00000000 		.4byte	ADC_1_selected
 2987 09a1 1D       		.uleb128 0x1d
 2988 09a2 B1090000 		.4byte	0x9b1
 2989 09a6 B1090000 		.4byte	0x9b1
 2990 09aa 1E       		.uleb128 0x1e
 2991 09ab FF000000 		.4byte	0xff
 2992 09af 00       		.byte	0
 2993 09b0 00       		.byte	0
 2994 09b1 05       		.uleb128 0x5
 2995 09b2 8F000000 		.4byte	0x8f
 2996 09b6 20       		.uleb128 0x20
 2997 09b7 E0030000 		.4byte	.LASF99
 2998 09bb 01       		.byte	0x1
 2999 09bc 40       		.byte	0x40
 3000 09bd C7090000 		.4byte	0x9c7
 3001 09c1 05       		.uleb128 0x5
 3002 09c2 03       		.byte	0x3
 3003 09c3 00000000 		.4byte	ADC_1_offset
 3004 09c7 05       		.uleb128 0x5
 3005 09c8 A1090000 		.4byte	0x9a1
 3006 09cc 1D       		.uleb128 0x1d
 3007 09cd DC090000 		.4byte	0x9dc
 3008 09d1 DC090000 		.4byte	0x9dc
 3009 09d5 1E       		.uleb128 0x1e
 3010 09d6 FF000000 		.4byte	0xff
 3011 09da 00       		.byte	0
 3012 09db 00       		.byte	0
 3013 09dc 05       		.uleb128 0x5
 3014 09dd 9B000000 		.4byte	0x9b
 3015 09e1 20       		.uleb128 0x20
 3016 09e2 44040000 		.4byte	.LASF100
 3017 09e6 01       		.byte	0x1
 3018 09e7 41       		.byte	0x41
 3019 09e8 F2090000 		.4byte	0x9f2
 3020 09ec 05       		.uleb128 0x5
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 94


 3021 09ed 03       		.byte	0x3
 3022 09ee 00000000 		.4byte	ADC_1_countsPer10Volt
 3023 09f2 05       		.uleb128 0x5
 3024 09f3 CC090000 		.4byte	0x9cc
 3025 09f7 1D       		.uleb128 0x1d
 3026 09f8 FD010000 		.4byte	0x1fd
 3027 09fc 070A0000 		.4byte	0xa07
 3028 0a00 1E       		.uleb128 0x1e
 3029 0a01 FF000000 		.4byte	0xff
 3030 0a05 00       		.byte	0
 3031 0a06 00       		.byte	0
 3032 0a07 21       		.uleb128 0x21
 3033 0a08 43020000 		.4byte	.LASF101
 3034 0a0c 03       		.byte	0x3
 3035 0a0d EC01     		.2byte	0x1ec
 3036 0a0f 130A0000 		.4byte	0xa13
 3037 0a13 0E       		.uleb128 0xe
 3038 0a14 F7090000 		.4byte	0x9f7
 3039 0a18 22       		.uleb128 0x22
 3040 0a19 DC010000 		.4byte	.LASF102
 3041 0a1d DC010000 		.4byte	.LASF102
 3042 0a21 04       		.byte	0x4
 3043 0a22 27       		.byte	0x27
 3044 0a23 22       		.uleb128 0x22
 3045 0a24 7E050000 		.4byte	.LASF103
 3046 0a28 7E050000 		.4byte	.LASF103
 3047 0a2c 04       		.byte	0x4
 3048 0a2d 29       		.byte	0x29
 3049 0a2e 22       		.uleb128 0x22
 3050 0a2f 42030000 		.4byte	.LASF104
 3051 0a33 42030000 		.4byte	.LASF104
 3052 0a37 04       		.byte	0x4
 3053 0a38 1D       		.byte	0x1d
 3054 0a39 22       		.uleb128 0x22
 3055 0a3a B8060000 		.4byte	.LASF105
 3056 0a3e B8060000 		.4byte	.LASF105
 3057 0a42 05       		.byte	0x5
 3058 0a43 FA       		.byte	0xfa
 3059 0a44 22       		.uleb128 0x22
 3060 0a45 AD030000 		.4byte	.LASF106
 3061 0a49 AD030000 		.4byte	.LASF106
 3062 0a4d 05       		.byte	0x5
 3063 0a4e D3       		.byte	0xd3
 3064 0a4f 22       		.uleb128 0x22
 3065 0a50 37010000 		.4byte	.LASF107
 3066 0a54 37010000 		.4byte	.LASF107
 3067 0a58 05       		.byte	0x5
 3068 0a59 D0       		.byte	0xd0
 3069 0a5a 22       		.uleb128 0x22
 3070 0a5b DC000000 		.4byte	.LASF108
 3071 0a5f DC000000 		.4byte	.LASF108
 3072 0a63 05       		.byte	0x5
 3073 0a64 ED       		.byte	0xed
 3074 0a65 22       		.uleb128 0x22
 3075 0a66 C4030000 		.4byte	.LASF109
 3076 0a6a C4030000 		.4byte	.LASF109
 3077 0a6e 06       		.byte	0x6
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 95


 3078 0a6f 18       		.byte	0x18
 3079 0a70 00       		.byte	0
 3080              		.section	.debug_abbrev,"",%progbits
 3081              	.Ldebug_abbrev0:
 3082 0000 01       		.uleb128 0x1
 3083 0001 11       		.uleb128 0x11
 3084 0002 01       		.byte	0x1
 3085 0003 25       		.uleb128 0x25
 3086 0004 0E       		.uleb128 0xe
 3087 0005 13       		.uleb128 0x13
 3088 0006 0B       		.uleb128 0xb
 3089 0007 03       		.uleb128 0x3
 3090 0008 0E       		.uleb128 0xe
 3091 0009 1B       		.uleb128 0x1b
 3092 000a 0E       		.uleb128 0xe
 3093 000b 55       		.uleb128 0x55
 3094 000c 17       		.uleb128 0x17
 3095 000d 11       		.uleb128 0x11
 3096 000e 01       		.uleb128 0x1
 3097 000f 10       		.uleb128 0x10
 3098 0010 17       		.uleb128 0x17
 3099 0011 00       		.byte	0
 3100 0012 00       		.byte	0
 3101 0013 02       		.uleb128 0x2
 3102 0014 24       		.uleb128 0x24
 3103 0015 00       		.byte	0
 3104 0016 0B       		.uleb128 0xb
 3105 0017 0B       		.uleb128 0xb
 3106 0018 3E       		.uleb128 0x3e
 3107 0019 0B       		.uleb128 0xb
 3108 001a 03       		.uleb128 0x3
 3109 001b 0E       		.uleb128 0xe
 3110 001c 00       		.byte	0
 3111 001d 00       		.byte	0
 3112 001e 03       		.uleb128 0x3
 3113 001f 24       		.uleb128 0x24
 3114 0020 00       		.byte	0
 3115 0021 0B       		.uleb128 0xb
 3116 0022 0B       		.uleb128 0xb
 3117 0023 3E       		.uleb128 0x3e
 3118 0024 0B       		.uleb128 0xb
 3119 0025 03       		.uleb128 0x3
 3120 0026 08       		.uleb128 0x8
 3121 0027 00       		.byte	0
 3122 0028 00       		.byte	0
 3123 0029 04       		.uleb128 0x4
 3124 002a 16       		.uleb128 0x16
 3125 002b 00       		.byte	0
 3126 002c 03       		.uleb128 0x3
 3127 002d 0E       		.uleb128 0xe
 3128 002e 3A       		.uleb128 0x3a
 3129 002f 0B       		.uleb128 0xb
 3130 0030 3B       		.uleb128 0x3b
 3131 0031 05       		.uleb128 0x5
 3132 0032 49       		.uleb128 0x49
 3133 0033 13       		.uleb128 0x13
 3134 0034 00       		.byte	0
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 96


 3135 0035 00       		.byte	0
 3136 0036 05       		.uleb128 0x5
 3137 0037 35       		.uleb128 0x35
 3138 0038 00       		.byte	0
 3139 0039 49       		.uleb128 0x49
 3140 003a 13       		.uleb128 0x13
 3141 003b 00       		.byte	0
 3142 003c 00       		.byte	0
 3143 003d 06       		.uleb128 0x6
 3144 003e 0F       		.uleb128 0xf
 3145 003f 00       		.byte	0
 3146 0040 0B       		.uleb128 0xb
 3147 0041 0B       		.uleb128 0xb
 3148 0042 49       		.uleb128 0x49
 3149 0043 13       		.uleb128 0x13
 3150 0044 00       		.byte	0
 3151 0045 00       		.byte	0
 3152 0046 07       		.uleb128 0x7
 3153 0047 15       		.uleb128 0x15
 3154 0048 00       		.byte	0
 3155 0049 27       		.uleb128 0x27
 3156 004a 19       		.uleb128 0x19
 3157 004b 00       		.byte	0
 3158 004c 00       		.byte	0
 3159 004d 08       		.uleb128 0x8
 3160 004e 13       		.uleb128 0x13
 3161 004f 01       		.byte	0x1
 3162 0050 0B       		.uleb128 0xb
 3163 0051 0B       		.uleb128 0xb
 3164 0052 3A       		.uleb128 0x3a
 3165 0053 0B       		.uleb128 0xb
 3166 0054 3B       		.uleb128 0x3b
 3167 0055 0B       		.uleb128 0xb
 3168 0056 01       		.uleb128 0x1
 3169 0057 13       		.uleb128 0x13
 3170 0058 00       		.byte	0
 3171 0059 00       		.byte	0
 3172 005a 09       		.uleb128 0x9
 3173 005b 0D       		.uleb128 0xd
 3174 005c 00       		.byte	0
 3175 005d 03       		.uleb128 0x3
 3176 005e 0E       		.uleb128 0xe
 3177 005f 3A       		.uleb128 0x3a
 3178 0060 0B       		.uleb128 0xb
 3179 0061 3B       		.uleb128 0x3b
 3180 0062 0B       		.uleb128 0xb
 3181 0063 49       		.uleb128 0x49
 3182 0064 13       		.uleb128 0x13
 3183 0065 38       		.uleb128 0x38
 3184 0066 0B       		.uleb128 0xb
 3185 0067 00       		.byte	0
 3186 0068 00       		.byte	0
 3187 0069 0A       		.uleb128 0xa
 3188 006a 16       		.uleb128 0x16
 3189 006b 00       		.byte	0
 3190 006c 03       		.uleb128 0x3
 3191 006d 0E       		.uleb128 0xe
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 97


 3192 006e 3A       		.uleb128 0x3a
 3193 006f 0B       		.uleb128 0xb
 3194 0070 3B       		.uleb128 0x3b
 3195 0071 0B       		.uleb128 0xb
 3196 0072 49       		.uleb128 0x49
 3197 0073 13       		.uleb128 0x13
 3198 0074 00       		.byte	0
 3199 0075 00       		.byte	0
 3200 0076 0B       		.uleb128 0xb
 3201 0077 2E       		.uleb128 0x2e
 3202 0078 01       		.byte	0x1
 3203 0079 03       		.uleb128 0x3
 3204 007a 0E       		.uleb128 0xe
 3205 007b 3A       		.uleb128 0x3a
 3206 007c 0B       		.uleb128 0xb
 3207 007d 3B       		.uleb128 0x3b
 3208 007e 05       		.uleb128 0x5
 3209 007f 27       		.uleb128 0x27
 3210 0080 19       		.uleb128 0x19
 3211 0081 11       		.uleb128 0x11
 3212 0082 01       		.uleb128 0x1
 3213 0083 12       		.uleb128 0x12
 3214 0084 06       		.uleb128 0x6
 3215 0085 40       		.uleb128 0x40
 3216 0086 18       		.uleb128 0x18
 3217 0087 9742     		.uleb128 0x2117
 3218 0089 19       		.uleb128 0x19
 3219 008a 01       		.uleb128 0x1
 3220 008b 13       		.uleb128 0x13
 3221 008c 00       		.byte	0
 3222 008d 00       		.byte	0
 3223 008e 0C       		.uleb128 0xc
 3224 008f 05       		.uleb128 0x5
 3225 0090 00       		.byte	0
 3226 0091 03       		.uleb128 0x3
 3227 0092 0E       		.uleb128 0xe
 3228 0093 3A       		.uleb128 0x3a
 3229 0094 0B       		.uleb128 0xb
 3230 0095 3B       		.uleb128 0x3b
 3231 0096 05       		.uleb128 0x5
 3232 0097 49       		.uleb128 0x49
 3233 0098 13       		.uleb128 0x13
 3234 0099 02       		.uleb128 0x2
 3235 009a 18       		.uleb128 0x18
 3236 009b 00       		.byte	0
 3237 009c 00       		.byte	0
 3238 009d 0D       		.uleb128 0xd
 3239 009e 34       		.uleb128 0x34
 3240 009f 00       		.byte	0
 3241 00a0 03       		.uleb128 0x3
 3242 00a1 0E       		.uleb128 0xe
 3243 00a2 3A       		.uleb128 0x3a
 3244 00a3 0B       		.uleb128 0xb
 3245 00a4 3B       		.uleb128 0x3b
 3246 00a5 05       		.uleb128 0x5
 3247 00a6 49       		.uleb128 0x49
 3248 00a7 13       		.uleb128 0x13
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 98


 3249 00a8 02       		.uleb128 0x2
 3250 00a9 17       		.uleb128 0x17
 3251 00aa 00       		.byte	0
 3252 00ab 00       		.byte	0
 3253 00ac 0E       		.uleb128 0xe
 3254 00ad 26       		.uleb128 0x26
 3255 00ae 00       		.byte	0
 3256 00af 49       		.uleb128 0x49
 3257 00b0 13       		.uleb128 0x13
 3258 00b1 00       		.byte	0
 3259 00b2 00       		.byte	0
 3260 00b3 0F       		.uleb128 0xf
 3261 00b4 2E       		.uleb128 0x2e
 3262 00b5 01       		.byte	0x1
 3263 00b6 03       		.uleb128 0x3
 3264 00b7 0E       		.uleb128 0xe
 3265 00b8 3A       		.uleb128 0x3a
 3266 00b9 0B       		.uleb128 0xb
 3267 00ba 3B       		.uleb128 0x3b
 3268 00bb 05       		.uleb128 0x5
 3269 00bc 27       		.uleb128 0x27
 3270 00bd 19       		.uleb128 0x19
 3271 00be 49       		.uleb128 0x49
 3272 00bf 13       		.uleb128 0x13
 3273 00c0 11       		.uleb128 0x11
 3274 00c1 01       		.uleb128 0x1
 3275 00c2 12       		.uleb128 0x12
 3276 00c3 06       		.uleb128 0x6
 3277 00c4 40       		.uleb128 0x40
 3278 00c5 18       		.uleb128 0x18
 3279 00c6 9742     		.uleb128 0x2117
 3280 00c8 19       		.uleb128 0x19
 3281 00c9 01       		.uleb128 0x1
 3282 00ca 13       		.uleb128 0x13
 3283 00cb 00       		.byte	0
 3284 00cc 00       		.byte	0
 3285 00cd 10       		.uleb128 0x10
 3286 00ce 05       		.uleb128 0x5
 3287 00cf 00       		.byte	0
 3288 00d0 03       		.uleb128 0x3
 3289 00d1 0E       		.uleb128 0xe
 3290 00d2 3A       		.uleb128 0x3a
 3291 00d3 0B       		.uleb128 0xb
 3292 00d4 3B       		.uleb128 0x3b
 3293 00d5 05       		.uleb128 0x5
 3294 00d6 49       		.uleb128 0x49
 3295 00d7 13       		.uleb128 0x13
 3296 00d8 02       		.uleb128 0x2
 3297 00d9 17       		.uleb128 0x17
 3298 00da 00       		.byte	0
 3299 00db 00       		.byte	0
 3300 00dc 11       		.uleb128 0x11
 3301 00dd 2E       		.uleb128 0x2e
 3302 00de 00       		.byte	0
 3303 00df 3F       		.uleb128 0x3f
 3304 00e0 19       		.uleb128 0x19
 3305 00e1 03       		.uleb128 0x3
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 99


 3306 00e2 0E       		.uleb128 0xe
 3307 00e3 3A       		.uleb128 0x3a
 3308 00e4 0B       		.uleb128 0xb
 3309 00e5 3B       		.uleb128 0x3b
 3310 00e6 05       		.uleb128 0x5
 3311 00e7 27       		.uleb128 0x27
 3312 00e8 19       		.uleb128 0x19
 3313 00e9 11       		.uleb128 0x11
 3314 00ea 01       		.uleb128 0x1
 3315 00eb 12       		.uleb128 0x12
 3316 00ec 06       		.uleb128 0x6
 3317 00ed 40       		.uleb128 0x40
 3318 00ee 18       		.uleb128 0x18
 3319 00ef 9742     		.uleb128 0x2117
 3320 00f1 19       		.uleb128 0x19
 3321 00f2 00       		.byte	0
 3322 00f3 00       		.byte	0
 3323 00f4 12       		.uleb128 0x12
 3324 00f5 2E       		.uleb128 0x2e
 3325 00f6 01       		.byte	0x1
 3326 00f7 3F       		.uleb128 0x3f
 3327 00f8 19       		.uleb128 0x19
 3328 00f9 03       		.uleb128 0x3
 3329 00fa 0E       		.uleb128 0xe
 3330 00fb 3A       		.uleb128 0x3a
 3331 00fc 0B       		.uleb128 0xb
 3332 00fd 3B       		.uleb128 0x3b
 3333 00fe 05       		.uleb128 0x5
 3334 00ff 27       		.uleb128 0x27
 3335 0100 19       		.uleb128 0x19
 3336 0101 11       		.uleb128 0x11
 3337 0102 01       		.uleb128 0x1
 3338 0103 12       		.uleb128 0x12
 3339 0104 06       		.uleb128 0x6
 3340 0105 40       		.uleb128 0x40
 3341 0106 18       		.uleb128 0x18
 3342 0107 9742     		.uleb128 0x2117
 3343 0109 19       		.uleb128 0x19
 3344 010a 01       		.uleb128 0x1
 3345 010b 13       		.uleb128 0x13
 3346 010c 00       		.byte	0
 3347 010d 00       		.byte	0
 3348 010e 13       		.uleb128 0x13
 3349 010f 898201   		.uleb128 0x4109
 3350 0112 00       		.byte	0
 3351 0113 11       		.uleb128 0x11
 3352 0114 01       		.uleb128 0x1
 3353 0115 31       		.uleb128 0x31
 3354 0116 13       		.uleb128 0x13
 3355 0117 00       		.byte	0
 3356 0118 00       		.byte	0
 3357 0119 14       		.uleb128 0x14
 3358 011a 898201   		.uleb128 0x4109
 3359 011d 01       		.byte	0x1
 3360 011e 11       		.uleb128 0x11
 3361 011f 01       		.uleb128 0x1
 3362 0120 31       		.uleb128 0x31
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 100


 3363 0121 13       		.uleb128 0x13
 3364 0122 01       		.uleb128 0x1
 3365 0123 13       		.uleb128 0x13
 3366 0124 00       		.byte	0
 3367 0125 00       		.byte	0
 3368 0126 15       		.uleb128 0x15
 3369 0127 8A8201   		.uleb128 0x410a
 3370 012a 00       		.byte	0
 3371 012b 02       		.uleb128 0x2
 3372 012c 18       		.uleb128 0x18
 3373 012d 9142     		.uleb128 0x2111
 3374 012f 18       		.uleb128 0x18
 3375 0130 00       		.byte	0
 3376 0131 00       		.byte	0
 3377 0132 16       		.uleb128 0x16
 3378 0133 898201   		.uleb128 0x4109
 3379 0136 01       		.byte	0x1
 3380 0137 11       		.uleb128 0x11
 3381 0138 01       		.uleb128 0x1
 3382 0139 31       		.uleb128 0x31
 3383 013a 13       		.uleb128 0x13
 3384 013b 00       		.byte	0
 3385 013c 00       		.byte	0
 3386 013d 17       		.uleb128 0x17
 3387 013e 34       		.uleb128 0x34
 3388 013f 00       		.byte	0
 3389 0140 03       		.uleb128 0x3
 3390 0141 0E       		.uleb128 0xe
 3391 0142 3A       		.uleb128 0x3a
 3392 0143 0B       		.uleb128 0xb
 3393 0144 3B       		.uleb128 0x3b
 3394 0145 05       		.uleb128 0x5
 3395 0146 49       		.uleb128 0x49
 3396 0147 13       		.uleb128 0x13
 3397 0148 02       		.uleb128 0x2
 3398 0149 18       		.uleb128 0x18
 3399 014a 00       		.byte	0
 3400 014b 00       		.byte	0
 3401 014c 18       		.uleb128 0x18
 3402 014d 2E       		.uleb128 0x2e
 3403 014e 01       		.byte	0x1
 3404 014f 3F       		.uleb128 0x3f
 3405 0150 19       		.uleb128 0x19
 3406 0151 03       		.uleb128 0x3
 3407 0152 0E       		.uleb128 0xe
 3408 0153 3A       		.uleb128 0x3a
 3409 0154 0B       		.uleb128 0xb
 3410 0155 3B       		.uleb128 0x3b
 3411 0156 05       		.uleb128 0x5
 3412 0157 27       		.uleb128 0x27
 3413 0158 19       		.uleb128 0x19
 3414 0159 49       		.uleb128 0x49
 3415 015a 13       		.uleb128 0x13
 3416 015b 11       		.uleb128 0x11
 3417 015c 01       		.uleb128 0x1
 3418 015d 12       		.uleb128 0x12
 3419 015e 06       		.uleb128 0x6
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 101


 3420 015f 40       		.uleb128 0x40
 3421 0160 18       		.uleb128 0x18
 3422 0161 9742     		.uleb128 0x2117
 3423 0163 19       		.uleb128 0x19
 3424 0164 01       		.uleb128 0x1
 3425 0165 13       		.uleb128 0x13
 3426 0166 00       		.byte	0
 3427 0167 00       		.byte	0
 3428 0168 19       		.uleb128 0x19
 3429 0169 34       		.uleb128 0x34
 3430 016a 00       		.byte	0
 3431 016b 03       		.uleb128 0x3
 3432 016c 08       		.uleb128 0x8
 3433 016d 3A       		.uleb128 0x3a
 3434 016e 0B       		.uleb128 0xb
 3435 016f 3B       		.uleb128 0x3b
 3436 0170 05       		.uleb128 0x5
 3437 0171 49       		.uleb128 0x49
 3438 0172 13       		.uleb128 0x13
 3439 0173 02       		.uleb128 0x2
 3440 0174 17       		.uleb128 0x17
 3441 0175 00       		.byte	0
 3442 0176 00       		.byte	0
 3443 0177 1A       		.uleb128 0x1a
 3444 0178 2E       		.uleb128 0x2e
 3445 0179 01       		.byte	0x1
 3446 017a 3F       		.uleb128 0x3f
 3447 017b 19       		.uleb128 0x19
 3448 017c 03       		.uleb128 0x3
 3449 017d 0E       		.uleb128 0xe
 3450 017e 3A       		.uleb128 0x3a
 3451 017f 0B       		.uleb128 0xb
 3452 0180 3B       		.uleb128 0x3b
 3453 0181 05       		.uleb128 0x5
 3454 0182 27       		.uleb128 0x27
 3455 0183 19       		.uleb128 0x19
 3456 0184 49       		.uleb128 0x49
 3457 0185 13       		.uleb128 0x13
 3458 0186 11       		.uleb128 0x11
 3459 0187 01       		.uleb128 0x1
 3460 0188 12       		.uleb128 0x12
 3461 0189 06       		.uleb128 0x6
 3462 018a 40       		.uleb128 0x40
 3463 018b 18       		.uleb128 0x18
 3464 018c 9642     		.uleb128 0x2116
 3465 018e 19       		.uleb128 0x19
 3466 018f 01       		.uleb128 0x1
 3467 0190 13       		.uleb128 0x13
 3468 0191 00       		.byte	0
 3469 0192 00       		.byte	0
 3470 0193 1B       		.uleb128 0x1b
 3471 0194 2E       		.uleb128 0x2e
 3472 0195 01       		.byte	0x1
 3473 0196 3F       		.uleb128 0x3f
 3474 0197 19       		.uleb128 0x19
 3475 0198 03       		.uleb128 0x3
 3476 0199 0E       		.uleb128 0xe
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 102


 3477 019a 3A       		.uleb128 0x3a
 3478 019b 0B       		.uleb128 0xb
 3479 019c 3B       		.uleb128 0x3b
 3480 019d 05       		.uleb128 0x5
 3481 019e 27       		.uleb128 0x27
 3482 019f 19       		.uleb128 0x19
 3483 01a0 11       		.uleb128 0x11
 3484 01a1 01       		.uleb128 0x1
 3485 01a2 12       		.uleb128 0x12
 3486 01a3 06       		.uleb128 0x6
 3487 01a4 40       		.uleb128 0x40
 3488 01a5 18       		.uleb128 0x18
 3489 01a6 9642     		.uleb128 0x2116
 3490 01a8 19       		.uleb128 0x19
 3491 01a9 01       		.uleb128 0x1
 3492 01aa 13       		.uleb128 0x13
 3493 01ab 00       		.byte	0
 3494 01ac 00       		.byte	0
 3495 01ad 1C       		.uleb128 0x1c
 3496 01ae 34       		.uleb128 0x34
 3497 01af 00       		.byte	0
 3498 01b0 03       		.uleb128 0x3
 3499 01b1 0E       		.uleb128 0xe
 3500 01b2 3A       		.uleb128 0x3a
 3501 01b3 0B       		.uleb128 0xb
 3502 01b4 3B       		.uleb128 0x3b
 3503 01b5 0B       		.uleb128 0xb
 3504 01b6 49       		.uleb128 0x49
 3505 01b7 13       		.uleb128 0x13
 3506 01b8 02       		.uleb128 0x2
 3507 01b9 18       		.uleb128 0x18
 3508 01ba 00       		.byte	0
 3509 01bb 00       		.byte	0
 3510 01bc 1D       		.uleb128 0x1d
 3511 01bd 01       		.uleb128 0x1
 3512 01be 01       		.byte	0x1
 3513 01bf 49       		.uleb128 0x49
 3514 01c0 13       		.uleb128 0x13
 3515 01c1 01       		.uleb128 0x1
 3516 01c2 13       		.uleb128 0x13
 3517 01c3 00       		.byte	0
 3518 01c4 00       		.byte	0
 3519 01c5 1E       		.uleb128 0x1e
 3520 01c6 21       		.uleb128 0x21
 3521 01c7 00       		.byte	0
 3522 01c8 49       		.uleb128 0x49
 3523 01c9 13       		.uleb128 0x13
 3524 01ca 2F       		.uleb128 0x2f
 3525 01cb 0B       		.uleb128 0xb
 3526 01cc 00       		.byte	0
 3527 01cd 00       		.byte	0
 3528 01ce 1F       		.uleb128 0x1f
 3529 01cf 34       		.uleb128 0x34
 3530 01d0 00       		.byte	0
 3531 01d1 03       		.uleb128 0x3
 3532 01d2 0E       		.uleb128 0xe
 3533 01d3 3A       		.uleb128 0x3a
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 103


 3534 01d4 0B       		.uleb128 0xb
 3535 01d5 3B       		.uleb128 0x3b
 3536 01d6 0B       		.uleb128 0xb
 3537 01d7 49       		.uleb128 0x49
 3538 01d8 13       		.uleb128 0x13
 3539 01d9 1C       		.uleb128 0x1c
 3540 01da 0A       		.uleb128 0xa
 3541 01db 00       		.byte	0
 3542 01dc 00       		.byte	0
 3543 01dd 20       		.uleb128 0x20
 3544 01de 34       		.uleb128 0x34
 3545 01df 00       		.byte	0
 3546 01e0 03       		.uleb128 0x3
 3547 01e1 0E       		.uleb128 0xe
 3548 01e2 3A       		.uleb128 0x3a
 3549 01e3 0B       		.uleb128 0xb
 3550 01e4 3B       		.uleb128 0x3b
 3551 01e5 0B       		.uleb128 0xb
 3552 01e6 49       		.uleb128 0x49
 3553 01e7 13       		.uleb128 0x13
 3554 01e8 3F       		.uleb128 0x3f
 3555 01e9 19       		.uleb128 0x19
 3556 01ea 02       		.uleb128 0x2
 3557 01eb 18       		.uleb128 0x18
 3558 01ec 00       		.byte	0
 3559 01ed 00       		.byte	0
 3560 01ee 21       		.uleb128 0x21
 3561 01ef 34       		.uleb128 0x34
 3562 01f0 00       		.byte	0
 3563 01f1 03       		.uleb128 0x3
 3564 01f2 0E       		.uleb128 0xe
 3565 01f3 3A       		.uleb128 0x3a
 3566 01f4 0B       		.uleb128 0xb
 3567 01f5 3B       		.uleb128 0x3b
 3568 01f6 05       		.uleb128 0x5
 3569 01f7 49       		.uleb128 0x49
 3570 01f8 13       		.uleb128 0x13
 3571 01f9 3F       		.uleb128 0x3f
 3572 01fa 19       		.uleb128 0x19
 3573 01fb 3C       		.uleb128 0x3c
 3574 01fc 19       		.uleb128 0x19
 3575 01fd 00       		.byte	0
 3576 01fe 00       		.byte	0
 3577 01ff 22       		.uleb128 0x22
 3578 0200 2E       		.uleb128 0x2e
 3579 0201 00       		.byte	0
 3580 0202 3F       		.uleb128 0x3f
 3581 0203 19       		.uleb128 0x19
 3582 0204 3C       		.uleb128 0x3c
 3583 0205 19       		.uleb128 0x19
 3584 0206 6E       		.uleb128 0x6e
 3585 0207 0E       		.uleb128 0xe
 3586 0208 03       		.uleb128 0x3
 3587 0209 0E       		.uleb128 0xe
 3588 020a 3A       		.uleb128 0x3a
 3589 020b 0B       		.uleb128 0xb
 3590 020c 3B       		.uleb128 0x3b
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 104


 3591 020d 0B       		.uleb128 0xb
 3592 020e 00       		.byte	0
 3593 020f 00       		.byte	0
 3594 0210 00       		.byte	0
 3595              		.section	.debug_loc,"",%progbits
 3596              	.Ldebug_loc0:
 3597              	.LLST0:
 3598 0000 04000000 		.4byte	.LVL1
 3599 0004 1C000000 		.4byte	.LVL4
 3600 0008 0100     		.2byte	0x1
 3601 000a 53       		.byte	0x53
 3602 000b 1C000000 		.4byte	.LVL4
 3603 000f 20000000 		.4byte	.LVL5
 3604 0013 0700     		.2byte	0x7
 3605 0015 73       		.byte	0x73
 3606 0016 00       		.sleb128 0
 3607 0017 40       		.byte	0x40
 3608 0018 49       		.byte	0x49
 3609 0019 24       		.byte	0x24
 3610 001a 21       		.byte	0x21
 3611 001b 9F       		.byte	0x9f
 3612 001c 26000000 		.4byte	.LVL6
 3613 0020 34000000 		.4byte	.LFE5
 3614 0024 0100     		.2byte	0x1
 3615 0026 53       		.byte	0x53
 3616 0027 00000000 		.4byte	0
 3617 002b 00000000 		.4byte	0
 3618              	.LLST1:
 3619 002f 00000000 		.4byte	.LVL7
 3620 0033 02000000 		.4byte	.LVL8
 3621 0037 0100     		.2byte	0x1
 3622 0039 50       		.byte	0x50
 3623 003a 02000000 		.4byte	.LVL8
 3624 003e 58000000 		.4byte	.LFE13
 3625 0042 0400     		.2byte	0x4
 3626 0044 F3       		.byte	0xf3
 3627 0045 01       		.uleb128 0x1
 3628 0046 50       		.byte	0x50
 3629 0047 9F       		.byte	0x9f
 3630 0048 00000000 		.4byte	0
 3631 004c 00000000 		.4byte	0
 3632              	.LLST2:
 3633 0050 00000000 		.4byte	.LVL7
 3634 0054 46000000 		.4byte	.LVL13
 3635 0058 0200     		.2byte	0x2
 3636 005a 30       		.byte	0x30
 3637 005b 9F       		.byte	0x9f
 3638 005c 46000000 		.4byte	.LVL13
 3639 0060 58000000 		.4byte	.LFE13
 3640 0064 0100     		.2byte	0x1
 3641 0066 50       		.byte	0x50
 3642 0067 00000000 		.4byte	0
 3643 006b 00000000 		.4byte	0
 3644              	.LLST3:
 3645 006f 0A000000 		.4byte	.LVL9
 3646 0073 14000000 		.4byte	.LVL10
 3647 0077 0100     		.2byte	0x1
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 105


 3648 0079 52       		.byte	0x52
 3649 007a 28000000 		.4byte	.LVL11
 3650 007e 2C000000 		.4byte	.LVL12
 3651 0082 0100     		.2byte	0x1
 3652 0084 52       		.byte	0x52
 3653 0085 00000000 		.4byte	0
 3654 0089 00000000 		.4byte	0
 3655              	.LLST4:
 3656 008d 00000000 		.4byte	.LVL14
 3657 0091 07000000 		.4byte	.LVL15-1
 3658 0095 0100     		.2byte	0x1
 3659 0097 50       		.byte	0x50
 3660 0098 07000000 		.4byte	.LVL15-1
 3661 009c 98000000 		.4byte	.LVL21
 3662 00a0 0100     		.2byte	0x1
 3663 00a2 54       		.byte	0x54
 3664 00a3 98000000 		.4byte	.LVL21
 3665 00a7 D0000000 		.4byte	.LFE4
 3666 00ab 0400     		.2byte	0x4
 3667 00ad F3       		.byte	0xf3
 3668 00ae 01       		.uleb128 0x1
 3669 00af 50       		.byte	0x50
 3670 00b0 9F       		.byte	0x9f
 3671 00b1 00000000 		.4byte	0
 3672 00b5 00000000 		.4byte	0
 3673              	.LLST5:
 3674 00b9 7E000000 		.4byte	.LVL18
 3675 00bd 82000000 		.4byte	.LVL19
 3676 00c1 0200     		.2byte	0x2
 3677 00c3 30       		.byte	0x30
 3678 00c4 9F       		.byte	0x9f
 3679 00c5 82000000 		.4byte	.LVL19
 3680 00c9 D0000000 		.4byte	.LFE4
 3681 00cd 0100     		.2byte	0x1
 3682 00cf 53       		.byte	0x53
 3683 00d0 00000000 		.4byte	0
 3684 00d4 00000000 		.4byte	0
 3685              	.LLST6:
 3686 00d8 82000000 		.4byte	.LVL19
 3687 00dc 92000000 		.4byte	.LVL20
 3688 00e0 0400     		.2byte	0x4
 3689 00e2 0A       		.byte	0xa
 3690 00e3 0004     		.2byte	0x400
 3691 00e5 9F       		.byte	0x9f
 3692 00e6 00000000 		.4byte	0
 3693 00ea 00000000 		.4byte	0
 3694              	.LLST7:
 3695 00ee 00000000 		.4byte	.LVL23
 3696 00f2 04000000 		.4byte	.LVL24
 3697 00f6 0100     		.2byte	0x1
 3698 00f8 50       		.byte	0x50
 3699 00f9 04000000 		.4byte	.LVL24
 3700 00fd 10000000 		.4byte	.LFE10
 3701 0101 0400     		.2byte	0x4
 3702 0103 F3       		.byte	0xf3
 3703 0104 01       		.uleb128 0x1
 3704 0105 50       		.byte	0x50
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 106


 3705 0106 9F       		.byte	0x9f
 3706 0107 00000000 		.4byte	0
 3707 010b 00000000 		.4byte	0
 3708              	.LLST8:
 3709 010f 00000000 		.4byte	.LVL25
 3710 0113 18000000 		.4byte	.LVL27
 3711 0117 0100     		.2byte	0x1
 3712 0119 50       		.byte	0x50
 3713 011a 18000000 		.4byte	.LVL27
 3714 011e 2C000000 		.4byte	.LFE11
 3715 0122 0100     		.2byte	0x1
 3716 0124 50       		.byte	0x50
 3717 0125 00000000 		.4byte	0
 3718 0129 00000000 		.4byte	0
 3719              	.LLST9:
 3720 012d 00000000 		.4byte	.LVL28
 3721 0131 0A000000 		.4byte	.LVL30
 3722 0135 0100     		.2byte	0x1
 3723 0137 50       		.byte	0x50
 3724 0138 0A000000 		.4byte	.LVL30
 3725 013c 2C000000 		.4byte	.LVL34
 3726 0140 0100     		.2byte	0x1
 3727 0142 51       		.byte	0x51
 3728 0143 2C000000 		.4byte	.LVL34
 3729 0147 2E000000 		.4byte	.LVL35
 3730 014b 0100     		.2byte	0x1
 3731 014d 50       		.byte	0x50
 3732 014e 2E000000 		.4byte	.LVL35
 3733 0152 38000000 		.4byte	.LFE12
 3734 0156 0100     		.2byte	0x1
 3735 0158 51       		.byte	0x51
 3736 0159 00000000 		.4byte	0
 3737 015d 00000000 		.4byte	0
 3738              	.LLST10:
 3739 0161 02000000 		.4byte	.LVL29
 3740 0165 0A000000 		.4byte	.LVL30
 3741 0169 0200     		.2byte	0x2
 3742 016b 30       		.byte	0x30
 3743 016c 9F       		.byte	0x9f
 3744 016d 12000000 		.4byte	.LVL31
 3745 0171 2C000000 		.4byte	.LVL34
 3746 0175 0100     		.2byte	0x1
 3747 0177 50       		.byte	0x50
 3748 0178 2C000000 		.4byte	.LVL34
 3749 017c 2E000000 		.4byte	.LVL35
 3750 0180 0200     		.2byte	0x2
 3751 0182 30       		.byte	0x30
 3752 0183 9F       		.byte	0x9f
 3753 0184 2E000000 		.4byte	.LVL35
 3754 0188 38000000 		.4byte	.LFE12
 3755 018c 0100     		.2byte	0x1
 3756 018e 50       		.byte	0x50
 3757 018f 00000000 		.4byte	0
 3758 0193 00000000 		.4byte	0
 3759              	.LLST11:
 3760 0197 02000000 		.4byte	.LVL29
 3761 019b 0A000000 		.4byte	.LVL30
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 107


 3762 019f 0600     		.2byte	0x6
 3763 01a1 0C       		.byte	0xc
 3764 01a2 FFFFFF03 		.4byte	0x3ffffff
 3765 01a6 9F       		.byte	0x9f
 3766 01a7 0A000000 		.4byte	.LVL30
 3767 01ab 26000000 		.4byte	.LVL33
 3768 01af 0100     		.2byte	0x1
 3769 01b1 52       		.byte	0x52
 3770 01b2 2C000000 		.4byte	.LVL34
 3771 01b6 2E000000 		.4byte	.LVL35
 3772 01ba 0600     		.2byte	0x6
 3773 01bc 0C       		.byte	0xc
 3774 01bd FFFFFF03 		.4byte	0x3ffffff
 3775 01c1 9F       		.byte	0x9f
 3776 01c2 00000000 		.4byte	0
 3777 01c6 00000000 		.4byte	0
 3778              	.LLST12:
 3779 01ca 00000000 		.4byte	.LVL36
 3780 01ce 1A000000 		.4byte	.LVL37
 3781 01d2 0100     		.2byte	0x1
 3782 01d4 50       		.byte	0x50
 3783 01d5 1A000000 		.4byte	.LVL37
 3784 01d9 34000000 		.4byte	.LVL39
 3785 01dd 0100     		.2byte	0x1
 3786 01df 54       		.byte	0x54
 3787 01e0 34000000 		.4byte	.LVL39
 3788 01e4 42000000 		.4byte	.LVL41
 3789 01e8 0400     		.2byte	0x4
 3790 01ea F3       		.byte	0xf3
 3791 01eb 01       		.uleb128 0x1
 3792 01ec 50       		.byte	0x50
 3793 01ed 9F       		.byte	0x9f
 3794 01ee 42000000 		.4byte	.LVL41
 3795 01f2 44000000 		.4byte	.LVL42
 3796 01f6 0100     		.2byte	0x1
 3797 01f8 54       		.byte	0x54
 3798 01f9 44000000 		.4byte	.LVL42
 3799 01fd 54000000 		.4byte	.LFE14
 3800 0201 0400     		.2byte	0x4
 3801 0203 F3       		.byte	0xf3
 3802 0204 01       		.uleb128 0x1
 3803 0205 50       		.byte	0x50
 3804 0206 9F       		.byte	0x9f
 3805 0207 00000000 		.4byte	0
 3806 020b 00000000 		.4byte	0
 3807              	.LLST13:
 3808 020f 40000000 		.4byte	.LVL40
 3809 0213 42000000 		.4byte	.LVL41
 3810 0217 0100     		.2byte	0x1
 3811 0219 50       		.byte	0x50
 3812 021a 44000000 		.4byte	.LVL42
 3813 021e 46000000 		.4byte	.LVL43
 3814 0222 0100     		.2byte	0x1
 3815 0224 50       		.byte	0x50
 3816 0225 00000000 		.4byte	0
 3817 0229 00000000 		.4byte	0
 3818              	.LLST14:
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 108


 3819 022d 00000000 		.4byte	.LVL44
 3820 0231 1A000000 		.4byte	.LVL45
 3821 0235 0100     		.2byte	0x1
 3822 0237 50       		.byte	0x50
 3823 0238 1A000000 		.4byte	.LVL45
 3824 023c 54000000 		.4byte	.LVL56
 3825 0240 0100     		.2byte	0x1
 3826 0242 55       		.byte	0x55
 3827 0243 54000000 		.4byte	.LVL56
 3828 0247 64000000 		.4byte	.LFE15
 3829 024b 0400     		.2byte	0x4
 3830 024d F3       		.byte	0xf3
 3831 024e 01       		.uleb128 0x1
 3832 024f 50       		.byte	0x50
 3833 0250 9F       		.byte	0x9f
 3834 0251 00000000 		.4byte	0
 3835 0255 00000000 		.4byte	0
 3836              	.LLST15:
 3837 0259 40000000 		.4byte	.LVL47
 3838 025d 42000000 		.4byte	.LVL48
 3839 0261 0100     		.2byte	0x1
 3840 0263 54       		.byte	0x54
 3841 0264 44000000 		.4byte	.LVL49
 3842 0268 54000000 		.4byte	.LVL55
 3843 026c 0100     		.2byte	0x1
 3844 026e 54       		.byte	0x54
 3845 026f 00000000 		.4byte	0
 3846 0273 00000000 		.4byte	0
 3847              	.LLST16:
 3848 0277 4E000000 		.4byte	.LVL51
 3849 027b 52000000 		.4byte	.LVL53
 3850 027f 0100     		.2byte	0x1
 3851 0281 54       		.byte	0x54
 3852 0282 00000000 		.4byte	0
 3853 0286 00000000 		.4byte	0
 3854              	.LLST17:
 3855 028a 50000000 		.4byte	.LVL52
 3856 028e 52000000 		.4byte	.LVL53
 3857 0292 0100     		.2byte	0x1
 3858 0294 50       		.byte	0x50
 3859 0295 54000000 		.4byte	.LVL54
 3860 0299 64000000 		.4byte	.LFE15
 3861 029d 0100     		.2byte	0x1
 3862 029f 50       		.byte	0x50
 3863 02a0 00000000 		.4byte	0
 3864 02a4 00000000 		.4byte	0
 3865              	.LLST18:
 3866 02a8 00000000 		.4byte	.LVL57
 3867 02ac 0E000000 		.4byte	.LVL58
 3868 02b0 0100     		.2byte	0x1
 3869 02b2 50       		.byte	0x50
 3870 02b3 0E000000 		.4byte	.LVL58
 3871 02b7 1C000000 		.4byte	.LFE16
 3872 02bb 0400     		.2byte	0x4
 3873 02bd F3       		.byte	0xf3
 3874 02be 01       		.uleb128 0x1
 3875 02bf 50       		.byte	0x50
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 109


 3876 02c0 9F       		.byte	0x9f
 3877 02c1 00000000 		.4byte	0
 3878 02c5 00000000 		.4byte	0
 3879              	.LLST19:
 3880 02c9 00000000 		.4byte	.LVL59
 3881 02cd 0E000000 		.4byte	.LVL60
 3882 02d1 0100     		.2byte	0x1
 3883 02d3 50       		.byte	0x50
 3884 02d4 0E000000 		.4byte	.LVL60
 3885 02d8 18000000 		.4byte	.LFE17
 3886 02dc 0400     		.2byte	0x4
 3887 02de F3       		.byte	0xf3
 3888 02df 01       		.uleb128 0x1
 3889 02e0 50       		.byte	0x50
 3890 02e1 9F       		.byte	0x9f
 3891 02e2 00000000 		.4byte	0
 3892 02e6 00000000 		.4byte	0
 3893              	.LLST20:
 3894 02ea 00000000 		.4byte	.LVL61
 3895 02ee 18000000 		.4byte	.LVL63
 3896 02f2 0100     		.2byte	0x1
 3897 02f4 50       		.byte	0x50
 3898 02f5 18000000 		.4byte	.LVL63
 3899 02f9 2C000000 		.4byte	.LFE18
 3900 02fd 0100     		.2byte	0x1
 3901 02ff 50       		.byte	0x50
 3902 0300 00000000 		.4byte	0
 3903 0304 00000000 		.4byte	0
 3904              	.LLST21:
 3905 0308 00000000 		.4byte	.LVL64
 3906 030c 18000000 		.4byte	.LVL66
 3907 0310 0100     		.2byte	0x1
 3908 0312 50       		.byte	0x50
 3909 0313 18000000 		.4byte	.LVL66
 3910 0317 2C000000 		.4byte	.LFE19
 3911 031b 0100     		.2byte	0x1
 3912 031d 50       		.byte	0x50
 3913 031e 00000000 		.4byte	0
 3914 0322 00000000 		.4byte	0
 3915              	.LLST22:
 3916 0326 00000000 		.4byte	.LVL67
 3917 032a 1C000000 		.4byte	.LVL68
 3918 032e 0100     		.2byte	0x1
 3919 0330 50       		.byte	0x50
 3920 0331 1C000000 		.4byte	.LVL68
 3921 0335 36000000 		.4byte	.LVL70
 3922 0339 0100     		.2byte	0x1
 3923 033b 55       		.byte	0x55
 3924 033c 36000000 		.4byte	.LVL70
 3925 0340 44000000 		.4byte	.LFE20
 3926 0344 0400     		.2byte	0x4
 3927 0346 F3       		.byte	0xf3
 3928 0347 01       		.uleb128 0x1
 3929 0348 50       		.byte	0x50
 3930 0349 9F       		.byte	0x9f
 3931 034a 00000000 		.4byte	0
 3932 034e 00000000 		.4byte	0
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 110


 3933              	.LLST23:
 3934 0352 00000000 		.4byte	.LVL67
 3935 0356 1F000000 		.4byte	.LVL69-1
 3936 035a 0100     		.2byte	0x1
 3937 035c 51       		.byte	0x51
 3938 035d 1F000000 		.4byte	.LVL69-1
 3939 0361 44000000 		.4byte	.LFE20
 3940 0365 0400     		.2byte	0x4
 3941 0367 F3       		.byte	0xf3
 3942 0368 01       		.uleb128 0x1
 3943 0369 51       		.byte	0x51
 3944 036a 9F       		.byte	0x9f
 3945 036b 00000000 		.4byte	0
 3946 036f 00000000 		.4byte	0
 3947              	.LLST24:
 3948 0373 00000000 		.4byte	.LVL71
 3949 0377 1C000000 		.4byte	.LVL72
 3950 037b 0100     		.2byte	0x1
 3951 037d 50       		.byte	0x50
 3952 037e 1C000000 		.4byte	.LVL72
 3953 0382 36000000 		.4byte	.LVL75
 3954 0386 0100     		.2byte	0x1
 3955 0388 55       		.byte	0x55
 3956 0389 36000000 		.4byte	.LVL75
 3957 038d 44000000 		.4byte	.LFE21
 3958 0391 0400     		.2byte	0x4
 3959 0393 F3       		.byte	0xf3
 3960 0394 01       		.uleb128 0x1
 3961 0395 50       		.byte	0x50
 3962 0396 9F       		.byte	0x9f
 3963 0397 00000000 		.4byte	0
 3964 039b 00000000 		.4byte	0
 3965              	.LLST25:
 3966 039f 00000000 		.4byte	.LVL71
 3967 03a3 1F000000 		.4byte	.LVL73-1
 3968 03a7 0100     		.2byte	0x1
 3969 03a9 51       		.byte	0x51
 3970 03aa 1F000000 		.4byte	.LVL73-1
 3971 03ae 36000000 		.4byte	.LVL74
 3972 03b2 0100     		.2byte	0x1
 3973 03b4 54       		.byte	0x54
 3974 03b5 36000000 		.4byte	.LVL74
 3975 03b9 44000000 		.4byte	.LFE21
 3976 03bd 0500     		.2byte	0x5
 3977 03bf 73       		.byte	0x73
 3978 03c0 00       		.sleb128 0
 3979 03c1 70       		.byte	0x70
 3980 03c2 00       		.sleb128 0
 3981 03c3 22       		.byte	0x22
 3982 03c4 00000000 		.4byte	0
 3983 03c8 00000000 		.4byte	0
 3984              	.LLST26:
 3985 03cc 00000000 		.4byte	.LVL76
 3986 03d0 0C000000 		.4byte	.LVL78
 3987 03d4 0100     		.2byte	0x1
 3988 03d6 50       		.byte	0x50
 3989 03d7 0C000000 		.4byte	.LVL78
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 111


 3990 03db 7A000000 		.4byte	.LVL93
 3991 03df 0100     		.2byte	0x1
 3992 03e1 56       		.byte	0x56
 3993 03e2 7A000000 		.4byte	.LVL93
 3994 03e6 88000000 		.4byte	.LFE22
 3995 03ea 0400     		.2byte	0x4
 3996 03ec F3       		.byte	0xf3
 3997 03ed 01       		.uleb128 0x1
 3998 03ee 50       		.byte	0x50
 3999 03ef 9F       		.byte	0x9f
 4000 03f0 00000000 		.4byte	0
 4001 03f4 00000000 		.4byte	0
 4002              	.LLST27:
 4003 03f8 00000000 		.4byte	.LVL76
 4004 03fc 0A000000 		.4byte	.LVL77
 4005 0400 0100     		.2byte	0x1
 4006 0402 51       		.byte	0x51
 4007 0403 0A000000 		.4byte	.LVL77
 4008 0407 62000000 		.4byte	.LVL87
 4009 040b 0400     		.2byte	0x4
 4010 040d F3       		.byte	0xf3
 4011 040e 01       		.uleb128 0x1
 4012 040f 51       		.byte	0x51
 4013 0410 9F       		.byte	0x9f
 4014 0411 62000000 		.4byte	.LVL87
 4015 0415 64000000 		.4byte	.LVL88
 4016 0419 0100     		.2byte	0x1
 4017 041b 54       		.byte	0x54
 4018 041c 64000000 		.4byte	.LVL88
 4019 0420 6E000000 		.4byte	.LVL90
 4020 0424 0400     		.2byte	0x4
 4021 0426 F3       		.byte	0xf3
 4022 0427 01       		.uleb128 0x1
 4023 0428 51       		.byte	0x51
 4024 0429 9F       		.byte	0x9f
 4025 042a 6E000000 		.4byte	.LVL90
 4026 042e 7A000000 		.4byte	.LVL92
 4027 0432 0100     		.2byte	0x1
 4028 0434 54       		.byte	0x54
 4029 0435 7A000000 		.4byte	.LVL92
 4030 0439 88000000 		.4byte	.LFE22
 4031 043d 0100     		.2byte	0x1
 4032 043f 50       		.byte	0x50
 4033 0440 00000000 		.4byte	0
 4034 0444 00000000 		.4byte	0
 4035              	.LLST28:
 4036 0448 60000000 		.4byte	.LVL86
 4037 044c 64000000 		.4byte	.LVL88
 4038 0450 0100     		.2byte	0x1
 4039 0452 50       		.byte	0x50
 4040 0453 00000000 		.4byte	0
 4041 0457 00000000 		.4byte	0
 4042              	.LLST29:
 4043 045b 3E000000 		.4byte	.LVL81
 4044 045f 40000000 		.4byte	.LVL82
 4045 0463 0100     		.2byte	0x1
 4046 0465 53       		.byte	0x53
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 112


 4047 0466 40000000 		.4byte	.LVL82
 4048 046a 44000000 		.4byte	.LVL83
 4049 046e 0300     		.2byte	0x3
 4050 0470 73       		.byte	0x73
 4051 0471 7F       		.sleb128 -1
 4052 0472 9F       		.byte	0x9f
 4053 0473 44000000 		.4byte	.LVL83
 4054 0477 6E000000 		.4byte	.LVL90
 4055 047b 0100     		.2byte	0x1
 4056 047d 57       		.byte	0x57
 4057 047e 00000000 		.4byte	0
 4058 0482 00000000 		.4byte	0
 4059              	.LLST30:
 4060 0486 16000000 		.4byte	.LVL79
 4061 048a 70000000 		.4byte	.LVL91
 4062 048e 0100     		.2byte	0x1
 4063 0490 55       		.byte	0x55
 4064 0491 00000000 		.4byte	0
 4065 0495 00000000 		.4byte	0
 4066              	.LLST31:
 4067 0499 00000000 		.4byte	.LVL94
 4068 049d 1D000000 		.4byte	.LVL97-1
 4069 04a1 0100     		.2byte	0x1
 4070 04a3 50       		.byte	0x50
 4071 04a4 1D000000 		.4byte	.LVL97-1
 4072 04a8 3E000000 		.4byte	.LVL103
 4073 04ac 0400     		.2byte	0x4
 4074 04ae F3       		.byte	0xf3
 4075 04af 01       		.uleb128 0x1
 4076 04b0 50       		.byte	0x50
 4077 04b1 9F       		.byte	0x9f
 4078 04b2 3E000000 		.4byte	.LVL103
 4079 04b6 40000000 		.4byte	.LVL104
 4080 04ba 0100     		.2byte	0x1
 4081 04bc 50       		.byte	0x50
 4082 04bd 40000000 		.4byte	.LVL104
 4083 04c1 54000000 		.4byte	.LFE23
 4084 04c5 0400     		.2byte	0x4
 4085 04c7 F3       		.byte	0xf3
 4086 04c8 01       		.uleb128 0x1
 4087 04c9 50       		.byte	0x50
 4088 04ca 9F       		.byte	0x9f
 4089 04cb 00000000 		.4byte	0
 4090 04cf 00000000 		.4byte	0
 4091              	.LLST32:
 4092 04d3 00000000 		.4byte	.LVL94
 4093 04d7 1D000000 		.4byte	.LVL97-1
 4094 04db 0100     		.2byte	0x1
 4095 04dd 51       		.byte	0x51
 4096 04de 1D000000 		.4byte	.LVL97-1
 4097 04e2 1E000000 		.4byte	.LVL97
 4098 04e6 0400     		.2byte	0x4
 4099 04e8 F3       		.byte	0xf3
 4100 04e9 01       		.uleb128 0x1
 4101 04ea 51       		.byte	0x51
 4102 04eb 9F       		.byte	0x9f
 4103 04ec 1E000000 		.4byte	.LVL97
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 113


 4104 04f0 21000000 		.4byte	.LVL98-1
 4105 04f4 0100     		.2byte	0x1
 4106 04f6 50       		.byte	0x50
 4107 04f7 3E000000 		.4byte	.LVL103
 4108 04fb 40000000 		.4byte	.LVL104
 4109 04ff 0100     		.2byte	0x1
 4110 0501 51       		.byte	0x51
 4111 0502 00000000 		.4byte	0
 4112 0506 00000000 		.4byte	0
 4113              	.LLST33:
 4114 050a 02000000 		.4byte	.LVL95
 4115 050e 3C000000 		.4byte	.LVL102
 4116 0512 0600     		.2byte	0x6
 4117 0514 9E       		.byte	0x9e
 4118 0515 04       		.uleb128 0x4
 4119 0516 00000000 		.4byte	0
 4120 051a 3C000000 		.4byte	.LVL102
 4121 051e 3E000000 		.4byte	.LVL103
 4122 0522 0100     		.2byte	0x1
 4123 0524 50       		.byte	0x50
 4124 0525 3E000000 		.4byte	.LVL103
 4125 0529 40000000 		.4byte	.LVL104
 4126 052d 0600     		.2byte	0x6
 4127 052f 9E       		.byte	0x9e
 4128 0530 04       		.uleb128 0x4
 4129 0531 00000000 		.4byte	0
 4130 0535 40000000 		.4byte	.LVL104
 4131 0539 54000000 		.4byte	.LFE23
 4132 053d 0100     		.2byte	0x1
 4133 053f 50       		.byte	0x50
 4134 0540 00000000 		.4byte	0
 4135 0544 00000000 		.4byte	0
 4136              	.LLST34:
 4137 0548 12000000 		.4byte	.LVL96
 4138 054c 2C000000 		.4byte	.LVL100
 4139 0550 0100     		.2byte	0x1
 4140 0552 54       		.byte	0x54
 4141 0553 3E000000 		.4byte	.LVL103
 4142 0557 40000000 		.4byte	.LVL104
 4143 055b 0100     		.2byte	0x1
 4144 055d 54       		.byte	0x54
 4145 055e 00000000 		.4byte	0
 4146 0562 00000000 		.4byte	0
 4147              	.LLST35:
 4148 0566 00000000 		.4byte	.LVL105
 4149 056a 1D000000 		.4byte	.LVL108-1
 4150 056e 0100     		.2byte	0x1
 4151 0570 50       		.byte	0x50
 4152 0571 1D000000 		.4byte	.LVL108-1
 4153 0575 52000000 		.4byte	.LVL115
 4154 0579 0400     		.2byte	0x4
 4155 057b F3       		.byte	0xf3
 4156 057c 01       		.uleb128 0x1
 4157 057d 50       		.byte	0x50
 4158 057e 9F       		.byte	0x9f
 4159 057f 52000000 		.4byte	.LVL115
 4160 0583 54000000 		.4byte	.LVL116
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 114


 4161 0587 0100     		.2byte	0x1
 4162 0589 50       		.byte	0x50
 4163 058a 54000000 		.4byte	.LVL116
 4164 058e 68000000 		.4byte	.LFE24
 4165 0592 0400     		.2byte	0x4
 4166 0594 F3       		.byte	0xf3
 4167 0595 01       		.uleb128 0x1
 4168 0596 50       		.byte	0x50
 4169 0597 9F       		.byte	0x9f
 4170 0598 00000000 		.4byte	0
 4171 059c 00000000 		.4byte	0
 4172              	.LLST36:
 4173 05a0 00000000 		.4byte	.LVL105
 4174 05a4 1D000000 		.4byte	.LVL108-1
 4175 05a8 0100     		.2byte	0x1
 4176 05aa 51       		.byte	0x51
 4177 05ab 1D000000 		.4byte	.LVL108-1
 4178 05af 1E000000 		.4byte	.LVL108
 4179 05b3 0400     		.2byte	0x4
 4180 05b5 F3       		.byte	0xf3
 4181 05b6 01       		.uleb128 0x1
 4182 05b7 51       		.byte	0x51
 4183 05b8 9F       		.byte	0x9f
 4184 05b9 1E000000 		.4byte	.LVL108
 4185 05bd 2E000000 		.4byte	.LVL109
 4186 05c1 0100     		.2byte	0x1
 4187 05c3 50       		.byte	0x50
 4188 05c4 34000000 		.4byte	.LVL110
 4189 05c8 42000000 		.4byte	.LVL111
 4190 05cc 0100     		.2byte	0x1
 4191 05ce 50       		.byte	0x50
 4192 05cf 52000000 		.4byte	.LVL115
 4193 05d3 54000000 		.4byte	.LVL116
 4194 05d7 0100     		.2byte	0x1
 4195 05d9 51       		.byte	0x51
 4196 05da 00000000 		.4byte	0
 4197 05de 00000000 		.4byte	0
 4198              	.LLST37:
 4199 05e2 02000000 		.4byte	.LVL106
 4200 05e6 50000000 		.4byte	.LVL114
 4201 05ea 0200     		.2byte	0x2
 4202 05ec 30       		.byte	0x30
 4203 05ed 9F       		.byte	0x9f
 4204 05ee 50000000 		.4byte	.LVL114
 4205 05f2 52000000 		.4byte	.LVL115
 4206 05f6 0100     		.2byte	0x1
 4207 05f8 50       		.byte	0x50
 4208 05f9 52000000 		.4byte	.LVL115
 4209 05fd 54000000 		.4byte	.LVL116
 4210 0601 0200     		.2byte	0x2
 4211 0603 30       		.byte	0x30
 4212 0604 9F       		.byte	0x9f
 4213 0605 54000000 		.4byte	.LVL116
 4214 0609 68000000 		.4byte	.LFE24
 4215 060d 0100     		.2byte	0x1
 4216 060f 50       		.byte	0x50
 4217 0610 00000000 		.4byte	0
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 115


 4218 0614 00000000 		.4byte	0
 4219              	.LLST38:
 4220 0618 12000000 		.4byte	.LVL107
 4221 061c 46000000 		.4byte	.LVL112
 4222 0620 0100     		.2byte	0x1
 4223 0622 54       		.byte	0x54
 4224 0623 46000000 		.4byte	.LVL112
 4225 0627 52000000 		.4byte	.LVL115
 4226 062b 1200     		.2byte	0x12
 4227 062d 75       		.byte	0x75
 4228 062e 00       		.sleb128 0
 4229 062f 33       		.byte	0x33
 4230 0630 24       		.byte	0x24
 4231 0631 75       		.byte	0x75
 4232 0632 00       		.sleb128 0
 4233 0633 1C       		.byte	0x1c
 4234 0634 33       		.byte	0x33
 4235 0635 24       		.byte	0x24
 4236 0636 76       		.byte	0x76
 4237 0637 00       		.sleb128 0
 4238 0638 22       		.byte	0x22
 4239 0639 06       		.byte	0x6
 4240 063a F3       		.byte	0xf3
 4241 063b 01       		.uleb128 0x1
 4242 063c 50       		.byte	0x50
 4243 063d 22       		.byte	0x22
 4244 063e 9F       		.byte	0x9f
 4245 063f 52000000 		.4byte	.LVL115
 4246 0643 54000000 		.4byte	.LVL116
 4247 0647 0100     		.2byte	0x1
 4248 0649 54       		.byte	0x54
 4249 064a 54000000 		.4byte	.LVL116
 4250 064e 54000000 		.4byte	.LVL117
 4251 0652 1200     		.2byte	0x12
 4252 0654 75       		.byte	0x75
 4253 0655 00       		.sleb128 0
 4254 0656 33       		.byte	0x33
 4255 0657 24       		.byte	0x24
 4256 0658 75       		.byte	0x75
 4257 0659 00       		.sleb128 0
 4258 065a 1C       		.byte	0x1c
 4259 065b 33       		.byte	0x33
 4260 065c 24       		.byte	0x24
 4261 065d 76       		.byte	0x76
 4262 065e 00       		.sleb128 0
 4263 065f 22       		.byte	0x22
 4264 0660 06       		.byte	0x6
 4265 0661 F3       		.byte	0xf3
 4266 0662 01       		.uleb128 0x1
 4267 0663 50       		.byte	0x50
 4268 0664 22       		.byte	0x22
 4269 0665 9F       		.byte	0x9f
 4270 0666 00000000 		.4byte	0
 4271 066a 00000000 		.4byte	0
 4272              	.LLST39:
 4273 066e 00000000 		.4byte	.LVL118
 4274 0672 1D000000 		.4byte	.LVL121-1
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 116


 4275 0676 0100     		.2byte	0x1
 4276 0678 50       		.byte	0x50
 4277 0679 1D000000 		.4byte	.LVL121-1
 4278 067d 36000000 		.4byte	.LVL125
 4279 0681 0400     		.2byte	0x4
 4280 0683 F3       		.byte	0xf3
 4281 0684 01       		.uleb128 0x1
 4282 0685 50       		.byte	0x50
 4283 0686 9F       		.byte	0x9f
 4284 0687 36000000 		.4byte	.LVL125
 4285 068b 38000000 		.4byte	.LVL126
 4286 068f 0100     		.2byte	0x1
 4287 0691 50       		.byte	0x50
 4288 0692 38000000 		.4byte	.LVL126
 4289 0696 4C000000 		.4byte	.LFE25
 4290 069a 0400     		.2byte	0x4
 4291 069c F3       		.byte	0xf3
 4292 069d 01       		.uleb128 0x1
 4293 069e 50       		.byte	0x50
 4294 069f 9F       		.byte	0x9f
 4295 06a0 00000000 		.4byte	0
 4296 06a4 00000000 		.4byte	0
 4297              	.LLST40:
 4298 06a8 00000000 		.4byte	.LVL118
 4299 06ac 1D000000 		.4byte	.LVL121-1
 4300 06b0 0100     		.2byte	0x1
 4301 06b2 51       		.byte	0x51
 4302 06b3 1D000000 		.4byte	.LVL121-1
 4303 06b7 1E000000 		.4byte	.LVL121
 4304 06bb 0400     		.2byte	0x4
 4305 06bd F3       		.byte	0xf3
 4306 06be 01       		.uleb128 0x1
 4307 06bf 51       		.byte	0x51
 4308 06c0 9F       		.byte	0x9f
 4309 06c1 1E000000 		.4byte	.LVL121
 4310 06c5 27000000 		.4byte	.LVL122-1
 4311 06c9 0100     		.2byte	0x1
 4312 06cb 50       		.byte	0x50
 4313 06cc 36000000 		.4byte	.LVL125
 4314 06d0 38000000 		.4byte	.LVL126
 4315 06d4 0100     		.2byte	0x1
 4316 06d6 51       		.byte	0x51
 4317 06d7 00000000 		.4byte	0
 4318 06db 00000000 		.4byte	0
 4319              	.LLST41:
 4320 06df 02000000 		.4byte	.LVL119
 4321 06e3 34000000 		.4byte	.LVL124
 4322 06e7 0A00     		.2byte	0xa
 4323 06e9 9E       		.byte	0x9e
 4324 06ea 08       		.uleb128 0x8
 4325 06eb 00000000 		.8byte	0
 4325      00000000 
 4326 06f3 36000000 		.4byte	.LVL125
 4327 06f7 38000000 		.4byte	.LVL126
 4328 06fb 0A00     		.2byte	0xa
 4329 06fd 9E       		.byte	0x9e
 4330 06fe 08       		.uleb128 0x8
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 117


 4331 06ff 00000000 		.8byte	0
 4331      00000000 
 4332 0707 00000000 		.4byte	0
 4333 070b 00000000 		.4byte	0
 4334              	.LLST42:
 4335 070f 12000000 		.4byte	.LVL120
 4336 0713 2A000000 		.4byte	.LVL123
 4337 0717 0100     		.2byte	0x1
 4338 0719 54       		.byte	0x54
 4339 071a 2A000000 		.4byte	.LVL123
 4340 071e 36000000 		.4byte	.LVL125
 4341 0722 1200     		.2byte	0x12
 4342 0724 75       		.byte	0x75
 4343 0725 00       		.sleb128 0
 4344 0726 33       		.byte	0x33
 4345 0727 24       		.byte	0x24
 4346 0728 75       		.byte	0x75
 4347 0729 00       		.sleb128 0
 4348 072a 1C       		.byte	0x1c
 4349 072b 33       		.byte	0x33
 4350 072c 24       		.byte	0x24
 4351 072d 76       		.byte	0x76
 4352 072e 00       		.sleb128 0
 4353 072f 22       		.byte	0x22
 4354 0730 06       		.byte	0x6
 4355 0731 F3       		.byte	0xf3
 4356 0732 01       		.uleb128 0x1
 4357 0733 50       		.byte	0x50
 4358 0734 22       		.byte	0x22
 4359 0735 9F       		.byte	0x9f
 4360 0736 36000000 		.4byte	.LVL125
 4361 073a 38000000 		.4byte	.LVL126
 4362 073e 0100     		.2byte	0x1
 4363 0740 54       		.byte	0x54
 4364 0741 38000000 		.4byte	.LVL126
 4365 0745 38000000 		.4byte	.LVL127
 4366 0749 1200     		.2byte	0x12
 4367 074b 75       		.byte	0x75
 4368 074c 00       		.sleb128 0
 4369 074d 33       		.byte	0x33
 4370 074e 24       		.byte	0x24
 4371 074f 75       		.byte	0x75
 4372 0750 00       		.sleb128 0
 4373 0751 1C       		.byte	0x1c
 4374 0752 33       		.byte	0x33
 4375 0753 24       		.byte	0x24
 4376 0754 76       		.byte	0x76
 4377 0755 00       		.sleb128 0
 4378 0756 22       		.byte	0x22
 4379 0757 06       		.byte	0x6
 4380 0758 F3       		.byte	0xf3
 4381 0759 01       		.uleb128 0x1
 4382 075a 50       		.byte	0x50
 4383 075b 22       		.byte	0x22
 4384 075c 9F       		.byte	0x9f
 4385 075d 00000000 		.4byte	0
 4386 0761 00000000 		.4byte	0
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 118


 4387              	.LLST43:
 4388 0765 06000000 		.4byte	.LVL128
 4389 0769 10000000 		.4byte	.LVL129
 4390 076d 0200     		.2byte	0x2
 4391 076f 30       		.byte	0x30
 4392 0770 9F       		.byte	0x9f
 4393 0771 10000000 		.4byte	.LVL129
 4394 0775 80000000 		.4byte	.LVL133
 4395 0779 0100     		.2byte	0x1
 4396 077b 54       		.byte	0x54
 4397 077c 80000000 		.4byte	.LVL133
 4398 0780 84000000 		.4byte	.LVL134
 4399 0784 0200     		.2byte	0x2
 4400 0786 30       		.byte	0x30
 4401 0787 9F       		.byte	0x9f
 4402 0788 84000000 		.4byte	.LVL134
 4403 078c A8000000 		.4byte	.LVL138
 4404 0790 0100     		.2byte	0x1
 4405 0792 54       		.byte	0x54
 4406 0793 00000000 		.4byte	0
 4407 0797 00000000 		.4byte	0
 4408              	.LLST44:
 4409 079b 06000000 		.4byte	.LVL128
 4410 079f 10000000 		.4byte	.LVL129
 4411 07a3 0200     		.2byte	0x2
 4412 07a5 30       		.byte	0x30
 4413 07a6 9F       		.byte	0x9f
 4414 07a7 10000000 		.4byte	.LVL129
 4415 07ab 80000000 		.4byte	.LVL133
 4416 07af 0100     		.2byte	0x1
 4417 07b1 55       		.byte	0x55
 4418 07b2 80000000 		.4byte	.LVL133
 4419 07b6 84000000 		.4byte	.LVL134
 4420 07ba 0200     		.2byte	0x2
 4421 07bc 30       		.byte	0x30
 4422 07bd 9F       		.byte	0x9f
 4423 07be 84000000 		.4byte	.LVL134
 4424 07c2 A6000000 		.4byte	.LVL137
 4425 07c6 0100     		.2byte	0x1
 4426 07c8 55       		.byte	0x55
 4427 07c9 A6000000 		.4byte	.LVL137
 4428 07cd B4000000 		.4byte	.LVL140
 4429 07d1 0200     		.2byte	0x2
 4430 07d3 30       		.byte	0x30
 4431 07d4 9F       		.byte	0x9f
 4432 07d5 00000000 		.4byte	0
 4433 07d9 00000000 		.4byte	0
 4434              	.LLST45:
 4435 07dd 10000000 		.4byte	.LVL129
 4436 07e1 80000000 		.4byte	.LVL133
 4437 07e5 0400     		.2byte	0x4
 4438 07e7 0A       		.byte	0xa
 4439 07e8 0010     		.2byte	0x1000
 4440 07ea 9F       		.byte	0x9f
 4441 07eb 00000000 		.4byte	0
 4442 07ef 00000000 		.4byte	0
 4443              	.LLST46:
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 119


 4444 07f3 00000000 		.4byte	.LVL145
 4445 07f7 07000000 		.4byte	.LVL146-1
 4446 07fb 0100     		.2byte	0x1
 4447 07fd 50       		.byte	0x50
 4448 07fe 07000000 		.4byte	.LVL146-1
 4449 0802 0E000000 		.4byte	.LVL148
 4450 0806 0100     		.2byte	0x1
 4451 0808 54       		.byte	0x54
 4452 0809 0E000000 		.4byte	.LVL148
 4453 080d 10000000 		.4byte	.LFE2
 4454 0811 0400     		.2byte	0x4
 4455 0813 F3       		.byte	0xf3
 4456 0814 01       		.uleb128 0x1
 4457 0815 50       		.byte	0x50
 4458 0816 9F       		.byte	0x9f
 4459 0817 00000000 		.4byte	0
 4460 081b 00000000 		.4byte	0
 4461              	.LLST47:
 4462 081f 00000000 		.4byte	.LVL149
 4463 0823 0D000000 		.4byte	.LVL150-1
 4464 0827 0100     		.2byte	0x1
 4465 0829 50       		.byte	0x50
 4466 082a 0D000000 		.4byte	.LVL150-1
 4467 082e 5A000000 		.4byte	.LVL155
 4468 0832 0100     		.2byte	0x1
 4469 0834 54       		.byte	0x54
 4470 0835 5A000000 		.4byte	.LVL155
 4471 0839 70000000 		.4byte	.LFE6
 4472 083d 0400     		.2byte	0x4
 4473 083f F3       		.byte	0xf3
 4474 0840 01       		.uleb128 0x1
 4475 0841 50       		.byte	0x50
 4476 0842 9F       		.byte	0x9f
 4477 0843 00000000 		.4byte	0
 4478 0847 00000000 		.4byte	0
 4479              	.LLST48:
 4480 084b 00000000 		.4byte	.LVL149
 4481 084f 0D000000 		.4byte	.LVL150-1
 4482 0853 0100     		.2byte	0x1
 4483 0855 51       		.byte	0x51
 4484 0856 0D000000 		.4byte	.LVL150-1
 4485 085a 5A000000 		.4byte	.LVL156
 4486 085e 0100     		.2byte	0x1
 4487 0860 56       		.byte	0x56
 4488 0861 5A000000 		.4byte	.LVL156
 4489 0865 70000000 		.4byte	.LFE6
 4490 0869 0400     		.2byte	0x4
 4491 086b F3       		.byte	0xf3
 4492 086c 01       		.uleb128 0x1
 4493 086d 51       		.byte	0x51
 4494 086e 9F       		.byte	0x9f
 4495 086f 00000000 		.4byte	0
 4496 0873 00000000 		.4byte	0
 4497              		.section	.debug_aranges,"",%progbits
 4498 0000 EC000000 		.4byte	0xec
 4499 0004 0200     		.2byte	0x2
 4500 0006 00000000 		.4byte	.Ldebug_info0
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 120


 4501 000a 04       		.byte	0x4
 4502 000b 00       		.byte	0
 4503 000c 0000     		.2byte	0
 4504 000e 0000     		.2byte	0
 4505 0010 00000000 		.4byte	.LFB5
 4506 0014 34000000 		.4byte	.LFE5-.LFB5
 4507 0018 00000000 		.4byte	.LFB13
 4508 001c 58000000 		.4byte	.LFE13-.LFB13
 4509 0020 00000000 		.4byte	.LFB3
 4510 0024 10000000 		.4byte	.LFE3-.LFB3
 4511 0028 00000000 		.4byte	.LFB4
 4512 002c D0000000 		.4byte	.LFE4-.LFB4
 4513 0030 00000000 		.4byte	.LFB7
 4514 0034 28000000 		.4byte	.LFE7-.LFB7
 4515 0038 00000000 		.4byte	.LFB9
 4516 003c 28000000 		.4byte	.LFE9-.LFB9
 4517 0040 00000000 		.4byte	.LFB10
 4518 0044 10000000 		.4byte	.LFE10-.LFB10
 4519 0048 00000000 		.4byte	.LFB11
 4520 004c 2C000000 		.4byte	.LFE11-.LFB11
 4521 0050 00000000 		.4byte	.LFB12
 4522 0054 38000000 		.4byte	.LFE12-.LFB12
 4523 0058 00000000 		.4byte	.LFB14
 4524 005c 54000000 		.4byte	.LFE14-.LFB14
 4525 0060 00000000 		.4byte	.LFB15
 4526 0064 64000000 		.4byte	.LFE15-.LFB15
 4527 0068 00000000 		.4byte	.LFB16
 4528 006c 1C000000 		.4byte	.LFE16-.LFB16
 4529 0070 00000000 		.4byte	.LFB17
 4530 0074 18000000 		.4byte	.LFE17-.LFB17
 4531 0078 00000000 		.4byte	.LFB18
 4532 007c 2C000000 		.4byte	.LFE18-.LFB18
 4533 0080 00000000 		.4byte	.LFB19
 4534 0084 2C000000 		.4byte	.LFE19-.LFB19
 4535 0088 00000000 		.4byte	.LFB20
 4536 008c 44000000 		.4byte	.LFE20-.LFB20
 4537 0090 00000000 		.4byte	.LFB21
 4538 0094 44000000 		.4byte	.LFE21-.LFB21
 4539 0098 00000000 		.4byte	.LFB22
 4540 009c 88000000 		.4byte	.LFE22-.LFB22
 4541 00a0 00000000 		.4byte	.LFB23
 4542 00a4 54000000 		.4byte	.LFE23-.LFB23
 4543 00a8 00000000 		.4byte	.LFB24
 4544 00ac 68000000 		.4byte	.LFE24-.LFB24
 4545 00b0 00000000 		.4byte	.LFB25
 4546 00b4 4C000000 		.4byte	.LFE25-.LFB25
 4547 00b8 00000000 		.4byte	.LFB26
 4548 00bc DC000000 		.4byte	.LFE26-.LFB26
 4549 00c0 00000000 		.4byte	.LFB27
 4550 00c4 48000000 		.4byte	.LFE27-.LFB27
 4551 00c8 00000000 		.4byte	.LFB1
 4552 00cc 24000000 		.4byte	.LFE1-.LFB1
 4553 00d0 00000000 		.4byte	.LFB2
 4554 00d4 10000000 		.4byte	.LFE2-.LFB2
 4555 00d8 00000000 		.4byte	.LFB6
 4556 00dc 70000000 		.4byte	.LFE6-.LFB6
 4557 00e0 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 121


 4558 00e4 44000000 		.4byte	.LFE8-.LFB8
 4559 00e8 00000000 		.4byte	0
 4560 00ec 00000000 		.4byte	0
 4561              		.section	.debug_ranges,"",%progbits
 4562              	.Ldebug_ranges0:
 4563 0000 00000000 		.4byte	.LFB5
 4564 0004 34000000 		.4byte	.LFE5
 4565 0008 00000000 		.4byte	.LFB13
 4566 000c 58000000 		.4byte	.LFE13
 4567 0010 00000000 		.4byte	.LFB3
 4568 0014 10000000 		.4byte	.LFE3
 4569 0018 00000000 		.4byte	.LFB4
 4570 001c D0000000 		.4byte	.LFE4
 4571 0020 00000000 		.4byte	.LFB7
 4572 0024 28000000 		.4byte	.LFE7
 4573 0028 00000000 		.4byte	.LFB9
 4574 002c 28000000 		.4byte	.LFE9
 4575 0030 00000000 		.4byte	.LFB10
 4576 0034 10000000 		.4byte	.LFE10
 4577 0038 00000000 		.4byte	.LFB11
 4578 003c 2C000000 		.4byte	.LFE11
 4579 0040 00000000 		.4byte	.LFB12
 4580 0044 38000000 		.4byte	.LFE12
 4581 0048 00000000 		.4byte	.LFB14
 4582 004c 54000000 		.4byte	.LFE14
 4583 0050 00000000 		.4byte	.LFB15
 4584 0054 64000000 		.4byte	.LFE15
 4585 0058 00000000 		.4byte	.LFB16
 4586 005c 1C000000 		.4byte	.LFE16
 4587 0060 00000000 		.4byte	.LFB17
 4588 0064 18000000 		.4byte	.LFE17
 4589 0068 00000000 		.4byte	.LFB18
 4590 006c 2C000000 		.4byte	.LFE18
 4591 0070 00000000 		.4byte	.LFB19
 4592 0074 2C000000 		.4byte	.LFE19
 4593 0078 00000000 		.4byte	.LFB20
 4594 007c 44000000 		.4byte	.LFE20
 4595 0080 00000000 		.4byte	.LFB21
 4596 0084 44000000 		.4byte	.LFE21
 4597 0088 00000000 		.4byte	.LFB22
 4598 008c 88000000 		.4byte	.LFE22
 4599 0090 00000000 		.4byte	.LFB23
 4600 0094 54000000 		.4byte	.LFE23
 4601 0098 00000000 		.4byte	.LFB24
 4602 009c 68000000 		.4byte	.LFE24
 4603 00a0 00000000 		.4byte	.LFB25
 4604 00a4 4C000000 		.4byte	.LFE25
 4605 00a8 00000000 		.4byte	.LFB26
 4606 00ac DC000000 		.4byte	.LFE26
 4607 00b0 00000000 		.4byte	.LFB27
 4608 00b4 48000000 		.4byte	.LFE27
 4609 00b8 00000000 		.4byte	.LFB1
 4610 00bc 24000000 		.4byte	.LFE1
 4611 00c0 00000000 		.4byte	.LFB2
 4612 00c4 10000000 		.4byte	.LFE2
 4613 00c8 00000000 		.4byte	.LFB6
 4614 00cc 70000000 		.4byte	.LFE6
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 122


 4615 00d0 00000000 		.4byte	.LFB8
 4616 00d4 44000000 		.4byte	.LFE8
 4617 00d8 00000000 		.4byte	0
 4618 00dc 00000000 		.4byte	0
 4619              		.section	.debug_line,"",%progbits
 4620              	.Ldebug_line0:
 4621 0000 AD030000 		.section	.debug_str,"MS",%progbits,1
 4621      02007E00 
 4621      00000201 
 4621      FB0E0D00 
 4621      01010101 
 4622              	.LASF10:
 4623 0000 75696E74 		.ascii	"uint16\000"
 4623      313600
 4624              	.LASF53:
 4625 0007 6368616E 		.ascii	"chanCount\000"
 4625      436F756E 
 4625      7400
 4626              	.LASF73:
 4627 0011 61646347 		.ascii	"adcGain\000"
 4627      61696E00 
 4628              	.LASF87:
 4629 0019 636F756E 		.ascii	"counts\000"
 4629      747300
 4630              	.LASF90:
 4631 0020 4144435F 		.ascii	"ADC_1_StartEx\000"
 4631      315F5374 
 4631      61727445 
 4631      7800
 4632              	.LASF94:
 4633 002e 4144435F 		.ascii	"ADC_1_StopConvert\000"
 4633      315F5374 
 4633      6F70436F 
 4633      6E766572 
 4633      7400
 4634              	.LASF7:
 4635 0040 6C6F6E67 		.ascii	"long long unsigned int\000"
 4635      206C6F6E 
 4635      6720756E 
 4635      7369676E 
 4635      65642069 
 4636              	.LASF88:
 4637 0057 4144435F 		.ascii	"ADC_1_Enable\000"
 4637      315F456E 
 4637      61626C65 
 4637      00
 4638              	.LASF6:
 4639 0064 6C6F6E67 		.ascii	"long long int\000"
 4639      206C6F6E 
 4639      6720696E 
 4639      7400
 4640              	.LASF0:
 4641 0072 7369676E 		.ascii	"signed char\000"
 4641      65642063 
 4641      68617200 
 4642              	.LASF85:
 4643 007e 4144435F 		.ascii	"ADC_1_Init\000"
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 123


 4643      315F496E 
 4643      697400
 4644              	.LASF36:
 4645 0089 636C6B44 		.ascii	"clkDivider\000"
 4645      69766964 
 4645      657200
 4646              	.LASF44:
 4647 0094 4144435F 		.ascii	"ADC_1_Stop\000"
 4647      315F5374 
 4647      6F7000
 4648              	.LASF13:
 4649 009f 696E7433 		.ascii	"int32\000"
 4649      3200
 4650              	.LASF46:
 4651 00a5 4144435F 		.ascii	"ADC_1_InitConfig\000"
 4651      315F496E 
 4651      6974436F 
 4651      6E666967 
 4651      00
 4652              	.LASF4:
 4653 00b6 6C6F6E67 		.ascii	"long int\000"
 4653      20696E74 
 4653      00
 4654              	.LASF74:
 4655 00bf 4144435F 		.ascii	"ADC_1_RawCounts2Counts\000"
 4655      315F5261 
 4655      77436F75 
 4655      6E747332 
 4655      436F756E 
 4656              	.LASF9:
 4657 00d6 75696E74 		.ascii	"uint8\000"
 4657      3800
 4658              	.LASF108:
 4659 00dc 43794465 		.ascii	"CyDelayUs\000"
 4659      6C617955 
 4659      7300
 4660              	.LASF16:
 4661 00e6 646F7562 		.ascii	"double\000"
 4661      6C6500
 4662              	.LASF47:
 4663 00ed 4144435F 		.ascii	"ADC_1_SetConvertMode\000"
 4663      315F5365 
 4663      74436F6E 
 4663      76657274 
 4663      4D6F6465 
 4664              	.LASF66:
 4665 0102 4144435F 		.ascii	"ADC_1_SetLimitMask\000"
 4665      315F5365 
 4665      744C696D 
 4665      69744D61 
 4665      736B00
 4666              	.LASF97:
 4667 0115 4144435F 		.ascii	"ADC_1_initVar\000"
 4667      315F696E 
 4667      69745661 
 4667      7200
 4668              	.LASF27:
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 124


 4669 0123 73616D70 		.ascii	"sampleTime01\000"
 4669      6C655469 
 4669      6D653031 
 4669      00
 4670              	.LASF11:
 4671 0130 75696E74 		.ascii	"uint32\000"
 4671      333200
 4672              	.LASF107:
 4673 0137 4379496E 		.ascii	"CyIntSetVector\000"
 4673      74536574 
 4673      56656374 
 4673      6F7200
 4674              	.LASF50:
 4675 0146 6D61736B 		.ascii	"mask\000"
 4675      00
 4676              	.LASF62:
 4677 014b 4144435F 		.ascii	"ADC_1_SetLowLimit\000"
 4677      315F5365 
 4677      744C6F77 
 4677      4C696D69 
 4677      7400
 4678              	.LASF113:
 4679 015d 4144435F 		.ascii	"ADC_1_SetDFTControl\000"
 4679      315F5365 
 4679      74444654 
 4679      436F6E74 
 4679      726F6C00 
 4680              	.LASF76:
 4681 0171 74656D70 		.ascii	"temp\000"
 4681      00
 4682              	.LASF54:
 4683 0176 7265744D 		.ascii	"retMode\000"
 4683      6F646500 
 4684              	.LASF8:
 4685 017e 756E7369 		.ascii	"unsigned int\000"
 4685      676E6564 
 4685      20696E74 
 4685      00
 4686              	.LASF32:
 4687 018b 72616E67 		.ascii	"rangeIntMask\000"
 4687      65496E74 
 4687      4D61736B 
 4687      00
 4688              	.LASF86:
 4689 0198 636F6E66 		.ascii	"configNum\000"
 4689      69674E75 
 4689      6D00
 4690              	.LASF45:
 4691 01a2 4144435F 		.ascii	"ADC_1_StartConvert\000"
 4691      315F5374 
 4691      61727443 
 4691      6F6E7665 
 4691      727400
 4692              	.LASF5:
 4693 01b5 6C6F6E67 		.ascii	"long unsigned int\000"
 4693      20756E73 
 4693      69676E65 
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 125


 4693      6420696E 
 4693      7400
 4694              	.LASF96:
 4695 01c7 4144435F 		.ascii	"ADC_1_channelsConfig\000"
 4695      315F6368 
 4695      616E6E65 
 4695      6C73436F 
 4695      6E666967 
 4696              	.LASF102:
 4697 01dc 4144435F 		.ascii	"ADC_1_intSarClock_Stop\000"
 4697      315F696E 
 4697      74536172 
 4697      436C6F63 
 4697      6B5F5374 
 4698              	.LASF40:
 4699 01f3 746D7052 		.ascii	"tmpRegVal\000"
 4699      65675661 
 4699      6C00
 4700              	.LASF52:
 4701 01fd 656E6162 		.ascii	"enableMask\000"
 4701      6C654D61 
 4701      736B00
 4702              	.LASF64:
 4703 0208 4144435F 		.ascii	"ADC_1_SetHighLimit\000"
 4703      315F5365 
 4703      74486967 
 4703      684C696D 
 4703      697400
 4704              	.LASF77:
 4705 021b 61766572 		.ascii	"averageAdcSamplesDiv\000"
 4705      61676541 
 4705      64635361 
 4705      6D706C65 
 4705      73446976 
 4706              	.LASF3:
 4707 0230 73686F72 		.ascii	"short unsigned int\000"
 4707      7420756E 
 4707      7369676E 
 4707      65642069 
 4707      6E7400
 4708              	.LASF101:
 4709 0243 4144435F 		.ascii	"ADC_1_allConfigs\000"
 4709      315F616C 
 4709      6C436F6E 
 4709      66696773 
 4709      00
 4710              	.LASF29:
 4711 0254 72616E67 		.ascii	"rangeThres\000"
 4711      65546872 
 4711      657300
 4712              	.LASF81:
 4713 025f 4144435F 		.ascii	"ADC_1_CountsTo_mVolts\000"
 4713      315F436F 
 4713      756E7473 
 4713      546F5F6D 
 4713      566F6C74 
 4714              	.LASF61:
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 126


 4715 0275 66696E61 		.ascii	"finalResult\000"
 4715      6C526573 
 4715      756C7400 
 4716              	.LASF92:
 4717 0281 4144435F 		.ascii	"ADC_1_SelectConfig\000"
 4717      315F5365 
 4717      6C656374 
 4717      436F6E66 
 4717      696700
 4718              	.LASF112:
 4719 0294 433A5C55 		.ascii	"C:\\Users\\cdrow\\Documents\\GitHub\\Li-CellTesting"
 4719      73657273 
 4719      5C636472 
 4719      6F775C44 
 4719      6F63756D 
 4720 02c2 5F536372 		.ascii	"_Script\\Internal_Main\\Internal_Main.cydsn\000"
 4720      6970745C 
 4720      496E7465 
 4720      726E616C 
 4720      5F4D6169 
 4721              	.LASF67:
 4722 02ec 6C696D69 		.ascii	"limitMask\000"
 4722      744D6173 
 4722      6B00
 4723              	.LASF78:
 4724 02f6 72617743 		.ascii	"rawChannel\000"
 4724      68616E6E 
 4724      656C00
 4725              	.LASF24:
 4726 0301 6E756D43 		.ascii	"numChannels\000"
 4726      68616E6E 
 4726      656C7300 
 4727              	.LASF42:
 4728 030d 6368616E 		.ascii	"chanConfig\000"
 4728      436F6E66 
 4728      696700
 4729              	.LASF19:
 4730 0318 72656733 		.ascii	"reg32\000"
 4730      3200
 4731              	.LASF41:
 4732 031e 69735369 		.ascii	"isSigned\000"
 4732      676E6564 
 4732      00
 4733              	.LASF58:
 4734 0327 61646352 		.ascii	"adcResult\000"
 4734      6573756C 
 4734      7400
 4735              	.LASF14:
 4736 0331 666C6F61 		.ascii	"float32\000"
 4736      74333200 
 4737              	.LASF22:
 4738 0339 73697A65 		.ascii	"sizetype\000"
 4738      74797065 
 4738      00
 4739              	.LASF104:
 4740 0342 4144435F 		.ascii	"ADC_1_intSarClock_StartEx\000"
 4740      315F696E 
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 127


 4740      74536172 
 4740      436C6F63 
 4740      6B5F5374 
 4741              	.LASF63:
 4742 035c 6C6F774C 		.ascii	"lowLimit\000"
 4742      696D6974 
 4742      00
 4743              	.LASF21:
 4744 0365 6C6F6E67 		.ascii	"long double\000"
 4744      20646F75 
 4744      626C6500 
 4745              	.LASF91:
 4746 0371 61646472 		.ascii	"address\000"
 4746      65737300 
 4747              	.LASF28:
 4748 0379 73616D70 		.ascii	"sampleTime23\000"
 4748      6C655469 
 4748      6D653233 
 4748      00
 4749              	.LASF33:
 4750 0386 73617449 		.ascii	"satIntMask\000"
 4750      6E744D61 
 4750      736B00
 4751              	.LASF72:
 4752 0391 4144435F 		.ascii	"ADC_1_SetGain\000"
 4752      315F5365 
 4752      74476169 
 4752      6E00
 4753              	.LASF69:
 4754 039f 7361744D 		.ascii	"satMask\000"
 4754      61736B00 
 4755              	.LASF17:
 4756 03a7 696E7436 		.ascii	"int64\000"
 4756      3400
 4757              	.LASF106:
 4758 03ad 4379496E 		.ascii	"CyIntSetPriority\000"
 4758      74536574 
 4758      5072696F 
 4758      72697479 
 4758      00
 4759              	.LASF15:
 4760 03be 666C6F61 		.ascii	"float\000"
 4760      7400
 4761              	.LASF109:
 4762 03c4 4144435F 		.ascii	"ADC_1_IRQ_StartEx\000"
 4762      315F4952 
 4762      515F5374 
 4762      61727445 
 4762      7800
 4763              	.LASF65:
 4764 03d6 68696768 		.ascii	"highLimit\000"
 4764      4C696D69 
 4764      7400
 4765              	.LASF99:
 4766 03e0 4144435F 		.ascii	"ADC_1_offset\000"
 4766      315F6F66 
 4766      66736574 
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 128


 4766      00
 4767              	.LASF31:
 4768 03ed 6368616E 		.ascii	"chanEn\000"
 4768      456E00
 4769              	.LASF111:
 4770 03f4 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC_1.c\000"
 4770      72617465 
 4770      645F536F 
 4770      75726365 
 4770      5C50536F 
 4771              	.LASF68:
 4772 0413 4144435F 		.ascii	"ADC_1_SetSatMask\000"
 4772      315F5365 
 4772      74536174 
 4772      4D61736B 
 4772      00
 4773              	.LASF1:
 4774 0424 756E7369 		.ascii	"unsigned char\000"
 4774      676E6564 
 4774      20636861 
 4774      7200
 4775              	.LASF57:
 4776 0432 4144435F 		.ascii	"ADC_1_GetResult16\000"
 4776      315F4765 
 4776      74526573 
 4776      756C7431 
 4776      3600
 4777              	.LASF100:
 4778 0444 4144435F 		.ascii	"ADC_1_countsPer10Volt\000"
 4778      315F636F 
 4778      756E7473 
 4778      50657231 
 4778      30566F6C 
 4779              	.LASF2:
 4780 045a 73686F72 		.ascii	"short int\000"
 4780      7420696E 
 4780      7400
 4781              	.LASF80:
 4782 0464 72657375 		.ascii	"result_Volts\000"
 4782      6C745F56 
 4782      6F6C7473 
 4782      00
 4783              	.LASF49:
 4784 0471 4144435F 		.ascii	"ADC_1_SetEosMask\000"
 4784      315F5365 
 4784      74456F73 
 4784      4D61736B 
 4784      00
 4785              	.LASF60:
 4786 0482 61646352 		.ascii	"adcResult16\000"
 4786      6573756C 
 4786      74313600 
 4787              	.LASF43:
 4788 048e 63684E75 		.ascii	"chNum\000"
 4788      6D00
 4789              	.LASF95:
 4790 0494 4144435F 		.ascii	"ADC_1_currentConfig\000"
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 129


 4790      315F6375 
 4790      7272656E 
 4790      74436F6E 
 4790      66696700 
 4791              	.LASF34:
 4792 04a8 76726566 		.ascii	"vrefMvValue\000"
 4792      4D765661 
 4792      6C756500 
 4793              	.LASF110:
 4794 04b4 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4794      43313120 
 4794      352E342E 
 4794      31203230 
 4794      31363036 
 4795 04e7 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 4795      20726576 
 4795      6973696F 
 4795      6E203233 
 4795      37373135 
 4796 051a 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 4796      67202D66 
 4796      66756E63 
 4796      74696F6E 
 4796      2D736563 
 4797              	.LASF39:
 4798 0546 6368616E 		.ascii	"chan\000"
 4798      00
 4799              	.LASF18:
 4800 054b 63686172 		.ascii	"char\000"
 4800      00
 4801              	.LASF48:
 4802 0550 6D6F6465 		.ascii	"mode\000"
 4802      00
 4803              	.LASF20:
 4804 0555 63796973 		.ascii	"cyisraddress\000"
 4804      72616464 
 4804      72657373 
 4804      00
 4805              	.LASF38:
 4806 0562 636F6E66 		.ascii	"config\000"
 4806      696700
 4807              	.LASF79:
 4808 0569 4144435F 		.ascii	"ADC_1_CountsTo_Volts\000"
 4808      315F436F 
 4808      756E7473 
 4808      546F5F56 
 4808      6F6C7473 
 4809              	.LASF103:
 4810 057e 4144435F 		.ascii	"ADC_1_intSarClock_SetFractionalDividerRegister\000"
 4810      315F696E 
 4810      74536172 
 4810      436C6F63 
 4810      6B5F5365 
 4811              	.LASF114:
 4812 05ad 4144435F 		.ascii	"ADC_1_IsChannelSigned\000"
 4812      315F4973 
 4812      4368616E 
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 130


 4812      6E656C53 
 4812      69676E65 
 4813              	.LASF84:
 4814 05c3 72657375 		.ascii	"result_uVolts\000"
 4814      6C745F75 
 4814      566F6C74 
 4814      7300
 4815              	.LASF93:
 4816 05d1 72657374 		.ascii	"restart\000"
 4816      61727400 
 4817              	.LASF71:
 4818 05d9 6F666673 		.ascii	"offset\000"
 4818      657400
 4819              	.LASF25:
 4820 05e0 6374726C 		.ascii	"ctrl\000"
 4820      00
 4821              	.LASF35:
 4822 05e5 6D697363 		.ascii	"miscConfig\000"
 4822      436F6E66 
 4822      696700
 4823              	.LASF75:
 4824 05f0 61646343 		.ascii	"adcCounts\000"
 4824      6F756E74 
 4824      7300
 4825              	.LASF98:
 4826 05fa 4144435F 		.ascii	"ADC_1_selected\000"
 4826      315F7365 
 4826      6C656374 
 4826      656400
 4827              	.LASF30:
 4828 0609 72616E67 		.ascii	"rangeCond\000"
 4828      65436F6E 
 4828      6400
 4829              	.LASF56:
 4830 0613 4144435F 		.ascii	"ADC_1_IsEndConversion\000"
 4830      315F4973 
 4830      456E6443 
 4830      6F6E7665 
 4830      7273696F 
 4831              	.LASF26:
 4832 0629 73616D70 		.ascii	"sampleCtrl\000"
 4832      6C654374 
 4832      726C00
 4833              	.LASF37:
 4834 0634 4144435F 		.ascii	"ADC_1_CONFIG_STRUCT\000"
 4834      315F434F 
 4834      4E464947 
 4834      5F535452 
 4834      55435400 
 4835              	.LASF59:
 4836 0648 4144435F 		.ascii	"ADC_1_GetResult32\000"
 4836      315F4765 
 4836      74526573 
 4836      756C7433 
 4836      3200
 4837              	.LASF70:
 4838 065a 4144435F 		.ascii	"ADC_1_SetOffset\000"
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccfjJ6Mx.s 			page 131


 4838      315F5365 
 4838      744F6666 
 4838      73657400 
 4839              	.LASF12:
 4840 066a 696E7431 		.ascii	"int16\000"
 4840      3600
 4841              	.LASF51:
 4842 0670 4144435F 		.ascii	"ADC_1_SetChanMask\000"
 4842      315F5365 
 4842      74436861 
 4842      6E4D6173 
 4842      6B00
 4843              	.LASF82:
 4844 0682 72657375 		.ascii	"result_mVolts\000"
 4844      6C745F6D 
 4844      566F6C74 
 4844      7300
 4845              	.LASF23:
 4846 0690 6368616E 		.ascii	"channelBase\000"
 4846      6E656C42 
 4846      61736500 
 4847              	.LASF55:
 4848 069c 656E644F 		.ascii	"endOfConversion\000"
 4848      66436F6E 
 4848      76657273 
 4848      696F6E00 
 4849              	.LASF89:
 4850 06ac 4144435F 		.ascii	"ADC_1_Start\000"
 4850      315F5374 
 4850      61727400 
 4851              	.LASF105:
 4852 06b8 43794861 		.ascii	"CyHalt\000"
 4852      6C7400
 4853              	.LASF83:
 4854 06bf 4144435F 		.ascii	"ADC_1_CountsTo_uVolts\000"
 4854      315F436F 
 4854      756E7473 
 4854      546F5F75 
 4854      566F6C74 
 4855              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
