ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADC_1_SetDFTControl,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	ADC_1_SetDFTControl, %function
  24              	ADC_1_SetDFTControl:
  25              	.LFB5:
  26              		.file 1 "Generated_Source\\PSoC4\\ADC_1.c"
   1:Generated_Source\PSoC4/ADC_1.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/ADC_1.c **** * \file     ADC_1.c
   3:Generated_Source\PSoC4/ADC_1.c **** * \version  3.10
   4:Generated_Source\PSoC4/ADC_1.c **** *
   5:Generated_Source\PSoC4/ADC_1.c **** * \brief
   6:Generated_Source\PSoC4/ADC_1.c **** * Provides the source code to the API for the ADC_1 Component.
   7:Generated_Source\PSoC4/ADC_1.c **** *
   8:Generated_Source\PSoC4/ADC_1.c **** ********************************************************************************
   9:Generated_Source\PSoC4/ADC_1.c **** * \copyright
  10:Generated_Source\PSoC4/ADC_1.c **** * (c) 2015-2018, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC4/ADC_1.c **** * This software, including source code, documentation and related
  12:Generated_Source\PSoC4/ADC_1.c **** * materials ("Software"), is owned by Cypress Semiconductor
  13:Generated_Source\PSoC4/ADC_1.c **** * Corporation ("Cypress") and is protected by and subject to worldwide
  14:Generated_Source\PSoC4/ADC_1.c **** * patent protection (United States and foreign), United States copyright
  15:Generated_Source\PSoC4/ADC_1.c **** * laws and international treaty provisions. Therefore, you may use this
  16:Generated_Source\PSoC4/ADC_1.c **** * Software only as provided in the license agreement accompanying the
  17:Generated_Source\PSoC4/ADC_1.c **** * software package from which you obtained this Software ("EULA").
  18:Generated_Source\PSoC4/ADC_1.c **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  19:Generated_Source\PSoC4/ADC_1.c **** * non-transferable license to copy, modify, and compile the
  20:Generated_Source\PSoC4/ADC_1.c **** * Software source code solely for use in connection with Cypress's
  21:Generated_Source\PSoC4/ADC_1.c **** * integrated circuit products. Any reproduction, modification, translation,
  22:Generated_Source\PSoC4/ADC_1.c **** * compilation, or representation of this Software except as specified
  23:Generated_Source\PSoC4/ADC_1.c **** * above is prohibited without the express written permission of Cypress.
  24:Generated_Source\PSoC4/ADC_1.c **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO
  25:Generated_Source\PSoC4/ADC_1.c **** * WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
  26:Generated_Source\PSoC4/ADC_1.c **** * BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
  27:Generated_Source\PSoC4/ADC_1.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  28:Generated_Source\PSoC4/ADC_1.c **** * PARTICULAR PURPOSE. Cypress reserves the right to make
  29:Generated_Source\PSoC4/ADC_1.c **** * changes to the Software without notice. Cypress does not assume any
  30:Generated_Source\PSoC4/ADC_1.c **** * liability arising out of the application or use of the Software or any
  31:Generated_Source\PSoC4/ADC_1.c **** * product or circuit described in the Software. Cypress does not
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 2


  32:Generated_Source\PSoC4/ADC_1.c **** * authorize its products for use in any products where a malfunction or
  33:Generated_Source\PSoC4/ADC_1.c **** * failure of the Cypress product may reasonably be expected to result in
  34:Generated_Source\PSoC4/ADC_1.c **** * significant property damage, injury or death ("High Risk Product"). By
  35:Generated_Source\PSoC4/ADC_1.c **** * including Cypress's product in a High Risk Product, the manufacturer
  36:Generated_Source\PSoC4/ADC_1.c **** * of such system or application assumes all risk of such use and in doing
  37:Generated_Source\PSoC4/ADC_1.c **** * so agrees to indemnify Cypress against all liability.
  38:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/ADC_1.c **** #include "ADC_1.h"
  40:Generated_Source\PSoC4/ADC_1.c **** 
  41:Generated_Source\PSoC4/ADC_1.c **** static void ADC_1_SetDFTControl(const ADC_1_CONFIG_STRUCT *config);
  42:Generated_Source\PSoC4/ADC_1.c **** static int32 ADC_1_IsChannelSigned(uint32 chan);
  43:Generated_Source\PSoC4/ADC_1.c **** #if(ADC_1_ANY_CONFIG_USES_FILTER != 0u)
  44:Generated_Source\PSoC4/ADC_1.c **** static void ADC_1_SetupComparatorTrim(void);
  45:Generated_Source\PSoC4/ADC_1.c **** static void ADC_1_UndoComparatorTrimSetup(void);
  46:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_RaiseOpampTrimToCrossing(uint32 startTrim);
  47:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_LowerOpampTrimToCrossing(uint32 startTrim);
  48:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_RaiseAgndTrimToCrossing(uint32 startTrim);
  49:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_LowerAgndTrimToCrossing(uint32 startTrim);
  50:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_SetOpampAndAgndTrim(uint32 opampTrim, uint32 agndTrim);
  51:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_SetOpampTrim(uint32 opampTrim);
  52:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_SetAgndTrim(uint32 agndTrim);
  53:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_IncOpampTrim(uint32 trim);
  54:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_DecOpampTrim(uint32 trim);
  55:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_IncAgndTrim(uint32 trim);
  56:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_DecAgndTrim(uint32 trim);
  57:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_GetCompStatus(void);
  58:Generated_Source\PSoC4/ADC_1.c **** #define OFFSET_SAMPLES (30)
  59:Generated_Source\PSoC4/ADC_1.c **** #endif
  60:Generated_Source\PSoC4/ADC_1.c **** 
  61:Generated_Source\PSoC4/ADC_1.c **** uint8 ADC_1_initVar = 0u;
  62:Generated_Source\PSoC4/ADC_1.c **** 
  63:Generated_Source\PSoC4/ADC_1.c **** uint8 ADC_1_selected = 0u; /* 0 if no configuration selected. 1 otherwise. */
  64:Generated_Source\PSoC4/ADC_1.c **** volatile int16 ADC_1_offset[ADC_1_TOTAL_CHANNELS_NUM];
  65:Generated_Source\PSoC4/ADC_1.c **** volatile int32 ADC_1_countsPer10Volt[ADC_1_TOTAL_CHANNELS_NUM];
  66:Generated_Source\PSoC4/ADC_1.c **** 
  67:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_currentConfig = 0u; /* Currently active configuration */
  68:Generated_Source\PSoC4/ADC_1.c **** 
  69:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
  70:Generated_Source\PSoC4/ADC_1.c **** * Local data allocation
  71:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
  72:Generated_Source\PSoC4/ADC_1.c **** /* Channels configuration generated by customiser */
  73:Generated_Source\PSoC4/ADC_1.c **** static const uint32 CYCODE ADC_1_channelsConfig[] = { 0x00000400UL, 0x00000400UL,  };
  74:Generated_Source\PSoC4/ADC_1.c **** 
  75:Generated_Source\PSoC4/ADC_1.c **** /* Filter init */
  76:Generated_Source\PSoC4/ADC_1.c **** #if(ADC_1_ANY_CONFIG_USES_FILTER != 0u)
  77:Generated_Source\PSoC4/ADC_1.c ****     #if (0u != ADC_1_CFG0_FILTER_PRESENT)
  78:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG0_UABH_A_FILTER_INITPAIRSSIZE (19u)
  79:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG0_UABH_A_FILTER_initPairs[ADC_1_CFG0_UABH_A_FILTER_INI
  80:Generated_Source\PSoC4/ADC_1.c ****         {
  81:Generated_Source\PSoC4/ADC_1.c ****             /*OA_CTRL default always first element in initPairs*/
  82:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
  83:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_A_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_A_DEFAULT_OA_CTRL)}
  84:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_A_DEFAULT_SW_STATIC)}
  85:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_MODBIT_SRC_PTR  , ((uint32)ADC_1_UABH_A_INVAR_SW_MODBIT_SRC)}
  86:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_A_INVAR_SRAM_CTRL)}
  87:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG0_UABH_A_STARTUP_DELAY)}
  88:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_A_DEFAULT_SW_BOOST_CTRL)}
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 3


  89:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_A_DEFAULT_SW_CA_IN1)}
  90:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_OTHER_PTR       , ((uint32)ADC_1_UABH_A_DEFAULT_SW_OTHER)}
  91:Generated_Source\PSoC4/ADC_1.c **** 
  92:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG0_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
  93:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
  94:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_IN0)}
  95:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_TOP)}
  96:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN0)}
  97:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN1)}
  98:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CF_BOT)}
  99:Generated_Source\PSoC4/ADC_1.c **** 
 100:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 101:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG0_UABH_A_LOWQDYN_CAP_CTRL)}
 102:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_CFG0_UABH_A_LOWQDYN_SW_CB_IN0)}
 103:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_CFG0_UABH_A_LOWQDYN_SW_CB_IN1)}
 104:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG0_UABH_A_LOWQDYN_SW_CB_TOP)}
 105:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG0_UABH_A_LOWQDYN_SW_CC_TOP)}
 106:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG0_UABH_A_LOWQDYN_CAP_ABCF_VAL
 107:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG0_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 108:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 109:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_IN0)}
 110:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_TOP)}
 111:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN0)}
 112:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN1)}
 113:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN0)}
 114:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN1)}
 115:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_TOP)}
 116:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CF_BOT)}
 117:Generated_Source\PSoC4/ADC_1.c **** 
 118:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 119:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG0_UABH_A_HIGHQDYN_CAP_CTRL)}
 120:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG0_UABH_A_HIGHQDYN_SW_CB_TOP)}
 121:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG0_UABH_A_HIGHQDYN_CAP_ABCF_VA
 122:Generated_Source\PSoC4/ADC_1.c ****             #endif /* (ADC_1_CFG0_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 123:Generated_Source\PSoC4/ADC_1.c ****         };
 124:Generated_Source\PSoC4/ADC_1.c **** 
 125:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG0_UABH_B_FILTER_INITPAIRSSIZE (19u)
 126:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG0_UABH_B_FILTER_initPairs[ADC_1_CFG0_UABH_B_FILTER_INI
 127:Generated_Source\PSoC4/ADC_1.c ****         {
 128:Generated_Source\PSoC4/ADC_1.c ****             /*OA_CTRL default always first element in initPairs*/
 129:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
 130:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_B_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_B_DEFAULT_OA_CTRL)}
 131:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_B_DEFAULT_SW_STATIC)}
 132:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_MODBIT_SRC_PTR  , ((uint32)ADC_1_UABH_B_INVAR_SW_MODBIT_SRC)}
 133:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_B_INVAR_SRAM_CTRL)}
 134:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG0_UABH_B_STARTUP_DELAY)}
 135:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_B_DEFAULT_SW_BOOST_CTRL)}
 136:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_OTHER_PTR  , ((uint32)ADC_1_UABH_B_DEFAULT_SW_OTHER)}
 137:Generated_Source\PSoC4/ADC_1.c **** 
 138:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG0_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
 139:Generated_Source\PSoC4/ADC_1.c ****                         /* Filter-invariant registers */
 140:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN0)}
 141:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN1)}
 142:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_TOP)}
 143:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN0)}
 144:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN1)}
 145:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_TOP)}
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 4


 146:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN0)}
 147:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN1)}
 148:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CF_BOT)}
 149:Generated_Source\PSoC4/ADC_1.c **** 
 150:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 151:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG0_UABH_B_LOWQDYN_CAP_CTRL)}
 152:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG0_UABH_B_LOWQDYN_SW_CC_TOP)}
 153:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG0_UABH_B_LOWQDYN_CAP_ABCF_VAL
 154:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG0_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 155:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 156:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN0)}
 157:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN1)}
 158:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_TOP)}
 159:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN0)}
 160:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN1)}
 161:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN0)}
 162:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN1)}
 163:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CF_BOT)}
 164:Generated_Source\PSoC4/ADC_1.c **** 
 165:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 166:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG0_UABH_B_HIGHQDYN_CAP_CTRL)}
 167:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG0_UABH_B_HIGHQDYN_SW_CB_TOP)}
 168:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG0_UABH_B_HIGHQDYN_SW_CC_TOP)}
 169:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG0_UABH_B_HIGHQDYN_CAP_ABCF_VA
 170:Generated_Source\PSoC4/ADC_1.c ****             #endif /* #if (ADC_1_CFG0_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 171:Generated_Source\PSoC4/ADC_1.c ****         };
 172:Generated_Source\PSoC4/ADC_1.c **** 
 173:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG0_UABH_A_FILTER_config = {
 174:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_waveConfig,
 175:Generated_Source\PSoC4/ADC_1.c ****             (CyUAB_reg_pair*) ADC_1_CFG0_UABH_A_FILTER_initPairs,
 176:Generated_Source\PSoC4/ADC_1.c ****             CyUAB_SHARED_SW_CFG(ADC_1_UABH_A_PARAM_REF_TIED,ADC_1_UABH_A_PARAM_AGND_TIED,
 177:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_A_PARAM_SW_CC,ADC_1_UABH_A_PARAM_SW_BB,ADC_1_UABH_A_PARAM_SW_AA),
 178:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_NUM_STEPS,
 179:Generated_Source\PSoC4/ADC_1.c ****             (uint8)(ADC_1_UABH_A_ELEMENT_COUNT(ADC_1_CFG0_UABH_A_FILTER_initPairs))
 180:Generated_Source\PSoC4/ADC_1.c ****         };
 181:Generated_Source\PSoC4/ADC_1.c **** 
 182:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG0_UABH_B_FILTER_config = {
 183:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_waveConfig,
 184:Generated_Source\PSoC4/ADC_1.c ****         (CyUAB_reg_pair*) ADC_1_CFG0_UABH_B_FILTER_initPairs,
 185:Generated_Source\PSoC4/ADC_1.c ****         CyUAB_SHARED_SW_CFG(ADC_1_UABH_B_PARAM_REF_TIED,ADC_1_UABH_B_PARAM_AGND_TIED,
 186:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_B_PARAM_SW_CC,ADC_1_UABH_B_PARAM_SW_BB,ADC_1_UABH_B_PARAM_SW_AA),
 187:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_NUM_STEPS,
 188:Generated_Source\PSoC4/ADC_1.c ****         (uint8)(ADC_1_UABH_B_ELEMENT_COUNT(ADC_1_CFG0_UABH_B_FILTER_initPairs))
 189:Generated_Source\PSoC4/ADC_1.c ****     };
 190:Generated_Source\PSoC4/ADC_1.c ****     #endif /* (0u != ADC_1_CFG0_FILTER_PRESENT) */
 191:Generated_Source\PSoC4/ADC_1.c ****     #if (0u != ADC_1_CFG1_FILTER_PRESENT)
 192:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG1_UABH_A_FILTER_INITPAIRSSIZE (19u)
 193:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG1_UABH_A_FILTER_initPairs[ADC_1_CFG1_UABH_A_FILTER_INI
 194:Generated_Source\PSoC4/ADC_1.c ****         {
 195:Generated_Source\PSoC4/ADC_1.c ****             /*OA_CTRL default always first element in initPairs*/
 196:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
 197:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_A_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_A_DEFAULT_OA_CTRL)}
 198:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_A_DEFAULT_SW_STATIC)}
 199:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_MODBIT_SRC_PTR  , ((uint32)ADC_1_UABH_A_INVAR_SW_MODBIT_SRC)}
 200:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_A_INVAR_SRAM_CTRL)}
 201:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG1_UABH_A_STARTUP_DELAY)}
 202:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_A_DEFAULT_SW_BOOST_CTRL)}
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 5


 203:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_A_DEFAULT_SW_CA_IN1)}
 204:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_OTHER_PTR       , ((uint32)ADC_1_UABH_A_DEFAULT_SW_OTHER)}
 205:Generated_Source\PSoC4/ADC_1.c **** 
 206:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG1_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
 207:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 208:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_IN0)}
 209:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_TOP)}
 210:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN0)}
 211:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN1)}
 212:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CF_BOT)}
 213:Generated_Source\PSoC4/ADC_1.c **** 
 214:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 215:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG1_UABH_A_LOWQDYN_CAP_CTRL)}
 216:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_CFG1_UABH_A_LOWQDYN_SW_CB_IN0)}
 217:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_CFG1_UABH_A_LOWQDYN_SW_CB_IN1)}
 218:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG1_UABH_A_LOWQDYN_SW_CB_TOP)}
 219:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG1_UABH_A_LOWQDYN_SW_CC_TOP)}
 220:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG1_UABH_A_LOWQDYN_CAP_ABCF_VAL
 221:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG1_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 222:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 223:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_IN0)}
 224:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_TOP)}
 225:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN0)}
 226:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN1)}
 227:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN0)}
 228:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN1)}
 229:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_TOP)}
 230:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CF_BOT)}
 231:Generated_Source\PSoC4/ADC_1.c **** 
 232:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 233:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG1_UABH_A_HIGHQDYN_CAP_CTRL)}
 234:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG1_UABH_A_HIGHQDYN_SW_CB_TOP)}
 235:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG1_UABH_A_HIGHQDYN_CAP_ABCF_VA
 236:Generated_Source\PSoC4/ADC_1.c ****             #endif /* (ADC_1_CFG1_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 237:Generated_Source\PSoC4/ADC_1.c ****         };
 238:Generated_Source\PSoC4/ADC_1.c **** 
 239:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG1_UABH_B_FILTER_INITPAIRSSIZE (19u)
 240:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG1_UABH_B_FILTER_initPairs[ADC_1_CFG1_UABH_B_FILTER_INI
 241:Generated_Source\PSoC4/ADC_1.c ****         {
 242:Generated_Source\PSoC4/ADC_1.c ****             /*OA_CTRL default always first element in initPairs*/
 243:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
 244:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_B_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_B_DEFAULT_OA_CTRL)}
 245:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_B_DEFAULT_SW_STATIC)}
 246:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_MODBIT_SRC_PTR  , ((uint32)ADC_1_UABH_B_INVAR_SW_MODBIT_SRC)}
 247:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_B_INVAR_SRAM_CTRL)}
 248:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG1_UABH_B_STARTUP_DELAY)}
 249:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_B_DEFAULT_SW_BOOST_CTRL)}
 250:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_OTHER_PTR       , ((uint32)ADC_1_UABH_B_DEFAULT_SW_OTHER)}
 251:Generated_Source\PSoC4/ADC_1.c **** 
 252:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG1_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
 253:Generated_Source\PSoC4/ADC_1.c ****                         /* Filter-invariant registers */
 254:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN0)}
 255:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN1)}
 256:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_TOP)}
 257:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN0)}
 258:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN1)}
 259:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_TOP)}
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 6


 260:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN0)}
 261:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN1)}
 262:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CF_BOT)}
 263:Generated_Source\PSoC4/ADC_1.c **** 
 264:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 265:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG1_UABH_B_LOWQDYN_CAP_CTRL)}
 266:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG1_UABH_B_LOWQDYN_SW_CC_TOP)}
 267:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG1_UABH_B_LOWQDYN_CAP_ABCF_VAL
 268:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG1_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 269:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 270:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN0)}
 271:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN1)}
 272:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_TOP)}
 273:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN0)}
 274:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN1)}
 275:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN0)}
 276:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN1)}
 277:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CF_BOT)}
 278:Generated_Source\PSoC4/ADC_1.c **** 
 279:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 280:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG1_UABH_B_HIGHQDYN_CAP_CTRL)}
 281:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG1_UABH_B_HIGHQDYN_SW_CB_TOP)}
 282:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG1_UABH_B_HIGHQDYN_SW_CC_TOP)}
 283:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG1_UABH_B_HIGHQDYN_CAP_ABCF_VA
 284:Generated_Source\PSoC4/ADC_1.c ****             #endif /* #if (ADC_1_CFG1_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 285:Generated_Source\PSoC4/ADC_1.c ****         };
 286:Generated_Source\PSoC4/ADC_1.c **** 
 287:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG1_UABH_A_FILTER_config = {
 288:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_waveConfig,
 289:Generated_Source\PSoC4/ADC_1.c ****             (CyUAB_reg_pair*) ADC_1_CFG1_UABH_A_FILTER_initPairs,
 290:Generated_Source\PSoC4/ADC_1.c ****             CyUAB_SHARED_SW_CFG(ADC_1_UABH_A_PARAM_REF_TIED,ADC_1_UABH_A_PARAM_AGND_TIED,
 291:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_A_PARAM_SW_CC,ADC_1_UABH_A_PARAM_SW_BB,ADC_1_UABH_A_PARAM_SW_AA),
 292:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_NUM_STEPS,
 293:Generated_Source\PSoC4/ADC_1.c ****             (uint8)(ADC_1_UABH_A_ELEMENT_COUNT(ADC_1_CFG1_UABH_A_FILTER_initPairs))
 294:Generated_Source\PSoC4/ADC_1.c ****         };
 295:Generated_Source\PSoC4/ADC_1.c **** 
 296:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG1_UABH_B_FILTER_config = {
 297:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_waveConfig,
 298:Generated_Source\PSoC4/ADC_1.c ****         (CyUAB_reg_pair*) ADC_1_CFG1_UABH_B_FILTER_initPairs,
 299:Generated_Source\PSoC4/ADC_1.c ****         CyUAB_SHARED_SW_CFG(ADC_1_UABH_B_PARAM_REF_TIED,ADC_1_UABH_B_PARAM_AGND_TIED,
 300:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_B_PARAM_SW_CC,ADC_1_UABH_B_PARAM_SW_BB,ADC_1_UABH_B_PARAM_SW_AA),
 301:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_NUM_STEPS,
 302:Generated_Source\PSoC4/ADC_1.c ****         (uint8)(ADC_1_UABH_B_ELEMENT_COUNT(ADC_1_CFG1_UABH_B_FILTER_initPairs))
 303:Generated_Source\PSoC4/ADC_1.c ****     };
 304:Generated_Source\PSoC4/ADC_1.c ****     #endif /* (0u != ADC_1_CFG1_FILTER_PRESENT) */
 305:Generated_Source\PSoC4/ADC_1.c ****     #if (0u != ADC_1_CFG2_FILTER_PRESENT)
 306:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG2_UABH_A_FILTER_INITPAIRSSIZE (19u)
 307:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG2_UABH_A_FILTER_initPairs[ADC_1_CFG2_UABH_A_FILTER_INI
 308:Generated_Source\PSoC4/ADC_1.c ****         {
 309:Generated_Source\PSoC4/ADC_1.c ****             /*OA_CTRL default always first element in initPairs*/
 310:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
 311:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_A_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_A_DEFAULT_OA_CTRL)}
 312:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_A_DEFAULT_SW_STATIC)}
 313:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_MODBIT_SRC_PTR  , ((uint32)ADC_1_UABH_A_INVAR_SW_MODBIT_SRC)}
 314:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_A_INVAR_SRAM_CTRL)}
 315:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG2_UABH_A_STARTUP_DELAY)}
 316:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_A_DEFAULT_SW_BOOST_CTRL)}
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 7


 317:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_A_DEFAULT_SW_CA_IN1)}
 318:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_OTHER_PTR       , ((uint32)ADC_1_UABH_A_DEFAULT_SW_OTHER)}
 319:Generated_Source\PSoC4/ADC_1.c **** 
 320:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG2_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
 321:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 322:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_IN0)}
 323:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_TOP)}
 324:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN0)}
 325:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN1)}
 326:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CF_BOT)}
 327:Generated_Source\PSoC4/ADC_1.c **** 
 328:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 329:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG2_UABH_A_LOWQDYN_CAP_CTRL)}
 330:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_CFG2_UABH_A_LOWQDYN_SW_CB_IN0)}
 331:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_CFG2_UABH_A_LOWQDYN_SW_CB_IN1)}
 332:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG2_UABH_A_LOWQDYN_SW_CB_TOP)}
 333:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG2_UABH_A_LOWQDYN_SW_CC_TOP)}
 334:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG2_UABH_A_LOWQDYN_CAP_ABCF_VAL
 335:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG2_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 336:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 337:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_IN0)}
 338:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_TOP)}
 339:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN0)}
 340:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN1)}
 341:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN0)}
 342:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN1)}
 343:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_TOP)}
 344:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CF_BOT)}
 345:Generated_Source\PSoC4/ADC_1.c **** 
 346:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 347:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG2_UABH_A_HIGHQDYN_CAP_CTRL)}
 348:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG2_UABH_A_HIGHQDYN_SW_CB_TOP)}
 349:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG2_UABH_A_HIGHQDYN_CAP_ABCF_VA
 350:Generated_Source\PSoC4/ADC_1.c ****             #endif /* (ADC_1_CFG2_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 351:Generated_Source\PSoC4/ADC_1.c ****         };
 352:Generated_Source\PSoC4/ADC_1.c **** 
 353:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG2_UABH_B_FILTER_INITPAIRSSIZE (19u)
 354:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG2_UABH_B_FILTER_initPairs[ADC_1_CFG2_UABH_B_FILTER_INI
 355:Generated_Source\PSoC4/ADC_1.c ****         {
 356:Generated_Source\PSoC4/ADC_1.c ****             /*OA_CTRL default always first element in initPairs*/
 357:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
 358:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_B_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_B_DEFAULT_OA_CTRL)}
 359:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_B_DEFAULT_SW_STATIC)}
 360:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_MODBIT_SRC_PTR  , ((uint32)ADC_1_UABH_B_INVAR_SW_MODBIT_SRC)}
 361:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_B_INVAR_SRAM_CTRL)}
 362:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG2_UABH_B_STARTUP_DELAY)}
 363:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_B_DEFAULT_SW_BOOST_CTRL)}
 364:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_OTHER_PTR       , ((uint32)ADC_1_UABH_B_DEFAULT_SW_OTHER)}
 365:Generated_Source\PSoC4/ADC_1.c **** 
 366:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG2_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
 367:Generated_Source\PSoC4/ADC_1.c ****                         /* Filter-invariant registers */
 368:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN0)}
 369:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN1)}
 370:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_TOP)}
 371:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN0)}
 372:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN1)}
 373:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_TOP)}
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 8


 374:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN0)}
 375:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN1)}
 376:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CF_BOT)}
 377:Generated_Source\PSoC4/ADC_1.c **** 
 378:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 379:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG2_UABH_B_LOWQDYN_CAP_CTRL)}
 380:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG2_UABH_B_LOWQDYN_SW_CC_TOP)}
 381:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG2_UABH_B_LOWQDYN_CAP_ABCF_VAL
 382:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG2_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 383:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 384:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN0)}
 385:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN1)}
 386:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_TOP)}
 387:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN0)}
 388:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN1)}
 389:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN0)}
 390:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN1)}
 391:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CF_BOT)}
 392:Generated_Source\PSoC4/ADC_1.c **** 
 393:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 394:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG2_UABH_B_HIGHQDYN_CAP_CTRL)}
 395:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG2_UABH_B_HIGHQDYN_SW_CB_TOP)}
 396:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG2_UABH_B_HIGHQDYN_SW_CC_TOP)}
 397:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG2_UABH_B_HIGHQDYN_CAP_ABCF_VA
 398:Generated_Source\PSoC4/ADC_1.c ****             #endif /* #if (ADC_1_CFG2_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 399:Generated_Source\PSoC4/ADC_1.c ****         };
 400:Generated_Source\PSoC4/ADC_1.c **** 
 401:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG2_UABH_A_FILTER_config = {
 402:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_waveConfig,
 403:Generated_Source\PSoC4/ADC_1.c ****             (CyUAB_reg_pair*) ADC_1_CFG2_UABH_A_FILTER_initPairs,
 404:Generated_Source\PSoC4/ADC_1.c ****             CyUAB_SHARED_SW_CFG(ADC_1_UABH_A_PARAM_REF_TIED,ADC_1_UABH_A_PARAM_AGND_TIED,
 405:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_A_PARAM_SW_CC,ADC_1_UABH_A_PARAM_SW_BB,ADC_1_UABH_A_PARAM_SW_AA),
 406:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_NUM_STEPS,
 407:Generated_Source\PSoC4/ADC_1.c ****             (uint8)(ADC_1_UABH_A_ELEMENT_COUNT(ADC_1_CFG2_UABH_A_FILTER_initPairs))
 408:Generated_Source\PSoC4/ADC_1.c ****         };
 409:Generated_Source\PSoC4/ADC_1.c **** 
 410:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG2_UABH_B_FILTER_config = {
 411:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_waveConfig,
 412:Generated_Source\PSoC4/ADC_1.c ****         (CyUAB_reg_pair*) ADC_1_CFG2_UABH_B_FILTER_initPairs,
 413:Generated_Source\PSoC4/ADC_1.c ****         CyUAB_SHARED_SW_CFG(ADC_1_UABH_B_PARAM_REF_TIED,ADC_1_UABH_B_PARAM_AGND_TIED,
 414:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_B_PARAM_SW_CC,ADC_1_UABH_B_PARAM_SW_BB,ADC_1_UABH_B_PARAM_SW_AA),
 415:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_NUM_STEPS,
 416:Generated_Source\PSoC4/ADC_1.c ****         (uint8)(ADC_1_UABH_B_ELEMENT_COUNT(ADC_1_CFG2_UABH_B_FILTER_initPairs))
 417:Generated_Source\PSoC4/ADC_1.c ****     };
 418:Generated_Source\PSoC4/ADC_1.c ****     #endif /* (0u != ADC_1_CFG2_FILTER_PRESENT) */
 419:Generated_Source\PSoC4/ADC_1.c ****     #if (0u != ADC_1_CFG3_FILTER_PRESENT)
 420:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG3_UABH_A_FILTER_INITPAIRSSIZE (19u)
 421:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG3_UABH_A_FILTER_initPairs[ADC_1_CFG3_UABH_A_FILTER_INI
 422:Generated_Source\PSoC4/ADC_1.c ****         {
 423:Generated_Source\PSoC4/ADC_1.c ****             /*OA_CTRL default always first element in initPairs*/
 424:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
 425:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_A_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_A_DEFAULT_OA_CTRL)}
 426:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_A_DEFAULT_SW_STATIC)}
 427:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_MODBIT_SRC_PTR  , ((uint32)ADC_1_UABH_A_INVAR_SW_MODBIT_SRC)}
 428:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_A_INVAR_SRAM_CTRL)}
 429:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG3_UABH_A_STARTUP_DELAY)}
 430:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_A_DEFAULT_SW_BOOST_CTRL)}
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 9


 431:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_A_DEFAULT_SW_CA_IN1)}
 432:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_OTHER_PTR       , ((uint32)ADC_1_UABH_A_DEFAULT_SW_OTHER)}
 433:Generated_Source\PSoC4/ADC_1.c **** 
 434:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG3_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
 435:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 436:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_IN0)}
 437:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_TOP)}
 438:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN0)}
 439:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN1)}
 440:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CF_BOT)}
 441:Generated_Source\PSoC4/ADC_1.c **** 
 442:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 443:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG3_UABH_A_LOWQDYN_CAP_CTRL)}
 444:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_CFG3_UABH_A_LOWQDYN_SW_CB_IN0)}
 445:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_CFG3_UABH_A_LOWQDYN_SW_CB_IN1)}
 446:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG3_UABH_A_LOWQDYN_SW_CB_TOP)}
 447:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG3_UABH_A_LOWQDYN_SW_CC_TOP)}
 448:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG3_UABH_A_LOWQDYN_CAP_ABCF_VAL
 449:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG3_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 450:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 451:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_IN0)}
 452:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_TOP)}
 453:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN0)}
 454:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN1)}
 455:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN0)}
 456:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN1)}
 457:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_TOP)}
 458:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CF_BOT)}
 459:Generated_Source\PSoC4/ADC_1.c **** 
 460:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 461:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG3_UABH_A_HIGHQDYN_CAP_CTRL)}
 462:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG3_UABH_A_HIGHQDYN_SW_CB_TOP)}
 463:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG3_UABH_A_HIGHQDYN_CAP_ABCF_VA
 464:Generated_Source\PSoC4/ADC_1.c ****             #endif /* (ADC_1_CFG3_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 465:Generated_Source\PSoC4/ADC_1.c ****         };
 466:Generated_Source\PSoC4/ADC_1.c **** 
 467:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG3_UABH_B_FILTER_INITPAIRSSIZE (19u)
 468:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG3_UABH_B_FILTER_initPairs[ADC_1_CFG3_UABH_B_FILTER_INI
 469:Generated_Source\PSoC4/ADC_1.c ****         {
 470:Generated_Source\PSoC4/ADC_1.c ****             /*OA_CTRL default always first element in initPairs*/
 471:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
 472:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_B_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_B_DEFAULT_OA_CTRL)}
 473:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_B_DEFAULT_SW_STATIC)}
 474:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_MODBIT_SRC_PTR  , ((uint32)ADC_1_UABH_B_INVAR_SW_MODBIT_SRC)}
 475:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_B_INVAR_SRAM_CTRL)}
 476:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG3_UABH_B_STARTUP_DELAY)}
 477:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_B_DEFAULT_SW_BOOST_CTRL)}
 478:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_OTHER_PTR       , ((uint32)ADC_1_UABH_B_DEFAULT_SW_OTHER)}
 479:Generated_Source\PSoC4/ADC_1.c **** 
 480:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG3_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
 481:Generated_Source\PSoC4/ADC_1.c ****                         /* Filter-invariant registers */
 482:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN0)}
 483:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN1)}
 484:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_TOP)}
 485:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN0)}
 486:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN1)}
 487:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_TOP)}
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 10


 488:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN0)}
 489:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN1)}
 490:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CF_BOT)}
 491:Generated_Source\PSoC4/ADC_1.c **** 
 492:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 493:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG3_UABH_B_LOWQDYN_CAP_CTRL)}
 494:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG3_UABH_B_LOWQDYN_SW_CC_TOP)}
 495:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG3_UABH_B_LOWQDYN_CAP_ABCF_VAL
 496:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG3_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 497:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 498:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN0)}
 499:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN1)}
 500:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_TOP)}
 501:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN0)}
 502:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN1)}
 503:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN0)}
 504:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN1)}
 505:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CF_BOT)}
 506:Generated_Source\PSoC4/ADC_1.c **** 
 507:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 508:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG3_UABH_B_HIGHQDYN_CAP_CTRL)}
 509:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG3_UABH_B_HIGHQDYN_SW_CB_TOP)}
 510:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG3_UABH_B_HIGHQDYN_SW_CC_TOP)}
 511:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG3_UABH_B_HIGHQDYN_CAP_ABCF_VA
 512:Generated_Source\PSoC4/ADC_1.c ****             #endif /* #if (ADC_1_CFG3_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 513:Generated_Source\PSoC4/ADC_1.c ****         };
 514:Generated_Source\PSoC4/ADC_1.c **** 
 515:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG3_UABH_A_FILTER_config = {
 516:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_waveConfig,
 517:Generated_Source\PSoC4/ADC_1.c ****             (CyUAB_reg_pair*) ADC_1_CFG3_UABH_A_FILTER_initPairs,
 518:Generated_Source\PSoC4/ADC_1.c ****             CyUAB_SHARED_SW_CFG(ADC_1_UABH_A_PARAM_REF_TIED,ADC_1_UABH_A_PARAM_AGND_TIED,
 519:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_A_PARAM_SW_CC,ADC_1_UABH_A_PARAM_SW_BB,ADC_1_UABH_A_PARAM_SW_AA),
 520:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_NUM_STEPS,
 521:Generated_Source\PSoC4/ADC_1.c ****             (uint8)(ADC_1_UABH_A_ELEMENT_COUNT(ADC_1_CFG3_UABH_A_FILTER_initPairs))
 522:Generated_Source\PSoC4/ADC_1.c ****         };
 523:Generated_Source\PSoC4/ADC_1.c **** 
 524:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG3_UABH_B_FILTER_config = {
 525:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_waveConfig,
 526:Generated_Source\PSoC4/ADC_1.c ****         (CyUAB_reg_pair*) ADC_1_CFG3_UABH_B_FILTER_initPairs,
 527:Generated_Source\PSoC4/ADC_1.c ****         CyUAB_SHARED_SW_CFG(ADC_1_UABH_B_PARAM_REF_TIED,ADC_1_UABH_B_PARAM_AGND_TIED,
 528:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_B_PARAM_SW_CC,ADC_1_UABH_B_PARAM_SW_BB,ADC_1_UABH_B_PARAM_SW_AA),
 529:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_NUM_STEPS,
 530:Generated_Source\PSoC4/ADC_1.c ****         (uint8)(ADC_1_UABH_B_ELEMENT_COUNT(ADC_1_CFG3_UABH_B_FILTER_initPairs))
 531:Generated_Source\PSoC4/ADC_1.c ****     };
 532:Generated_Source\PSoC4/ADC_1.c ****     #endif /* (0u != ADC_1_CFG3_FILTER_PRESENT) */
 533:Generated_Source\PSoC4/ADC_1.c **** 
 534:Generated_Source\PSoC4/ADC_1.c **** 
 535:Generated_Source\PSoC4/ADC_1.c **** #endif /* (ADC_1_ANY_CONFIG_USES_FILTER  != 0u)  */
 536:Generated_Source\PSoC4/ADC_1.c **** 
 537:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 538:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_Start
 539:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 540:Generated_Source\PSoC4/ADC_1.c **** *
 541:Generated_Source\PSoC4/ADC_1.c **** * \brief Performs all required initialization for this component and enables the
 542:Generated_Source\PSoC4/ADC_1.c **** *  power. The power will be set to the appropriate power based on the clock
 543:Generated_Source\PSoC4/ADC_1.c **** *  frequency.
 544:Generated_Source\PSoC4/ADC_1.c **** *
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 11


 545:Generated_Source\PSoC4/ADC_1.c **** * \param None
 546:Generated_Source\PSoC4/ADC_1.c **** *
 547:Generated_Source\PSoC4/ADC_1.c **** * \return None
 548:Generated_Source\PSoC4/ADC_1.c **** *
 549:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 550:Generated_Source\PSoC4/ADC_1.c **** *
 551:Generated_Source\PSoC4/ADC_1.c **** * \globalvars
 552:Generated_Source\PSoC4/ADC_1.c **** *  \ref ADC_1_initVar (RW)
 553:Generated_Source\PSoC4/ADC_1.c **** *
 554:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 555:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_Start(void)
 556:Generated_Source\PSoC4/ADC_1.c **** {
 557:Generated_Source\PSoC4/ADC_1.c ****     if (ADC_1_INIT_VAR_INIT_FLAG != (ADC_1_INIT_VAR_INIT_FLAG & ADC_1_initVar))
 558:Generated_Source\PSoC4/ADC_1.c ****     {
 559:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_Init();
 560:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_initVar |= ADC_1_INIT_VAR_INIT_FLAG;
 561:Generated_Source\PSoC4/ADC_1.c ****     }
 562:Generated_Source\PSoC4/ADC_1.c **** 
 563:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_Enable();
 564:Generated_Source\PSoC4/ADC_1.c **** 
 565:Generated_Source\PSoC4/ADC_1.c ****     return;
 566:Generated_Source\PSoC4/ADC_1.c **** }
 567:Generated_Source\PSoC4/ADC_1.c **** 
 568:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 569:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_StartEx
 570:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 571:Generated_Source\PSoC4/ADC_1.c **** *
 572:Generated_Source\PSoC4/ADC_1.c **** * \brief This function starts the ADC_1 and sets the Interrupt
 573:Generated_Source\PSoC4/ADC_1.c **** * Service Routine to the provided address using the
 574:Generated_Source\PSoC4/ADC_1.c **** * ADC_1_IRQ_StartEx() function. Refer to the Interrupt component
 575:Generated_Source\PSoC4/ADC_1.c **** * datasheet for more information on the ADC_1_IRQ_StartEx() function.
 576:Generated_Source\PSoC4/ADC_1.c **** *
 577:Generated_Source\PSoC4/ADC_1.c **** * \param address This is the address of a user defined function for the ISR.
 578:Generated_Source\PSoC4/ADC_1.c **** *
 579:Generated_Source\PSoC4/ADC_1.c **** * \return None
 580:Generated_Source\PSoC4/ADC_1.c **** *
 581:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 582:Generated_Source\PSoC4/ADC_1.c **** *
 583:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 584:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_StartEx(cyisraddress address)
 585:Generated_Source\PSoC4/ADC_1.c **** {
 586:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_Start();
 587:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_IRQ_StartEx(address);
 588:Generated_Source\PSoC4/ADC_1.c ****     return;
 589:Generated_Source\PSoC4/ADC_1.c **** }
 590:Generated_Source\PSoC4/ADC_1.c **** 
 591:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 592:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_Stop
 593:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 594:Generated_Source\PSoC4/ADC_1.c **** *
 595:Generated_Source\PSoC4/ADC_1.c **** * \brief This function stops ADC conversions and puts the ADC into its lowest
 596:Generated_Source\PSoC4/ADC_1.c **** * power mode.
 597:Generated_Source\PSoC4/ADC_1.c **** *
 598:Generated_Source\PSoC4/ADC_1.c **** * \param None
 599:Generated_Source\PSoC4/ADC_1.c **** *
 600:Generated_Source\PSoC4/ADC_1.c **** * \return None
 601:Generated_Source\PSoC4/ADC_1.c **** *
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 12


 602:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect
 603:Generated_Source\PSoC4/ADC_1.c **** * Do not use the ADC_1_Stop() API to halt conversions. Instead use the
 604:Generated_Source\PSoC4/ADC_1.c **** * ADC_1_StopConvert() API. If you use the ADC_1_Stop() API
 605:Generated_Source\PSoC4/ADC_1.c **** * to halt conversions then later use the ADC_1_Start() and
 606:Generated_Source\PSoC4/ADC_1.c **** * ADC_1_StartConvert() APIs to resume conversions, the first channel
 607:Generated_Source\PSoC4/ADC_1.c **** * of the scan may be corrupt. The ADC_1_StopConvert() API will enable
 608:Generated_Source\PSoC4/ADC_1.c **** * the ADC_1 to complete the current scan of channels. After the
 609:Generated_Source\PSoC4/ADC_1.c **** * channel scan is complete, the ADC_1 will stop all conversions, which
 610:Generated_Source\PSoC4/ADC_1.c **** * can be detected by the use of an ISR or the ADC_1_IsEndConversion()
 611:Generated_Source\PSoC4/ADC_1.c **** * flag.
 612:Generated_Source\PSoC4/ADC_1.c **** *
 613:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 614:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_Stop(void)
 615:Generated_Source\PSoC4/ADC_1.c **** {
 616:Generated_Source\PSoC4/ADC_1.c ****     #if(0u != ADC_1_ANY_CONFIG_USES_FILTER)
 617:Generated_Source\PSoC4/ADC_1.c ****         if((ADC_1_allConfigs[ADC_1_currentConfig].miscConfig
 618:Generated_Source\PSoC4/ADC_1.c ****            & ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
 619:Generated_Source\PSoC4/ADC_1.c ****            == ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
 620:Generated_Source\PSoC4/ADC_1.c ****         {
 621:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_Stop();
 622:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_B_Stop();
 623:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_FILTERAGND2SAR_BUFFER_Stop();
 624:Generated_Source\PSoC4/ADC_1.c ****         }
 625:Generated_Source\PSoC4/ADC_1.c ****     #endif /* ADC_1_ANY_CONFIG_USES_FILTER != 0u */
 626:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_CTRL_REG &= (uint32)~ADC_1_SAR_CTRL_ENABLED_MSK;
 627:Generated_Source\PSoC4/ADC_1.c ****     return;
 628:Generated_Source\PSoC4/ADC_1.c **** }
 629:Generated_Source\PSoC4/ADC_1.c **** 
 630:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
 631:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_InitConfig
 632:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
 633:Generated_Source\PSoC4/ADC_1.c **** *
 634:Generated_Source\PSoC4/ADC_1.c **** * \brief Configures all of the registers for a given configuration for scanning.
 635:Generated_Source\PSoC4/ADC_1.c **** *
 636:Generated_Source\PSoC4/ADC_1.c **** * \param
 637:Generated_Source\PSoC4/ADC_1.c **** * config: Pointer to the configuration structure
 638:Generated_Source\PSoC4/ADC_1.c **** *
 639:Generated_Source\PSoC4/ADC_1.c **** * \return None
 640:Generated_Source\PSoC4/ADC_1.c **** *
 641:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 642:Generated_Source\PSoC4/ADC_1.c **** *
 643:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 644:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_InitConfig(const ADC_1_CONFIG_STRUCT *config)
 645:Generated_Source\PSoC4/ADC_1.c **** {
 646:Generated_Source\PSoC4/ADC_1.c ****     uint32 chNum;
 647:Generated_Source\PSoC4/ADC_1.c ****     uint32 tmpRegVal;
 648:Generated_Source\PSoC4/ADC_1.c **** 
 649:Generated_Source\PSoC4/ADC_1.c ****     /* If there is an internal SAR clock, set up its divider values. */
 650:Generated_Source\PSoC4/ADC_1.c ****     #if (ADC_1_CLOCK_INTERNAL)
 651:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_intSarClock_Stop();
 652:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_intSarClock_SetFractionalDividerRegister(config->clkDivider, 0u);
 653:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_intSarClock_Start();
 654:Generated_Source\PSoC4/ADC_1.c ****     #endif /* ADC_1_CLOCK_INTERNAL */
 655:Generated_Source\PSoC4/ADC_1.c **** 
 656:Generated_Source\PSoC4/ADC_1.c ****     /* If the current configuration has a filter, set up the UAB clock divider values. */
 657:Generated_Source\PSoC4/ADC_1.c ****     #if(0u != ADC_1_ANY_CONFIG_USES_FILTER)
 658:Generated_Source\PSoC4/ADC_1.c ****         if((config->miscConfig & ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 13


 659:Generated_Source\PSoC4/ADC_1.c ****             == ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
 660:Generated_Source\PSoC4/ADC_1.c ****         {
 661:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_intUabClock_Stop();
 662:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_intUabClock_SetFractionalDividerRegister(config->filterClkDivider, 0u);
 663:Generated_Source\PSoC4/ADC_1.c ****             #if defined(ADC_1_cy_psoc4_sar_1__CLOCK_DIV_ID)
 664:Generated_Source\PSoC4/ADC_1.c ****                 /* If the SAR clock divider ID is known,
 665:Generated_Source\PSoC4/ADC_1.c ****                  * start the internal UAB divider aligned to the SAR divider. */
 666:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_intUabClock_StartEx(ADC_1_cy_psoc4_sar_1__CLOCK_DIV_ID);
 667:Generated_Source\PSoC4/ADC_1.c ****             #else
 668:Generated_Source\PSoC4/ADC_1.c ****                 /* Otherwise start it unaligned. */
 669:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_intUabClock_Start();
 670:Generated_Source\PSoC4/ADC_1.c ****             #endif
 671:Generated_Source\PSoC4/ADC_1.c ****         }
 672:Generated_Source\PSoC4/ADC_1.c ****     #endif /* ADC_1_ANY_CONFIG_USES_FILTER != 0u */
 673:Generated_Source\PSoC4/ADC_1.c **** 
 674:Generated_Source\PSoC4/ADC_1.c ****     /* Init SAR and MUX registers */
 675:Generated_Source\PSoC4/ADC_1.c ****     /* Enable the SAR internal pump when global pump is enabled */
 676:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_CTRL_REG = config->ctrl
 677:Generated_Source\PSoC4/ADC_1.c ****         | (((ADC_1_PUMP_CTRL_REG & ADC_1_PUMP_CTRL_ENABLED) != 0u)
 678:Generated_Source\PSoC4/ADC_1.c ****             ? ADC_1_SAR_CTRL_BOOSTPUMP_EN_MSK : 0u);
 679:Generated_Source\PSoC4/ADC_1.c **** 
 680:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SAMPLE_CTRL_REG = config->sampleCtrl;
 681:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_THRES_REG = config->rangeThres;
 682:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_COND_REG = config->rangeCond;
 683:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SAMPLE_TIME01_REG = config->sampleTime01;
 684:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SAMPLE_TIME23_REG = config->sampleTime23;
 685:Generated_Source\PSoC4/ADC_1.c **** 
 686:Generated_Source\PSoC4/ADC_1.c ****     /* Connect Vminus to VSSA when even one channel is single-ended or multiple channels configured
 687:Generated_Source\PSoC4/ADC_1.c ****     if(1u == ADC_1_MUX_SWITCH0_INIT)
 688:Generated_Source\PSoC4/ADC_1.c ****     {
 689:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_MUX_SWITCH0_REG |= ADC_1_MUX_FW_VSSA_VMINUS;
 690:Generated_Source\PSoC4/ADC_1.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 691:Generated_Source\PSoC4/ADC_1.c ****         if(1ul < config->numChannels)
 692:Generated_Source\PSoC4/ADC_1.c ****         {
 693:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_MUX_SWITCH_HW_CTRL_REG |= ADC_1_MUX_FW_VSSA_VMINUS;
 694:Generated_Source\PSoC4/ADC_1.c ****         }
 695:Generated_Source\PSoC4/ADC_1.c ****     }
 696:Generated_Source\PSoC4/ADC_1.c **** 
 697:Generated_Source\PSoC4/ADC_1.c ****     /* Clear and set interrupt masks */
 698:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SATURATE_INTR_MASK_REG = 0u;
 699:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_INTR_MASK_REG = 0u;
 700:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SATURATE_INTR_MASK_REG = config->satIntMask;
 701:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_INTR_MASK_REG = config->rangeIntMask;
 702:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_INTR_MASK_REG = ADC_1_EOS_MASK;
 703:Generated_Source\PSoC4/ADC_1.c **** 
 704:Generated_Source\PSoC4/ADC_1.c ****     for(chNum = 0u; chNum < config->numChannels; chNum++)
 705:Generated_Source\PSoC4/ADC_1.c ****     {
 706:Generated_Source\PSoC4/ADC_1.c ****         tmpRegVal = (ADC_1_channelsConfig[config->channelBase + chNum]
 707:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_CHANNEL_CONFIG_MASK);
 708:Generated_Source\PSoC4/ADC_1.c **** 
 709:Generated_Source\PSoC4/ADC_1.c ****         #if(ADC_1_TOTAL_CHANNELS_NUM > 1)
 710:Generated_Source\PSoC4/ADC_1.c ****             tmpRegVal |= ADC_1_InputsPlacement[config->channelBase + chNum];
 711:Generated_Source\PSoC4/ADC_1.c ****             /*Non-paired differential channels set NEG_ADDR_EN and clear DIFFERENTIAL_EN */
 712:Generated_Source\PSoC4/ADC_1.c ****             if(0u != (ADC_1_InputsPlacement[config->channelBase + chNum] & ADC_1_CHANNEL_CONFIG_NEG
 713:Generated_Source\PSoC4/ADC_1.c ****             {
 714:Generated_Source\PSoC4/ADC_1.c ****                 tmpRegVal &= ~ADC_1_SAR_CHAN_CONFIG_DIFFERENTIAL_EN_MSK;
 715:Generated_Source\PSoC4/ADC_1.c ****             }
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 14


 716:Generated_Source\PSoC4/ADC_1.c ****         #endif
 717:Generated_Source\PSoC4/ADC_1.c **** 
 718:Generated_Source\PSoC4/ADC_1.c ****         CY_SET_REG32((reg32 *)(ADC_1_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 719:Generated_Source\PSoC4/ADC_1.c ****     }
 720:Generated_Source\PSoC4/ADC_1.c **** 
 721:Generated_Source\PSoC4/ADC_1.c ****     return;
 722:Generated_Source\PSoC4/ADC_1.c **** }
 723:Generated_Source\PSoC4/ADC_1.c **** 
 724:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
 725:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetDFTControl
 726:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
 727:Generated_Source\PSoC4/ADC_1.c **** *
 728:Generated_Source\PSoC4/ADC_1.c **** * \brief Internal function to configure the DFT_CTRL register.
 729:Generated_Source\PSoC4/ADC_1.c **** * This register is a non-retention register therefore it resets
 730:Generated_Source\PSoC4/ADC_1.c **** * when the SAR block is powered down.
 731:Generated_Source\PSoC4/ADC_1.c **** * The register must be configured every time the SAR block is enabled.
 732:Generated_Source\PSoC4/ADC_1.c **** *
 733:Generated_Source\PSoC4/ADC_1.c **** * \param
 734:Generated_Source\PSoC4/ADC_1.c **** * config: Pointer to the configuration structure
 735:Generated_Source\PSoC4/ADC_1.c **** *
 736:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 737:Generated_Source\PSoC4/ADC_1.c **** static void ADC_1_SetDFTControl(const ADC_1_CONFIG_STRUCT *config)
 738:Generated_Source\PSoC4/ADC_1.c **** {
  27              		.loc 1 738 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 739:Generated_Source\PSoC4/ADC_1.c ****     /* Double the non-overlap delay and latch enable time when using */
 740:Generated_Source\PSoC4/ADC_1.c ****     /* internal reference without bypass cap */
 741:Generated_Source\PSoC4/ADC_1.c ****     uint32 tmpRegVal = ADC_1_SAR_DFT_CTRL_REG;
  33              		.loc 1 741 0
  34 0000 0A4B     		ldr	r3, .L5
  35 0002 1B68     		ldr	r3, [r3]
  36              	.LVL1:
 742:Generated_Source\PSoC4/ADC_1.c ****     if(((config->ctrl & ADC_1__SAR_CTRL_VREF_BYP_AND_SEL_MSK)
  37              		.loc 1 742 0
  38 0004 8268     		ldr	r2, [r0, #8]
  39 0006 F021     		movs	r1, #240
  40 0008 0A40     		ands	r2, r1
  41 000a 402A     		cmp	r2, #64
  42 000c 01D0     		beq	.L2
 743:Generated_Source\PSoC4/ADC_1.c ****         == ADC_1__INTERNAL1024)
 744:Generated_Source\PSoC4/ADC_1.c ****         || ((config->ctrl & ADC_1__SAR_CTRL_VREF_BYP_AND_SEL_MSK)
  43              		.loc 1 744 0
  44 000e 002A     		cmp	r2, #0
  45 0010 04D1     		bne	.L3
  46              	.L2:
 745:Generated_Source\PSoC4/ADC_1.c ****         == ADC_1__INTERNALVREF))
 746:Generated_Source\PSoC4/ADC_1.c ****     {
 747:Generated_Source\PSoC4/ADC_1.c ****         tmpRegVal &= ~ADC_1_SAR_DFT_CTRL_DCEN_MSK;
  47              		.loc 1 747 0
  48 0012 074A     		ldr	r2, .L5+4
  49 0014 1340     		ands	r3, r2
  50              	.LVL2:
 748:Generated_Source\PSoC4/ADC_1.c ****         tmpRegVal |= ADC_1_SAR_DFT_CTRL_DLY_INC_MSK;
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 15


  51              		.loc 1 748 0
  52 0016 0122     		movs	r2, #1
  53 0018 1343     		orrs	r3, r2
  54              	.LVL3:
  55 001a 04E0     		b	.L4
  56              	.L3:
  57              	.LVL4:
  58 001c 0122     		movs	r2, #1
  59 001e 9343     		bics	r3, r2
  60              	.LVL5:
 749:Generated_Source\PSoC4/ADC_1.c ****     }
 750:Generated_Source\PSoC4/ADC_1.c ****     else
 751:Generated_Source\PSoC4/ADC_1.c ****     {
 752:Generated_Source\PSoC4/ADC_1.c ****         tmpRegVal |= ADC_1_SAR_DFT_CTRL_DCEN_MSK;
 753:Generated_Source\PSoC4/ADC_1.c ****         tmpRegVal &= (uint32)~ADC_1_SAR_DFT_CTRL_DLY_INC_MSK;
  61              		.loc 1 753 0
  62 0020 8022     		movs	r2, #128
  63 0022 9205     		lsls	r2, r2, #22
  64 0024 1343     		orrs	r3, r2
  65              	.LVL6:
  66              	.L4:
 754:Generated_Source\PSoC4/ADC_1.c ****     }
 755:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_DFT_CTRL_REG = tmpRegVal;
  67              		.loc 1 755 0
  68 0026 014A     		ldr	r2, .L5
  69 0028 1360     		str	r3, [r2]
 756:Generated_Source\PSoC4/ADC_1.c **** }
  70              		.loc 1 756 0
  71              		@ sp needed
  72 002a 7047     		bx	lr
  73              	.L6:
  74              		.align	2
  75              	.L5:
  76 002c 30003A40 		.word	1077542960
  77 0030 FFFFFFDF 		.word	-536870913
  78              		.cfi_endproc
  79              	.LFE5:
  80              		.size	ADC_1_SetDFTControl, .-ADC_1_SetDFTControl
  81              		.section	.text.ADC_1_IsChannelSigned,"ax",%progbits
  82              		.align	2
  83              		.code	16
  84              		.thumb_func
  85              		.type	ADC_1_IsChannelSigned, %function
  86              	ADC_1_IsChannelSigned:
  87              	.LFB13:
 757:Generated_Source\PSoC4/ADC_1.c **** 
 758:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
 759:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SelectConfig
 760:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
 761:Generated_Source\PSoC4/ADC_1.c **** *
 762:Generated_Source\PSoC4/ADC_1.c **** * \brief Selects the predefined configuration for scanning. Disables
 763:Generated_Source\PSoC4/ADC_1.c **** * and re-enables the SAR and filter (if filter used).
 764:Generated_Source\PSoC4/ADC_1.c **** *
 765:Generated_Source\PSoC4/ADC_1.c **** * \param config Number of configuration  in the ADC_1.
 766:Generated_Source\PSoC4/ADC_1.c **** *
 767:Generated_Source\PSoC4/ADC_1.c **** * \param restart Set to 1u to restart the ADC_1 after
 768:Generated_Source\PSoC4/ADC_1.c **** * selecting the configuration.
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 16


 769:Generated_Source\PSoC4/ADC_1.c **** *
 770:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 771:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SelectConfig(uint32 config, uint32 restart)
 772:Generated_Source\PSoC4/ADC_1.c **** {
 773:Generated_Source\PSoC4/ADC_1.c ****     /* Check whether the configuration number is valid or not */
 774:Generated_Source\PSoC4/ADC_1.c ****     if(ADC_1_TOTAL_CONFIGS > config)
 775:Generated_Source\PSoC4/ADC_1.c ****     {
 776:Generated_Source\PSoC4/ADC_1.c ****         /* Stop the ADC before changing configurations */
 777:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_Stop();
 778:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_selected = 1u;
 779:Generated_Source\PSoC4/ADC_1.c **** 
 780:Generated_Source\PSoC4/ADC_1.c ****         if(0u == ADC_1_initVar)
 781:Generated_Source\PSoC4/ADC_1.c ****         {
 782:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_Init();
 783:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_initVar |= ADC_1_INIT_VAR_INIT_FLAG;
 784:Generated_Source\PSoC4/ADC_1.c ****         }
 785:Generated_Source\PSoC4/ADC_1.c ****         #if (ADC_1_VREF_ROUTED)
 786:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_vrefAMux_DisconnectAll();
 787:Generated_Source\PSoC4/ADC_1.c ****         #endif
 788:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_InitConfig(&ADC_1_allConfigs[config]);
 789:Generated_Source\PSoC4/ADC_1.c ****         #if (ADC_1_VREF_ROUTED)
 790:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_vrefAMux_Select((uint8)config);
 791:Generated_Source\PSoC4/ADC_1.c ****         #endif
 792:Generated_Source\PSoC4/ADC_1.c ****         #if(0u != ADC_1_ANY_CONFIG_USES_FILTER)
 793:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_filterVinMux_Select((uint8)config);
 794:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_filterInit(config);
 795:Generated_Source\PSoC4/ADC_1.c ****         #endif
 796:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_CHAN_EN_REG = ADC_1_allConfigs[config].chanEn;
 797:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_RANGE_INTR_MASK_REG = ADC_1_allConfigs[config].rangeIntMask;
 798:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_SATURATE_INTR_MASK_REG = ADC_1_allConfigs[config].satIntMask;
 799:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_currentConfig = config;
 800:Generated_Source\PSoC4/ADC_1.c **** 
 801:Generated_Source\PSoC4/ADC_1.c ****         if(1u == restart)
 802:Generated_Source\PSoC4/ADC_1.c ****         {
 803:Generated_Source\PSoC4/ADC_1.c ****             /* Restart the ADC */
 804:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_Start();
 805:Generated_Source\PSoC4/ADC_1.c **** 
 806:Generated_Source\PSoC4/ADC_1.c ****             /* Restart the scan */
 807:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_StartConvert();
 808:Generated_Source\PSoC4/ADC_1.c ****         }
 809:Generated_Source\PSoC4/ADC_1.c ****     }
 810:Generated_Source\PSoC4/ADC_1.c ****     return;
 811:Generated_Source\PSoC4/ADC_1.c **** }
 812:Generated_Source\PSoC4/ADC_1.c **** 
 813:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 814:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_StartConvert
 815:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 816:Generated_Source\PSoC4/ADC_1.c **** *
 817:Generated_Source\PSoC4/ADC_1.c **** * \brief In continuous mode, this API starts the conversion process and it runs
 818:Generated_Source\PSoC4/ADC_1.c **** * continuously.
 819:Generated_Source\PSoC4/ADC_1.c **** 
 820:Generated_Source\PSoC4/ADC_1.c **** * In Single Shot mode, the function triggers a single scan and
 821:Generated_Source\PSoC4/ADC_1.c **** * every scan requires a call of this function. The mode is set with the
 822:Generated_Source\PSoC4/ADC_1.c **** * Sample Mode parameter in the customizer. The customizer setting can be
 823:Generated_Source\PSoC4/ADC_1.c **** * overridden at run time with the ADC_1_SetConvertMode() function.
 824:Generated_Source\PSoC4/ADC_1.c **** *
 825:Generated_Source\PSoC4/ADC_1.c **** * \param None
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 17


 826:Generated_Source\PSoC4/ADC_1.c **** *
 827:Generated_Source\PSoC4/ADC_1.c **** * \return None
 828:Generated_Source\PSoC4/ADC_1.c **** *
 829:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 830:Generated_Source\PSoC4/ADC_1.c **** *
 831:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 832:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_StartConvert(void)
 833:Generated_Source\PSoC4/ADC_1.c **** {
 834:Generated_Source\PSoC4/ADC_1.c ****     /* Freerunning mode */
 835:Generated_Source\PSoC4/ADC_1.c ****     if((ADC_1_SAR_SAMPLE_CTRL_REG
 836:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 837:Generated_Source\PSoC4/ADC_1.c ****         == ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 838:Generated_Source\PSoC4/ADC_1.c ****     {
 839:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_SAMPLE_CTRL_REG |= ADC_1_SAR_SAMPLE_CTRL_CONTINUOUS_MSK ;
 840:Generated_Source\PSoC4/ADC_1.c ****     }
 841:Generated_Source\PSoC4/ADC_1.c ****     else /* Firmware trigger */
 842:Generated_Source\PSoC4/ADC_1.c ****     {
 843:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_START_CTRL_REG = ADC_1_SAR_START_CTRL_FW_TRIGGER_MSK;
 844:Generated_Source\PSoC4/ADC_1.c ****     }
 845:Generated_Source\PSoC4/ADC_1.c **** 
 846:Generated_Source\PSoC4/ADC_1.c ****     return;
 847:Generated_Source\PSoC4/ADC_1.c **** }
 848:Generated_Source\PSoC4/ADC_1.c **** 
 849:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 850:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_StopConvert
 851:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 852:Generated_Source\PSoC4/ADC_1.c **** *
 853:Generated_Source\PSoC4/ADC_1.c **** * \brief Forces the ADC_1 to stop conversions. If a conversion is
 854:Generated_Source\PSoC4/ADC_1.c **** * currently executing, that conversion will complete, but no further conversions
 855:Generated_Source\PSoC4/ADC_1.c **** * will occur.
 856:Generated_Source\PSoC4/ADC_1.c **** *
 857:Generated_Source\PSoC4/ADC_1.c **** * \param None
 858:Generated_Source\PSoC4/ADC_1.c **** *
 859:Generated_Source\PSoC4/ADC_1.c **** * \return None
 860:Generated_Source\PSoC4/ADC_1.c **** *
 861:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 862:Generated_Source\PSoC4/ADC_1.c **** *
 863:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 864:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_StopConvert(void)
 865:Generated_Source\PSoC4/ADC_1.c **** {
 866:Generated_Source\PSoC4/ADC_1.c ****     if((ADC_1_SAR_SAMPLE_CTRL_REG
 867:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 868:Generated_Source\PSoC4/ADC_1.c ****         == ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 869:Generated_Source\PSoC4/ADC_1.c ****     {
 870:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_SAMPLE_CTRL_REG &= ~ADC_1_SAR_SAMPLE_CTRL_CONTINUOUS_MSK;
 871:Generated_Source\PSoC4/ADC_1.c **** 
 872:Generated_Source\PSoC4/ADC_1.c ****         if((ADC_1_allConfigs[ADC_1_currentConfig].miscConfig
 873:Generated_Source\PSoC4/ADC_1.c ****             & ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
 874:Generated_Source\PSoC4/ADC_1.c ****             == ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
 875:Generated_Source\PSoC4/ADC_1.c ****         {
 876:Generated_Source\PSoC4/ADC_1.c ****             /* Re-synchronize the Filter if a filter is present */
 877:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_Stop();
 878:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_Start();
 879:Generated_Source\PSoC4/ADC_1.c ****         }
 880:Generated_Source\PSoC4/ADC_1.c ****     }
 881:Generated_Source\PSoC4/ADC_1.c **** 
 882:Generated_Source\PSoC4/ADC_1.c ****     return;
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 18


 883:Generated_Source\PSoC4/ADC_1.c **** }
 884:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 885:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetConvertMode
 886:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 887:Generated_Source\PSoC4/ADC_1.c **** *
 888:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets the conversion mode to either Single-Shot or continuous. This
 889:Generated_Source\PSoC4/ADC_1.c **** * function overrides the settings applied in the customizer. Changing
 890:Generated_Source\PSoC4/ADC_1.c **** * configurations will restore the values set in the customizer.
 891:Generated_Source\PSoC4/ADC_1.c **** *
 892:Generated_Source\PSoC4/ADC_1.c **** * \param mode Sets the conversion mode. See table below for details.
 893:Generated_Source\PSoC4/ADC_1.c **** * | Options                          | Description                             |
 894:Generated_Source\PSoC4/ADC_1.c **** * | :------------------------------- | :-------------------------------------- |
 895:Generated_Source\PSoC4/ADC_1.c **** * | ADC_1_SINGLE_SHOT     | Calling the ADC_1_StartConvert() function after setting mode this will 
 896:Generated_Source\PSoC4/ADC_1.c **** * | ADC_1_CONTINUOUS      | Calling the ADC_1_StartConvert() function after setting this mode trigg
 897:Generated_Source\PSoC4/ADC_1.c **** *
 898:Generated_Source\PSoC4/ADC_1.c **** * \return None
 899:Generated_Source\PSoC4/ADC_1.c **** *
 900:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 901:Generated_Source\PSoC4/ADC_1.c **** *
 902:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 903:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetConvertMode(uint32 mode)
 904:Generated_Source\PSoC4/ADC_1.c **** {
 905:Generated_Source\PSoC4/ADC_1.c ****     if(ADC_1_CONTINUOUS == mode)
 906:Generated_Source\PSoC4/ADC_1.c ****     {
 907:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_SAMPLE_CTRL_REG |= ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK;
 908:Generated_Source\PSoC4/ADC_1.c ****     }
 909:Generated_Source\PSoC4/ADC_1.c ****     else
 910:Generated_Source\PSoC4/ADC_1.c ****     {
 911:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_SAMPLE_CTRL_REG &= ~ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK;
 912:Generated_Source\PSoC4/ADC_1.c ****     }
 913:Generated_Source\PSoC4/ADC_1.c **** }
 914:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
 915:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_IRQ_Enable
 916:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
 917:Generated_Source\PSoC4/ADC_1.c **** *
 918:Generated_Source\PSoC4/ADC_1.c **** * \brief Enables interrupts to occur at the end of a conversion. Global
 919:Generated_Source\PSoC4/ADC_1.c **** * interrupts must also be enabled for the ADC_1 interrupts to occur.
 920:Generated_Source\PSoC4/ADC_1.c **** *
 921:Generated_Source\PSoC4/ADC_1.c **** * \param None
 922:Generated_Source\PSoC4/ADC_1.c **** *
 923:Generated_Source\PSoC4/ADC_1.c **** * \return None
 924:Generated_Source\PSoC4/ADC_1.c **** *
 925:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 926:Generated_Source\PSoC4/ADC_1.c **** *
 927:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 928:Generated_Source\PSoC4/ADC_1.c **** 
 929:Generated_Source\PSoC4/ADC_1.c **** 
 930:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
 931:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_IRQ_Disable
 932:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
 933:Generated_Source\PSoC4/ADC_1.c **** *
 934:Generated_Source\PSoC4/ADC_1.c **** * \brief Disables end of conversion interrupts.
 935:Generated_Source\PSoC4/ADC_1.c **** *
 936:Generated_Source\PSoC4/ADC_1.c **** * \param None
 937:Generated_Source\PSoC4/ADC_1.c **** *
 938:Generated_Source\PSoC4/ADC_1.c **** * \return None
 939:Generated_Source\PSoC4/ADC_1.c **** *
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 19


 940:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 941:Generated_Source\PSoC4/ADC_1.c **** *
 942:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 943:Generated_Source\PSoC4/ADC_1.c **** 
 944:Generated_Source\PSoC4/ADC_1.c **** 
 945:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 946:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetEosMask
 947:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 948:Generated_Source\PSoC4/ADC_1.c **** *
 949:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets of clears the End of Scan (EOS) interrupt mask.
 950:Generated_Source\PSoC4/ADC_1.c **** *
 951:Generated_Source\PSoC4/ADC_1.c **** * \param mask 1 to set the mask, 0 to clear the mask.
 952:Generated_Source\PSoC4/ADC_1.c **** *
 953:Generated_Source\PSoC4/ADC_1.c **** * \return None
 954:Generated_Source\PSoC4/ADC_1.c **** *
 955:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect All other bits in the INTR register are cleared by this function.
 956:Generated_Source\PSoC4/ADC_1.c **** *
 957:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 958:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetEosMask(uint32 mask)
 959:Generated_Source\PSoC4/ADC_1.c **** {
 960:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_INTR_MASK_REG = mask & ADC_1_EOS_MASK;
 961:Generated_Source\PSoC4/ADC_1.c **** 
 962:Generated_Source\PSoC4/ADC_1.c ****     return;
 963:Generated_Source\PSoC4/ADC_1.c **** }
 964:Generated_Source\PSoC4/ADC_1.c **** 
 965:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
 966:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetChanMask
 967:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
 968:Generated_Source\PSoC4/ADC_1.c **** *
 969:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets enable/disable mask for all channels in current configuration.
 970:Generated_Source\PSoC4/ADC_1.c **** *
 971:Generated_Source\PSoC4/ADC_1.c **** *
 972:Generated_Source\PSoC4/ADC_1.c **** * \param enableMask
 973:Generated_Source\PSoC4/ADC_1.c **** *  Channel enable/disable mask.
 974:Generated_Source\PSoC4/ADC_1.c **** *
 975:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect
 976:Generated_Source\PSoC4/ADC_1.c **** *  None.
 977:Generated_Source\PSoC4/ADC_1.c **** *
 978:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 979:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetChanMask(uint32 enableMask)
 980:Generated_Source\PSoC4/ADC_1.c **** {
 981:Generated_Source\PSoC4/ADC_1.c ****     uint32 chanCount = ADC_1_allConfigs[ADC_1_currentConfig].numChannels;
 982:Generated_Source\PSoC4/ADC_1.c ****     enableMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 983:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_CHAN_EN_REG = enableMask;
 984:Generated_Source\PSoC4/ADC_1.c ****     return;
 985:Generated_Source\PSoC4/ADC_1.c **** }
 986:Generated_Source\PSoC4/ADC_1.c **** 
 987:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 988:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_IsEndConversion
 989:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 990:Generated_Source\PSoC4/ADC_1.c **** *
 991:Generated_Source\PSoC4/ADC_1.c **** * \brief Immediately returns the status of the conversion or does not return
 992:Generated_Source\PSoC4/ADC_1.c **** * (blocking) until the conversion completes, depending on the retMode parameter.
 993:Generated_Source\PSoC4/ADC_1.c **** *
 994:Generated_Source\PSoC4/ADC_1.c **** * \param retMode Check conversion return mode. See the following table for
 995:Generated_Source\PSoC4/ADC_1.c **** * options.
 996:Generated_Source\PSoC4/ADC_1.c **** * | Options                              | Description                             |
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 20


 997:Generated_Source\PSoC4/ADC_1.c **** * | :-------------------------------     | :-------------------------------------- |
 998:Generated_Source\PSoC4/ADC_1.c **** * | ADC_1_RETURN_STATUS       | Immediately returns the conversion status for sequential channels. 
 999:Generated_Source\PSoC4/ADC_1.c **** * | ADC_1_WAIT_FOR_RESULT     | Does not return a result until the ADC_1 conversion of all sequenti
1000:Generated_Source\PSoC4/ADC_1.c **** *
1001:Generated_Source\PSoC4/ADC_1.c **** * \return uint8: If a nonzero value is returned, the last conversion is complete.
1002:Generated_Source\PSoC4/ADC_1.c **** * If the returned value is zero, the ADC_1 is still calculating the last result.
1003:Generated_Source\PSoC4/ADC_1.c **** *
1004:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect This function reads the end of conversion status, and clears it afterward.
1005:Generated_Source\PSoC4/ADC_1.c **** *
1006:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1007:Generated_Source\PSoC4/ADC_1.c **** uint32 ADC_1_IsEndConversion(uint32 retMode)
1008:Generated_Source\PSoC4/ADC_1.c **** {
1009:Generated_Source\PSoC4/ADC_1.c ****     uint32 endOfConversion = 0u;
1010:Generated_Source\PSoC4/ADC_1.c ****     uint32 wdt = 0x3FFFFFFuL; /* Watchdog timer for blocking while loop */
1011:Generated_Source\PSoC4/ADC_1.c ****     if((ADC_1_RETURN_STATUS == retMode) || (ADC_1_WAIT_FOR_RESULT == retMode))
1012:Generated_Source\PSoC4/ADC_1.c ****     {
1013:Generated_Source\PSoC4/ADC_1.c ****         do
1014:Generated_Source\PSoC4/ADC_1.c ****         {
1015:Generated_Source\PSoC4/ADC_1.c ****             endOfConversion = ADC_1_SAR_INTR_REG & ADC_1_EOS_MASK;
1016:Generated_Source\PSoC4/ADC_1.c ****             wdt--;
1017:Generated_Source\PSoC4/ADC_1.c ****         }while(((0u == endOfConversion)
1018:Generated_Source\PSoC4/ADC_1.c ****             && (((uint32) retMode & ADC_1_WAIT_FOR_RESULT) != 0u))
1019:Generated_Source\PSoC4/ADC_1.c ****             && (0uL != wdt));
1020:Generated_Source\PSoC4/ADC_1.c **** 
1021:Generated_Source\PSoC4/ADC_1.c ****         if(0u != endOfConversion)
1022:Generated_Source\PSoC4/ADC_1.c ****         {
1023:Generated_Source\PSoC4/ADC_1.c ****             /* Clear EOS bit */
1024:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_SAR_INTR_REG = ADC_1_EOS_MASK;
1025:Generated_Source\PSoC4/ADC_1.c ****         }
1026:Generated_Source\PSoC4/ADC_1.c ****     }
1027:Generated_Source\PSoC4/ADC_1.c **** 
1028:Generated_Source\PSoC4/ADC_1.c ****     return endOfConversion;
1029:Generated_Source\PSoC4/ADC_1.c **** }
1030:Generated_Source\PSoC4/ADC_1.c **** 
1031:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
1032:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_IsChannelSigned(uint32 chan)
1033:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
1034:Generated_Source\PSoC4/ADC_1.c **** *
1035:Generated_Source\PSoC4/ADC_1.c **** * Determines if the provided channel is in signed format.
1036:Generated_Source\PSoC4/ADC_1.c **** *
1037:Generated_Source\PSoC4/ADC_1.c **** * \param chan The ADC_1 channel to check.
1038:Generated_Source\PSoC4/ADC_1.c **** *
1039:Generated_Source\PSoC4/ADC_1.c **** * \return None
1040:Generated_Source\PSoC4/ADC_1.c **** *
1041:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1042:Generated_Source\PSoC4/ADC_1.c **** *
1043:Generated_Source\PSoC4/ADC_1.c **** *
1044:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1045:Generated_Source\PSoC4/ADC_1.c **** static int32 ADC_1_IsChannelSigned(uint32 chan)
1046:Generated_Source\PSoC4/ADC_1.c **** {
  88              		.loc 1 1046 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              		@ link register save eliminated.
  93              	.LVL7:
1047:Generated_Source\PSoC4/ADC_1.c ****     int32 isSigned = 0;
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 21


1048:Generated_Source\PSoC4/ADC_1.c ****     uint32 chanConfig;
1049:Generated_Source\PSoC4/ADC_1.c **** 
1050:Generated_Source\PSoC4/ADC_1.c ****     chanConfig = CY_GET_REG32((reg32 *)(ADC_1_SAR_CHAN_CONFIG_IND + (uint32)(chan << 2u)));
  94              		.loc 1 1050 0
  95 0000 8000     		lsls	r0, r0, #2
  96              	.LVL8:
  97 0002 114B     		ldr	r3, .L12
  98 0004 9C46     		mov	ip, r3
  99 0006 6044     		add	r0, r0, ip
 100 0008 0268     		ldr	r2, [r0]
 101              	.LVL9:
1051:Generated_Source\PSoC4/ADC_1.c ****     /* If differential mode */
1052:Generated_Source\PSoC4/ADC_1.c ****     if(0u != (chanConfig & ADC_1_CHANNEL_CONFIG_DIFF_ALL_MSK))
 102              		.loc 1 1052 0
 103 000a 104B     		ldr	r3, .L12+4
 104 000c 1A42     		tst	r2, r3
 105 000e 0BD0     		beq	.L8
1053:Generated_Source\PSoC4/ADC_1.c ****     {
1054:Generated_Source\PSoC4/ADC_1.c ****         /*If signed differential */
1055:Generated_Source\PSoC4/ADC_1.c ****         if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
 106              		.loc 1 1055 0
 107 0010 0F4B     		ldr	r3, .L12+8
 108 0012 1A68     		ldr	r2, [r3]
 109              	.LVL10:
 110 0014 D300     		lsls	r3, r2, #3
 111 0016 9A1A     		subs	r2, r3, r2
 112 0018 D300     		lsls	r3, r2, #3
 113 001a 0E4A     		ldr	r2, .L12+12
 114 001c D318     		adds	r3, r2, r3
 115 001e DB68     		ldr	r3, [r3, #12]
 116 0020 1B07     		lsls	r3, r3, #28
 117 0022 0DD4     		bmi	.L10
1047:Generated_Source\PSoC4/ADC_1.c ****     uint32 chanConfig;
 118              		.loc 1 1047 0
 119 0024 0020     		movs	r0, #0
 120 0026 0EE0     		b	.L9
 121              	.LVL11:
 122              	.L8:
1056:Generated_Source\PSoC4/ADC_1.c ****             & ADC_1_SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_MSK) != 0u)
1057:Generated_Source\PSoC4/ADC_1.c ****         {
1058:Generated_Source\PSoC4/ADC_1.c ****             isSigned = 1;
1059:Generated_Source\PSoC4/ADC_1.c ****         }
1060:Generated_Source\PSoC4/ADC_1.c ****     }
1061:Generated_Source\PSoC4/ADC_1.c ****     else
1062:Generated_Source\PSoC4/ADC_1.c ****     {
1063:Generated_Source\PSoC4/ADC_1.c ****         if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
 123              		.loc 1 1063 0
 124 0028 094B     		ldr	r3, .L12+8
 125 002a 1A68     		ldr	r2, [r3]
 126              	.LVL12:
 127 002c D300     		lsls	r3, r2, #3
 128 002e 9A1A     		subs	r2, r3, r2
 129 0030 D300     		lsls	r3, r2, #3
 130 0032 084A     		ldr	r2, .L12+12
 131 0034 D318     		adds	r3, r2, r3
 132 0036 DB68     		ldr	r3, [r3, #12]
 133 0038 5B07     		lsls	r3, r3, #29
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 22


 134 003a 03D4     		bmi	.L11
1047:Generated_Source\PSoC4/ADC_1.c ****     uint32 chanConfig;
 135              		.loc 1 1047 0
 136 003c 0020     		movs	r0, #0
 137 003e 02E0     		b	.L9
 138              	.L10:
1058:Generated_Source\PSoC4/ADC_1.c ****         }
 139              		.loc 1 1058 0
 140 0040 0120     		movs	r0, #1
 141 0042 00E0     		b	.L9
 142              	.L11:
1064:Generated_Source\PSoC4/ADC_1.c ****             & ADC_1_SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_MSK) != 0u)
1065:Generated_Source\PSoC4/ADC_1.c ****         {
1066:Generated_Source\PSoC4/ADC_1.c ****             isSigned = 1;
 143              		.loc 1 1066 0
 144 0044 0120     		movs	r0, #1
 145              	.L9:
 146              	.LVL13:
1067:Generated_Source\PSoC4/ADC_1.c ****         }
1068:Generated_Source\PSoC4/ADC_1.c ****     }
1069:Generated_Source\PSoC4/ADC_1.c ****     return isSigned;
1070:Generated_Source\PSoC4/ADC_1.c **** }
 147              		.loc 1 1070 0
 148              		@ sp needed
 149 0046 7047     		bx	lr
 150              	.L13:
 151              		.align	2
 152              	.L12:
 153 0048 80003A40 		.word	1077543040
 154 004c 00010001 		.word	16777472
 155 0050 00000000 		.word	.LANCHOR0
 156 0054 00000000 		.word	ADC_1_allConfigs
 157              		.cfi_endproc
 158              	.LFE13:
 159              		.size	ADC_1_IsChannelSigned, .-ADC_1_IsChannelSigned
 160              		.section	.text.ADC_1_Stop,"ax",%progbits
 161              		.align	2
 162              		.global	ADC_1_Stop
 163              		.code	16
 164              		.thumb_func
 165              		.type	ADC_1_Stop, %function
 166              	ADC_1_Stop:
 167              	.LFB3:
 615:Generated_Source\PSoC4/ADC_1.c ****     #if(0u != ADC_1_ANY_CONFIG_USES_FILTER)
 168              		.loc 1 615 0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172              		@ link register save eliminated.
 626:Generated_Source\PSoC4/ADC_1.c ****     return;
 173              		.loc 1 626 0
 174 0000 024A     		ldr	r2, .L15
 175 0002 1368     		ldr	r3, [r2]
 176 0004 5B00     		lsls	r3, r3, #1
 177 0006 5B08     		lsrs	r3, r3, #1
 178 0008 1360     		str	r3, [r2]
 628:Generated_Source\PSoC4/ADC_1.c **** 
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 23


 179              		.loc 1 628 0
 180              		@ sp needed
 181 000a 7047     		bx	lr
 182              	.L16:
 183              		.align	2
 184              	.L15:
 185 000c 00003A40 		.word	1077542912
 186              		.cfi_endproc
 187              	.LFE3:
 188              		.size	ADC_1_Stop, .-ADC_1_Stop
 189              		.section	.text.ADC_1_InitConfig,"ax",%progbits
 190              		.align	2
 191              		.global	ADC_1_InitConfig
 192              		.code	16
 193              		.thumb_func
 194              		.type	ADC_1_InitConfig, %function
 195              	ADC_1_InitConfig:
 196              	.LFB4:
 645:Generated_Source\PSoC4/ADC_1.c ****     uint32 chNum;
 197              		.loc 1 645 0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201              	.LVL14:
 202 0000 10B5     		push	{r4, lr}
 203              		.cfi_def_cfa_offset 8
 204              		.cfi_offset 4, -8
 205              		.cfi_offset 14, -4
 206 0002 0400     		movs	r4, r0
 651:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_intSarClock_SetFractionalDividerRegister(config->clkDivider, 0u);
 207              		.loc 1 651 0
 208 0004 FFF7FEFF 		bl	ADC_1_intSarClock_Stop
 209              	.LVL15:
 652:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_intSarClock_Start();
 210              		.loc 1 652 0
 211 0008 A08E     		ldrh	r0, [r4, #52]
 212 000a 0021     		movs	r1, #0
 213 000c FFF7FEFF 		bl	ADC_1_intSarClock_SetFractionalDividerRegister
 214              	.LVL16:
 653:Generated_Source\PSoC4/ADC_1.c ****     #endif /* ADC_1_CLOCK_INTERNAL */
 215              		.loc 1 653 0
 216 0010 FF20     		movs	r0, #255
 217 0012 FFF7FEFF 		bl	ADC_1_intSarClock_StartEx
 218              	.LVL17:
 676:Generated_Source\PSoC4/ADC_1.c ****         | (((ADC_1_PUMP_CTRL_REG & ADC_1_PUMP_CTRL_ENABLED) != 0u)
 219              		.loc 1 676 0
 220 0016 A368     		ldr	r3, [r4, #8]
 677:Generated_Source\PSoC4/ADC_1.c ****             ? ADC_1_SAR_CTRL_BOOSTPUMP_EN_MSK : 0u);
 221              		.loc 1 677 0
 222 0018 1F4A     		ldr	r2, .L23
 223 001a 1268     		ldr	r2, [r2]
 224 001c 002A     		cmp	r2, #0
 225 001e 02DA     		bge	.L22
 226 0020 8022     		movs	r2, #128
 227 0022 5203     		lsls	r2, r2, #13
 228 0024 00E0     		b	.L18
 229              	.L22:
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 24


 230 0026 0022     		movs	r2, #0
 231              	.L18:
 677:Generated_Source\PSoC4/ADC_1.c ****             ? ADC_1_SAR_CTRL_BOOSTPUMP_EN_MSK : 0u);
 232              		.loc 1 677 0 is_stmt 0 discriminator 4
 233 0028 1343     		orrs	r3, r2
 676:Generated_Source\PSoC4/ADC_1.c ****         | (((ADC_1_PUMP_CTRL_REG & ADC_1_PUMP_CTRL_ENABLED) != 0u)
 234              		.loc 1 676 0 is_stmt 1 discriminator 4
 235 002a 1C4A     		ldr	r2, .L23+4
 236 002c 1360     		str	r3, [r2]
 680:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_THRES_REG = config->rangeThres;
 237              		.loc 1 680 0 discriminator 4
 238 002e 1C4B     		ldr	r3, .L23+8
 239 0030 E268     		ldr	r2, [r4, #12]
 240 0032 1A60     		str	r2, [r3]
 681:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_COND_REG = config->rangeCond;
 241              		.loc 1 681 0 discriminator 4
 242 0034 1B4B     		ldr	r3, .L23+12
 243 0036 A269     		ldr	r2, [r4, #24]
 244 0038 1A60     		str	r2, [r3]
 682:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SAMPLE_TIME01_REG = config->sampleTime01;
 245              		.loc 1 682 0 discriminator 4
 246 003a 1B4B     		ldr	r3, .L23+16
 247 003c E269     		ldr	r2, [r4, #28]
 248 003e 1A60     		str	r2, [r3]
 683:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SAMPLE_TIME23_REG = config->sampleTime23;
 249              		.loc 1 683 0 discriminator 4
 250 0040 1A4B     		ldr	r3, .L23+20
 251 0042 2269     		ldr	r2, [r4, #16]
 252 0044 1A60     		str	r2, [r3]
 684:Generated_Source\PSoC4/ADC_1.c **** 
 253              		.loc 1 684 0 discriminator 4
 254 0046 1A4B     		ldr	r3, .L23+24
 255 0048 6269     		ldr	r2, [r4, #20]
 256 004a 1A60     		str	r2, [r3]
 698:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_INTR_MASK_REG = 0u;
 257              		.loc 1 698 0 discriminator 4
 258 004c 194A     		ldr	r2, .L23+28
 259 004e 0021     		movs	r1, #0
 260 0050 1160     		str	r1, [r2]
 699:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SATURATE_INTR_MASK_REG = config->satIntMask;
 261              		.loc 1 699 0 discriminator 4
 262 0052 194B     		ldr	r3, .L23+32
 263 0054 1960     		str	r1, [r3]
 700:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_INTR_MASK_REG = config->rangeIntMask;
 264              		.loc 1 700 0 discriminator 4
 265 0056 A16A     		ldr	r1, [r4, #40]
 266 0058 1160     		str	r1, [r2]
 701:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_INTR_MASK_REG = ADC_1_EOS_MASK;
 267              		.loc 1 701 0 discriminator 4
 268 005a 626A     		ldr	r2, [r4, #36]
 269 005c 1A60     		str	r2, [r3]
 702:Generated_Source\PSoC4/ADC_1.c **** 
 270              		.loc 1 702 0 discriminator 4
 271 005e 0122     		movs	r2, #1
 272 0060 164B     		ldr	r3, .L23+36
 273 0062 1A60     		str	r2, [r3]
 274              	.LVL18:
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 25


 704:Generated_Source\PSoC4/ADC_1.c ****     {
 275              		.loc 1 704 0 discriminator 4
 276 0064 0021     		movs	r1, #0
 277 0066 13E0     		b	.L19
 278              	.LVL19:
 279              	.L21:
 706:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_CHANNEL_CONFIG_MASK);
 280              		.loc 1 706 0
 281 0068 2368     		ldr	r3, [r4]
 282 006a CA18     		adds	r2, r1, r3
 283 006c 9200     		lsls	r2, r2, #2
 284 006e 144B     		ldr	r3, .L23+40
 285 0070 D058     		ldr	r0, [r2, r3]
 286 0072 144B     		ldr	r3, .L23+44
 287 0074 0340     		ands	r3, r0
 288              	.LVL20:
 710:Generated_Source\PSoC4/ADC_1.c ****             /*Non-paired differential channels set NEG_ADDR_EN and clear DIFFERENTIAL_EN */
 289              		.loc 1 710 0
 290 0076 1448     		ldr	r0, .L23+48
 291 0078 1258     		ldr	r2, [r2, r0]
 292 007a 1343     		orrs	r3, r2
 293              	.LVL21:
 712:Generated_Source\PSoC4/ADC_1.c ****             {
 294              		.loc 1 712 0
 295 007c D201     		lsls	r2, r2, #7
 296 007e 01D5     		bpl	.L20
 714:Generated_Source\PSoC4/ADC_1.c ****             }
 297              		.loc 1 714 0
 298 0080 124A     		ldr	r2, .L23+52
 299 0082 1340     		ands	r3, r2
 300              	.LVL22:
 301              	.L20:
 718:Generated_Source\PSoC4/ADC_1.c ****     }
 302              		.loc 1 718 0 discriminator 2
 303 0084 8A00     		lsls	r2, r1, #2
 304 0086 1248     		ldr	r0, .L23+56
 305 0088 8446     		mov	ip, r0
 306 008a 6244     		add	r2, r2, ip
 307 008c 1360     		str	r3, [r2]
 704:Generated_Source\PSoC4/ADC_1.c ****     {
 308              		.loc 1 704 0 discriminator 2
 309 008e 0131     		adds	r1, r1, #1
 310              	.LVL23:
 311              	.L19:
 704:Generated_Source\PSoC4/ADC_1.c ****     {
 312              		.loc 1 704 0 is_stmt 0 discriminator 1
 313 0090 6368     		ldr	r3, [r4, #4]
 314 0092 9942     		cmp	r1, r3
 315 0094 E8D3     		bcc	.L21
 722:Generated_Source\PSoC4/ADC_1.c **** 
 316              		.loc 1 722 0 is_stmt 1
 317              		@ sp needed
 318              	.LVL24:
 319 0096 10BD     		pop	{r4, pc}
 320              	.L24:
 321              		.align	2
 322              	.L23:
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 26


 323 0098 80033A40 		.word	1077543808
 324 009c 00003A40 		.word	1077542912
 325 00a0 04003A40 		.word	1077542916
 326 00a4 18003A40 		.word	1077542936
 327 00a8 1C003A40 		.word	1077542940
 328 00ac 10003A40 		.word	1077542928
 329 00b0 14003A40 		.word	1077542932
 330 00b4 28023A40 		.word	1077543464
 331 00b8 38023A40 		.word	1077543480
 332 00bc 18023A40 		.word	1077543448
 333 00c0 00000000 		.word	.LANCHOR1
 334 00c4 00370080 		.word	-2147469568
 335 00c8 00000000 		.word	ADC_1_InputsPlacement
 336 00cc FFFEFFFF 		.word	-257
 337 00d0 80003A40 		.word	1077543040
 338              		.cfi_endproc
 339              	.LFE4:
 340              		.size	ADC_1_InitConfig, .-ADC_1_InitConfig
 341              		.section	.text.ADC_1_StartConvert,"ax",%progbits
 342              		.align	2
 343              		.global	ADC_1_StartConvert
 344              		.code	16
 345              		.thumb_func
 346              		.type	ADC_1_StartConvert, %function
 347              	ADC_1_StartConvert:
 348              	.LFB7:
 833:Generated_Source\PSoC4/ADC_1.c ****     /* Freerunning mode */
 349              		.loc 1 833 0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353              		@ link register save eliminated.
 835:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 354              		.loc 1 835 0
 355 0000 074B     		ldr	r3, .L28
 356 0002 1B68     		ldr	r3, [r3]
 357 0004 5B03     		lsls	r3, r3, #13
 358 0006 06D5     		bpl	.L26
 839:Generated_Source\PSoC4/ADC_1.c ****     }
 359              		.loc 1 839 0
 360 0008 054A     		ldr	r2, .L28
 361 000a 1368     		ldr	r3, [r2]
 362 000c 8021     		movs	r1, #128
 363 000e 4902     		lsls	r1, r1, #9
 364 0010 0B43     		orrs	r3, r1
 365 0012 1360     		str	r3, [r2]
 366 0014 02E0     		b	.L25
 367              	.L26:
 843:Generated_Source\PSoC4/ADC_1.c ****     }
 368              		.loc 1 843 0
 369 0016 0122     		movs	r2, #1
 370 0018 024B     		ldr	r3, .L28+4
 371 001a 1A60     		str	r2, [r3]
 372              	.L25:
 847:Generated_Source\PSoC4/ADC_1.c **** 
 373              		.loc 1 847 0
 374              		@ sp needed
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 27


 375 001c 7047     		bx	lr
 376              	.L29:
 377 001e C046     		.align	2
 378              	.L28:
 379 0020 04003A40 		.word	1077542916
 380 0024 24003A40 		.word	1077542948
 381              		.cfi_endproc
 382              	.LFE7:
 383              		.size	ADC_1_StartConvert, .-ADC_1_StartConvert
 384              		.section	.text.ADC_1_SetConvertMode,"ax",%progbits
 385              		.align	2
 386              		.global	ADC_1_SetConvertMode
 387              		.code	16
 388              		.thumb_func
 389              		.type	ADC_1_SetConvertMode, %function
 390              	ADC_1_SetConvertMode:
 391              	.LFB9:
 904:Generated_Source\PSoC4/ADC_1.c ****     if(ADC_1_CONTINUOUS == mode)
 392              		.loc 1 904 0
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 0
 395              		@ frame_needed = 0, uses_anonymous_args = 0
 396              		@ link register save eliminated.
 397              	.LVL25:
 905:Generated_Source\PSoC4/ADC_1.c ****     {
 398              		.loc 1 905 0
 399 0000 0128     		cmp	r0, #1
 400 0002 06D1     		bne	.L31
 907:Generated_Source\PSoC4/ADC_1.c ****     }
 401              		.loc 1 907 0
 402 0004 064A     		ldr	r2, .L33
 403 0006 1368     		ldr	r3, [r2]
 404 0008 8021     		movs	r1, #128
 405 000a C902     		lsls	r1, r1, #11
 406 000c 0B43     		orrs	r3, r1
 407 000e 1360     		str	r3, [r2]
 408 0010 04E0     		b	.L30
 409              	.L31:
 911:Generated_Source\PSoC4/ADC_1.c ****     }
 410              		.loc 1 911 0
 411 0012 034A     		ldr	r2, .L33
 412 0014 1168     		ldr	r1, [r2]
 413 0016 034B     		ldr	r3, .L33+4
 414 0018 0B40     		ands	r3, r1
 415 001a 1360     		str	r3, [r2]
 416              	.L30:
 913:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
 417              		.loc 1 913 0
 418              		@ sp needed
 419 001c 7047     		bx	lr
 420              	.L34:
 421 001e C046     		.align	2
 422              	.L33:
 423 0020 04003A40 		.word	1077542916
 424 0024 FFFFFBFF 		.word	-262145
 425              		.cfi_endproc
 426              	.LFE9:
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 28


 427              		.size	ADC_1_SetConvertMode, .-ADC_1_SetConvertMode
 428              		.section	.text.ADC_1_SetEosMask,"ax",%progbits
 429              		.align	2
 430              		.global	ADC_1_SetEosMask
 431              		.code	16
 432              		.thumb_func
 433              		.type	ADC_1_SetEosMask, %function
 434              	ADC_1_SetEosMask:
 435              	.LFB10:
 959:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_INTR_MASK_REG = mask & ADC_1_EOS_MASK;
 436              		.loc 1 959 0
 437              		.cfi_startproc
 438              		@ args = 0, pretend = 0, frame = 0
 439              		@ frame_needed = 0, uses_anonymous_args = 0
 440              		@ link register save eliminated.
 441              	.LVL26:
 960:Generated_Source\PSoC4/ADC_1.c **** 
 442              		.loc 1 960 0
 443 0000 0123     		movs	r3, #1
 444 0002 1840     		ands	r0, r3
 445              	.LVL27:
 446 0004 014B     		ldr	r3, .L36
 447 0006 1860     		str	r0, [r3]
 963:Generated_Source\PSoC4/ADC_1.c **** 
 448              		.loc 1 963 0
 449              		@ sp needed
 450 0008 7047     		bx	lr
 451              	.L37:
 452 000a C046     		.align	2
 453              	.L36:
 454 000c 18023A40 		.word	1077543448
 455              		.cfi_endproc
 456              	.LFE10:
 457              		.size	ADC_1_SetEosMask, .-ADC_1_SetEosMask
 458              		.section	.text.ADC_1_SetChanMask,"ax",%progbits
 459              		.align	2
 460              		.global	ADC_1_SetChanMask
 461              		.code	16
 462              		.thumb_func
 463              		.type	ADC_1_SetChanMask, %function
 464              	ADC_1_SetChanMask:
 465              	.LFB11:
 980:Generated_Source\PSoC4/ADC_1.c ****     uint32 chanCount = ADC_1_allConfigs[ADC_1_currentConfig].numChannels;
 466              		.loc 1 980 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 0
 469              		@ frame_needed = 0, uses_anonymous_args = 0
 470              		@ link register save eliminated.
 471              	.LVL28:
 981:Generated_Source\PSoC4/ADC_1.c ****     enableMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 472              		.loc 1 981 0
 473 0000 074B     		ldr	r3, .L39
 474 0002 1A68     		ldr	r2, [r3]
 475 0004 D300     		lsls	r3, r2, #3
 476 0006 9A1A     		subs	r2, r3, r2
 477 0008 D300     		lsls	r3, r2, #3
 478 000a 064A     		ldr	r2, .L39+4
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 29


 479 000c D318     		adds	r3, r2, r3
 480 000e 5A68     		ldr	r2, [r3, #4]
 481              	.LVL29:
 982:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_CHAN_EN_REG = enableMask;
 482              		.loc 1 982 0
 483 0010 0123     		movs	r3, #1
 484 0012 9340     		lsls	r3, r3, r2
 485 0014 013B     		subs	r3, r3, #1
 486 0016 1840     		ands	r0, r3
 487              	.LVL30:
 983:Generated_Source\PSoC4/ADC_1.c ****     return;
 488              		.loc 1 983 0
 489 0018 034B     		ldr	r3, .L39+8
 490 001a 1860     		str	r0, [r3]
 985:Generated_Source\PSoC4/ADC_1.c **** 
 491              		.loc 1 985 0
 492              		@ sp needed
 493 001c 7047     		bx	lr
 494              	.L40:
 495 001e C046     		.align	2
 496              	.L39:
 497 0020 00000000 		.word	.LANCHOR0
 498 0024 00000000 		.word	ADC_1_allConfigs
 499 0028 20003A40 		.word	1077542944
 500              		.cfi_endproc
 501              	.LFE11:
 502              		.size	ADC_1_SetChanMask, .-ADC_1_SetChanMask
 503              		.section	.text.ADC_1_IsEndConversion,"ax",%progbits
 504              		.align	2
 505              		.global	ADC_1_IsEndConversion
 506              		.code	16
 507              		.thumb_func
 508              		.type	ADC_1_IsEndConversion, %function
 509              	ADC_1_IsEndConversion:
 510              	.LFB12:
1008:Generated_Source\PSoC4/ADC_1.c ****     uint32 endOfConversion = 0u;
 511              		.loc 1 1008 0
 512              		.cfi_startproc
 513              		@ args = 0, pretend = 0, frame = 0
 514              		@ frame_needed = 0, uses_anonymous_args = 0
 515              		@ link register save eliminated.
 516              	.LVL31:
 517 0000 0100     		movs	r1, r0
 518              	.LVL32:
1011:Generated_Source\PSoC4/ADC_1.c ****     {
 519              		.loc 1 1011 0
 520 0002 431E     		subs	r3, r0, #1
 521 0004 012B     		cmp	r3, #1
 522 0006 11D8     		bhi	.L45
 523 0008 094A     		ldr	r2, .L46
 524              	.LVL33:
 525              	.L44:
1015:Generated_Source\PSoC4/ADC_1.c ****             wdt--;
 526              		.loc 1 1015 0 discriminator 1
 527 000a 0A4B     		ldr	r3, .L46+4
 528 000c 1B68     		ldr	r3, [r3]
 529 000e 0120     		movs	r0, #1
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 30


 530 0010 1840     		ands	r0, r3
 531              	.LVL34:
1016:Generated_Source\PSoC4/ADC_1.c ****         }while(((0u == endOfConversion)
 532              		.loc 1 1016 0 discriminator 1
 533 0012 013A     		subs	r2, r2, #1
 534              	.LVL35:
1019:Generated_Source\PSoC4/ADC_1.c **** 
 535              		.loc 1 1019 0 discriminator 1
 536 0014 0028     		cmp	r0, #0
 537 0016 03D1     		bne	.L43
1018:Generated_Source\PSoC4/ADC_1.c ****             && (0uL != wdt));
 538              		.loc 1 1018 0
 539 0018 8B07     		lsls	r3, r1, #30
 540 001a 01D5     		bpl	.L43
1019:Generated_Source\PSoC4/ADC_1.c **** 
 541              		.loc 1 1019 0
 542 001c 002A     		cmp	r2, #0
 543 001e F4D1     		bne	.L44
 544              	.L43:
1021:Generated_Source\PSoC4/ADC_1.c ****         {
 545              		.loc 1 1021 0
 546 0020 0028     		cmp	r0, #0
 547 0022 04D0     		beq	.L42
1024:Generated_Source\PSoC4/ADC_1.c ****         }
 548              		.loc 1 1024 0
 549 0024 0122     		movs	r2, #1
 550              	.LVL36:
 551 0026 034B     		ldr	r3, .L46+4
 552 0028 1A60     		str	r2, [r3]
 553 002a 00E0     		b	.L42
 554              	.LVL37:
 555              	.L45:
1009:Generated_Source\PSoC4/ADC_1.c ****     uint32 wdt = 0x3FFFFFFuL; /* Watchdog timer for blocking while loop */
 556              		.loc 1 1009 0
 557 002c 0020     		movs	r0, #0
 558              	.LVL38:
 559              	.L42:
1029:Generated_Source\PSoC4/ADC_1.c **** 
 560              		.loc 1 1029 0
 561              		@ sp needed
 562 002e 7047     		bx	lr
 563              	.L47:
 564              		.align	2
 565              	.L46:
 566 0030 FFFFFF03 		.word	67108863
 567 0034 10023A40 		.word	1077543440
 568              		.cfi_endproc
 569              	.LFE12:
 570              		.size	ADC_1_IsEndConversion, .-ADC_1_IsEndConversion
 571              		.section	.text.ADC_1_GetResult16,"ax",%progbits
 572              		.align	2
 573              		.global	ADC_1_GetResult16
 574              		.code	16
 575              		.thumb_func
 576              		.type	ADC_1_GetResult16, %function
 577              	ADC_1_GetResult16:
 578              	.LFB14:
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 31


1071:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1072:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_GetResult16
1073:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1074:Generated_Source\PSoC4/ADC_1.c **** *
1075:Generated_Source\PSoC4/ADC_1.c **** * \brief Gets the data available in the channel result data register
1076:Generated_Source\PSoC4/ADC_1.c **** *
1077:Generated_Source\PSoC4/ADC_1.c **** * \param chan The ADC_1 channel to read the result from. The first
1078:Generated_Source\PSoC4/ADC_1.c **** * channel is 0 and the injection channel if enabled is the number of valid
1079:Generated_Source\PSoC4/ADC_1.c **** * channels.
1080:Generated_Source\PSoC4/ADC_1.c **** *
1081:Generated_Source\PSoC4/ADC_1.c **** * \return Returns converted data as a signed 16-bit integer.
1082:Generated_Source\PSoC4/ADC_1.c **** *
1083:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1084:Generated_Source\PSoC4/ADC_1.c **** *
1085:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1086:Generated_Source\PSoC4/ADC_1.c **** int16 ADC_1_GetResult16(uint32 chan)
1087:Generated_Source\PSoC4/ADC_1.c **** {
 579              		.loc 1 1087 0
 580              		.cfi_startproc
 581              		@ args = 0, pretend = 0, frame = 0
 582              		@ frame_needed = 0, uses_anonymous_args = 0
 583              	.LVL39:
 584 0000 10B5     		push	{r4, lr}
 585              		.cfi_def_cfa_offset 8
 586              		.cfi_offset 4, -8
 587              		.cfi_offset 14, -4
 588 0002 0400     		movs	r4, r0
1088:Generated_Source\PSoC4/ADC_1.c ****     uint32 adcResult;
1089:Generated_Source\PSoC4/ADC_1.c **** 
1090:Generated_Source\PSoC4/ADC_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1091:Generated_Source\PSoC4/ADC_1.c ****     CYASSERT(chan < ADC_1_allConfigs[ADC_1_currentConfig].numChannels);
 589              		.loc 1 1091 0
 590 0004 104B     		ldr	r3, .L52
 591 0006 1A68     		ldr	r2, [r3]
 592 0008 D300     		lsls	r3, r2, #3
 593 000a 9A1A     		subs	r2, r3, r2
 594 000c D300     		lsls	r3, r2, #3
 595 000e 0F4A     		ldr	r2, .L52+4
 596 0010 D318     		adds	r3, r2, r3
 597 0012 5B68     		ldr	r3, [r3, #4]
 598 0014 8342     		cmp	r3, r0
 599 0016 02D8     		bhi	.L49
 600              		.loc 1 1091 0 is_stmt 0 discriminator 1
 601 0018 0020     		movs	r0, #0
 602              	.LVL40:
 603 001a FFF7FEFF 		bl	CyHalt
 604              	.LVL41:
 605              	.L49:
1092:Generated_Source\PSoC4/ADC_1.c **** 
1093:Generated_Source\PSoC4/ADC_1.c ****     if(ADC_1_allConfigs[ADC_1_currentConfig].numChannels > chan)
 606              		.loc 1 1093 0 is_stmt 1
 607 001e 0A4B     		ldr	r3, .L52
 608 0020 1A68     		ldr	r2, [r3]
 609 0022 D300     		lsls	r3, r2, #3
 610 0024 9A1A     		subs	r2, r3, r2
 611 0026 D300     		lsls	r3, r2, #3
 612 0028 084A     		ldr	r2, .L52+4
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 32


 613 002a D318     		adds	r3, r2, r3
 614 002c 5B68     		ldr	r3, [r3, #4]
 615 002e 9C42     		cmp	r4, r3
 616 0030 07D2     		bcs	.L51
1094:Generated_Source\PSoC4/ADC_1.c ****     {
1095:Generated_Source\PSoC4/ADC_1.c ****         adcResult = CY_GET_REG32((reg32 *)(ADC_1_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 617              		.loc 1 1095 0
 618 0032 A400     		lsls	r4, r4, #2
 619              	.LVL42:
 620 0034 064B     		ldr	r3, .L52+8
 621 0036 9C46     		mov	ip, r3
 622 0038 6444     		add	r4, r4, ip
 623 003a 2068     		ldr	r0, [r4]
 624 003c 0004     		lsls	r0, r0, #16
 625 003e 000C     		lsrs	r0, r0, #16
 626              	.LVL43:
 627 0040 00E0     		b	.L50
 628              	.LVL44:
 629              	.L51:
1096:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_RESULT_MASK;
1097:Generated_Source\PSoC4/ADC_1.c ****     }
1098:Generated_Source\PSoC4/ADC_1.c ****     else
1099:Generated_Source\PSoC4/ADC_1.c ****     {
1100:Generated_Source\PSoC4/ADC_1.c ****         adcResult = 0u;
 630              		.loc 1 1100 0
 631 0042 0020     		movs	r0, #0
 632              	.LVL45:
 633              	.L50:
1101:Generated_Source\PSoC4/ADC_1.c ****     }
1102:Generated_Source\PSoC4/ADC_1.c **** 
1103:Generated_Source\PSoC4/ADC_1.c ****     return (int16) adcResult;
 634              		.loc 1 1103 0
 635 0044 00B2     		sxth	r0, r0
 636              	.LVL46:
1104:Generated_Source\PSoC4/ADC_1.c **** }
 637              		.loc 1 1104 0
 638              		@ sp needed
 639 0046 10BD     		pop	{r4, pc}
 640              	.L53:
 641              		.align	2
 642              	.L52:
 643 0048 00000000 		.word	.LANCHOR0
 644 004c 00000000 		.word	ADC_1_allConfigs
 645 0050 80013A40 		.word	1077543296
 646              		.cfi_endproc
 647              	.LFE14:
 648              		.size	ADC_1_GetResult16, .-ADC_1_GetResult16
 649              		.section	.text.ADC_1_GetResult32,"ax",%progbits
 650              		.align	2
 651              		.global	ADC_1_GetResult32
 652              		.code	16
 653              		.thumb_func
 654              		.type	ADC_1_GetResult32, %function
 655              	ADC_1_GetResult32:
 656              	.LFB15:
1105:Generated_Source\PSoC4/ADC_1.c **** 
1106:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 33


1107:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_GetResult32
1108:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1109:Generated_Source\PSoC4/ADC_1.c **** *
1110:Generated_Source\PSoC4/ADC_1.c **** * \brief Gets the data available in the channel result data register.
1111:Generated_Source\PSoC4/ADC_1.c **** *
1112:Generated_Source\PSoC4/ADC_1.c **** * \param chan The ADC_1 channel to read the result from. The first
1113:Generated_Source\PSoC4/ADC_1.c **** * channel is 0 and the injection channel if enabled is the number of valid
1114:Generated_Source\PSoC4/ADC_1.c **** * channels.
1115:Generated_Source\PSoC4/ADC_1.c **** *
1116:Generated_Source\PSoC4/ADC_1.c **** * \return Returns converted data as a signed 32-bit integer.
1117:Generated_Source\PSoC4/ADC_1.c **** *
1118:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1119:Generated_Source\PSoC4/ADC_1.c **** *
1120:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1121:Generated_Source\PSoC4/ADC_1.c **** int32 ADC_1_GetResult32(uint32 chan)
1122:Generated_Source\PSoC4/ADC_1.c **** {
 657              		.loc 1 1122 0
 658              		.cfi_startproc
 659              		@ args = 0, pretend = 0, frame = 0
 660              		@ frame_needed = 0, uses_anonymous_args = 0
 661              	.LVL47:
 662 0000 70B5     		push	{r4, r5, r6, lr}
 663              		.cfi_def_cfa_offset 16
 664              		.cfi_offset 4, -16
 665              		.cfi_offset 5, -12
 666              		.cfi_offset 6, -8
 667              		.cfi_offset 14, -4
 668 0002 0500     		movs	r5, r0
1123:Generated_Source\PSoC4/ADC_1.c ****     uint32 adcResult;
1124:Generated_Source\PSoC4/ADC_1.c ****     int16 adcResult16;
1125:Generated_Source\PSoC4/ADC_1.c ****     int32 finalResult;
1126:Generated_Source\PSoC4/ADC_1.c **** 
1127:Generated_Source\PSoC4/ADC_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1128:Generated_Source\PSoC4/ADC_1.c ****     CYASSERT(chan < ADC_1_allConfigs[ADC_1_currentConfig].numChannels);
 669              		.loc 1 1128 0
 670 0004 144B     		ldr	r3, .L60
 671 0006 1A68     		ldr	r2, [r3]
 672 0008 D300     		lsls	r3, r2, #3
 673 000a 9A1A     		subs	r2, r3, r2
 674 000c D300     		lsls	r3, r2, #3
 675 000e 134A     		ldr	r2, .L60+4
 676 0010 D318     		adds	r3, r2, r3
 677 0012 5B68     		ldr	r3, [r3, #4]
 678 0014 8342     		cmp	r3, r0
 679 0016 02D8     		bhi	.L55
 680              		.loc 1 1128 0 is_stmt 0 discriminator 1
 681 0018 0020     		movs	r0, #0
 682              	.LVL48:
 683 001a FFF7FEFF 		bl	CyHalt
 684              	.LVL49:
 685              	.L55:
1129:Generated_Source\PSoC4/ADC_1.c **** 
1130:Generated_Source\PSoC4/ADC_1.c ****     if(ADC_1_allConfigs[ADC_1_currentConfig].numChannels > chan)
 686              		.loc 1 1130 0 is_stmt 1
 687 001e 0E4B     		ldr	r3, .L60
 688 0020 1A68     		ldr	r2, [r3]
 689 0022 D300     		lsls	r3, r2, #3
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 34


 690 0024 9A1A     		subs	r2, r3, r2
 691 0026 D300     		lsls	r3, r2, #3
 692 0028 0C4A     		ldr	r2, .L60+4
 693 002a D318     		adds	r3, r2, r3
 694 002c 5B68     		ldr	r3, [r3, #4]
 695 002e 9D42     		cmp	r5, r3
 696 0030 07D2     		bcs	.L59
1131:Generated_Source\PSoC4/ADC_1.c ****     {
1132:Generated_Source\PSoC4/ADC_1.c ****         adcResult = CY_GET_REG32((reg32 *)(ADC_1_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 697              		.loc 1 1132 0
 698 0032 AB00     		lsls	r3, r5, #2
 699 0034 0A4A     		ldr	r2, .L60+8
 700 0036 9446     		mov	ip, r2
 701 0038 6344     		add	r3, r3, ip
 702 003a 1C68     		ldr	r4, [r3]
 703 003c 2404     		lsls	r4, r4, #16
 704 003e 240C     		lsrs	r4, r4, #16
 705              	.LVL50:
 706 0040 00E0     		b	.L56
 707              	.LVL51:
 708              	.L59:
1133:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_RESULT_MASK;
1134:Generated_Source\PSoC4/ADC_1.c ****     }
1135:Generated_Source\PSoC4/ADC_1.c ****     else
1136:Generated_Source\PSoC4/ADC_1.c ****     {
1137:Generated_Source\PSoC4/ADC_1.c ****         adcResult = 0u;
 709              		.loc 1 1137 0
 710 0042 0024     		movs	r4, #0
 711              	.L56:
 712              	.LVL52:
1138:Generated_Source\PSoC4/ADC_1.c ****     }
1139:Generated_Source\PSoC4/ADC_1.c ****     /* Sign extend if channel is signed format */
1140:Generated_Source\PSoC4/ADC_1.c ****     if(ADC_1_IsChannelSigned(chan) == 1)
 713              		.loc 1 1140 0
 714 0044 2800     		movs	r0, r5
 715 0046 FFF7FEFF 		bl	ADC_1_IsChannelSigned
 716              	.LVL53:
 717 004a 0128     		cmp	r0, #1
 718 004c 01D1     		bne	.L57
 719              	.LVL54:
1141:Generated_Source\PSoC4/ADC_1.c ****     {
1142:Generated_Source\PSoC4/ADC_1.c ****         adcResult16 = (int16) adcResult;
1143:Generated_Source\PSoC4/ADC_1.c ****         finalResult = (int32) adcResult16;
 720              		.loc 1 1143 0
 721 004e 20B2     		sxth	r0, r4
 722              	.LVL55:
 723 0050 00E0     		b	.L58
 724              	.LVL56:
 725              	.L57:
1144:Generated_Source\PSoC4/ADC_1.c ****     }
1145:Generated_Source\PSoC4/ADC_1.c ****     else
1146:Generated_Source\PSoC4/ADC_1.c ****     {
1147:Generated_Source\PSoC4/ADC_1.c ****         finalResult = (int32) adcResult;
 726              		.loc 1 1147 0
 727 0052 2000     		movs	r0, r4
 728              	.LVL57:
 729              	.L58:
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 35


1148:Generated_Source\PSoC4/ADC_1.c ****     }
1149:Generated_Source\PSoC4/ADC_1.c ****     return finalResult;
1150:Generated_Source\PSoC4/ADC_1.c **** }
 730              		.loc 1 1150 0
 731              		@ sp needed
 732              	.LVL58:
 733              	.LVL59:
 734 0054 70BD     		pop	{r4, r5, r6, pc}
 735              	.L61:
 736 0056 C046     		.align	2
 737              	.L60:
 738 0058 00000000 		.word	.LANCHOR0
 739 005c 00000000 		.word	ADC_1_allConfigs
 740 0060 80013A40 		.word	1077543296
 741              		.cfi_endproc
 742              	.LFE15:
 743              		.size	ADC_1_GetResult32, .-ADC_1_GetResult32
 744              		.section	.text.ADC_1_SetLowLimit,"ax",%progbits
 745              		.align	2
 746              		.global	ADC_1_SetLowLimit
 747              		.code	16
 748              		.thumb_func
 749              		.type	ADC_1_SetLowLimit, %function
 750              	ADC_1_SetLowLimit:
 751              	.LFB16:
1151:Generated_Source\PSoC4/ADC_1.c **** 
1152:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1153:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetLowLimit
1154:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1155:Generated_Source\PSoC4/ADC_1.c **** *
1156:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets the low limit parameter for a limit condition.
1157:Generated_Source\PSoC4/ADC_1.c **** *
1158:Generated_Source\PSoC4/ADC_1.c **** * \param lowLimit The low limit for a limit condition.
1159:Generated_Source\PSoC4/ADC_1.c **** *
1160:Generated_Source\PSoC4/ADC_1.c **** * \return None
1161:Generated_Source\PSoC4/ADC_1.c **** *
1162:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1163:Generated_Source\PSoC4/ADC_1.c **** *
1164:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1165:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetLowLimit(uint32 lowLimit)
1166:Generated_Source\PSoC4/ADC_1.c **** {
 752              		.loc 1 1166 0
 753              		.cfi_startproc
 754              		@ args = 0, pretend = 0, frame = 0
 755              		@ frame_needed = 0, uses_anonymous_args = 0
 756              		@ link register save eliminated.
 757              	.LVL60:
1167:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_THRES_REG &= ~(uint32)(ADC_1_SAR_RANGE_THRES_RANGE_LOW_MSK);
 758              		.loc 1 1167 0
 759 0000 054A     		ldr	r2, .L63
 760 0002 1368     		ldr	r3, [r2]
 761 0004 1B0C     		lsrs	r3, r3, #16
 762 0006 1B04     		lsls	r3, r3, #16
 763 0008 1360     		str	r3, [r2]
1168:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_THRES_REG |= lowLimit & ADC_1_SAR_RANGE_THRES_RANGE_LOW_MSK;
 764              		.loc 1 1168 0
 765 000a 1368     		ldr	r3, [r2]
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 36


 766 000c 0004     		lsls	r0, r0, #16
 767              	.LVL61:
 768 000e 000C     		lsrs	r0, r0, #16
 769 0010 1843     		orrs	r0, r3
 770 0012 1060     		str	r0, [r2]
1169:Generated_Source\PSoC4/ADC_1.c ****     return;
1170:Generated_Source\PSoC4/ADC_1.c **** }
 771              		.loc 1 1170 0
 772              		@ sp needed
 773 0014 7047     		bx	lr
 774              	.L64:
 775 0016 C046     		.align	2
 776              	.L63:
 777 0018 18003A40 		.word	1077542936
 778              		.cfi_endproc
 779              	.LFE16:
 780              		.size	ADC_1_SetLowLimit, .-ADC_1_SetLowLimit
 781              		.section	.text.ADC_1_SetHighLimit,"ax",%progbits
 782              		.align	2
 783              		.global	ADC_1_SetHighLimit
 784              		.code	16
 785              		.thumb_func
 786              		.type	ADC_1_SetHighLimit, %function
 787              	ADC_1_SetHighLimit:
 788              	.LFB17:
1171:Generated_Source\PSoC4/ADC_1.c **** 
1172:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1173:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetHighLimit
1174:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1175:Generated_Source\PSoC4/ADC_1.c **** *
1176:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets the high limit parameter for a limit condition.
1177:Generated_Source\PSoC4/ADC_1.c **** *
1178:Generated_Source\PSoC4/ADC_1.c **** * \param highLimit The high limit for a limit condition.
1179:Generated_Source\PSoC4/ADC_1.c **** *
1180:Generated_Source\PSoC4/ADC_1.c **** * \return None
1181:Generated_Source\PSoC4/ADC_1.c **** *
1182:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1183:Generated_Source\PSoC4/ADC_1.c **** *
1184:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1185:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetHighLimit(uint32 highLimit)
1186:Generated_Source\PSoC4/ADC_1.c **** {
 789              		.loc 1 1186 0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 0
 792              		@ frame_needed = 0, uses_anonymous_args = 0
 793              		@ link register save eliminated.
 794              	.LVL62:
1187:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_THRES_REG &= ~(uint32)(ADC_1_SAR_RANGE_THRES_RANGE_HIGH_MSK);
 795              		.loc 1 1187 0
 796 0000 044A     		ldr	r2, .L66
 797 0002 1368     		ldr	r3, [r2]
 798 0004 1B04     		lsls	r3, r3, #16
 799 0006 1B0C     		lsrs	r3, r3, #16
 800 0008 1360     		str	r3, [r2]
1188:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_1_SAR_RANGE_THRES_RANGE_HIGH_SHFT);
 801              		.loc 1 1188 0
 802 000a 1368     		ldr	r3, [r2]
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 37


 803 000c 0004     		lsls	r0, r0, #16
 804              	.LVL63:
 805 000e 1843     		orrs	r0, r3
 806 0010 1060     		str	r0, [r2]
1189:Generated_Source\PSoC4/ADC_1.c ****     return;
1190:Generated_Source\PSoC4/ADC_1.c **** }
 807              		.loc 1 1190 0
 808              		@ sp needed
 809 0012 7047     		bx	lr
 810              	.L67:
 811              		.align	2
 812              	.L66:
 813 0014 18003A40 		.word	1077542936
 814              		.cfi_endproc
 815              	.LFE17:
 816              		.size	ADC_1_SetHighLimit, .-ADC_1_SetHighLimit
 817              		.section	.text.ADC_1_SetLimitMask,"ax",%progbits
 818              		.align	2
 819              		.global	ADC_1_SetLimitMask
 820              		.code	16
 821              		.thumb_func
 822              		.type	ADC_1_SetLimitMask, %function
 823              	ADC_1_SetLimitMask:
 824              	.LFB18:
1191:Generated_Source\PSoC4/ADC_1.c **** 
1192:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1193:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetLimitMask
1194:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1195:Generated_Source\PSoC4/ADC_1.c **** *
1196:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets the channel limit condition mask.
1197:Generated_Source\PSoC4/ADC_1.c **** *
1198:Generated_Source\PSoC4/ADC_1.c **** * \param limitMask Sets which channels that may cause a limit condition interrupt.
1199:Generated_Source\PSoC4/ADC_1.c **** * Setting bits for channels that do not exist will have no effect. For example,
1200:Generated_Source\PSoC4/ADC_1.c **** * if only 6  channels were enabled, setting a mask of 0x0103 would only enable
1201:Generated_Source\PSoC4/ADC_1.c **** * the last two channels (0 and 1).
1202:Generated_Source\PSoC4/ADC_1.c **** *
1203:Generated_Source\PSoC4/ADC_1.c **** * \return None
1204:Generated_Source\PSoC4/ADC_1.c **** *
1205:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1206:Generated_Source\PSoC4/ADC_1.c **** *
1207:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1208:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetLimitMask(uint32 limitMask)
1209:Generated_Source\PSoC4/ADC_1.c **** {
 825              		.loc 1 1209 0
 826              		.cfi_startproc
 827              		@ args = 0, pretend = 0, frame = 0
 828              		@ frame_needed = 0, uses_anonymous_args = 0
 829              		@ link register save eliminated.
 830              	.LVL64:
1210:Generated_Source\PSoC4/ADC_1.c ****     uint32 chanCount = ADC_1_allConfigs[ADC_1_currentConfig].numChannels;
 831              		.loc 1 1210 0
 832 0000 074B     		ldr	r3, .L69
 833 0002 1A68     		ldr	r2, [r3]
 834 0004 D300     		lsls	r3, r2, #3
 835 0006 9A1A     		subs	r2, r3, r2
 836 0008 D300     		lsls	r3, r2, #3
 837 000a 064A     		ldr	r2, .L69+4
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 38


 838 000c D318     		adds	r3, r2, r3
 839 000e 5A68     		ldr	r2, [r3, #4]
 840              	.LVL65:
1211:Generated_Source\PSoC4/ADC_1.c ****     limitMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 841              		.loc 1 1211 0
 842 0010 0123     		movs	r3, #1
 843 0012 9340     		lsls	r3, r3, r2
 844 0014 013B     		subs	r3, r3, #1
 845 0016 1840     		ands	r0, r3
 846              	.LVL66:
1212:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_INTR_MASK_REG = limitMask;
 847              		.loc 1 1212 0
 848 0018 034B     		ldr	r3, .L69+8
 849 001a 1860     		str	r0, [r3]
1213:Generated_Source\PSoC4/ADC_1.c ****     return;
1214:Generated_Source\PSoC4/ADC_1.c **** }
 850              		.loc 1 1214 0
 851              		@ sp needed
 852 001c 7047     		bx	lr
 853              	.L70:
 854 001e C046     		.align	2
 855              	.L69:
 856 0020 00000000 		.word	.LANCHOR0
 857 0024 00000000 		.word	ADC_1_allConfigs
 858 0028 38023A40 		.word	1077543480
 859              		.cfi_endproc
 860              	.LFE18:
 861              		.size	ADC_1_SetLimitMask, .-ADC_1_SetLimitMask
 862              		.section	.text.ADC_1_SetSatMask,"ax",%progbits
 863              		.align	2
 864              		.global	ADC_1_SetSatMask
 865              		.code	16
 866              		.thumb_func
 867              		.type	ADC_1_SetSatMask, %function
 868              	ADC_1_SetSatMask:
 869              	.LFB19:
1215:Generated_Source\PSoC4/ADC_1.c **** 
1216:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1217:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetSatMask
1218:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1219:Generated_Source\PSoC4/ADC_1.c **** *
1220:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets the channel saturation event mask.
1221:Generated_Source\PSoC4/ADC_1.c **** *
1222:Generated_Source\PSoC4/ADC_1.c **** * \param satMask Sets which channels that may cause a saturation event interrupt.
1223:Generated_Source\PSoC4/ADC_1.c **** * Setting bits for channels that do not exist will have no effect. For example,
1224:Generated_Source\PSoC4/ADC_1.c **** * if only 8 channels were enabled, setting a mask of 0x01C0 would only enable two
1225:Generated_Source\PSoC4/ADC_1.c **** * channels (6 and 7).
1226:Generated_Source\PSoC4/ADC_1.c **** *
1227:Generated_Source\PSoC4/ADC_1.c **** * \return None
1228:Generated_Source\PSoC4/ADC_1.c **** *
1229:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1230:Generated_Source\PSoC4/ADC_1.c **** *
1231:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1232:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetSatMask(uint32 satMask)
1233:Generated_Source\PSoC4/ADC_1.c **** {
 870              		.loc 1 1233 0
 871              		.cfi_startproc
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 39


 872              		@ args = 0, pretend = 0, frame = 0
 873              		@ frame_needed = 0, uses_anonymous_args = 0
 874              		@ link register save eliminated.
 875              	.LVL67:
1234:Generated_Source\PSoC4/ADC_1.c ****     uint32 chanCount = ADC_1_allConfigs[ADC_1_currentConfig].numChannels;
 876              		.loc 1 1234 0
 877 0000 074B     		ldr	r3, .L72
 878 0002 1A68     		ldr	r2, [r3]
 879 0004 D300     		lsls	r3, r2, #3
 880 0006 9A1A     		subs	r2, r3, r2
 881 0008 D300     		lsls	r3, r2, #3
 882 000a 064A     		ldr	r2, .L72+4
 883 000c D318     		adds	r3, r2, r3
 884 000e 5A68     		ldr	r2, [r3, #4]
 885              	.LVL68:
1235:Generated_Source\PSoC4/ADC_1.c ****     satMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 886              		.loc 1 1235 0
 887 0010 0123     		movs	r3, #1
 888 0012 9340     		lsls	r3, r3, r2
 889 0014 013B     		subs	r3, r3, #1
 890 0016 1840     		ands	r0, r3
 891              	.LVL69:
1236:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SATURATE_INTR_MASK_REG = satMask;
 892              		.loc 1 1236 0
 893 0018 034B     		ldr	r3, .L72+8
 894 001a 1860     		str	r0, [r3]
1237:Generated_Source\PSoC4/ADC_1.c ****     return;
1238:Generated_Source\PSoC4/ADC_1.c **** }
 895              		.loc 1 1238 0
 896              		@ sp needed
 897 001c 7047     		bx	lr
 898              	.L73:
 899 001e C046     		.align	2
 900              	.L72:
 901 0020 00000000 		.word	.LANCHOR0
 902 0024 00000000 		.word	ADC_1_allConfigs
 903 0028 28023A40 		.word	1077543464
 904              		.cfi_endproc
 905              	.LFE19:
 906              		.size	ADC_1_SetSatMask, .-ADC_1_SetSatMask
 907              		.section	.text.ADC_1_SetOffset,"ax",%progbits
 908              		.align	2
 909              		.global	ADC_1_SetOffset
 910              		.code	16
 911              		.thumb_func
 912              		.type	ADC_1_SetOffset, %function
 913              	ADC_1_SetOffset:
 914              	.LFB20:
1239:Generated_Source\PSoC4/ADC_1.c **** 
1240:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1241:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetOffset
1242:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1243:Generated_Source\PSoC4/ADC_1.c **** *
1244:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets the ADC offset that is used by the functions ADC_1_CountsTo_uVolts,
1245:Generated_Source\PSoC4/ADC_1.c **** * ADC_1_CountsTo_mVolts, and ADC_1_CountsTo_Volts.
1246:Generated_Source\PSoC4/ADC_1.c **** *
1247:Generated_Source\PSoC4/ADC_1.c **** * Offset is applied to counts before unit scaling and gain.  All CountsTo_[mV, uV, V]olts()
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 40


1248:Generated_Source\PSoC4/ADC_1.c **** * functions use the following equation:
1249:Generated_Source\PSoC4/ADC_1.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1250:Generated_Source\PSoC4/ADC_1.c **** * See CountsTo_Volts() for more about this formula.
1251:Generated_Source\PSoC4/ADC_1.c **** *
1252:Generated_Source\PSoC4/ADC_1.c **** * To set channel 0's offset based on known V_offset_mV, use:
1253:Generated_Source\PSoC4/ADC_1.c **** *     ADC_1_SetOffset(0uL, -1 * V_offset_mV * (1uL << (Resolution - 1)) / V_ref_mV);
1254:Generated_Source\PSoC4/ADC_1.c **** *
1255:Generated_Source\PSoC4/ADC_1.c **** * \param chan ADC_1 channel number.
1256:Generated_Source\PSoC4/ADC_1.c **** *
1257:Generated_Source\PSoC4/ADC_1.c **** * \param offset This value is a measured value when the inputs are shorted or
1258:Generated_Source\PSoC4/ADC_1.c **** * connected to the same input voltage.
1259:Generated_Source\PSoC4/ADC_1.c **** *
1260:Generated_Source\PSoC4/ADC_1.c **** * \return None
1261:Generated_Source\PSoC4/ADC_1.c **** *
1262:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1263:Generated_Source\PSoC4/ADC_1.c **** *
1264:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1265:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetOffset(uint32 chan, int16 offset)
1266:Generated_Source\PSoC4/ADC_1.c **** {
 915              		.loc 1 1266 0
 916              		.cfi_startproc
 917              		@ args = 0, pretend = 0, frame = 0
 918              		@ frame_needed = 0, uses_anonymous_args = 0
 919              	.LVL70:
 920 0000 70B5     		push	{r4, r5, r6, lr}
 921              		.cfi_def_cfa_offset 16
 922              		.cfi_offset 4, -16
 923              		.cfi_offset 5, -12
 924              		.cfi_offset 6, -8
 925              		.cfi_offset 14, -4
 926 0002 0500     		movs	r5, r0
 927 0004 0C00     		movs	r4, r1
1267:Generated_Source\PSoC4/ADC_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1268:Generated_Source\PSoC4/ADC_1.c ****     CYASSERT(chan < ADC_1_allConfigs[ADC_1_currentConfig].numChannels);
 928              		.loc 1 1268 0
 929 0006 0C4B     		ldr	r3, .L76
 930 0008 1A68     		ldr	r2, [r3]
 931 000a D300     		lsls	r3, r2, #3
 932 000c 9A1A     		subs	r2, r3, r2
 933 000e D300     		lsls	r3, r2, #3
 934 0010 0A4A     		ldr	r2, .L76+4
 935 0012 D318     		adds	r3, r2, r3
 936 0014 5B68     		ldr	r3, [r3, #4]
 937 0016 8342     		cmp	r3, r0
 938 0018 02D8     		bhi	.L75
 939              		.loc 1 1268 0 is_stmt 0 discriminator 1
 940 001a 0020     		movs	r0, #0
 941              	.LVL71:
 942 001c FFF7FEFF 		bl	CyHalt
 943              	.LVL72:
 944              	.L75:
1269:Generated_Source\PSoC4/ADC_1.c **** 
1270:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_offset[ADC_1_allConfigs[ADC_1_currentConfig].channelBase + chan] = offset;
 945              		.loc 1 1270 0 is_stmt 1
 946 0020 054B     		ldr	r3, .L76
 947 0022 1A68     		ldr	r2, [r3]
 948 0024 D300     		lsls	r3, r2, #3
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 41


 949 0026 9B1A     		subs	r3, r3, r2
 950 0028 DA00     		lsls	r2, r3, #3
 951 002a 044B     		ldr	r3, .L76+4
 952 002c D058     		ldr	r0, [r2, r3]
 953 002e 2818     		adds	r0, r5, r0
 954 0030 4000     		lsls	r0, r0, #1
 955 0032 034B     		ldr	r3, .L76+8
 956 0034 C452     		strh	r4, [r0, r3]
1271:Generated_Source\PSoC4/ADC_1.c ****     return;
1272:Generated_Source\PSoC4/ADC_1.c **** }
 957              		.loc 1 1272 0
 958              		@ sp needed
 959              	.LVL73:
 960 0036 70BD     		pop	{r4, r5, r6, pc}
 961              	.L77:
 962              		.align	2
 963              	.L76:
 964 0038 00000000 		.word	.LANCHOR0
 965 003c 00000000 		.word	ADC_1_allConfigs
 966 0040 00000000 		.word	ADC_1_offset
 967              		.cfi_endproc
 968              	.LFE20:
 969              		.size	ADC_1_SetOffset, .-ADC_1_SetOffset
 970              		.section	.text.ADC_1_SetGain,"ax",%progbits
 971              		.align	2
 972              		.global	ADC_1_SetGain
 973              		.code	16
 974              		.thumb_func
 975              		.type	ADC_1_SetGain, %function
 976              	ADC_1_SetGain:
 977              	.LFB21:
1273:Generated_Source\PSoC4/ADC_1.c **** 
1274:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1275:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetGain
1276:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1277:Generated_Source\PSoC4/ADC_1.c **** *
1278:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets the ADC_1 gain in counts per 10 volt for the voltage
1279:Generated_Source\PSoC4/ADC_1.c **** * conversion functions. This value is set by default by the reference and
1280:Generated_Source\PSoC4/ADC_1.c **** * input range settings. Gain is applied after offset and unit scaling.  All
1281:Generated_Source\PSoC4/ADC_1.c **** * CountsTo_[mV, uV, V]olts() functions use the following equation:
1282:Generated_Source\PSoC4/ADC_1.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1283:Generated_Source\PSoC4/ADC_1.c **** * See CountsTo_Volts() for more about this formula.
1284:Generated_Source\PSoC4/ADC_1.c **** *
1285:Generated_Source\PSoC4/ADC_1.c **** * To set channel 0's gain based on known V_ref_mV, use:
1286:Generated_Source\PSoC4/ADC_1.c **** *     ADC_1_SetGain(0uL, 10000 * (1uL << (Resolution - 1)) / V_ref_mV);
1287:Generated_Source\PSoC4/ADC_1.c **** *
1288:Generated_Source\PSoC4/ADC_1.c **** * \param chan ADC_1 channel number.
1289:Generated_Source\PSoC4/ADC_1.c **** *
1290:Generated_Source\PSoC4/ADC_1.c **** * \param adcGain ADC_1 gain in counts per 10 volt.
1291:Generated_Source\PSoC4/ADC_1.c **** *
1292:Generated_Source\PSoC4/ADC_1.c **** * \return None
1293:Generated_Source\PSoC4/ADC_1.c **** *
1294:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1295:Generated_Source\PSoC4/ADC_1.c **** *
1296:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1297:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetGain(uint32 chan, int32 adcGain)
1298:Generated_Source\PSoC4/ADC_1.c **** {
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 42


 978              		.loc 1 1298 0
 979              		.cfi_startproc
 980              		@ args = 0, pretend = 0, frame = 0
 981              		@ frame_needed = 0, uses_anonymous_args = 0
 982              	.LVL74:
 983 0000 70B5     		push	{r4, r5, r6, lr}
 984              		.cfi_def_cfa_offset 16
 985              		.cfi_offset 4, -16
 986              		.cfi_offset 5, -12
 987              		.cfi_offset 6, -8
 988              		.cfi_offset 14, -4
 989 0002 0500     		movs	r5, r0
 990 0004 0C00     		movs	r4, r1
1299:Generated_Source\PSoC4/ADC_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1300:Generated_Source\PSoC4/ADC_1.c ****     CYASSERT(chan < ADC_1_allConfigs[ADC_1_currentConfig].numChannels);
 991              		.loc 1 1300 0
 992 0006 0C4B     		ldr	r3, .L80
 993 0008 1A68     		ldr	r2, [r3]
 994 000a D300     		lsls	r3, r2, #3
 995 000c 9A1A     		subs	r2, r3, r2
 996 000e D300     		lsls	r3, r2, #3
 997 0010 0A4A     		ldr	r2, .L80+4
 998 0012 D318     		adds	r3, r2, r3
 999 0014 5B68     		ldr	r3, [r3, #4]
 1000 0016 8342     		cmp	r3, r0
 1001 0018 02D8     		bhi	.L79
 1002              		.loc 1 1300 0 is_stmt 0 discriminator 1
 1003 001a 0020     		movs	r0, #0
 1004              	.LVL75:
 1005 001c FFF7FEFF 		bl	CyHalt
 1006              	.LVL76:
 1007              	.L79:
1301:Generated_Source\PSoC4/ADC_1.c **** 
1302:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_countsPer10Volt[ADC_1_allConfigs[ADC_1_currentConfig].channelBase + chan]
 1008              		.loc 1 1302 0 is_stmt 1
 1009 0020 054B     		ldr	r3, .L80
 1010 0022 1A68     		ldr	r2, [r3]
 1011 0024 D300     		lsls	r3, r2, #3
 1012 0026 9B1A     		subs	r3, r3, r2
 1013 0028 DA00     		lsls	r2, r3, #3
 1014 002a 044B     		ldr	r3, .L80+4
 1015 002c D058     		ldr	r0, [r2, r3]
 1016 002e 2818     		adds	r0, r5, r0
1303:Generated_Source\PSoC4/ADC_1.c ****     = adcGain;
 1017              		.loc 1 1303 0
 1018 0030 8000     		lsls	r0, r0, #2
 1019 0032 034B     		ldr	r3, .L80+8
 1020 0034 C450     		str	r4, [r0, r3]
1304:Generated_Source\PSoC4/ADC_1.c ****     return;
1305:Generated_Source\PSoC4/ADC_1.c **** }
 1021              		.loc 1 1305 0
 1022              		@ sp needed
 1023              	.LVL77:
 1024              	.LVL78:
 1025 0036 70BD     		pop	{r4, r5, r6, pc}
 1026              	.L81:
 1027              		.align	2
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 43


 1028              	.L80:
 1029 0038 00000000 		.word	.LANCHOR0
 1030 003c 00000000 		.word	ADC_1_allConfigs
 1031 0040 00000000 		.word	ADC_1_countsPer10Volt
 1032              		.cfi_endproc
 1033              	.LFE21:
 1034              		.size	ADC_1_SetGain, .-ADC_1_SetGain
 1035              		.global	__aeabi_uidiv
 1036              		.global	__aeabi_idiv
 1037              		.section	.text.ADC_1_RawCounts2Counts,"ax",%progbits
 1038              		.align	2
 1039              		.global	ADC_1_RawCounts2Counts
 1040              		.code	16
 1041              		.thumb_func
 1042              		.type	ADC_1_RawCounts2Counts, %function
 1043              	ADC_1_RawCounts2Counts:
 1044              	.LFB22:
1306:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1307:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_RawCounts2Counts
1308:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1309:Generated_Source\PSoC4/ADC_1.c **** *
1310:Generated_Source\PSoC4/ADC_1.c **** * \brief Converts the output of the SAR to an idealized count value.
1311:Generated_Source\PSoC4/ADC_1.c **** *
1312:Generated_Source\PSoC4/ADC_1.c **** * Divides by averaging amount, if needed, and subtracts offset.
1313:Generated_Source\PSoC4/ADC_1.c **** *
1314:Generated_Source\PSoC4/ADC_1.c **** * \param chan ADC_1 channel number.
1315:Generated_Source\PSoC4/ADC_1.c **** *
1316:Generated_Source\PSoC4/ADC_1.c **** * \param adcCounts Result from the ADC_1 conversion.
1317:Generated_Source\PSoC4/ADC_1.c **** *
1318:Generated_Source\PSoC4/ADC_1.c **** * \return Averaged and offset counts.
1319:Generated_Source\PSoC4/ADC_1.c **** *
1320:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1321:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1322:Generated_Source\PSoC4/ADC_1.c **** int16 ADC_1_RawCounts2Counts(uint32 chan, int16 adcCounts)
1323:Generated_Source\PSoC4/ADC_1.c **** {
 1045              		.loc 1 1323 0
 1046              		.cfi_startproc
 1047              		@ args = 0, pretend = 0, frame = 0
 1048              		@ frame_needed = 0, uses_anonymous_args = 0
 1049              	.LVL79:
 1050 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1051              		.cfi_def_cfa_offset 24
 1052              		.cfi_offset 3, -24
 1053              		.cfi_offset 4, -20
 1054              		.cfi_offset 5, -16
 1055              		.cfi_offset 6, -12
 1056              		.cfi_offset 7, -8
 1057              		.cfi_offset 14, -4
 1058 0002 0600     		movs	r6, r0
 1059 0004 0C00     		movs	r4, r1
1324:Generated_Source\PSoC4/ADC_1.c ****     uint32 temp;
1325:Generated_Source\PSoC4/ADC_1.c ****     uint32 averageAdcSamplesDiv;
1326:Generated_Source\PSoC4/ADC_1.c ****     uint32 rawChannel;
1327:Generated_Source\PSoC4/ADC_1.c ****     rawChannel = ADC_1_allConfigs[ADC_1_currentConfig].channelBase + chan;
 1060              		.loc 1 1327 0
 1061 0006 204B     		ldr	r3, .L88
 1062 0008 1968     		ldr	r1, [r3]
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 44


 1063              	.LVL80:
 1064 000a 2048     		ldr	r0, .L88+4
 1065              	.LVL81:
 1066 000c CB00     		lsls	r3, r1, #3
 1067 000e 5D1A     		subs	r5, r3, r1
 1068 0010 EA00     		lsls	r2, r5, #3
 1069 0012 1558     		ldr	r5, [r2, r0]
 1070 0014 AD19     		adds	r5, r5, r6
 1071              	.LVL82:
1328:Generated_Source\PSoC4/ADC_1.c **** 
1329:Generated_Source\PSoC4/ADC_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1330:Generated_Source\PSoC4/ADC_1.c ****     CYASSERT(chan < ADC_1_allConfigs[ADC_1_currentConfig].numChannels);
 1072              		.loc 1 1330 0
 1073 0016 8218     		adds	r2, r0, r2
 1074 0018 5368     		ldr	r3, [r2, #4]
 1075 001a 9E42     		cmp	r6, r3
 1076 001c 02D3     		bcc	.L83
 1077              		.loc 1 1330 0 is_stmt 0 discriminator 1
 1078 001e 0020     		movs	r0, #0
 1079 0020 FFF7FEFF 		bl	CyHalt
 1080              	.LVL83:
 1081              	.L83:
1331:Generated_Source\PSoC4/ADC_1.c **** 
1332:Generated_Source\PSoC4/ADC_1.c ****     /* Divide the adcCount when accumulate averaging mode selected */
1333:Generated_Source\PSoC4/ADC_1.c ****     /* If Average mode != fixed */
1334:Generated_Source\PSoC4/ADC_1.c ****     if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
 1082              		.loc 1 1334 0 is_stmt 1
 1083 0024 184B     		ldr	r3, .L88
 1084 0026 1A68     		ldr	r2, [r3]
 1085 0028 D300     		lsls	r3, r2, #3
 1086 002a 9A1A     		subs	r2, r3, r2
 1087 002c D300     		lsls	r3, r2, #3
 1088 002e 174A     		ldr	r2, .L88+4
 1089 0030 D318     		adds	r3, r2, r3
 1090 0032 DB68     		ldr	r3, [r3, #12]
 1091 0034 1A06     		lsls	r2, r3, #24
 1092 0036 1FD4     		bmi	.L84
1335:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_SAR_SAMPLE_CTRL_AVG_SHIFT_MSK)
1336:Generated_Source\PSoC4/ADC_1.c ****         != ADC_1_SAR_SAMPLE_CTRL_AVG_SHIFT_MSK)
1337:Generated_Source\PSoC4/ADC_1.c ****     {
1338:Generated_Source\PSoC4/ADC_1.c ****         /* If Channel uses averaging */
1339:Generated_Source\PSoC4/ADC_1.c ****         if((ADC_1_channelsConfig[rawChannel] & ADC_1_SAR_CHAN_CONFIG_AVG_EN_MSK) != 0u)
 1093              		.loc 1 1339 0
 1094 0038 AA00     		lsls	r2, r5, #2
 1095 003a 1549     		ldr	r1, .L88+8
 1096 003c 5258     		ldr	r2, [r2, r1]
 1097 003e 5205     		lsls	r2, r2, #21
 1098 0040 1AD5     		bpl	.L84
1340:Generated_Source\PSoC4/ADC_1.c ****         {
1341:Generated_Source\PSoC4/ADC_1.c ****             /* Divide by 2^(AVG_CNT + 1) */
1342:Generated_Source\PSoC4/ADC_1.c ****             averageAdcSamplesDiv = ((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
1343:Generated_Source\PSoC4/ADC_1.c ****                 & ADC_1_SAR_SAMPLE_CTRL_AVG_CNT_MSK)
1344:Generated_Source\PSoC4/ADC_1.c ****                 >> ADC_1_SAR_SAMPLE_CTRL_AVG_CNT_SHFT);
 1099              		.loc 1 1344 0
 1100 0042 1A09     		lsrs	r2, r3, #4
1342:Generated_Source\PSoC4/ADC_1.c ****                 & ADC_1_SAR_SAMPLE_CTRL_AVG_CNT_MSK)
 1101              		.loc 1 1342 0
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 45


 1102 0044 0721     		movs	r1, #7
 1103 0046 0A40     		ands	r2, r1
 1104              	.LVL84:
1345:Generated_Source\PSoC4/ADC_1.c ****             averageAdcSamplesDiv = (1uL << (averageAdcSamplesDiv + 1uL));
 1105              		.loc 1 1345 0
 1106 0048 0132     		adds	r2, r2, #1
 1107              	.LVL85:
 1108 004a 0127     		movs	r7, #1
 1109 004c 9740     		lsls	r7, r7, r2
 1110              	.LVL86:
1346:Generated_Source\PSoC4/ADC_1.c ****                         /* When it's "Sequential, Sum", divider limit is 16 */
1347:Generated_Source\PSoC4/ADC_1.c ****             /* If Mode is ACCUNDUMP */
1348:Generated_Source\PSoC4/ADC_1.c ****             if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
 1111              		.loc 1 1348 0
 1112 004e DB05     		lsls	r3, r3, #23
 1113 0050 02D4     		bmi	.L85
1349:Generated_Source\PSoC4/ADC_1.c ****                 & ADC_1_SAR_SAMPLE_CTRL_AVG_MODE_MSK)
1350:Generated_Source\PSoC4/ADC_1.c ****                 != ADC_1_SAR_SAMPLE_CTRL_AVG_MODE_MSK)
1351:Generated_Source\PSoC4/ADC_1.c ****             {
1352:Generated_Source\PSoC4/ADC_1.c ****                 if (averageAdcSamplesDiv > 16uL)
 1114              		.loc 1 1352 0
 1115 0052 102F     		cmp	r7, #16
 1116 0054 00D9     		bls	.L85
1353:Generated_Source\PSoC4/ADC_1.c ****                 {
1354:Generated_Source\PSoC4/ADC_1.c ****                     averageAdcSamplesDiv = 16uL;
 1117              		.loc 1 1354 0
 1118 0056 1027     		movs	r7, #16
 1119              	.LVL87:
 1120              	.L85:
1355:Generated_Source\PSoC4/ADC_1.c ****                 }
1356:Generated_Source\PSoC4/ADC_1.c ****             }
1357:Generated_Source\PSoC4/ADC_1.c ****             /* If unsigned format, prevent sign extension */
1358:Generated_Source\PSoC4/ADC_1.c ****             if(0 == ADC_1_IsChannelSigned(chan))
 1121              		.loc 1 1358 0
 1122 0058 3000     		movs	r0, r6
 1123 005a FFF7FEFF 		bl	ADC_1_IsChannelSigned
 1124              	.LVL88:
 1125 005e 0028     		cmp	r0, #0
 1126 0060 05D1     		bne	.L86
1359:Generated_Source\PSoC4/ADC_1.c ****             {
1360:Generated_Source\PSoC4/ADC_1.c ****                 temp = ((uint16) adcCounts / averageAdcSamplesDiv);
 1127              		.loc 1 1360 0
 1128 0062 A0B2     		uxth	r0, r4
 1129 0064 3900     		movs	r1, r7
 1130 0066 FFF7FEFF 		bl	__aeabi_uidiv
 1131              	.LVL89:
1361:Generated_Source\PSoC4/ADC_1.c ****                 adcCounts = (int16) temp;
 1132              		.loc 1 1361 0
 1133 006a 04B2     		sxth	r4, r0
 1134              	.LVL90:
 1135 006c 04E0     		b	.L84
 1136              	.LVL91:
 1137              	.L86:
1362:Generated_Source\PSoC4/ADC_1.c ****             }
1363:Generated_Source\PSoC4/ADC_1.c ****             else
1364:Generated_Source\PSoC4/ADC_1.c ****             {
1365:Generated_Source\PSoC4/ADC_1.c ****                 adcCounts /= (int16) averageAdcSamplesDiv;
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 46


 1138              		.loc 1 1365 0
 1139 006e 39B2     		sxth	r1, r7
 1140 0070 2000     		movs	r0, r4
 1141 0072 FFF7FEFF 		bl	__aeabi_idiv
 1142              	.LVL92:
 1143 0076 04B2     		sxth	r4, r0
 1144              	.LVL93:
 1145              	.L84:
1366:Generated_Source\PSoC4/ADC_1.c ****             }
1367:Generated_Source\PSoC4/ADC_1.c ****         }
1368:Generated_Source\PSoC4/ADC_1.c ****     }
1369:Generated_Source\PSoC4/ADC_1.c ****     /* Subtract ADC offset */
1370:Generated_Source\PSoC4/ADC_1.c ****     adcCounts -= ADC_1_offset[rawChannel];
 1146              		.loc 1 1370 0
 1147 0078 6D00     		lsls	r5, r5, #1
 1148              	.LVL94:
 1149 007a 064B     		ldr	r3, .L88+12
 1150 007c E85A     		ldrh	r0, [r5, r3]
 1151 007e 00B2     		sxth	r0, r0
 1152 0080 201A     		subs	r0, r4, r0
 1153 0082 00B2     		sxth	r0, r0
 1154              	.LVL95:
1371:Generated_Source\PSoC4/ADC_1.c ****     return adcCounts;
1372:Generated_Source\PSoC4/ADC_1.c **** }
 1155              		.loc 1 1372 0
 1156              		@ sp needed
 1157              	.LVL96:
 1158 0084 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1159              	.L89:
 1160 0086 C046     		.align	2
 1161              	.L88:
 1162 0088 00000000 		.word	.LANCHOR0
 1163 008c 00000000 		.word	ADC_1_allConfigs
 1164 0090 00000000 		.word	.LANCHOR1
 1165 0094 00000000 		.word	ADC_1_offset
 1166              		.cfi_endproc
 1167              	.LFE22:
 1168              		.size	ADC_1_RawCounts2Counts, .-ADC_1_RawCounts2Counts
 1169              		.global	__aeabi_i2f
 1170              		.global	__aeabi_fmul
 1171              		.global	__aeabi_fdiv
 1172              		.section	.text.ADC_1_CountsTo_Volts,"ax",%progbits
 1173              		.align	2
 1174              		.global	ADC_1_CountsTo_Volts
 1175              		.code	16
 1176              		.thumb_func
 1177              		.type	ADC_1_CountsTo_Volts, %function
 1178              	ADC_1_CountsTo_Volts:
 1179              	.LFB23:
1373:Generated_Source\PSoC4/ADC_1.c **** 
1374:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1375:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_CountsTo_Volts
1376:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1377:Generated_Source\PSoC4/ADC_1.c **** *
1378:Generated_Source\PSoC4/ADC_1.c **** * \brief Converts the ADC output to Volts as a float32. For example, if the ADC
1379:Generated_Source\PSoC4/ADC_1.c **** * measured 0.534 volts, the return value would be 0.534.
1380:Generated_Source\PSoC4/ADC_1.c **** * The calculation of voltage depends on the contents of ADC_1_offset[],
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 47


1381:Generated_Source\PSoC4/ADC_1.c **** * ADC_1_countsPer10Volt[], and other parameters.  The equation used is:
1382:Generated_Source\PSoC4/ADC_1.c **** *
1383:Generated_Source\PSoC4/ADC_1.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1384:Generated_Source\PSoC4/ADC_1.c **** * -Counts = Raw Counts from SAR register
1385:Generated_Source\PSoC4/ADC_1.c **** * -AvgDivider = divider based on averaging mode
1386:Generated_Source\PSoC4/ADC_1.c **** *     -Sequential, Sum: AvgDivider = number averaged
1387:Generated_Source\PSoC4/ADC_1.c **** *         Note: The divider should be a maximum of 16. If using more averages,
1388:Generated_Source\PSoC4/ADC_1.c **** *         pre-scale Counts by (number averaged / 16)
1389:Generated_Source\PSoC4/ADC_1.c **** *     -Interleaved, Sum: AvgDivider = number averaged
1390:Generated_Source\PSoC4/ADC_1.c **** *     -Sequential, Fixed: AvgDivider = 1
1391:Generated_Source\PSoC4/ADC_1.c **** * -Offset = ADC_1_offset[]
1392:Generated_Source\PSoC4/ADC_1.c **** * -TEN_VOLT = 10V constant and unit scalar.
1393:Generated_Source\PSoC4/ADC_1.c **** * -Gain = ADC_1_countsPer10Volt[]
1394:Generated_Source\PSoC4/ADC_1.c **** *
1395:Generated_Source\PSoC4/ADC_1.c **** * When the Vref is based on Vdda, the value used for Vdda is set for the project
1396:Generated_Source\PSoC4/ADC_1.c **** * in the System tab of the DWR.
1397:Generated_Source\PSoC4/ADC_1.c **** *
1398:Generated_Source\PSoC4/ADC_1.c **** * \param chan ADC_1 channel number.
1399:Generated_Source\PSoC4/ADC_1.c **** *
1400:Generated_Source\PSoC4/ADC_1.c **** * \param adcCounts Result from the ADC_1 conversion.
1401:Generated_Source\PSoC4/ADC_1.c **** *
1402:Generated_Source\PSoC4/ADC_1.c **** * \return Result in Volts.
1403:Generated_Source\PSoC4/ADC_1.c **** *
1404:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1405:Generated_Source\PSoC4/ADC_1.c **** *
1406:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1407:Generated_Source\PSoC4/ADC_1.c **** float32 ADC_1_CountsTo_Volts(uint32 chan, int16 adcCounts)
1408:Generated_Source\PSoC4/ADC_1.c **** {
 1180              		.loc 1 1408 0
 1181              		.cfi_startproc
 1182              		@ args = 0, pretend = 0, frame = 0
 1183              		@ frame_needed = 0, uses_anonymous_args = 0
 1184              	.LVL97:
 1185 0000 70B5     		push	{r4, r5, r6, lr}
 1186              		.cfi_def_cfa_offset 16
 1187              		.cfi_offset 4, -16
 1188              		.cfi_offset 5, -12
 1189              		.cfi_offset 6, -8
 1190              		.cfi_offset 14, -4
 1191              	.LVL98:
1409:Generated_Source\PSoC4/ADC_1.c ****     float32 result_Volts = 0.0f;
1410:Generated_Source\PSoC4/ADC_1.c ****     uint32 rawChannel;
1411:Generated_Source\PSoC4/ADC_1.c ****     rawChannel = ADC_1_allConfigs[ADC_1_currentConfig].channelBase + chan;
 1192              		.loc 1 1411 0
 1193 0002 104B     		ldr	r3, .L93
 1194 0004 1D68     		ldr	r5, [r3]
 1195 0006 104E     		ldr	r6, .L93+4
 1196 0008 EB00     		lsls	r3, r5, #3
 1197 000a 5C1B     		subs	r4, r3, r5
 1198 000c E200     		lsls	r2, r4, #3
 1199 000e 9459     		ldr	r4, [r2, r6]
 1200 0010 2418     		adds	r4, r4, r0
 1201              	.LVL99:
1412:Generated_Source\PSoC4/ADC_1.c **** 
1413:Generated_Source\PSoC4/ADC_1.c ****     if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
 1202              		.loc 1 1413 0
 1203 0012 B218     		adds	r2, r6, r2
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 48


 1204 0014 D368     		ldr	r3, [r2, #12]
 1205 0016 9B07     		lsls	r3, r3, #30
 1206 0018 11D4     		bmi	.L92
1414:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1415:Generated_Source\PSoC4/ADC_1.c ****         != ADC_1_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1416:Generated_Source\PSoC4/ADC_1.c ****     {
1417:Generated_Source\PSoC4/ADC_1.c ****         adcCounts = ADC_1_RawCounts2Counts(chan, adcCounts);
 1207              		.loc 1 1417 0
 1208 001a FFF7FEFF 		bl	ADC_1_RawCounts2Counts
 1209              	.LVL100:
1418:Generated_Source\PSoC4/ADC_1.c **** 
1419:Generated_Source\PSoC4/ADC_1.c ****         result_Volts = ((float32)adcCounts * ADC_1_10V_COUNTS)
 1210              		.loc 1 1419 0
 1211 001e FFF7FEFF 		bl	__aeabi_i2f
 1212              	.LVL101:
 1213 0022 0A49     		ldr	r1, .L93+8
 1214 0024 FFF7FEFF 		bl	__aeabi_fmul
 1215              	.LVL102:
 1216 0028 051C     		adds	r5, r0, #0
1420:Generated_Source\PSoC4/ADC_1.c ****             / (float32)ADC_1_countsPer10Volt[rawChannel];
 1217              		.loc 1 1420 0
 1218 002a A400     		lsls	r4, r4, #2
 1219              	.LVL103:
 1220 002c 084B     		ldr	r3, .L93+12
 1221 002e E058     		ldr	r0, [r4, r3]
 1222 0030 FFF7FEFF 		bl	__aeabi_i2f
 1223              	.LVL104:
 1224 0034 011C     		adds	r1, r0, #0
1419:Generated_Source\PSoC4/ADC_1.c ****             / (float32)ADC_1_countsPer10Volt[rawChannel];
 1225              		.loc 1 1419 0
 1226 0036 281C     		adds	r0, r5, #0
 1227 0038 FFF7FEFF 		bl	__aeabi_fdiv
 1228              	.LVL105:
 1229 003c 00E0     		b	.L91
 1230              	.LVL106:
 1231              	.L92:
1409:Generated_Source\PSoC4/ADC_1.c ****     uint32 rawChannel;
 1232              		.loc 1 1409 0
 1233 003e 0020     		movs	r0, #0
 1234              	.LVL107:
 1235              	.L91:
1421:Generated_Source\PSoC4/ADC_1.c ****     }
1422:Generated_Source\PSoC4/ADC_1.c ****     return result_Volts;
1423:Generated_Source\PSoC4/ADC_1.c **** }
 1236              		.loc 1 1423 0
 1237              		@ sp needed
 1238 0040 70BD     		pop	{r4, r5, r6, pc}
 1239              	.L94:
 1240 0042 C046     		.align	2
 1241              	.L93:
 1242 0044 00000000 		.word	.LANCHOR0
 1243 0048 00000000 		.word	ADC_1_allConfigs
 1244 004c 00002041 		.word	1092616192
 1245 0050 00000000 		.word	ADC_1_countsPer10Volt
 1246              		.cfi_endproc
 1247              	.LFE23:
 1248              		.size	ADC_1_CountsTo_Volts, .-ADC_1_CountsTo_Volts
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 49


 1249              		.section	.text.ADC_1_CountsTo_mVolts,"ax",%progbits
 1250              		.align	2
 1251              		.global	ADC_1_CountsTo_mVolts
 1252              		.code	16
 1253              		.thumb_func
 1254              		.type	ADC_1_CountsTo_mVolts, %function
 1255              	ADC_1_CountsTo_mVolts:
 1256              	.LFB24:
1424:Generated_Source\PSoC4/ADC_1.c **** 
1425:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1426:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_CountsTo_mVolts
1427:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1428:Generated_Source\PSoC4/ADC_1.c **** *
1429:Generated_Source\PSoC4/ADC_1.c **** * \brief Converts the ADC output to millivolts as an int16. For example, if the ADC
1430:Generated_Source\PSoC4/ADC_1.c **** * measured 0.534 volts, the return value would be 534.
1431:Generated_Source\PSoC4/ADC_1.c **** * The calculation of voltage depends on the contents of ADC_1_offset[],
1432:Generated_Source\PSoC4/ADC_1.c **** * ADC_1_countsPer10Volt[], and other parameters.  The equation used is:
1433:Generated_Source\PSoC4/ADC_1.c **** *
1434:Generated_Source\PSoC4/ADC_1.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1435:Generated_Source\PSoC4/ADC_1.c **** * -Counts = Raw Counts from SAR register
1436:Generated_Source\PSoC4/ADC_1.c **** * -AvgDivider = divider based on averaging mode
1437:Generated_Source\PSoC4/ADC_1.c **** *     -Sequential, Sum: AvgDivider = number averaged
1438:Generated_Source\PSoC4/ADC_1.c **** *         Note: The divider should be a maximum of 16. If using more averages,
1439:Generated_Source\PSoC4/ADC_1.c **** *         pre-scale Counts by (number averaged / 16)
1440:Generated_Source\PSoC4/ADC_1.c **** *     -Interleaved, Sum: AvgDivider = number averaged
1441:Generated_Source\PSoC4/ADC_1.c **** *     -Sequential, Fixed: AvgDivider = 1
1442:Generated_Source\PSoC4/ADC_1.c **** * -Offset = ADC_1_offset[]
1443:Generated_Source\PSoC4/ADC_1.c **** * -TEN_VOLT = 10V constant and unit scalar.
1444:Generated_Source\PSoC4/ADC_1.c **** * -Gain = ADC_1_countsPer10Volt[]
1445:Generated_Source\PSoC4/ADC_1.c **** *
1446:Generated_Source\PSoC4/ADC_1.c **** * When the Vref is based on Vdda, the value used for Vdda is set for the project
1447:Generated_Source\PSoC4/ADC_1.c **** * in the System tab of the DWR.
1448:Generated_Source\PSoC4/ADC_1.c **** *
1449:Generated_Source\PSoC4/ADC_1.c **** * \param chan ADC_1 channel number.
1450:Generated_Source\PSoC4/ADC_1.c **** *
1451:Generated_Source\PSoC4/ADC_1.c **** * \param adcCounts Result from the ADC_1 conversion.
1452:Generated_Source\PSoC4/ADC_1.c **** *
1453:Generated_Source\PSoC4/ADC_1.c **** * \return Result in mV.
1454:Generated_Source\PSoC4/ADC_1.c **** *
1455:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None.
1456:Generated_Source\PSoC4/ADC_1.c **** *
1457:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1458:Generated_Source\PSoC4/ADC_1.c **** int16 ADC_1_CountsTo_mVolts(uint32 chan, int16 adcCounts)
1459:Generated_Source\PSoC4/ADC_1.c **** {
 1257              		.loc 1 1459 0
 1258              		.cfi_startproc
 1259              		@ args = 0, pretend = 0, frame = 0
 1260              		@ frame_needed = 0, uses_anonymous_args = 0
 1261              	.LVL108:
 1262 0000 70B5     		push	{r4, r5, r6, lr}
 1263              		.cfi_def_cfa_offset 16
 1264              		.cfi_offset 4, -16
 1265              		.cfi_offset 5, -12
 1266              		.cfi_offset 6, -8
 1267              		.cfi_offset 14, -4
 1268              	.LVL109:
1460:Generated_Source\PSoC4/ADC_1.c ****     int16 result_mVolts = 0;
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 50


1461:Generated_Source\PSoC4/ADC_1.c ****     uint32 rawChannel;
1462:Generated_Source\PSoC4/ADC_1.c **** 
1463:Generated_Source\PSoC4/ADC_1.c ****     rawChannel = ADC_1_allConfigs[ADC_1_currentConfig].channelBase + chan;
 1269              		.loc 1 1463 0
 1270 0002 154B     		ldr	r3, .L100
 1271 0004 1D68     		ldr	r5, [r3]
 1272 0006 154E     		ldr	r6, .L100+4
 1273 0008 EB00     		lsls	r3, r5, #3
 1274 000a 5C1B     		subs	r4, r3, r5
 1275 000c E200     		lsls	r2, r4, #3
 1276 000e 9459     		ldr	r4, [r2, r6]
 1277 0010 2418     		adds	r4, r4, r0
 1278              	.LVL110:
1464:Generated_Source\PSoC4/ADC_1.c **** 
1465:Generated_Source\PSoC4/ADC_1.c ****     if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
 1279              		.loc 1 1465 0
 1280 0012 B218     		adds	r2, r6, r2
 1281 0014 D368     		ldr	r3, [r2, #12]
 1282 0016 9B07     		lsls	r3, r3, #30
 1283 0018 1BD4     		bmi	.L99
1466:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1467:Generated_Source\PSoC4/ADC_1.c ****         != ADC_1_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1468:Generated_Source\PSoC4/ADC_1.c ****     {
1469:Generated_Source\PSoC4/ADC_1.c ****         adcCounts = ADC_1_RawCounts2Counts(chan, adcCounts);
 1284              		.loc 1 1469 0
 1285 001a FFF7FEFF 		bl	ADC_1_RawCounts2Counts
 1286              	.LVL111:
1470:Generated_Source\PSoC4/ADC_1.c **** 
1471:Generated_Source\PSoC4/ADC_1.c ****         result_mVolts = (int16)((((int32)adcCounts * ADC_1_10MV_COUNTS) + ( (adcCounts > 0) ?
 1287              		.loc 1 1471 0
 1288 001e 1049     		ldr	r1, .L100+8
 1289 0020 4143     		muls	r1, r0
1472:Generated_Source\PSoC4/ADC_1.c ****                  (ADC_1_countsPer10Volt[rawChannel] / 2)
1473:Generated_Source\PSoC4/ADC_1.c ****                 : (-(ADC_1_countsPer10Volt[rawChannel] / 2)) ))
 1290              		.loc 1 1473 0
 1291 0022 0028     		cmp	r0, #0
 1292 0024 06DD     		ble	.L97
1472:Generated_Source\PSoC4/ADC_1.c ****                  (ADC_1_countsPer10Volt[rawChannel] / 2)
 1293              		.loc 1 1472 0 discriminator 1
 1294 0026 A300     		lsls	r3, r4, #2
 1295 0028 0E4A     		ldr	r2, .L100+12
 1296 002a 9B58     		ldr	r3, [r3, r2]
 1297              		.loc 1 1473 0 discriminator 1
 1298 002c D80F     		lsrs	r0, r3, #31
 1299              	.LVL112:
 1300 002e C318     		adds	r3, r0, r3
 1301 0030 5B10     		asrs	r3, r3, #1
 1302 0032 06E0     		b	.L98
 1303              	.LVL113:
 1304              	.L97:
 1305              		.loc 1 1473 0 is_stmt 0 discriminator 2
 1306 0034 A300     		lsls	r3, r4, #2
 1307 0036 0B4A     		ldr	r2, .L100+12
 1308 0038 9A58     		ldr	r2, [r3, r2]
 1309 003a D30F     		lsrs	r3, r2, #31
 1310 003c 9A18     		adds	r2, r3, r2
 1311 003e 5210     		asrs	r2, r2, #1
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 51


 1312 0040 5342     		rsbs	r3, r2, #0
 1313              	.LVL114:
 1314              	.L98:
1471:Generated_Source\PSoC4/ADC_1.c ****                  (ADC_1_countsPer10Volt[rawChannel] / 2)
 1315              		.loc 1 1471 0 is_stmt 1
 1316 0042 5818     		adds	r0, r3, r1
1474:Generated_Source\PSoC4/ADC_1.c ****                  / ADC_1_countsPer10Volt[rawChannel]);
 1317              		.loc 1 1474 0
 1318 0044 A400     		lsls	r4, r4, #2
 1319              	.LVL115:
 1320 0046 074B     		ldr	r3, .L100+12
 1321 0048 E158     		ldr	r1, [r4, r3]
 1322 004a FFF7FEFF 		bl	__aeabi_idiv
 1323              	.LVL116:
1471:Generated_Source\PSoC4/ADC_1.c ****                  (ADC_1_countsPer10Volt[rawChannel] / 2)
 1324              		.loc 1 1471 0
 1325 004e 00B2     		sxth	r0, r0
 1326              	.LVL117:
 1327 0050 00E0     		b	.L96
 1328              	.LVL118:
 1329              	.L99:
1460:Generated_Source\PSoC4/ADC_1.c ****     uint32 rawChannel;
 1330              		.loc 1 1460 0
 1331 0052 0020     		movs	r0, #0
 1332              	.LVL119:
 1333              	.L96:
1475:Generated_Source\PSoC4/ADC_1.c ****     }
1476:Generated_Source\PSoC4/ADC_1.c ****     return result_mVolts;
1477:Generated_Source\PSoC4/ADC_1.c **** }
 1334              		.loc 1 1477 0
 1335              		@ sp needed
 1336              	.LVL120:
 1337 0054 70BD     		pop	{r4, r5, r6, pc}
 1338              	.L101:
 1339 0056 C046     		.align	2
 1340              	.L100:
 1341 0058 00000000 		.word	.LANCHOR0
 1342 005c 00000000 		.word	ADC_1_allConfigs
 1343 0060 10270000 		.word	10000
 1344 0064 00000000 		.word	ADC_1_countsPer10Volt
 1345              		.cfi_endproc
 1346              	.LFE24:
 1347              		.size	ADC_1_CountsTo_mVolts, .-ADC_1_CountsTo_mVolts
 1348              		.global	__aeabi_lmul
 1349              		.global	__aeabi_ldivmod
 1350              		.section	.text.ADC_1_CountsTo_uVolts,"ax",%progbits
 1351              		.align	2
 1352              		.global	ADC_1_CountsTo_uVolts
 1353              		.code	16
 1354              		.thumb_func
 1355              		.type	ADC_1_CountsTo_uVolts, %function
 1356              	ADC_1_CountsTo_uVolts:
 1357              	.LFB25:
1478:Generated_Source\PSoC4/ADC_1.c **** 
1479:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1480:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_CountsTo_uVolts
1481:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 52


1482:Generated_Source\PSoC4/ADC_1.c **** *
1483:Generated_Source\PSoC4/ADC_1.c **** * \brief Converts the ADC output to microvolts as an int32. For example, if the ADC
1484:Generated_Source\PSoC4/ADC_1.c **** * measured 0.534 volts, the return value would be 534000.
1485:Generated_Source\PSoC4/ADC_1.c **** * The calculation of voltage depends on the contents of ADC_1_offset[],
1486:Generated_Source\PSoC4/ADC_1.c **** * ADC_1_countsPer10Volt[], and other parameters.  The equation used is:
1487:Generated_Source\PSoC4/ADC_1.c **** *
1488:Generated_Source\PSoC4/ADC_1.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1489:Generated_Source\PSoC4/ADC_1.c **** * -Counts = Raw Counts from SAR register
1490:Generated_Source\PSoC4/ADC_1.c **** * -AvgDivider = divider based on averaging mode
1491:Generated_Source\PSoC4/ADC_1.c **** *     -Sequential, Sum: AvgDivider = number averaged
1492:Generated_Source\PSoC4/ADC_1.c **** *         Note: The divider should be a maximum of 16. If using more averages,
1493:Generated_Source\PSoC4/ADC_1.c **** *         pre-scale Counts by (number averaged / 16)
1494:Generated_Source\PSoC4/ADC_1.c **** *     -Interleaved, Sum: AvgDivider = number averaged
1495:Generated_Source\PSoC4/ADC_1.c **** *     -Sequential, Fixed: AvgDivider = 1
1496:Generated_Source\PSoC4/ADC_1.c **** * -Offset = ADC_1_offset[]
1497:Generated_Source\PSoC4/ADC_1.c **** * -TEN_VOLT = 10V constant and unit scalar.
1498:Generated_Source\PSoC4/ADC_1.c **** * -Gain = ADC_1_countsPer10Volt[]
1499:Generated_Source\PSoC4/ADC_1.c **** *
1500:Generated_Source\PSoC4/ADC_1.c **** * When the Vref is based on Vdda, the value used for Vdda is set for the project
1501:Generated_Source\PSoC4/ADC_1.c **** * in the System tab of the DWR.
1502:Generated_Source\PSoC4/ADC_1.c **** *
1503:Generated_Source\PSoC4/ADC_1.c **** * \param chan ADC_1 channel number.
1504:Generated_Source\PSoC4/ADC_1.c **** *
1505:Generated_Source\PSoC4/ADC_1.c **** * \param adcCounts Result from the ADC_1 conversion.
1506:Generated_Source\PSoC4/ADC_1.c **** *
1507:Generated_Source\PSoC4/ADC_1.c **** * \return Result in microvolts.
1508:Generated_Source\PSoC4/ADC_1.c **** *
1509:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1510:Generated_Source\PSoC4/ADC_1.c **** *
1511:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1512:Generated_Source\PSoC4/ADC_1.c **** int32 ADC_1_CountsTo_uVolts(uint32 chan, int16 adcCounts)
1513:Generated_Source\PSoC4/ADC_1.c **** {
 1358              		.loc 1 1513 0
 1359              		.cfi_startproc
 1360              		@ args = 0, pretend = 0, frame = 0
 1361              		@ frame_needed = 0, uses_anonymous_args = 0
 1362              	.LVL121:
 1363 0000 70B5     		push	{r4, r5, r6, lr}
 1364              		.cfi_def_cfa_offset 16
 1365              		.cfi_offset 4, -16
 1366              		.cfi_offset 5, -12
 1367              		.cfi_offset 6, -8
 1368              		.cfi_offset 14, -4
 1369              	.LVL122:
1514:Generated_Source\PSoC4/ADC_1.c ****     int64 result_uVolts = 0;
1515:Generated_Source\PSoC4/ADC_1.c ****     uint32 rawChannel;
1516:Generated_Source\PSoC4/ADC_1.c ****     rawChannel = ADC_1_allConfigs[ADC_1_currentConfig].channelBase + chan;
 1370              		.loc 1 1516 0
 1371 0002 0E4B     		ldr	r3, .L105
 1372 0004 1D68     		ldr	r5, [r3]
 1373 0006 0E4E     		ldr	r6, .L105+4
 1374 0008 EB00     		lsls	r3, r5, #3
 1375 000a 5C1B     		subs	r4, r3, r5
 1376 000c E200     		lsls	r2, r4, #3
 1377 000e 9459     		ldr	r4, [r2, r6]
 1378 0010 2418     		adds	r4, r4, r0
 1379              	.LVL123:
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 53


1517:Generated_Source\PSoC4/ADC_1.c **** 
1518:Generated_Source\PSoC4/ADC_1.c ****     if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
 1380              		.loc 1 1518 0
 1381 0012 B218     		adds	r2, r6, r2
 1382 0014 D368     		ldr	r3, [r2, #12]
 1383 0016 9B07     		lsls	r3, r3, #30
 1384 0018 0DD4     		bmi	.L104
1519:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1520:Generated_Source\PSoC4/ADC_1.c ****         != ADC_1_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1521:Generated_Source\PSoC4/ADC_1.c ****     {
1522:Generated_Source\PSoC4/ADC_1.c ****         adcCounts = ADC_1_RawCounts2Counts(chan, adcCounts);
 1385              		.loc 1 1522 0
 1386 001a FFF7FEFF 		bl	ADC_1_RawCounts2Counts
 1387              	.LVL124:
1523:Generated_Source\PSoC4/ADC_1.c **** 
1524:Generated_Source\PSoC4/ADC_1.c ****         result_uVolts = ((int64)adcCounts * ADC_1_10UV_COUNTS)
 1388              		.loc 1 1524 0
 1389 001e C117     		asrs	r1, r0, #31
 1390 0020 084A     		ldr	r2, .L105+8
 1391 0022 0023     		movs	r3, #0
 1392 0024 FFF7FEFF 		bl	__aeabi_lmul
 1393              	.LVL125:
1525:Generated_Source\PSoC4/ADC_1.c ****             / ADC_1_countsPer10Volt[rawChannel];
 1394              		.loc 1 1525 0
 1395 0028 A400     		lsls	r4, r4, #2
 1396              	.LVL126:
 1397 002a 074B     		ldr	r3, .L105+12
 1398 002c E258     		ldr	r2, [r4, r3]
 1399 002e D317     		asrs	r3, r2, #31
1524:Generated_Source\PSoC4/ADC_1.c ****             / ADC_1_countsPer10Volt[rawChannel];
 1400              		.loc 1 1524 0
 1401 0030 FFF7FEFF 		bl	__aeabi_ldivmod
 1402              	.LVL127:
 1403 0034 00E0     		b	.L103
 1404              	.LVL128:
 1405              	.L104:
1514:Generated_Source\PSoC4/ADC_1.c ****     uint32 rawChannel;
 1406              		.loc 1 1514 0
 1407 0036 0020     		movs	r0, #0
 1408              	.LVL129:
 1409              	.L103:
1526:Generated_Source\PSoC4/ADC_1.c ****     }
1527:Generated_Source\PSoC4/ADC_1.c ****     return ( (int32)result_uVolts );
1528:Generated_Source\PSoC4/ADC_1.c **** }
 1410              		.loc 1 1528 0
 1411              		@ sp needed
 1412              	.LVL130:
 1413 0038 70BD     		pop	{r4, r5, r6, pc}
 1414              	.L106:
 1415 003a C046     		.align	2
 1416              	.L105:
 1417 003c 00000000 		.word	.LANCHOR0
 1418 0040 00000000 		.word	ADC_1_allConfigs
 1419 0044 80969800 		.word	10000000
 1420 0048 00000000 		.word	ADC_1_countsPer10Volt
 1421              		.cfi_endproc
 1422              	.LFE25:
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 54


 1423              		.size	ADC_1_CountsTo_uVolts, .-ADC_1_CountsTo_uVolts
 1424              		.section	.text.ADC_1_Init,"ax",%progbits
 1425              		.align	2
 1426              		.global	ADC_1_Init
 1427              		.code	16
 1428              		.thumb_func
 1429              		.type	ADC_1_Init, %function
 1430              	ADC_1_Init:
 1431              	.LFB26:
1529:Generated_Source\PSoC4/ADC_1.c **** 
1530:Generated_Source\PSoC4/ADC_1.c **** #if(0u != ADC_1_ANY_CONFIG_USES_FILTER)
1531:Generated_Source\PSoC4/ADC_1.c **** 
1532:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1533:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_TrimFilterVos
1534:Generated_Source\PSoC4/ADC_1.c ****     ****************************************************************************//**
1535:Generated_Source\PSoC4/ADC_1.c ****     *
1536:Generated_Source\PSoC4/ADC_1.c ****     * \brief Run an algorithm to reduce voltage offset using the UAB's opamp and
1537:Generated_Source\PSoC4/ADC_1.c ****     * agnd buffer trim.
1538:Generated_Source\PSoC4/ADC_1.c ****     *
1539:Generated_Source\PSoC4/ADC_1.c ****     * During trimming, the filter inputs are disconnected from the UAB block,
1540:Generated_Source\PSoC4/ADC_1.c ****     * the non-inverting input of both UAB opamps are connected to Agnd,
1541:Generated_Source\PSoC4/ADC_1.c ****     * and SAR is used as a comparator.
1542:Generated_Source\PSoC4/ADC_1.c ****     *
1543:Generated_Source\PSoC4/ADC_1.c ****     * Trimming is done by comparing the filter output with Agnd.
1544:Generated_Source\PSoC4/ADC_1.c ****     * The algorithm steps through the Opamp trim codes first and then the
1545:Generated_Source\PSoC4/ADC_1.c ****     * Agnd trim codes to find where the filter output crosses Agnd.
1546:Generated_Source\PSoC4/ADC_1.c ****     * For each trim code, a blocking delay is used to allow the filter output
1547:Generated_Source\PSoC4/ADC_1.c ****     * to settle before reading the comparator status. This delay is equivalent
1548:Generated_Source\PSoC4/ADC_1.c ****     * to 9 * tau, where tau is the filter time constant:
1549:Generated_Source\PSoC4/ADC_1.c ****     *
1550:Generated_Source\PSoC4/ADC_1.c ****     * tau = 1 / (2 * pi * (Fcorner or Bandwidth))
1551:Generated_Source\PSoC4/ADC_1.c ****     *
1552:Generated_Source\PSoC4/ADC_1.c ****     * The time constant is calculated using the bandwidth for Band pass and
1553:Generated_Source\PSoC4/ADC_1.c ****     * Band stop and the corner frequency for Low pass and High pass.
1554:Generated_Source\PSoC4/ADC_1.c ****     * The algorithm can check up to 40 different trim codes, but it will typically
1555:Generated_Source\PSoC4/ADC_1.c ****     * complete in much less time.
1556:Generated_Source\PSoC4/ADC_1.c ****     *
1557:Generated_Source\PSoC4/ADC_1.c ****     * Once trimming is complete, the UAB is restored to its original configuration.
1558:Generated_Source\PSoC4/ADC_1.c ****     *
1559:Generated_Source\PSoC4/ADC_1.c ****     * \Note
1560:Generated_Source\PSoC4/ADC_1.c ****     * The ADC conversions must be started and Agnd must be supplied to the
1561:Generated_Source\PSoC4/ADC_1.c ****     * component before calling this function.
1562:Generated_Source\PSoC4/ADC_1.c ****     *
1563:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1564:Generated_Source\PSoC4/ADC_1.c ****     void ADC_1_TrimFilterVos(void)
1565:Generated_Source\PSoC4/ADC_1.c ****     {
1566:Generated_Source\PSoC4/ADC_1.c ****         uint32 opampTrim = 0uL;
1567:Generated_Source\PSoC4/ADC_1.c ****         uint32 agndTrim = 0uL;
1568:Generated_Source\PSoC4/ADC_1.c ****         uint32 compStatus = 0uL;
1569:Generated_Source\PSoC4/ADC_1.c **** 
1570:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SetupComparatorTrim();
1571:Generated_Source\PSoC4/ADC_1.c **** 
1572:Generated_Source\PSoC4/ADC_1.c ****         /* Sweep from center to crossing */
1573:Generated_Source\PSoC4/ADC_1.c ****         compStatus = ADC_1_SetOpampAndAgndTrim(ADC_1_OPAMP_TRIM_POS_BASE, ADC_1_AGND_TRIM_POS_BASE)
1574:Generated_Source\PSoC4/ADC_1.c ****         if (0uL == compStatus)
1575:Generated_Source\PSoC4/ADC_1.c ****         {
1576:Generated_Source\PSoC4/ADC_1.c ****             opampTrim = ADC_1_RaiseOpampTrimToCrossing(ADC_1_OPAMP_TRIM_POS_BASE);
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 55


1577:Generated_Source\PSoC4/ADC_1.c ****             agndTrim = ADC_1_RaiseAgndTrimToCrossing(ADC_1_AGND_TRIM_POS_BASE);
1578:Generated_Source\PSoC4/ADC_1.c ****             if ((agndTrim == (ADC_1_AGND_TRIM_POS_LIMIT - 1uL))
1579:Generated_Source\PSoC4/ADC_1.c ****                 && (opampTrim != (ADC_1_OPAMP_TRIM_POS_LIMIT - 1uL)))
1580:Generated_Source\PSoC4/ADC_1.c ****             {
1581:Generated_Source\PSoC4/ADC_1.c ****                 opampTrim = ADC_1_IncOpampTrim(opampTrim);
1582:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_SetOpampAndAgndTrim(opampTrim, ADC_1_AGND_TRIM_POS_BASE);
1583:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_LowerAgndTrimToCrossing(ADC_1_AGND_TRIM_POS_BASE);
1584:Generated_Source\PSoC4/ADC_1.c ****             }
1585:Generated_Source\PSoC4/ADC_1.c ****         }
1586:Generated_Source\PSoC4/ADC_1.c ****         else
1587:Generated_Source\PSoC4/ADC_1.c ****         {
1588:Generated_Source\PSoC4/ADC_1.c ****             opampTrim = ADC_1_LowerOpampTrimToCrossing(ADC_1_OPAMP_TRIM_POS_BASE);
1589:Generated_Source\PSoC4/ADC_1.c ****             agndTrim = ADC_1_LowerAgndTrimToCrossing(ADC_1_AGND_TRIM_POS_BASE);
1590:Generated_Source\PSoC4/ADC_1.c ****             if ((agndTrim == (ADC_1_AGND_TRIM_NEG_LIMIT - 1uL))
1591:Generated_Source\PSoC4/ADC_1.c ****                 && (opampTrim != (ADC_1_OPAMP_TRIM_NEG_LIMIT - 1uL)))
1592:Generated_Source\PSoC4/ADC_1.c ****             {
1593:Generated_Source\PSoC4/ADC_1.c ****                 opampTrim = ADC_1_DecOpampTrim(opampTrim);
1594:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_SetOpampAndAgndTrim(opampTrim, ADC_1_AGND_TRIM_POS_BASE);
1595:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_RaiseAgndTrimToCrossing(ADC_1_AGND_TRIM_POS_BASE);
1596:Generated_Source\PSoC4/ADC_1.c ****             }
1597:Generated_Source\PSoC4/ADC_1.c ****         }
1598:Generated_Source\PSoC4/ADC_1.c **** 
1599:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UndoComparatorTrimSetup();
1600:Generated_Source\PSoC4/ADC_1.c ****     }
1601:Generated_Source\PSoC4/ADC_1.c **** 
1602:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1603:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_SetupComparatorTrim
1604:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1605:Generated_Source\PSoC4/ADC_1.c ****     *
1606:Generated_Source\PSoC4/ADC_1.c ****     * Make proper connections to being trimming the Agnd buffer
1607:Generated_Source\PSoC4/ADC_1.c ****     * and Opamp offset.
1608:Generated_Source\PSoC4/ADC_1.c ****     *
1609:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1610:Generated_Source\PSoC4/ADC_1.c ****     static void ADC_1_SetupComparatorTrim(void)
1611:Generated_Source\PSoC4/ADC_1.c ****     {
1612:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_filterVinMux_Select(ADC_1_FILTER_AMUX_CHANNEL);
1613:Generated_Source\PSoC4/ADC_1.c ****     }
1614:Generated_Source\PSoC4/ADC_1.c **** 
1615:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1616:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_UndoComparatorTrimSetup
1617:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1618:Generated_Source\PSoC4/ADC_1.c ****     *
1619:Generated_Source\PSoC4/ADC_1.c ****     * Undo all changes made in ADC_1_SetupComparatorTrim()
1620:Generated_Source\PSoC4/ADC_1.c ****     * to bring the Component back to normal operation.
1621:Generated_Source\PSoC4/ADC_1.c ****     *
1622:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1623:Generated_Source\PSoC4/ADC_1.c ****     static void ADC_1_UndoComparatorTrimSetup(void)
1624:Generated_Source\PSoC4/ADC_1.c ****     {
1625:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_filterVinMux_Select((uint8)ADC_1_currentConfig);
1626:Generated_Source\PSoC4/ADC_1.c ****     }
1627:Generated_Source\PSoC4/ADC_1.c **** 
1628:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1629:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_RaiseOpampTrimToCrossing
1630:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1631:Generated_Source\PSoC4/ADC_1.c ****     *
1632:Generated_Source\PSoC4/ADC_1.c ****     * Step through the Opamp trim codes in increasing order
1633:Generated_Source\PSoC4/ADC_1.c ****     * to find the point where the offset crosses Agnd.
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 56


1634:Generated_Source\PSoC4/ADC_1.c ****     *
1635:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1636:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_RaiseOpampTrimToCrossing(uint32 startTrim)
1637:Generated_Source\PSoC4/ADC_1.c ****     {
1638:Generated_Source\PSoC4/ADC_1.c ****         uint32 opampTrim;
1639:Generated_Source\PSoC4/ADC_1.c ****         uint32 lastOpampTrim;
1640:Generated_Source\PSoC4/ADC_1.c ****         uint32 compStatus;
1641:Generated_Source\PSoC4/ADC_1.c **** 
1642:Generated_Source\PSoC4/ADC_1.c ****         lastOpampTrim = startTrim;
1643:Generated_Source\PSoC4/ADC_1.c ****         for (opampTrim = startTrim;
1644:Generated_Source\PSoC4/ADC_1.c ****             opampTrim != ADC_1_OPAMP_TRIM_NEG_LIMIT;
1645:Generated_Source\PSoC4/ADC_1.c ****             opampTrim = ADC_1_IncOpampTrim(opampTrim))
1646:Generated_Source\PSoC4/ADC_1.c ****         {
1647:Generated_Source\PSoC4/ADC_1.c ****             compStatus = ADC_1_SetOpampAndAgndTrim(opampTrim, ADC_1_AGND_TRIM_POS_BASE);
1648:Generated_Source\PSoC4/ADC_1.c ****             if (0uL != compStatus)
1649:Generated_Source\PSoC4/ADC_1.c ****             {
1650:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_SetOpampTrim(lastOpampTrim);
1651:Generated_Source\PSoC4/ADC_1.c ****                 break;
1652:Generated_Source\PSoC4/ADC_1.c ****             }
1653:Generated_Source\PSoC4/ADC_1.c ****             lastOpampTrim = opampTrim;
1654:Generated_Source\PSoC4/ADC_1.c ****         }
1655:Generated_Source\PSoC4/ADC_1.c **** 
1656:Generated_Source\PSoC4/ADC_1.c ****         return lastOpampTrim;
1657:Generated_Source\PSoC4/ADC_1.c ****     }
1658:Generated_Source\PSoC4/ADC_1.c **** 
1659:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1660:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_LowerOpampTrimToCrossing
1661:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1662:Generated_Source\PSoC4/ADC_1.c ****     *
1663:Generated_Source\PSoC4/ADC_1.c ****     * Step through the Opamp trim codes in decreasing order
1664:Generated_Source\PSoC4/ADC_1.c ****     * to find the point where the offset crosses Agnd.
1665:Generated_Source\PSoC4/ADC_1.c ****     *
1666:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1667:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_LowerOpampTrimToCrossing(uint32 startTrim)
1668:Generated_Source\PSoC4/ADC_1.c ****     {
1669:Generated_Source\PSoC4/ADC_1.c ****         uint32 opampTrim;
1670:Generated_Source\PSoC4/ADC_1.c ****         uint32 lastOpampTrim;
1671:Generated_Source\PSoC4/ADC_1.c ****         uint32 compStatus;
1672:Generated_Source\PSoC4/ADC_1.c **** 
1673:Generated_Source\PSoC4/ADC_1.c ****         lastOpampTrim = startTrim;
1674:Generated_Source\PSoC4/ADC_1.c ****         for (opampTrim = startTrim;
1675:Generated_Source\PSoC4/ADC_1.c ****             opampTrim != ADC_1_OPAMP_TRIM_NEG_LIMIT;
1676:Generated_Source\PSoC4/ADC_1.c ****             opampTrim = ADC_1_DecOpampTrim(opampTrim))
1677:Generated_Source\PSoC4/ADC_1.c ****         {
1678:Generated_Source\PSoC4/ADC_1.c ****             compStatus = ADC_1_SetOpampAndAgndTrim(opampTrim, ADC_1_AGND_TRIM_POS_BASE);
1679:Generated_Source\PSoC4/ADC_1.c ****             if (0uL == compStatus)
1680:Generated_Source\PSoC4/ADC_1.c ****             {
1681:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_SetOpampTrim(lastOpampTrim);
1682:Generated_Source\PSoC4/ADC_1.c ****                 break;
1683:Generated_Source\PSoC4/ADC_1.c ****             }
1684:Generated_Source\PSoC4/ADC_1.c ****             lastOpampTrim = opampTrim;
1685:Generated_Source\PSoC4/ADC_1.c ****         }
1686:Generated_Source\PSoC4/ADC_1.c **** 
1687:Generated_Source\PSoC4/ADC_1.c ****         return lastOpampTrim;
1688:Generated_Source\PSoC4/ADC_1.c ****     }
1689:Generated_Source\PSoC4/ADC_1.c **** 
1690:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 57


1691:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_RaiseAgndTrimToCrossing
1692:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1693:Generated_Source\PSoC4/ADC_1.c ****     *
1694:Generated_Source\PSoC4/ADC_1.c ****     * Step through the Agnd trim codes in increasing order
1695:Generated_Source\PSoC4/ADC_1.c ****     * to find the point where the offset crosses Agnd.
1696:Generated_Source\PSoC4/ADC_1.c ****     *
1697:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1698:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_RaiseAgndTrimToCrossing(uint32 startTrim)
1699:Generated_Source\PSoC4/ADC_1.c ****     {
1700:Generated_Source\PSoC4/ADC_1.c ****         uint32 agndTrim;
1701:Generated_Source\PSoC4/ADC_1.c ****         uint32 lastAgndTrim;
1702:Generated_Source\PSoC4/ADC_1.c ****         uint32 compStatus;
1703:Generated_Source\PSoC4/ADC_1.c **** 
1704:Generated_Source\PSoC4/ADC_1.c ****         lastAgndTrim = startTrim;
1705:Generated_Source\PSoC4/ADC_1.c ****         for (agndTrim = startTrim;
1706:Generated_Source\PSoC4/ADC_1.c ****             agndTrim != ADC_1_AGND_TRIM_NEG_LIMIT;
1707:Generated_Source\PSoC4/ADC_1.c ****             agndTrim = ADC_1_IncAgndTrim(agndTrim))
1708:Generated_Source\PSoC4/ADC_1.c ****         {
1709:Generated_Source\PSoC4/ADC_1.c ****             compStatus = ADC_1_SetAgndTrim(agndTrim);
1710:Generated_Source\PSoC4/ADC_1.c ****             if (0uL != compStatus)
1711:Generated_Source\PSoC4/ADC_1.c ****             {
1712:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_SetAgndTrim(lastAgndTrim);
1713:Generated_Source\PSoC4/ADC_1.c ****                 break;
1714:Generated_Source\PSoC4/ADC_1.c ****             }
1715:Generated_Source\PSoC4/ADC_1.c ****             lastAgndTrim = agndTrim;
1716:Generated_Source\PSoC4/ADC_1.c ****         }
1717:Generated_Source\PSoC4/ADC_1.c **** 
1718:Generated_Source\PSoC4/ADC_1.c ****         return lastAgndTrim;
1719:Generated_Source\PSoC4/ADC_1.c ****     }
1720:Generated_Source\PSoC4/ADC_1.c **** 
1721:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1722:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_LowerAgndTrimToCrossing
1723:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1724:Generated_Source\PSoC4/ADC_1.c ****     *
1725:Generated_Source\PSoC4/ADC_1.c ****     * Step through the Agnd trim codes in decreasing order
1726:Generated_Source\PSoC4/ADC_1.c ****     * to find the point where the offset crosses Agnd.
1727:Generated_Source\PSoC4/ADC_1.c ****     *
1728:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1729:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_LowerAgndTrimToCrossing(uint32 startTrim)
1730:Generated_Source\PSoC4/ADC_1.c ****     {
1731:Generated_Source\PSoC4/ADC_1.c ****         uint32 agndTrim = startTrim;
1732:Generated_Source\PSoC4/ADC_1.c ****         uint32 lastAgndTrim = agndTrim;
1733:Generated_Source\PSoC4/ADC_1.c ****         uint32 compStatus = 1uL;
1734:Generated_Source\PSoC4/ADC_1.c **** 
1735:Generated_Source\PSoC4/ADC_1.c ****         lastAgndTrim = startTrim;
1736:Generated_Source\PSoC4/ADC_1.c ****         for (agndTrim = startTrim;
1737:Generated_Source\PSoC4/ADC_1.c ****             agndTrim != ADC_1_AGND_TRIM_NEG_LIMIT;
1738:Generated_Source\PSoC4/ADC_1.c ****             agndTrim = ADC_1_DecAgndTrim(agndTrim))
1739:Generated_Source\PSoC4/ADC_1.c ****         {
1740:Generated_Source\PSoC4/ADC_1.c ****             compStatus = ADC_1_SetAgndTrim(agndTrim);
1741:Generated_Source\PSoC4/ADC_1.c ****             if (0uL == compStatus)
1742:Generated_Source\PSoC4/ADC_1.c ****             {
1743:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_SetAgndTrim(lastAgndTrim);
1744:Generated_Source\PSoC4/ADC_1.c ****                 break;
1745:Generated_Source\PSoC4/ADC_1.c ****             }
1746:Generated_Source\PSoC4/ADC_1.c ****             lastAgndTrim = agndTrim;
1747:Generated_Source\PSoC4/ADC_1.c ****         }
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 58


1748:Generated_Source\PSoC4/ADC_1.c **** 
1749:Generated_Source\PSoC4/ADC_1.c ****         return lastAgndTrim;
1750:Generated_Source\PSoC4/ADC_1.c ****     }
1751:Generated_Source\PSoC4/ADC_1.c **** 
1752:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1753:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_SetOpampAndAgndTrim
1754:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1755:Generated_Source\PSoC4/ADC_1.c ****     *
1756:Generated_Source\PSoC4/ADC_1.c ****     * Write the Agnd and Opamp trim codes and return the comparator status.
1757:Generated_Source\PSoC4/ADC_1.c ****     *
1758:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1759:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_SetOpampAndAgndTrim(uint32 opampTrim, uint32 agndTrim)
1760:Generated_Source\PSoC4/ADC_1.c ****     {
1761:Generated_Source\PSoC4/ADC_1.c ****         uint32 trimRegVal = ADC_1_UABH_A_OA_TRIM_OA_REG;
1762:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal &= ~(ADC_1_OPAMP_TRIM_MASK << CyUAB_OA_OFFSET_SHIFT);
1763:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal |= (opampTrim << CyUAB_OA_OFFSET_SHIFT);
1764:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_A_OA_TRIM_OA_REG = trimRegVal;
1765:Generated_Source\PSoC4/ADC_1.c **** 
1766:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal = ADC_1_UABH_A_OA_TRIM_AGND_REG;
1767:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal &= ~(ADC_1_AGND_TRIM_MASK << CyUAB_AGND_OFFSET_SHIFT);
1768:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal |= (agndTrim << CyUAB_AGND_OFFSET_SHIFT);
1769:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_A_OA_TRIM_AGND_REG = trimRegVal;
1770:Generated_Source\PSoC4/ADC_1.c **** 
1771:Generated_Source\PSoC4/ADC_1.c ****         return ADC_1_GetCompStatus();
1772:Generated_Source\PSoC4/ADC_1.c ****     }
1773:Generated_Source\PSoC4/ADC_1.c **** 
1774:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1775:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_SetOpampTrim
1776:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1777:Generated_Source\PSoC4/ADC_1.c ****     *
1778:Generated_Source\PSoC4/ADC_1.c ****     * Write the Opamp trim code and return the comparator status.
1779:Generated_Source\PSoC4/ADC_1.c ****     *
1780:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1781:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_SetOpampTrim(uint32 opampTrim)
1782:Generated_Source\PSoC4/ADC_1.c ****     {
1783:Generated_Source\PSoC4/ADC_1.c ****         uint32 trimRegVal = ADC_1_UABH_A_OA_TRIM_OA_REG;
1784:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal &= ~(ADC_1_OPAMP_TRIM_MASK << CyUAB_OA_OFFSET_SHIFT);
1785:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal |= (opampTrim << CyUAB_OA_OFFSET_SHIFT);
1786:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_A_OA_TRIM_OA_REG = trimRegVal;
1787:Generated_Source\PSoC4/ADC_1.c **** 
1788:Generated_Source\PSoC4/ADC_1.c ****         return ADC_1_GetCompStatus();
1789:Generated_Source\PSoC4/ADC_1.c ****     }
1790:Generated_Source\PSoC4/ADC_1.c **** 
1791:Generated_Source\PSoC4/ADC_1.c **** 
1792:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1793:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_SetAgndTrim
1794:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1795:Generated_Source\PSoC4/ADC_1.c ****     *
1796:Generated_Source\PSoC4/ADC_1.c ****     * Write the Agnd trim code and return the comparator status.
1797:Generated_Source\PSoC4/ADC_1.c ****     *
1798:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1799:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_SetAgndTrim(uint32 agndTrim)
1800:Generated_Source\PSoC4/ADC_1.c ****     {
1801:Generated_Source\PSoC4/ADC_1.c ****         uint32 trimRegVal = ADC_1_UABH_A_OA_TRIM_AGND_REG;
1802:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal &= ~(ADC_1_AGND_TRIM_MASK << CyUAB_AGND_OFFSET_SHIFT);
1803:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal |= (agndTrim << CyUAB_AGND_OFFSET_SHIFT);
1804:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_A_OA_TRIM_AGND_REG = trimRegVal;
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 59


1805:Generated_Source\PSoC4/ADC_1.c **** 
1806:Generated_Source\PSoC4/ADC_1.c ****         return ADC_1_GetCompStatus();
1807:Generated_Source\PSoC4/ADC_1.c ****     }
1808:Generated_Source\PSoC4/ADC_1.c **** 
1809:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1810:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_GetCompStatus
1811:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1812:Generated_Source\PSoC4/ADC_1.c ****     *
1813:Generated_Source\PSoC4/ADC_1.c ****     * Delays to allow filter to settle before reading the ADC result.
1814:Generated_Source\PSoC4/ADC_1.c ****     * Returns 1 if the filter output is greater than AGND, else 0.
1815:Generated_Source\PSoC4/ADC_1.c ****     *
1816:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1817:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_GetCompStatus(void)
1818:Generated_Source\PSoC4/ADC_1.c ****     {
1819:Generated_Source\PSoC4/ADC_1.c ****         uint32 compStatus = 0UL;
1820:Generated_Source\PSoC4/ADC_1.c ****         int16 zeroCode = 0;
1821:Generated_Source\PSoC4/ADC_1.c **** 
1822:Generated_Source\PSoC4/ADC_1.c ****         CyDelayUs(ADC_1_allConfigs[ADC_1_currentConfig].filterTrimDelay);
1823:Generated_Source\PSoC4/ADC_1.c **** 
1824:Generated_Source\PSoC4/ADC_1.c ****         /*If unsigned differential */
1825:Generated_Source\PSoC4/ADC_1.c ****         if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
1826:Generated_Source\PSoC4/ADC_1.c ****             & ADC_1_SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_MSK) == 0U)
1827:Generated_Source\PSoC4/ADC_1.c ****         {
1828:Generated_Source\PSoC4/ADC_1.c ****             zeroCode = 0x800;
1829:Generated_Source\PSoC4/ADC_1.c ****         }
1830:Generated_Source\PSoC4/ADC_1.c **** 
1831:Generated_Source\PSoC4/ADC_1.c ****         if (ADC_1_GetResult16(ADC_1_FILTER_ADC_CHANNEL) < zeroCode)
1832:Generated_Source\PSoC4/ADC_1.c ****         {
1833:Generated_Source\PSoC4/ADC_1.c ****             compStatus = 1UL;
1834:Generated_Source\PSoC4/ADC_1.c ****         }
1835:Generated_Source\PSoC4/ADC_1.c **** 
1836:Generated_Source\PSoC4/ADC_1.c ****         return compStatus;
1837:Generated_Source\PSoC4/ADC_1.c ****     }
1838:Generated_Source\PSoC4/ADC_1.c **** 
1839:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1840:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_IncOpampTrim
1841:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1842:Generated_Source\PSoC4/ADC_1.c ****     *
1843:Generated_Source\PSoC4/ADC_1.c ****     * Increments the Opamp trim code by one. Note that Opamp trim code is
1844:Generated_Source\PSoC4/ADC_1.c ****     * a 4-bit sign-magnitude value.
1845:Generated_Source\PSoC4/ADC_1.c ****     *
1846:Generated_Source\PSoC4/ADC_1.c ****     * Skips OPAMP_TRIM_NEG_BASE because it is the same as POS_BASE.
1847:Generated_Source\PSoC4/ADC_1.c ****     *
1848:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1849:Generated_Source\PSoC4/ADC_1.c ****     /* Skips OPAMP_TRIM_NEG_BASE because it is the same as POS_BASE. */
1850:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_IncOpampTrim(uint32 trim)
1851:Generated_Source\PSoC4/ADC_1.c ****     {
1852:Generated_Source\PSoC4/ADC_1.c **** 
1853:Generated_Source\PSoC4/ADC_1.c ****         if (trim < (ADC_1_OPAMP_TRIM_POS_LIMIT - 1uL))
1854:Generated_Source\PSoC4/ADC_1.c ****         {
1855:Generated_Source\PSoC4/ADC_1.c ****             trim = trim + 1uL;
1856:Generated_Source\PSoC4/ADC_1.c ****         }
1857:Generated_Source\PSoC4/ADC_1.c ****         else if ((ADC_1_OPAMP_TRIM_POS_LIMIT - 1uL) == trim)
1858:Generated_Source\PSoC4/ADC_1.c ****         {
1859:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_OPAMP_TRIM_NEG_LIMIT;
1860:Generated_Source\PSoC4/ADC_1.c ****         }
1861:Generated_Source\PSoC4/ADC_1.c ****         else if (trim <= (ADC_1_OPAMP_TRIM_NEG_BASE + 1uL))
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 60


1862:Generated_Source\PSoC4/ADC_1.c ****         {
1863:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_OPAMP_TRIM_POS_BASE;
1864:Generated_Source\PSoC4/ADC_1.c ****         }
1865:Generated_Source\PSoC4/ADC_1.c ****         else
1866:Generated_Source\PSoC4/ADC_1.c ****         {
1867:Generated_Source\PSoC4/ADC_1.c ****             trim = trim - 1uL;
1868:Generated_Source\PSoC4/ADC_1.c ****         }
1869:Generated_Source\PSoC4/ADC_1.c **** 
1870:Generated_Source\PSoC4/ADC_1.c ****         return trim;
1871:Generated_Source\PSoC4/ADC_1.c ****     }
1872:Generated_Source\PSoC4/ADC_1.c **** 
1873:Generated_Source\PSoC4/ADC_1.c **** 
1874:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1875:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_DecOpampTrim
1876:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1877:Generated_Source\PSoC4/ADC_1.c ****     *
1878:Generated_Source\PSoC4/ADC_1.c ****     * Decrements the Opamp trim code by one. Note that Opamp trim code is
1879:Generated_Source\PSoC4/ADC_1.c ****     * a 4-bit sign-magnitude value.
1880:Generated_Source\PSoC4/ADC_1.c ****     *
1881:Generated_Source\PSoC4/ADC_1.c ****     * Skips OPAMP_TRIM_NEG_BASE because it is the same as POS_BASE.
1882:Generated_Source\PSoC4/ADC_1.c ****     *
1883:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1884:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_DecOpampTrim(uint32 trim)
1885:Generated_Source\PSoC4/ADC_1.c ****     {
1886:Generated_Source\PSoC4/ADC_1.c **** 
1887:Generated_Source\PSoC4/ADC_1.c ****         if (ADC_1_OPAMP_TRIM_POS_BASE == trim)
1888:Generated_Source\PSoC4/ADC_1.c ****         {
1889:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_OPAMP_TRIM_NEG_BASE + 1uL;
1890:Generated_Source\PSoC4/ADC_1.c ****         }
1891:Generated_Source\PSoC4/ADC_1.c ****         else if (trim < ADC_1_OPAMP_TRIM_POS_LIMIT)
1892:Generated_Source\PSoC4/ADC_1.c ****         {
1893:Generated_Source\PSoC4/ADC_1.c ****             trim = trim - 1uL;
1894:Generated_Source\PSoC4/ADC_1.c ****         }
1895:Generated_Source\PSoC4/ADC_1.c ****         else if (trim < ADC_1_OPAMP_TRIM_NEG_LIMIT)
1896:Generated_Source\PSoC4/ADC_1.c ****         {
1897:Generated_Source\PSoC4/ADC_1.c ****             trim = trim + 1uL;
1898:Generated_Source\PSoC4/ADC_1.c ****         }
1899:Generated_Source\PSoC4/ADC_1.c ****         else
1900:Generated_Source\PSoC4/ADC_1.c ****         {
1901:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_OPAMP_TRIM_POS_LIMIT - 1uL;
1902:Generated_Source\PSoC4/ADC_1.c ****         }
1903:Generated_Source\PSoC4/ADC_1.c **** 
1904:Generated_Source\PSoC4/ADC_1.c ****         return trim;
1905:Generated_Source\PSoC4/ADC_1.c ****     }
1906:Generated_Source\PSoC4/ADC_1.c **** 
1907:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1908:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_IncAgndTrim
1909:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1910:Generated_Source\PSoC4/ADC_1.c ****     *
1911:Generated_Source\PSoC4/ADC_1.c ****     * Increments the Agnd trim code by one. Note that Agnd trim code is
1912:Generated_Source\PSoC4/ADC_1.c ****     * a 5-bit sign-magnitude value.
1913:Generated_Source\PSoC4/ADC_1.c ****     *
1914:Generated_Source\PSoC4/ADC_1.c ****     * Skips AGND_TRIM_NEG_BASE because it is the same as POS_BASE.
1915:Generated_Source\PSoC4/ADC_1.c ****     *
1916:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1917:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_IncAgndTrim(uint32 trim)
1918:Generated_Source\PSoC4/ADC_1.c ****     {
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 61


1919:Generated_Source\PSoC4/ADC_1.c **** 
1920:Generated_Source\PSoC4/ADC_1.c ****         if (trim < (ADC_1_AGND_TRIM_POS_LIMIT - 1uL))
1921:Generated_Source\PSoC4/ADC_1.c ****         {
1922:Generated_Source\PSoC4/ADC_1.c ****             trim = trim + 1uL;
1923:Generated_Source\PSoC4/ADC_1.c ****         }
1924:Generated_Source\PSoC4/ADC_1.c ****         else if ((ADC_1_AGND_TRIM_POS_LIMIT - 1uL) == trim)
1925:Generated_Source\PSoC4/ADC_1.c ****         {
1926:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_AGND_TRIM_NEG_LIMIT;
1927:Generated_Source\PSoC4/ADC_1.c ****         }
1928:Generated_Source\PSoC4/ADC_1.c ****         else if (trim <= (ADC_1_AGND_TRIM_NEG_BASE + 1uL))
1929:Generated_Source\PSoC4/ADC_1.c ****         {
1930:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_AGND_TRIM_POS_BASE;
1931:Generated_Source\PSoC4/ADC_1.c ****         }
1932:Generated_Source\PSoC4/ADC_1.c ****         else
1933:Generated_Source\PSoC4/ADC_1.c ****         {
1934:Generated_Source\PSoC4/ADC_1.c ****             trim = trim - 1uL;
1935:Generated_Source\PSoC4/ADC_1.c ****         }
1936:Generated_Source\PSoC4/ADC_1.c **** 
1937:Generated_Source\PSoC4/ADC_1.c ****         return trim;
1938:Generated_Source\PSoC4/ADC_1.c ****     }
1939:Generated_Source\PSoC4/ADC_1.c **** 
1940:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1941:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_DecAgndTrim
1942:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1943:Generated_Source\PSoC4/ADC_1.c ****     *
1944:Generated_Source\PSoC4/ADC_1.c ****     * Decrements the Agnd trim code by one. Note that Agnd trim code is
1945:Generated_Source\PSoC4/ADC_1.c ****     * a 5-bit sign-magnitude value.
1946:Generated_Source\PSoC4/ADC_1.c ****     *
1947:Generated_Source\PSoC4/ADC_1.c ****     * Skips AGND_TRIM_NEG_BASE because it is the same as POS_BASE.
1948:Generated_Source\PSoC4/ADC_1.c ****     *
1949:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1950:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_DecAgndTrim(uint32 trim)
1951:Generated_Source\PSoC4/ADC_1.c ****     {
1952:Generated_Source\PSoC4/ADC_1.c **** 
1953:Generated_Source\PSoC4/ADC_1.c ****         if (trim == ADC_1_AGND_TRIM_POS_BASE)
1954:Generated_Source\PSoC4/ADC_1.c ****         {
1955:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_AGND_TRIM_NEG_BASE + 1uL;
1956:Generated_Source\PSoC4/ADC_1.c ****         }
1957:Generated_Source\PSoC4/ADC_1.c ****         else if (trim < ADC_1_AGND_TRIM_POS_LIMIT)
1958:Generated_Source\PSoC4/ADC_1.c ****         {
1959:Generated_Source\PSoC4/ADC_1.c ****             trim = trim - 1uL;
1960:Generated_Source\PSoC4/ADC_1.c ****         }
1961:Generated_Source\PSoC4/ADC_1.c ****         else if (trim < ADC_1_AGND_TRIM_NEG_LIMIT)
1962:Generated_Source\PSoC4/ADC_1.c ****         {
1963:Generated_Source\PSoC4/ADC_1.c ****             trim = trim + 1uL;
1964:Generated_Source\PSoC4/ADC_1.c ****         }
1965:Generated_Source\PSoC4/ADC_1.c ****         else
1966:Generated_Source\PSoC4/ADC_1.c ****         {
1967:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_AGND_TRIM_POS_LIMIT - 1uL;
1968:Generated_Source\PSoC4/ADC_1.c ****         }
1969:Generated_Source\PSoC4/ADC_1.c **** 
1970:Generated_Source\PSoC4/ADC_1.c ****         return trim;
1971:Generated_Source\PSoC4/ADC_1.c ****     }
1972:Generated_Source\PSoC4/ADC_1.c **** 
1973:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1974:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_filterInit
1975:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 62


1976:Generated_Source\PSoC4/ADC_1.c ****     *
1977:Generated_Source\PSoC4/ADC_1.c ****     * Initializes the UAB halves and the CTB buffer between the AGND and the SAR.
1978:Generated_Source\PSoC4/ADC_1.c ****     *
1979:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1980:Generated_Source\PSoC4/ADC_1.c ****     void ADC_1_filterInit(uint32 configNum)
1981:Generated_Source\PSoC4/ADC_1.c ****     {
1982:Generated_Source\PSoC4/ADC_1.c ****         /* Configure the common filter settings if any configuration filters */
1983:Generated_Source\PSoC4/ADC_1.c ****         switch (configNum)
1984:Generated_Source\PSoC4/ADC_1.c ****         {
1985:Generated_Source\PSoC4/ADC_1.c ****             #if (0u != ADC_1_CFG0_FILTER_PRESENT)
1986:Generated_Source\PSoC4/ADC_1.c ****             case 0u:
1987:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_A_Init(&ADC_1_CFG0_UABH_A_FILTER_config);
1988:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_B_Init(&ADC_1_CFG0_UABH_B_FILTER_config);
1989:Generated_Source\PSoC4/ADC_1.c ****             break;
1990:Generated_Source\PSoC4/ADC_1.c ****             #endif
1991:Generated_Source\PSoC4/ADC_1.c ****             #if (0u != ADC_1_CFG1_FILTER_PRESENT)
1992:Generated_Source\PSoC4/ADC_1.c ****             case 1u:
1993:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_A_Init(&ADC_1_CFG1_UABH_A_FILTER_config);
1994:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_B_Init(&ADC_1_CFG1_UABH_B_FILTER_config);
1995:Generated_Source\PSoC4/ADC_1.c ****             break;
1996:Generated_Source\PSoC4/ADC_1.c ****             #endif
1997:Generated_Source\PSoC4/ADC_1.c ****             #if (0u != ADC_1_CFG2_FILTER_PRESENT)
1998:Generated_Source\PSoC4/ADC_1.c ****             case 2u:
1999:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_A_Init(&ADC_1_CFG2_UABH_A_FILTER_config);
2000:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_B_Init(&ADC_1_CFG2_UABH_B_FILTER_config);
2001:Generated_Source\PSoC4/ADC_1.c ****             break;
2002:Generated_Source\PSoC4/ADC_1.c ****             #endif
2003:Generated_Source\PSoC4/ADC_1.c ****             #if (0u != ADC_1_CFG3_FILTER_PRESENT)
2004:Generated_Source\PSoC4/ADC_1.c ****             case 3u:
2005:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_A_Init(&ADC_1_CFG3_UABH_A_FILTER_config);
2006:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_B_Init(&ADC_1_CFG3_UABH_B_FILTER_config);
2007:Generated_Source\PSoC4/ADC_1.c ****             break;
2008:Generated_Source\PSoC4/ADC_1.c ****             #endif
2009:Generated_Source\PSoC4/ADC_1.c ****             default:
2010:Generated_Source\PSoC4/ADC_1.c ****             break;
2011:Generated_Source\PSoC4/ADC_1.c ****         }
2012:Generated_Source\PSoC4/ADC_1.c **** 
2013:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_FILTERAGND2SAR_BUFFER_Init();
2014:Generated_Source\PSoC4/ADC_1.c ****     }
2015:Generated_Source\PSoC4/ADC_1.c **** #endif /* ADC_1_ANY_CONFIG_USES_FILTER != 0u */
2016:Generated_Source\PSoC4/ADC_1.c **** 
2017:Generated_Source\PSoC4/ADC_1.c **** 
2018:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
2019:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_Init
2020:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
2021:Generated_Source\PSoC4/ADC_1.c **** *
2022:Generated_Source\PSoC4/ADC_1.c **** * \brief Initialize the component according to parameters defined in the
2023:Generated_Source\PSoC4/ADC_1.c **** * customizer.
2024:Generated_Source\PSoC4/ADC_1.c **** *
2025:Generated_Source\PSoC4/ADC_1.c **** * \param None
2026:Generated_Source\PSoC4/ADC_1.c **** *
2027:Generated_Source\PSoC4/ADC_1.c **** * \return None
2028:Generated_Source\PSoC4/ADC_1.c **** *
2029:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
2030:Generated_Source\PSoC4/ADC_1.c **** *
2031:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
2032:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_Init(void)
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 63


2033:Generated_Source\PSoC4/ADC_1.c **** {
 1432              		.loc 1 2033 0
 1433              		.cfi_startproc
 1434              		@ args = 0, pretend = 0, frame = 0
 1435              		@ frame_needed = 0, uses_anonymous_args = 0
 1436 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1437              		.cfi_def_cfa_offset 20
 1438              		.cfi_offset 4, -20
 1439              		.cfi_offset 5, -16
 1440              		.cfi_offset 6, -12
 1441              		.cfi_offset 7, -8
 1442              		.cfi_offset 14, -4
 1443 0002 4746     		mov	r7, r8
 1444 0004 80B4     		push	{r7}
 1445              		.cfi_def_cfa_offset 24
 1446              		.cfi_offset 8, -24
 1447              	.LVL131:
2034:Generated_Source\PSoC4/ADC_1.c ****     uint32 chNum = 0ul;
2035:Generated_Source\PSoC4/ADC_1.c ****     uint32 configNum = 0u;
2036:Generated_Source\PSoC4/ADC_1.c ****     int32 counts;
2037:Generated_Source\PSoC4/ADC_1.c **** 
2038:Generated_Source\PSoC4/ADC_1.c ****     if(0u == ADC_1_initVar)
 1448              		.loc 1 2038 0
 1449 0006 3C4B     		ldr	r3, .L119
 1450 0008 1B79     		ldrb	r3, [r3, #4]
 1451 000a 002B     		cmp	r3, #0
 1452 000c 57D0     		beq	.L116
 1453 000e 70E0     		b	.L107
 1454              	.LVL132:
 1455              	.L115:
2039:Generated_Source\PSoC4/ADC_1.c ****     {
2040:Generated_Source\PSoC4/ADC_1.c ****         /* Set offset and countsPer10Volt for all channels */
2041:Generated_Source\PSoC4/ADC_1.c ****         for(chNum = 0ul; chNum < ADC_1_TOTAL_CHANNELS_NUM; chNum++)
2042:Generated_Source\PSoC4/ADC_1.c ****         {
2043:Generated_Source\PSoC4/ADC_1.c ****             if((ADC_1_channelsConfig[chNum] & ADC_1_SAR_CHAN_CONFIG_RESOLUTION_MSK) != 0u)
 1456              		.loc 1 2043 0
 1457 0010 A300     		lsls	r3, r4, #2
 1458 0012 3A4A     		ldr	r2, .L119+4
 1459 0014 9B58     		ldr	r3, [r3, r2]
 1460 0016 9A05     		lsls	r2, r3, #22
 1461 0018 0AD5     		bpl	.L117
2044:Generated_Source\PSoC4/ADC_1.c ****             {
2045:Generated_Source\PSoC4/ADC_1.c ****                 if((ADC_1_allConfigs[configNum].sampleCtrl
 1462              		.loc 1 2045 0
 1463 001a E900     		lsls	r1, r5, #3
 1464 001c 491B     		subs	r1, r1, r5
 1465 001e CA00     		lsls	r2, r1, #3
 1466 0020 3749     		ldr	r1, .L119+8
 1467 0022 8A18     		adds	r2, r1, r2
 1468 0024 D268     		ldr	r2, [r2, #12]
 1469 0026 D207     		lsls	r2, r2, #31
 1470 0028 05D5     		bpl	.L118
2046:Generated_Source\PSoC4/ADC_1.c ****                     & ADC_1_SAR_SAMPLE_CTRL_SUB_RESOLUTION_MSK)
2047:Generated_Source\PSoC4/ADC_1.c ****                     == ADC_1_SUB_RESOLUTION_10B)
2048:Generated_Source\PSoC4/ADC_1.c ****                 {
2049:Generated_Source\PSoC4/ADC_1.c ****                     counts = (int32) ADC_1_SAR_WRK_MAX_10BIT;
 1471              		.loc 1 2049 0
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 64


 1472 002a 8020     		movs	r0, #128
 1473 002c C000     		lsls	r0, r0, #3
 1474 002e 04E0     		b	.L110
 1475              	.L117:
2050:Generated_Source\PSoC4/ADC_1.c ****                 }
2051:Generated_Source\PSoC4/ADC_1.c ****                 else
2052:Generated_Source\PSoC4/ADC_1.c ****                 {
2053:Generated_Source\PSoC4/ADC_1.c ****                     counts = (int32) ADC_1_SAR_WRK_MAX_8BIT;
2054:Generated_Source\PSoC4/ADC_1.c ****                 }
2055:Generated_Source\PSoC4/ADC_1.c ****             }
2056:Generated_Source\PSoC4/ADC_1.c ****             else
2057:Generated_Source\PSoC4/ADC_1.c ****             {
2058:Generated_Source\PSoC4/ADC_1.c ****                counts = (int32)ADC_1_SAR_WRK_MAX_12BIT;
 1476              		.loc 1 2058 0
 1477 0030 8020     		movs	r0, #128
 1478 0032 4001     		lsls	r0, r0, #5
 1479 0034 01E0     		b	.L110
 1480              	.L118:
2053:Generated_Source\PSoC4/ADC_1.c ****                 }
 1481              		.loc 1 2053 0
 1482 0036 8020     		movs	r0, #128
 1483 0038 4000     		lsls	r0, r0, #1
 1484              	.L110:
 1485              	.LVL133:
2059:Generated_Source\PSoC4/ADC_1.c ****             }
2060:Generated_Source\PSoC4/ADC_1.c **** 
2061:Generated_Source\PSoC4/ADC_1.c ****             /* Single Ended Channel */
2062:Generated_Source\PSoC4/ADC_1.c ****             if((ADC_1_channelsConfig[chNum] & ADC_1_SAR_CHAN_CONFIG_DIFFERENTIAL_EN_MSK) == 0u)
 1486              		.loc 1 2062 0
 1487 003a DB05     		lsls	r3, r3, #23
 1488 003c 1ED4     		bmi	.L111
2063:Generated_Source\PSoC4/ADC_1.c ****             {
2064:Generated_Source\PSoC4/ADC_1.c ****                 if(((ADC_1_allConfigs[configNum].sampleCtrl
 1489              		.loc 1 2064 0
 1490 003e EA00     		lsls	r2, r5, #3
 1491 0040 521B     		subs	r2, r2, r5
 1492 0042 D300     		lsls	r3, r2, #3
 1493 0044 2E4A     		ldr	r2, .L119+8
 1494 0046 D318     		adds	r3, r2, r3
 1495 0048 DB68     		ldr	r3, [r3, #12]
 1496 004a 5B07     		lsls	r3, r3, #29
 1497 004c 11D5     		bpl	.L112
2065:Generated_Source\PSoC4/ADC_1.c ****                     & ADC_1_SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_MSK)
2066:Generated_Source\PSoC4/ADC_1.c ****                     == ADC_1_SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_MSK) &&
2067:Generated_Source\PSoC4/ADC_1.c ****                     ((ADC_1_allConfigs[configNum].ctrl & ADC_1_SAR_CTRL_NEG_SEL_MSK)
 1498              		.loc 1 2067 0
 1499 004e EA00     		lsls	r2, r5, #3
 1500 0050 521B     		subs	r2, r2, r5
 1501 0052 D300     		lsls	r3, r2, #3
 1502 0054 2A4A     		ldr	r2, .L119+8
 1503 0056 D318     		adds	r3, r2, r3
 1504 0058 9B68     		ldr	r3, [r3, #8]
 1505 005a E022     		movs	r2, #224
 1506 005c 1201     		lsls	r2, r2, #4
 1507 005e 1340     		ands	r3, r2
2066:Generated_Source\PSoC4/ADC_1.c ****                     ((ADC_1_allConfigs[configNum].ctrl & ADC_1_SAR_CTRL_NEG_SEL_MSK)
 1508              		.loc 1 2066 0
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 65


 1509 0060 9342     		cmp	r3, r2
 1510 0062 06D1     		bne	.L112
2068:Generated_Source\PSoC4/ADC_1.c ****                     == ADC_1_NEG_VREF_SHIFTED))
2069:Generated_Source\PSoC4/ADC_1.c ****                 {
2070:Generated_Source\PSoC4/ADC_1.c ****                     /* Set offset to the minus half scale to convert results to unsigned format */
2071:Generated_Source\PSoC4/ADC_1.c ****                     ADC_1_offset[chNum] = (int16)(counts / -2);
 1511              		.loc 1 2071 0
 1512 0064 4308     		lsrs	r3, r0, #1
 1513 0066 5B42     		rsbs	r3, r3, #0
 1514 0068 1BB2     		sxth	r3, r3
 1515 006a 6200     		lsls	r2, r4, #1
 1516 006c 2549     		ldr	r1, .L119+12
 1517 006e 5352     		strh	r3, [r2, r1]
 1518 0070 08E0     		b	.L113
 1519              	.L112:
2072:Generated_Source\PSoC4/ADC_1.c ****                 }
2073:Generated_Source\PSoC4/ADC_1.c ****                 else
2074:Generated_Source\PSoC4/ADC_1.c ****                 {
2075:Generated_Source\PSoC4/ADC_1.c ****                     ADC_1_offset[chNum] = 0;
 1520              		.loc 1 2075 0
 1521 0072 6300     		lsls	r3, r4, #1
 1522 0074 0021     		movs	r1, #0
 1523 0076 234A     		ldr	r2, .L119+12
 1524 0078 9952     		strh	r1, [r3, r2]
 1525 007a 03E0     		b	.L113
 1526              	.L111:
2076:Generated_Source\PSoC4/ADC_1.c ****                 }
2077:Generated_Source\PSoC4/ADC_1.c **** 
2078:Generated_Source\PSoC4/ADC_1.c ****             }
2079:Generated_Source\PSoC4/ADC_1.c ****             else    /* Differential channel */
2080:Generated_Source\PSoC4/ADC_1.c ****             {
2081:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_offset[chNum] = 0;
 1527              		.loc 1 2081 0
 1528 007c 6300     		lsls	r3, r4, #1
 1529 007e 0021     		movs	r1, #0
 1530 0080 204A     		ldr	r2, .L119+12
 1531 0082 9952     		strh	r1, [r3, r2]
 1532              	.L113:
2082:Generated_Source\PSoC4/ADC_1.c ****             }
2083:Generated_Source\PSoC4/ADC_1.c **** 
2084:Generated_Source\PSoC4/ADC_1.c ****             /* Calculate gain in counts per 10 volts with rounding */
2085:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_countsPer10Volt[chNum] = (int16)(((counts * ADC_1_10MV_COUNTS) \
 1533              		.loc 1 2085 0
 1534 0084 204B     		ldr	r3, .L119+16
 1535 0086 5843     		muls	r0, r3
 1536              	.LVL134:
2086:Generated_Source\PSoC4/ADC_1.c ****                             + ADC_1_allConfigs[configNum].vrefMvValue) \
 1537              		.loc 1 2086 0
 1538 0088 1D4B     		ldr	r3, .L119+8
 1539 008a 9846     		mov	r8, r3
 1540 008c EF00     		lsls	r7, r5, #3
 1541 008e 7B1B     		subs	r3, r7, r5
 1542 0090 DE00     		lsls	r6, r3, #3
 1543 0092 4644     		add	r6, r6, r8
 1544 0094 F16A     		ldr	r1, [r6, #44]
 1545 0096 4018     		adds	r0, r0, r1
2087:Generated_Source\PSoC4/ADC_1.c ****                             / (ADC_1_allConfigs[configNum].vrefMvValue * 2));
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 66


 1546              		.loc 1 2087 0
 1547 0098 4900     		lsls	r1, r1, #1
 1548 009a FFF7FEFF 		bl	__aeabi_idiv
 1549              	.LVL135:
2085:Generated_Source\PSoC4/ADC_1.c ****                             + ADC_1_allConfigs[configNum].vrefMvValue) \
 1550              		.loc 1 2085 0
 1551 009e 00B2     		sxth	r0, r0
 1552 00a0 A300     		lsls	r3, r4, #2
 1553 00a2 1A4A     		ldr	r2, .L119+20
 1554 00a4 9850     		str	r0, [r3, r2]
2088:Generated_Source\PSoC4/ADC_1.c **** 
2089:Generated_Source\PSoC4/ADC_1.c ****             /* Increment configuration number after rolling over to the next configuration*/
2090:Generated_Source\PSoC4/ADC_1.c ****             if((ADC_1_allConfigs[configNum].channelBase
 1555              		.loc 1 2090 0
 1556 00a6 7F1B     		subs	r7, r7, r5
 1557 00a8 FB00     		lsls	r3, r7, #3
 1558 00aa 4246     		mov	r2, r8
 1559 00ac 9A58     		ldr	r2, [r3, r2]
2091:Generated_Source\PSoC4/ADC_1.c ****                 + (ADC_1_allConfigs[configNum].numChannels - 1uL)) == chNum)
 1560              		.loc 1 2091 0
 1561 00ae 7368     		ldr	r3, [r6, #4]
 1562 00b0 D318     		adds	r3, r2, r3
 1563 00b2 013B     		subs	r3, r3, #1
2090:Generated_Source\PSoC4/ADC_1.c ****                 + (ADC_1_allConfigs[configNum].numChannels - 1uL)) == chNum)
 1564              		.loc 1 2090 0
 1565 00b4 9C42     		cmp	r4, r3
 1566 00b6 00D1     		bne	.L114
2092:Generated_Source\PSoC4/ADC_1.c ****             {
2093:Generated_Source\PSoC4/ADC_1.c ****                 configNum++;
 1567              		.loc 1 2093 0
 1568 00b8 0135     		adds	r5, r5, #1
 1569              	.LVL136:
 1570              	.L114:
2041:Generated_Source\PSoC4/ADC_1.c ****         {
 1571              		.loc 1 2041 0 discriminator 2
 1572 00ba 0134     		adds	r4, r4, #1
 1573              	.LVL137:
 1574 00bc 01E0     		b	.L108
 1575              	.LVL138:
 1576              	.L116:
 1577 00be 0025     		movs	r5, #0
 1578 00c0 0024     		movs	r4, #0
 1579              	.LVL139:
 1580              	.L108:
2041:Generated_Source\PSoC4/ADC_1.c ****         {
 1581              		.loc 1 2041 0 is_stmt 0 discriminator 1
 1582 00c2 012C     		cmp	r4, #1
 1583 00c4 A4D9     		bls	.L115
2094:Generated_Source\PSoC4/ADC_1.c ****             }
2095:Generated_Source\PSoC4/ADC_1.c ****         } /* for(chNum = 0ul; chNum < ADC_1_TOTAL_CHANNELS_NUM; chNum++) */
2096:Generated_Source\PSoC4/ADC_1.c **** 
2097:Generated_Source\PSoC4/ADC_1.c ****         /* Start and set interrupt vector */
2098:Generated_Source\PSoC4/ADC_1.c ****         CyIntSetPriority(ADC_1_INTC_NUMBER, ADC_1_INTC_PRIOR_NUMBER);
 1584              		.loc 1 2098 0 is_stmt 1
 1585 00c6 0321     		movs	r1, #3
 1586 00c8 0F20     		movs	r0, #15
 1587 00ca FFF7FEFF 		bl	CyIntSetPriority
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 67


 1588              	.LVL140:
2099:Generated_Source\PSoC4/ADC_1.c ****         (void)CyIntSetVector(ADC_1_INTC_NUMBER, &ADC_1_ISR);
 1589              		.loc 1 2099 0
 1590 00ce 1049     		ldr	r1, .L119+24
 1591 00d0 0F20     		movs	r0, #15
 1592 00d2 FFF7FEFF 		bl	CyIntSetVector
 1593              	.LVL141:
2100:Generated_Source\PSoC4/ADC_1.c **** 
2101:Generated_Source\PSoC4/ADC_1.c ****         /* Initialize configuration zero if SelectConfig has not been called */
2102:Generated_Source\PSoC4/ADC_1.c ****         if(0u == ADC_1_selected)
 1594              		.loc 1 2102 0
 1595 00d6 084B     		ldr	r3, .L119
 1596 00d8 5B79     		ldrb	r3, [r3, #5]
 1597 00da 002B     		cmp	r3, #0
 1598 00dc 09D1     		bne	.L107
2103:Generated_Source\PSoC4/ADC_1.c ****         {
2104:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_selected = 1u;
 1599              		.loc 1 2104 0
 1600 00de 0122     		movs	r2, #1
 1601 00e0 054B     		ldr	r3, .L119
 1602 00e2 5A71     		strb	r2, [r3, #5]
 1603              	.LVL142:
2105:Generated_Source\PSoC4/ADC_1.c ****             configNum = 0u;
2106:Generated_Source\PSoC4/ADC_1.c ****             /* Change Vref selection if is was routed by Creator. Break. */
2107:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_VREF_ROUTED)
2108:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_vrefAMux_DisconnectAll();
2109:Generated_Source\PSoC4/ADC_1.c ****             #endif
2110:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_InitConfig(&ADC_1_allConfigs[configNum]);
 1604              		.loc 1 2110 0
 1605 00e4 064C     		ldr	r4, .L119+8
 1606              	.LVL143:
 1607 00e6 2000     		movs	r0, r4
 1608 00e8 FFF7FEFF 		bl	ADC_1_InitConfig
 1609              	.LVL144:
2111:Generated_Source\PSoC4/ADC_1.c ****             /* Change Vref selection if is was routed by Creator. Make. */
2112:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_VREF_ROUTED)
2113:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_vrefAMux_Select((uint8)configNum);
2114:Generated_Source\PSoC4/ADC_1.c ****             #endif
2115:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_SAR_CHAN_EN_REG = ADC_1_allConfigs[configNum].chanEn;
 1610              		.loc 1 2115 0
 1611 00ec 226A     		ldr	r2, [r4, #32]
 1612 00ee 094B     		ldr	r3, .L119+28
 1613 00f0 1A60     		str	r2, [r3]
 1614              	.LVL145:
 1615              	.L107:
2116:Generated_Source\PSoC4/ADC_1.c ****             #if(0u != ADC_1_ANY_CONFIG_USES_FILTER)
2117:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_filterVinMux_Select((uint8)configNum);
2118:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_filterInit(configNum);
2119:Generated_Source\PSoC4/ADC_1.c ****             #endif
2120:Generated_Source\PSoC4/ADC_1.c ****         }
2121:Generated_Source\PSoC4/ADC_1.c ****     }
2122:Generated_Source\PSoC4/ADC_1.c ****     return;
2123:Generated_Source\PSoC4/ADC_1.c **** }
 1616              		.loc 1 2123 0
 1617              		@ sp needed
 1618 00f2 04BC     		pop	{r2}
 1619 00f4 9046     		mov	r8, r2
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 68


 1620 00f6 F0BD     		pop	{r4, r5, r6, r7, pc}
 1621              	.L120:
 1622              		.align	2
 1623              	.L119:
 1624 00f8 00000000 		.word	.LANCHOR0
 1625 00fc 00000000 		.word	.LANCHOR1
 1626 0100 00000000 		.word	ADC_1_allConfigs
 1627 0104 00000000 		.word	ADC_1_offset
 1628 0108 10270000 		.word	10000
 1629 010c 00000000 		.word	ADC_1_countsPer10Volt
 1630 0110 00000000 		.word	ADC_1_ISR
 1631 0114 20003A40 		.word	1077542944
 1632              		.cfi_endproc
 1633              	.LFE26:
 1634              		.size	ADC_1_Init, .-ADC_1_Init
 1635              		.section	.text.ADC_1_Enable,"ax",%progbits
 1636              		.align	2
 1637              		.global	ADC_1_Enable
 1638              		.code	16
 1639              		.thumb_func
 1640              		.type	ADC_1_Enable, %function
 1641              	ADC_1_Enable:
 1642              	.LFB27:
2124:Generated_Source\PSoC4/ADC_1.c **** 
2125:Generated_Source\PSoC4/ADC_1.c **** 
2126:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
2127:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_Enable
2128:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
2129:Generated_Source\PSoC4/ADC_1.c **** *
2130:Generated_Source\PSoC4/ADC_1.c **** * \brief Enables the component.
2131:Generated_Source\PSoC4/ADC_1.c **** *
2132:Generated_Source\PSoC4/ADC_1.c **** * \param None
2133:Generated_Source\PSoC4/ADC_1.c **** *
2134:Generated_Source\PSoC4/ADC_1.c **** * \return None
2135:Generated_Source\PSoC4/ADC_1.c **** *
2136:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect
2137:Generated_Source\PSoC4/ADC_1.c **** *  None
2138:Generated_Source\PSoC4/ADC_1.c **** *
2139:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
2140:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_Enable(void)
2141:Generated_Source\PSoC4/ADC_1.c **** {
 1643              		.loc 1 2141 0
 1644              		.cfi_startproc
 1645              		@ args = 0, pretend = 0, frame = 0
 1646              		@ frame_needed = 0, uses_anonymous_args = 0
 1647 0000 10B5     		push	{r4, lr}
 1648              		.cfi_def_cfa_offset 8
 1649              		.cfi_offset 4, -8
 1650              		.cfi_offset 14, -4
2142:Generated_Source\PSoC4/ADC_1.c **** 
2143:Generated_Source\PSoC4/ADC_1.c ****     #if(0u != ADC_1_ANY_CONFIG_USES_FILTER)
2144:Generated_Source\PSoC4/ADC_1.c ****         if((ADC_1_allConfigs[ADC_1_currentConfig].miscConfig
2145:Generated_Source\PSoC4/ADC_1.c ****             & ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
2146:Generated_Source\PSoC4/ADC_1.c ****             == ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
2147:Generated_Source\PSoC4/ADC_1.c ****         {
2148:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_FILTERAGND2SAR_BUFFER_Enable();
2149:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_Enable();
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 69


2150:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_B_Enable();
2151:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_B_Run(1u);
2152:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_Run(1u);
2153:Generated_Source\PSoC4/ADC_1.c ****         }
2154:Generated_Source\PSoC4/ADC_1.c ****     #endif /* ADC_1_ANY_CONFIG_USES_FILTER != 0u */
2155:Generated_Source\PSoC4/ADC_1.c **** 
2156:Generated_Source\PSoC4/ADC_1.c ****     if (0u == (ADC_1_SAR_CTRL_REG & ADC_1_SAR_CTRL_ENABLED_MSK))
 1651              		.loc 1 2156 0
 1652 0002 0D4B     		ldr	r3, .L124
 1653 0004 1B68     		ldr	r3, [r3]
 1654 0006 002B     		cmp	r3, #0
 1655 0008 0CDB     		blt	.L122
 1656              	.L123:
2157:Generated_Source\PSoC4/ADC_1.c ****     {
2158:Generated_Source\PSoC4/ADC_1.c ****         while (0u != (ADC_1_SAR_STATUS_REG & ADC_1_BUSY_MSK))
 1657              		.loc 1 2158 0 discriminator 1
 1658 000a 0C4B     		ldr	r3, .L124+4
 1659 000c 1B68     		ldr	r3, [r3]
 1660 000e 002B     		cmp	r3, #0
 1661 0010 FBDB     		blt	.L123
2159:Generated_Source\PSoC4/ADC_1.c ****         {
2160:Generated_Source\PSoC4/ADC_1.c ****             /* wait for SAR to go idle to avoid deadlock */
2161:Generated_Source\PSoC4/ADC_1.c ****         }
2162:Generated_Source\PSoC4/ADC_1.c **** 
2163:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_CTRL_REG |= ADC_1_SAR_CTRL_ENABLED_MSK;
 1662              		.loc 1 2163 0
 1663 0012 094A     		ldr	r2, .L124
 1664 0014 1368     		ldr	r3, [r2]
 1665 0016 8021     		movs	r1, #128
 1666 0018 0906     		lsls	r1, r1, #24
 1667 001a 0B43     		orrs	r3, r1
 1668 001c 1360     		str	r3, [r2]
2164:Generated_Source\PSoC4/ADC_1.c **** 
2165:Generated_Source\PSoC4/ADC_1.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
2166:Generated_Source\PSoC4/ADC_1.c ****         CyDelayUs(ADC_1_10US_DELAY);
 1669              		.loc 1 2166 0
 1670 001e 0A20     		movs	r0, #10
 1671 0020 FFF7FEFF 		bl	CyDelayUs
 1672              	.LVL146:
 1673              	.L122:
2167:Generated_Source\PSoC4/ADC_1.c ****     }
2168:Generated_Source\PSoC4/ADC_1.c **** 
2169:Generated_Source\PSoC4/ADC_1.c ****     /* Must set the DFT_CTRL register after enabling the SAR as it is a non-retention register. */
2170:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SetDFTControl(&ADC_1_allConfigs[ADC_1_currentConfig]);
 1674              		.loc 1 2170 0
 1675 0024 064B     		ldr	r3, .L124+8
 1676 0026 1A68     		ldr	r2, [r3]
 1677 0028 D300     		lsls	r3, r2, #3
 1678 002a 9B1A     		subs	r3, r3, r2
 1679 002c D800     		lsls	r0, r3, #3
 1680 002e 054B     		ldr	r3, .L124+12
 1681 0030 C018     		adds	r0, r0, r3
 1682 0032 FFF7FEFF 		bl	ADC_1_SetDFTControl
 1683              	.LVL147:
2171:Generated_Source\PSoC4/ADC_1.c **** 
2172:Generated_Source\PSoC4/ADC_1.c ****     return;
2173:Generated_Source\PSoC4/ADC_1.c **** }
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 70


 1684              		.loc 1 2173 0
 1685              		@ sp needed
 1686 0036 10BD     		pop	{r4, pc}
 1687              	.L125:
 1688              		.align	2
 1689              	.L124:
 1690 0038 00003A40 		.word	1077542912
 1691 003c A0023A40 		.word	1077543584
 1692 0040 00000000 		.word	.LANCHOR0
 1693 0044 00000000 		.word	ADC_1_allConfigs
 1694              		.cfi_endproc
 1695              	.LFE27:
 1696              		.size	ADC_1_Enable, .-ADC_1_Enable
 1697              		.section	.text.ADC_1_Start,"ax",%progbits
 1698              		.align	2
 1699              		.global	ADC_1_Start
 1700              		.code	16
 1701              		.thumb_func
 1702              		.type	ADC_1_Start, %function
 1703              	ADC_1_Start:
 1704              	.LFB1:
 556:Generated_Source\PSoC4/ADC_1.c ****     if (ADC_1_INIT_VAR_INIT_FLAG != (ADC_1_INIT_VAR_INIT_FLAG & ADC_1_initVar))
 1705              		.loc 1 556 0
 1706              		.cfi_startproc
 1707              		@ args = 0, pretend = 0, frame = 0
 1708              		@ frame_needed = 0, uses_anonymous_args = 0
 1709 0000 10B5     		push	{r4, lr}
 1710              		.cfi_def_cfa_offset 8
 1711              		.cfi_offset 4, -8
 1712              		.cfi_offset 14, -4
 557:Generated_Source\PSoC4/ADC_1.c ****     {
 1713              		.loc 1 557 0
 1714 0002 074B     		ldr	r3, .L128
 1715 0004 1B79     		ldrb	r3, [r3, #4]
 1716 0006 DB07     		lsls	r3, r3, #31
 1717 0008 06D4     		bmi	.L127
 559:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_initVar |= ADC_1_INIT_VAR_INIT_FLAG;
 1718              		.loc 1 559 0
 1719 000a FFF7FEFF 		bl	ADC_1_Init
 1720              	.LVL148:
 560:Generated_Source\PSoC4/ADC_1.c ****     }
 1721              		.loc 1 560 0
 1722 000e 044A     		ldr	r2, .L128
 1723 0010 1179     		ldrb	r1, [r2, #4]
 1724 0012 0123     		movs	r3, #1
 1725 0014 0B43     		orrs	r3, r1
 1726 0016 1371     		strb	r3, [r2, #4]
 1727              	.L127:
 563:Generated_Source\PSoC4/ADC_1.c **** 
 1728              		.loc 1 563 0
 1729 0018 FFF7FEFF 		bl	ADC_1_Enable
 1730              	.LVL149:
 566:Generated_Source\PSoC4/ADC_1.c **** 
 1731              		.loc 1 566 0
 1732              		@ sp needed
 1733 001c 10BD     		pop	{r4, pc}
 1734              	.L129:
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 71


 1735 001e C046     		.align	2
 1736              	.L128:
 1737 0020 00000000 		.word	.LANCHOR0
 1738              		.cfi_endproc
 1739              	.LFE1:
 1740              		.size	ADC_1_Start, .-ADC_1_Start
 1741              		.section	.text.ADC_1_StartEx,"ax",%progbits
 1742              		.align	2
 1743              		.global	ADC_1_StartEx
 1744              		.code	16
 1745              		.thumb_func
 1746              		.type	ADC_1_StartEx, %function
 1747              	ADC_1_StartEx:
 1748              	.LFB2:
 585:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_Start();
 1749              		.loc 1 585 0
 1750              		.cfi_startproc
 1751              		@ args = 0, pretend = 0, frame = 0
 1752              		@ frame_needed = 0, uses_anonymous_args = 0
 1753              	.LVL150:
 1754 0000 10B5     		push	{r4, lr}
 1755              		.cfi_def_cfa_offset 8
 1756              		.cfi_offset 4, -8
 1757              		.cfi_offset 14, -4
 1758 0002 0400     		movs	r4, r0
 586:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_IRQ_StartEx(address);
 1759              		.loc 1 586 0
 1760 0004 FFF7FEFF 		bl	ADC_1_Start
 1761              	.LVL151:
 587:Generated_Source\PSoC4/ADC_1.c ****     return;
 1762              		.loc 1 587 0
 1763 0008 2000     		movs	r0, r4
 1764 000a FFF7FEFF 		bl	ADC_1_IRQ_StartEx
 1765              	.LVL152:
 589:Generated_Source\PSoC4/ADC_1.c **** 
 1766              		.loc 1 589 0
 1767              		@ sp needed
 1768              	.LVL153:
 1769 000e 10BD     		pop	{r4, pc}
 1770              		.cfi_endproc
 1771              	.LFE2:
 1772              		.size	ADC_1_StartEx, .-ADC_1_StartEx
 1773              		.section	.text.ADC_1_SelectConfig,"ax",%progbits
 1774              		.align	2
 1775              		.global	ADC_1_SelectConfig
 1776              		.code	16
 1777              		.thumb_func
 1778              		.type	ADC_1_SelectConfig, %function
 1779              	ADC_1_SelectConfig:
 1780              	.LFB6:
 772:Generated_Source\PSoC4/ADC_1.c ****     /* Check whether the configuration number is valid or not */
 1781              		.loc 1 772 0
 1782              		.cfi_startproc
 1783              		@ args = 0, pretend = 0, frame = 0
 1784              		@ frame_needed = 0, uses_anonymous_args = 0
 1785              	.LVL154:
 1786 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 72


 1787              		.cfi_def_cfa_offset 16
 1788              		.cfi_offset 4, -16
 1789              		.cfi_offset 5, -12
 1790              		.cfi_offset 6, -8
 1791              		.cfi_offset 14, -4
 1792 0002 0400     		movs	r4, r0
 1793 0004 0E00     		movs	r6, r1
 774:Generated_Source\PSoC4/ADC_1.c ****     {
 1794              		.loc 1 774 0
 1795 0006 0028     		cmp	r0, #0
 1796 0008 27D1     		bne	.L131
 777:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_selected = 1u;
 1797              		.loc 1 777 0
 1798 000a FFF7FEFF 		bl	ADC_1_Stop
 1799              	.LVL155:
 778:Generated_Source\PSoC4/ADC_1.c **** 
 1800              		.loc 1 778 0
 1801 000e 134B     		ldr	r3, .L134
 1802 0010 0122     		movs	r2, #1
 1803 0012 5A71     		strb	r2, [r3, #5]
 780:Generated_Source\PSoC4/ADC_1.c ****         {
 1804              		.loc 1 780 0
 1805 0014 1B79     		ldrb	r3, [r3, #4]
 1806 0016 002B     		cmp	r3, #0
 1807 0018 06D1     		bne	.L133
 782:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_initVar |= ADC_1_INIT_VAR_INIT_FLAG;
 1808              		.loc 1 782 0
 1809 001a FFF7FEFF 		bl	ADC_1_Init
 1810              	.LVL156:
 783:Generated_Source\PSoC4/ADC_1.c ****         }
 1811              		.loc 1 783 0
 1812 001e 0F4A     		ldr	r2, .L134
 1813 0020 1179     		ldrb	r1, [r2, #4]
 1814 0022 0123     		movs	r3, #1
 1815 0024 0B43     		orrs	r3, r1
 1816 0026 1371     		strb	r3, [r2, #4]
 1817              	.L133:
 788:Generated_Source\PSoC4/ADC_1.c ****         #if (ADC_1_VREF_ROUTED)
 1818              		.loc 1 788 0
 1819 0028 E300     		lsls	r3, r4, #3
 1820 002a 1B1B     		subs	r3, r3, r4
 1821 002c DD00     		lsls	r5, r3, #3
 1822 002e 0C4B     		ldr	r3, .L134+4
 1823 0030 ED18     		adds	r5, r5, r3
 1824 0032 2800     		movs	r0, r5
 1825 0034 FFF7FEFF 		bl	ADC_1_InitConfig
 1826              	.LVL157:
 796:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_RANGE_INTR_MASK_REG = ADC_1_allConfigs[config].rangeIntMask;
 1827              		.loc 1 796 0
 1828 0038 0A4B     		ldr	r3, .L134+8
 1829 003a 2A6A     		ldr	r2, [r5, #32]
 1830 003c 1A60     		str	r2, [r3]
 797:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_SATURATE_INTR_MASK_REG = ADC_1_allConfigs[config].satIntMask;
 1831              		.loc 1 797 0
 1832 003e 0A4B     		ldr	r3, .L134+12
 1833 0040 6A6A     		ldr	r2, [r5, #36]
 1834 0042 1A60     		str	r2, [r3]
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 73


 798:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_currentConfig = config;
 1835              		.loc 1 798 0
 1836 0044 AA6A     		ldr	r2, [r5, #40]
 1837 0046 094B     		ldr	r3, .L134+16
 1838 0048 1A60     		str	r2, [r3]
 799:Generated_Source\PSoC4/ADC_1.c **** 
 1839              		.loc 1 799 0
 1840 004a 044B     		ldr	r3, .L134
 1841 004c 1C60     		str	r4, [r3]
 801:Generated_Source\PSoC4/ADC_1.c ****         {
 1842              		.loc 1 801 0
 1843 004e 012E     		cmp	r6, #1
 1844 0050 03D1     		bne	.L131
 804:Generated_Source\PSoC4/ADC_1.c **** 
 1845              		.loc 1 804 0
 1846 0052 FFF7FEFF 		bl	ADC_1_Start
 1847              	.LVL158:
 807:Generated_Source\PSoC4/ADC_1.c ****         }
 1848              		.loc 1 807 0
 1849 0056 FFF7FEFF 		bl	ADC_1_StartConvert
 1850              	.LVL159:
 1851              	.L131:
 811:Generated_Source\PSoC4/ADC_1.c **** 
 1852              		.loc 1 811 0
 1853              		@ sp needed
 1854              	.LVL160:
 1855              	.LVL161:
 1856 005a 70BD     		pop	{r4, r5, r6, pc}
 1857              	.L135:
 1858              		.align	2
 1859              	.L134:
 1860 005c 00000000 		.word	.LANCHOR0
 1861 0060 00000000 		.word	ADC_1_allConfigs
 1862 0064 20003A40 		.word	1077542944
 1863 0068 38023A40 		.word	1077543480
 1864 006c 28023A40 		.word	1077543464
 1865              		.cfi_endproc
 1866              	.LFE6:
 1867              		.size	ADC_1_SelectConfig, .-ADC_1_SelectConfig
 1868              		.section	.text.ADC_1_StopConvert,"ax",%progbits
 1869              		.align	2
 1870              		.global	ADC_1_StopConvert
 1871              		.code	16
 1872              		.thumb_func
 1873              		.type	ADC_1_StopConvert, %function
 1874              	ADC_1_StopConvert:
 1875              	.LFB8:
 865:Generated_Source\PSoC4/ADC_1.c ****     if((ADC_1_SAR_SAMPLE_CTRL_REG
 1876              		.loc 1 865 0
 1877              		.cfi_startproc
 1878              		@ args = 0, pretend = 0, frame = 0
 1879              		@ frame_needed = 0, uses_anonymous_args = 0
 1880 0000 10B5     		push	{r4, lr}
 1881              		.cfi_def_cfa_offset 8
 1882              		.cfi_offset 4, -8
 1883              		.cfi_offset 14, -4
 866:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 74


 1884              		.loc 1 866 0
 1885 0002 0C4B     		ldr	r3, .L138
 1886 0004 1B68     		ldr	r3, [r3]
 1887 0006 5B03     		lsls	r3, r3, #13
 1888 0008 12D5     		bpl	.L136
 870:Generated_Source\PSoC4/ADC_1.c **** 
 1889              		.loc 1 870 0
 1890 000a 0A4A     		ldr	r2, .L138
 1891 000c 1168     		ldr	r1, [r2]
 1892 000e 0A4B     		ldr	r3, .L138+4
 1893 0010 0B40     		ands	r3, r1
 1894 0012 1360     		str	r3, [r2]
 872:Generated_Source\PSoC4/ADC_1.c ****             & ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
 1895              		.loc 1 872 0
 1896 0014 094B     		ldr	r3, .L138+8
 1897 0016 1A68     		ldr	r2, [r3]
 1898 0018 D300     		lsls	r3, r2, #3
 1899 001a 9A1A     		subs	r2, r3, r2
 1900 001c D300     		lsls	r3, r2, #3
 1901 001e 084A     		ldr	r2, .L138+12
 1902 0020 D318     		adds	r3, r2, r3
 1903 0022 1B6B     		ldr	r3, [r3, #48]
 1904 0024 9B07     		lsls	r3, r3, #30
 1905 0026 03D5     		bpl	.L136
 877:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_Start();
 1906              		.loc 1 877 0
 1907 0028 FFF7FEFF 		bl	ADC_1_Stop
 1908              	.LVL162:
 878:Generated_Source\PSoC4/ADC_1.c ****         }
 1909              		.loc 1 878 0
 1910 002c FFF7FEFF 		bl	ADC_1_Start
 1911              	.LVL163:
 1912              	.L136:
 883:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 1913              		.loc 1 883 0
 1914              		@ sp needed
 1915 0030 10BD     		pop	{r4, pc}
 1916              	.L139:
 1917 0032 C046     		.align	2
 1918              	.L138:
 1919 0034 04003A40 		.word	1077542916
 1920 0038 FFFFFEFF 		.word	-65537
 1921 003c 00000000 		.word	.LANCHOR0
 1922 0040 00000000 		.word	ADC_1_allConfigs
 1923              		.cfi_endproc
 1924              	.LFE8:
 1925              		.size	ADC_1_StopConvert, .-ADC_1_StopConvert
 1926              		.comm	ADC_1_countsPer10Volt,8,4
 1927              		.comm	ADC_1_offset,4,4
 1928              		.global	ADC_1_selected
 1929              		.global	ADC_1_initVar
 1930              		.section	.rodata
 1931              		.align	2
 1932              		.set	.LANCHOR1,. + 0
 1933              		.type	ADC_1_channelsConfig, %object
 1934              		.size	ADC_1_channelsConfig, 8
 1935              	ADC_1_channelsConfig:
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 75


 1936 0000 00040000 		.word	1024
 1937 0004 00040000 		.word	1024
 1938              		.bss
 1939              		.align	2
 1940              		.set	.LANCHOR0,. + 0
 1941              		.type	ADC_1_currentConfig, %object
 1942              		.size	ADC_1_currentConfig, 4
 1943              	ADC_1_currentConfig:
 1944 0000 00000000 		.space	4
 1945              		.type	ADC_1_initVar, %object
 1946              		.size	ADC_1_initVar, 1
 1947              	ADC_1_initVar:
 1948 0004 00       		.space	1
 1949              		.type	ADC_1_selected, %object
 1950              		.size	ADC_1_selected, 1
 1951              	ADC_1_selected:
 1952 0005 00       		.space	1
 1953              		.text
 1954              	.Letext0:
 1955              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1956              		.file 3 "Generated_Source\\PSoC4\\ADC_1.h"
 1957              		.file 4 "Generated_Source\\PSoC4\\ADC_1_intSarClock.h"
 1958              		.file 5 "Generated_Source\\PSoC4\\CyLib.h"
 1959              		.file 6 "Generated_Source\\PSoC4\\ADC_1_IRQ.h"
 1960              		.section	.debug_info,"",%progbits
 1961              	.Ldebug_info0:
 1962 0000 7F0A0000 		.4byte	0xa7f
 1963 0004 0400     		.2byte	0x4
 1964 0006 00000000 		.4byte	.Ldebug_abbrev0
 1965 000a 04       		.byte	0x4
 1966 000b 01       		.uleb128 0x1
 1967 000c CA040000 		.4byte	.LASF111
 1968 0010 0C       		.byte	0xc
 1969 0011 0A040000 		.4byte	.LASF112
 1970 0015 94020000 		.4byte	.LASF113
 1971 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1972 001d 00000000 		.4byte	0
 1973 0021 00000000 		.4byte	.Ldebug_line0
 1974 0025 02       		.uleb128 0x2
 1975 0026 01       		.byte	0x1
 1976 0027 06       		.byte	0x6
 1977 0028 72000000 		.4byte	.LASF0
 1978 002c 02       		.uleb128 0x2
 1979 002d 01       		.byte	0x1
 1980 002e 08       		.byte	0x8
 1981 002f 3A040000 		.4byte	.LASF1
 1982 0033 02       		.uleb128 0x2
 1983 0034 02       		.byte	0x2
 1984 0035 05       		.byte	0x5
 1985 0036 70040000 		.4byte	.LASF2
 1986 003a 02       		.uleb128 0x2
 1987 003b 02       		.byte	0x2
 1988 003c 07       		.byte	0x7
 1989 003d 30020000 		.4byte	.LASF3
 1990 0041 02       		.uleb128 0x2
 1991 0042 04       		.byte	0x4
 1992 0043 05       		.byte	0x5
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 76


 1993 0044 B6000000 		.4byte	.LASF4
 1994 0048 02       		.uleb128 0x2
 1995 0049 04       		.byte	0x4
 1996 004a 07       		.byte	0x7
 1997 004b B5010000 		.4byte	.LASF5
 1998 004f 02       		.uleb128 0x2
 1999 0050 08       		.byte	0x8
 2000 0051 05       		.byte	0x5
 2001 0052 64000000 		.4byte	.LASF6
 2002 0056 02       		.uleb128 0x2
 2003 0057 08       		.byte	0x8
 2004 0058 07       		.byte	0x7
 2005 0059 40000000 		.4byte	.LASF7
 2006 005d 03       		.uleb128 0x3
 2007 005e 04       		.byte	0x4
 2008 005f 05       		.byte	0x5
 2009 0060 696E7400 		.ascii	"int\000"
 2010 0064 02       		.uleb128 0x2
 2011 0065 04       		.byte	0x4
 2012 0066 07       		.byte	0x7
 2013 0067 7E010000 		.4byte	.LASF8
 2014 006b 04       		.uleb128 0x4
 2015 006c D6000000 		.4byte	.LASF9
 2016 0070 02       		.byte	0x2
 2017 0071 FC01     		.2byte	0x1fc
 2018 0073 2C000000 		.4byte	0x2c
 2019 0077 04       		.uleb128 0x4
 2020 0078 00000000 		.4byte	.LASF10
 2021 007c 02       		.byte	0x2
 2022 007d FD01     		.2byte	0x1fd
 2023 007f 3A000000 		.4byte	0x3a
 2024 0083 04       		.uleb128 0x4
 2025 0084 30010000 		.4byte	.LASF11
 2026 0088 02       		.byte	0x2
 2027 0089 FE01     		.2byte	0x1fe
 2028 008b 48000000 		.4byte	0x48
 2029 008f 04       		.uleb128 0x4
 2030 0090 80060000 		.4byte	.LASF12
 2031 0094 02       		.byte	0x2
 2032 0095 0002     		.2byte	0x200
 2033 0097 33000000 		.4byte	0x33
 2034 009b 04       		.uleb128 0x4
 2035 009c 9F000000 		.4byte	.LASF13
 2036 00a0 02       		.byte	0x2
 2037 00a1 0102     		.2byte	0x201
 2038 00a3 41000000 		.4byte	0x41
 2039 00a7 04       		.uleb128 0x4
 2040 00a8 31030000 		.4byte	.LASF14
 2041 00ac 02       		.byte	0x2
 2042 00ad 0202     		.2byte	0x202
 2043 00af B3000000 		.4byte	0xb3
 2044 00b3 02       		.uleb128 0x2
 2045 00b4 04       		.byte	0x4
 2046 00b5 04       		.byte	0x4
 2047 00b6 D4030000 		.4byte	.LASF15
 2048 00ba 02       		.uleb128 0x2
 2049 00bb 08       		.byte	0x8
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 77


 2050 00bc 04       		.byte	0x4
 2051 00bd E6000000 		.4byte	.LASF16
 2052 00c1 04       		.uleb128 0x4
 2053 00c2 BD030000 		.4byte	.LASF17
 2054 00c6 02       		.byte	0x2
 2055 00c7 0702     		.2byte	0x207
 2056 00c9 4F000000 		.4byte	0x4f
 2057 00cd 02       		.uleb128 0x2
 2058 00ce 01       		.byte	0x1
 2059 00cf 08       		.byte	0x8
 2060 00d0 61050000 		.4byte	.LASF18
 2061 00d4 04       		.uleb128 0x4
 2062 00d5 18030000 		.4byte	.LASF19
 2063 00d9 02       		.byte	0x2
 2064 00da A802     		.2byte	0x2a8
 2065 00dc E0000000 		.4byte	0xe0
 2066 00e0 05       		.uleb128 0x5
 2067 00e1 83000000 		.4byte	0x83
 2068 00e5 04       		.uleb128 0x4
 2069 00e6 6B050000 		.4byte	.LASF20
 2070 00ea 02       		.byte	0x2
 2071 00eb B802     		.2byte	0x2b8
 2072 00ed F1000000 		.4byte	0xf1
 2073 00f1 06       		.uleb128 0x6
 2074 00f2 04       		.byte	0x4
 2075 00f3 F7000000 		.4byte	0xf7
 2076 00f7 07       		.uleb128 0x7
 2077 00f8 02       		.uleb128 0x2
 2078 00f9 08       		.byte	0x8
 2079 00fa 04       		.byte	0x4
 2080 00fb 65030000 		.4byte	.LASF21
 2081 00ff 02       		.uleb128 0x2
 2082 0100 04       		.byte	0x4
 2083 0101 07       		.byte	0x7
 2084 0102 39030000 		.4byte	.LASF22
 2085 0106 08       		.uleb128 0x8
 2086 0107 38       		.byte	0x38
 2087 0108 03       		.byte	0x3
 2088 0109 5D       		.byte	0x5d
 2089 010a B7010000 		.4byte	0x1b7
 2090 010e 09       		.uleb128 0x9
 2091 010f A6060000 		.4byte	.LASF23
 2092 0113 03       		.byte	0x3
 2093 0114 5F       		.byte	0x5f
 2094 0115 83000000 		.4byte	0x83
 2095 0119 00       		.byte	0
 2096 011a 09       		.uleb128 0x9
 2097 011b 01030000 		.4byte	.LASF24
 2098 011f 03       		.byte	0x3
 2099 0120 60       		.byte	0x60
 2100 0121 83000000 		.4byte	0x83
 2101 0125 04       		.byte	0x4
 2102 0126 09       		.uleb128 0x9
 2103 0127 F6050000 		.4byte	.LASF25
 2104 012b 03       		.byte	0x3
 2105 012c 61       		.byte	0x61
 2106 012d 83000000 		.4byte	0x83
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 78


 2107 0131 08       		.byte	0x8
 2108 0132 09       		.uleb128 0x9
 2109 0133 3F060000 		.4byte	.LASF26
 2110 0137 03       		.byte	0x3
 2111 0138 64       		.byte	0x64
 2112 0139 83000000 		.4byte	0x83
 2113 013d 0C       		.byte	0xc
 2114 013e 09       		.uleb128 0x9
 2115 013f 23010000 		.4byte	.LASF27
 2116 0143 03       		.byte	0x3
 2117 0144 65       		.byte	0x65
 2118 0145 83000000 		.4byte	0x83
 2119 0149 10       		.byte	0x10
 2120 014a 09       		.uleb128 0x9
 2121 014b 79030000 		.4byte	.LASF28
 2122 014f 03       		.byte	0x3
 2123 0150 66       		.byte	0x66
 2124 0151 83000000 		.4byte	0x83
 2125 0155 14       		.byte	0x14
 2126 0156 09       		.uleb128 0x9
 2127 0157 54020000 		.4byte	.LASF29
 2128 015b 03       		.byte	0x3
 2129 015c 67       		.byte	0x67
 2130 015d 83000000 		.4byte	0x83
 2131 0161 18       		.byte	0x18
 2132 0162 09       		.uleb128 0x9
 2133 0163 1F060000 		.4byte	.LASF30
 2134 0167 03       		.byte	0x3
 2135 0168 68       		.byte	0x68
 2136 0169 83000000 		.4byte	0x83
 2137 016d 1C       		.byte	0x1c
 2138 016e 09       		.uleb128 0x9
 2139 016f 03040000 		.4byte	.LASF31
 2140 0173 03       		.byte	0x3
 2141 0174 69       		.byte	0x69
 2142 0175 83000000 		.4byte	0x83
 2143 0179 20       		.byte	0x20
 2144 017a 09       		.uleb128 0x9
 2145 017b 8B010000 		.4byte	.LASF32
 2146 017f 03       		.byte	0x3
 2147 0180 6A       		.byte	0x6a
 2148 0181 83000000 		.4byte	0x83
 2149 0185 24       		.byte	0x24
 2150 0186 09       		.uleb128 0x9
 2151 0187 86030000 		.4byte	.LASF33
 2152 018b 03       		.byte	0x3
 2153 018c 6B       		.byte	0x6b
 2154 018d 83000000 		.4byte	0x83
 2155 0191 28       		.byte	0x28
 2156 0192 09       		.uleb128 0x9
 2157 0193 BE040000 		.4byte	.LASF34
 2158 0197 03       		.byte	0x3
 2159 0198 6C       		.byte	0x6c
 2160 0199 9B000000 		.4byte	0x9b
 2161 019d 2C       		.byte	0x2c
 2162 019e 09       		.uleb128 0x9
 2163 019f FB050000 		.4byte	.LASF35
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 79


 2164 01a3 03       		.byte	0x3
 2165 01a4 6E       		.byte	0x6e
 2166 01a5 83000000 		.4byte	0x83
 2167 01a9 30       		.byte	0x30
 2168 01aa 09       		.uleb128 0x9
 2169 01ab 89000000 		.4byte	.LASF36
 2170 01af 03       		.byte	0x3
 2171 01b0 75       		.byte	0x75
 2172 01b1 77000000 		.4byte	0x77
 2173 01b5 34       		.byte	0x34
 2174 01b6 00       		.byte	0
 2175 01b7 0A       		.uleb128 0xa
 2176 01b8 4A060000 		.4byte	.LASF37
 2177 01bc 03       		.byte	0x3
 2178 01bd 7C       		.byte	0x7c
 2179 01be 06010000 		.4byte	0x106
 2180 01c2 0B       		.uleb128 0xb
 2181 01c3 5D010000 		.4byte	.LASF114
 2182 01c7 01       		.byte	0x1
 2183 01c8 E102     		.2byte	0x2e1
 2184 01ca 00000000 		.4byte	.LFB5
 2185 01ce 34000000 		.4byte	.LFE5-.LFB5
 2186 01d2 01       		.uleb128 0x1
 2187 01d3 9C       		.byte	0x9c
 2188 01d4 F7010000 		.4byte	0x1f7
 2189 01d8 0C       		.uleb128 0xc
 2190 01d9 78050000 		.4byte	.LASF38
 2191 01dd 01       		.byte	0x1
 2192 01de E102     		.2byte	0x2e1
 2193 01e0 F7010000 		.4byte	0x1f7
 2194 01e4 01       		.uleb128 0x1
 2195 01e5 50       		.byte	0x50
 2196 01e6 0D       		.uleb128 0xd
 2197 01e7 F3010000 		.4byte	.LASF40
 2198 01eb 01       		.byte	0x1
 2199 01ec E502     		.2byte	0x2e5
 2200 01ee 83000000 		.4byte	0x83
 2201 01f2 00000000 		.4byte	.LLST0
 2202 01f6 00       		.byte	0
 2203 01f7 06       		.uleb128 0x6
 2204 01f8 04       		.byte	0x4
 2205 01f9 FD010000 		.4byte	0x1fd
 2206 01fd 0E       		.uleb128 0xe
 2207 01fe B7010000 		.4byte	0x1b7
 2208 0202 0F       		.uleb128 0xf
 2209 0203 C3050000 		.4byte	.LASF115
 2210 0207 01       		.byte	0x1
 2211 0208 1504     		.2byte	0x415
 2212 020a 9B000000 		.4byte	0x9b
 2213 020e 00000000 		.4byte	.LFB13
 2214 0212 58000000 		.4byte	.LFE13-.LFB13
 2215 0216 01       		.uleb128 0x1
 2216 0217 9C       		.byte	0x9c
 2217 0218 4D020000 		.4byte	0x24d
 2218 021c 10       		.uleb128 0x10
 2219 021d 5C050000 		.4byte	.LASF39
 2220 0221 01       		.byte	0x1
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 80


 2221 0222 1504     		.2byte	0x415
 2222 0224 83000000 		.4byte	0x83
 2223 0228 2F000000 		.4byte	.LLST1
 2224 022c 0D       		.uleb128 0xd
 2225 022d 1E030000 		.4byte	.LASF41
 2226 0231 01       		.byte	0x1
 2227 0232 1704     		.2byte	0x417
 2228 0234 9B000000 		.4byte	0x9b
 2229 0238 50000000 		.4byte	.LLST2
 2230 023c 0D       		.uleb128 0xd
 2231 023d 0D030000 		.4byte	.LASF42
 2232 0241 01       		.byte	0x1
 2233 0242 1804     		.2byte	0x418
 2234 0244 83000000 		.4byte	0x83
 2235 0248 6F000000 		.4byte	.LLST3
 2236 024c 00       		.byte	0
 2237 024d 11       		.uleb128 0x11
 2238 024e 94000000 		.4byte	.LASF44
 2239 0252 01       		.byte	0x1
 2240 0253 6602     		.2byte	0x266
 2241 0255 00000000 		.4byte	.LFB3
 2242 0259 10000000 		.4byte	.LFE3-.LFB3
 2243 025d 01       		.uleb128 0x1
 2244 025e 9C       		.byte	0x9c
 2245 025f 12       		.uleb128 0x12
 2246 0260 A5000000 		.4byte	.LASF46
 2247 0264 01       		.byte	0x1
 2248 0265 8402     		.2byte	0x284
 2249 0267 00000000 		.4byte	.LFB4
 2250 026b D4000000 		.4byte	.LFE4-.LFB4
 2251 026f 01       		.uleb128 0x1
 2252 0270 9C       		.byte	0x9c
 2253 0271 D2020000 		.4byte	0x2d2
 2254 0275 10       		.uleb128 0x10
 2255 0276 78050000 		.4byte	.LASF38
 2256 027a 01       		.byte	0x1
 2257 027b 8402     		.2byte	0x284
 2258 027d F7010000 		.4byte	0x1f7
 2259 0281 8D000000 		.4byte	.LLST4
 2260 0285 0D       		.uleb128 0xd
 2261 0286 A4040000 		.4byte	.LASF43
 2262 028a 01       		.byte	0x1
 2263 028b 8602     		.2byte	0x286
 2264 028d 83000000 		.4byte	0x83
 2265 0291 B9000000 		.4byte	.LLST5
 2266 0295 0D       		.uleb128 0xd
 2267 0296 F3010000 		.4byte	.LASF40
 2268 029a 01       		.byte	0x1
 2269 029b 8702     		.2byte	0x287
 2270 029d 83000000 		.4byte	0x83
 2271 02a1 D8000000 		.4byte	.LLST6
 2272 02a5 13       		.uleb128 0x13
 2273 02a6 08000000 		.4byte	.LVL15
 2274 02aa 2A0A0000 		.4byte	0xa2a
 2275 02ae 14       		.uleb128 0x14
 2276 02af 10000000 		.4byte	.LVL16
 2277 02b3 350A0000 		.4byte	0xa35
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 81


 2278 02b7 C1020000 		.4byte	0x2c1
 2279 02bb 15       		.uleb128 0x15
 2280 02bc 01       		.uleb128 0x1
 2281 02bd 51       		.byte	0x51
 2282 02be 01       		.uleb128 0x1
 2283 02bf 30       		.byte	0x30
 2284 02c0 00       		.byte	0
 2285 02c1 16       		.uleb128 0x16
 2286 02c2 16000000 		.4byte	.LVL17
 2287 02c6 400A0000 		.4byte	0xa40
 2288 02ca 15       		.uleb128 0x15
 2289 02cb 01       		.uleb128 0x1
 2290 02cc 50       		.byte	0x50
 2291 02cd 02       		.uleb128 0x2
 2292 02ce 08       		.byte	0x8
 2293 02cf FF       		.byte	0xff
 2294 02d0 00       		.byte	0
 2295 02d1 00       		.byte	0
 2296 02d2 11       		.uleb128 0x11
 2297 02d3 A2010000 		.4byte	.LASF45
 2298 02d7 01       		.byte	0x1
 2299 02d8 4003     		.2byte	0x340
 2300 02da 00000000 		.4byte	.LFB7
 2301 02de 28000000 		.4byte	.LFE7-.LFB7
 2302 02e2 01       		.uleb128 0x1
 2303 02e3 9C       		.byte	0x9c
 2304 02e4 12       		.uleb128 0x12
 2305 02e5 ED000000 		.4byte	.LASF47
 2306 02e9 01       		.byte	0x1
 2307 02ea 8703     		.2byte	0x387
 2308 02ec 00000000 		.4byte	.LFB9
 2309 02f0 28000000 		.4byte	.LFE9-.LFB9
 2310 02f4 01       		.uleb128 0x1
 2311 02f5 9C       		.byte	0x9c
 2312 02f6 09030000 		.4byte	0x309
 2313 02fa 0C       		.uleb128 0xc
 2314 02fb 66050000 		.4byte	.LASF48
 2315 02ff 01       		.byte	0x1
 2316 0300 8703     		.2byte	0x387
 2317 0302 83000000 		.4byte	0x83
 2318 0306 01       		.uleb128 0x1
 2319 0307 50       		.byte	0x50
 2320 0308 00       		.byte	0
 2321 0309 12       		.uleb128 0x12
 2322 030a 87040000 		.4byte	.LASF49
 2323 030e 01       		.byte	0x1
 2324 030f BE03     		.2byte	0x3be
 2325 0311 00000000 		.4byte	.LFB10
 2326 0315 10000000 		.4byte	.LFE10-.LFB10
 2327 0319 01       		.uleb128 0x1
 2328 031a 9C       		.byte	0x9c
 2329 031b 30030000 		.4byte	0x330
 2330 031f 10       		.uleb128 0x10
 2331 0320 46010000 		.4byte	.LASF50
 2332 0324 01       		.byte	0x1
 2333 0325 BE03     		.2byte	0x3be
 2334 0327 83000000 		.4byte	0x83
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 82


 2335 032b EB000000 		.4byte	.LLST7
 2336 032f 00       		.byte	0
 2337 0330 12       		.uleb128 0x12
 2338 0331 86060000 		.4byte	.LASF51
 2339 0335 01       		.byte	0x1
 2340 0336 D303     		.2byte	0x3d3
 2341 0338 00000000 		.4byte	.LFB11
 2342 033c 2C000000 		.4byte	.LFE11-.LFB11
 2343 0340 01       		.uleb128 0x1
 2344 0341 9C       		.byte	0x9c
 2345 0342 65030000 		.4byte	0x365
 2346 0346 10       		.uleb128 0x10
 2347 0347 FD010000 		.4byte	.LASF52
 2348 034b 01       		.byte	0x1
 2349 034c D303     		.2byte	0x3d3
 2350 034e 83000000 		.4byte	0x83
 2351 0352 0C010000 		.4byte	.LLST8
 2352 0356 17       		.uleb128 0x17
 2353 0357 07000000 		.4byte	.LASF53
 2354 035b 01       		.byte	0x1
 2355 035c D503     		.2byte	0x3d5
 2356 035e 83000000 		.4byte	0x83
 2357 0362 01       		.uleb128 0x1
 2358 0363 52       		.byte	0x52
 2359 0364 00       		.byte	0
 2360 0365 18       		.uleb128 0x18
 2361 0366 29060000 		.4byte	.LASF56
 2362 036a 01       		.byte	0x1
 2363 036b EF03     		.2byte	0x3ef
 2364 036d 83000000 		.4byte	0x83
 2365 0371 00000000 		.4byte	.LFB12
 2366 0375 38000000 		.4byte	.LFE12-.LFB12
 2367 0379 01       		.uleb128 0x1
 2368 037a 9C       		.byte	0x9c
 2369 037b B0030000 		.4byte	0x3b0
 2370 037f 10       		.uleb128 0x10
 2371 0380 76010000 		.4byte	.LASF54
 2372 0384 01       		.byte	0x1
 2373 0385 EF03     		.2byte	0x3ef
 2374 0387 83000000 		.4byte	0x83
 2375 038b 2A010000 		.4byte	.LLST9
 2376 038f 0D       		.uleb128 0xd
 2377 0390 B2060000 		.4byte	.LASF55
 2378 0394 01       		.byte	0x1
 2379 0395 F103     		.2byte	0x3f1
 2380 0397 83000000 		.4byte	0x83
 2381 039b 5E010000 		.4byte	.LLST10
 2382 039f 19       		.uleb128 0x19
 2383 03a0 77647400 		.ascii	"wdt\000"
 2384 03a4 01       		.byte	0x1
 2385 03a5 F203     		.2byte	0x3f2
 2386 03a7 83000000 		.4byte	0x83
 2387 03ab 94010000 		.4byte	.LLST11
 2388 03af 00       		.byte	0
 2389 03b0 18       		.uleb128 0x18
 2390 03b1 48040000 		.4byte	.LASF57
 2391 03b5 01       		.byte	0x1
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 83


 2392 03b6 3E04     		.2byte	0x43e
 2393 03b8 8F000000 		.4byte	0x8f
 2394 03bc 00000000 		.4byte	.LFB14
 2395 03c0 54000000 		.4byte	.LFE14-.LFB14
 2396 03c4 01       		.uleb128 0x1
 2397 03c5 9C       		.byte	0x9c
 2398 03c6 FA030000 		.4byte	0x3fa
 2399 03ca 10       		.uleb128 0x10
 2400 03cb 5C050000 		.4byte	.LASF39
 2401 03cf 01       		.byte	0x1
 2402 03d0 3E04     		.2byte	0x43e
 2403 03d2 83000000 		.4byte	0x83
 2404 03d6 C7010000 		.4byte	.LLST12
 2405 03da 0D       		.uleb128 0xd
 2406 03db 27030000 		.4byte	.LASF58
 2407 03df 01       		.byte	0x1
 2408 03e0 4004     		.2byte	0x440
 2409 03e2 83000000 		.4byte	0x83
 2410 03e6 0C020000 		.4byte	.LLST13
 2411 03ea 16       		.uleb128 0x16
 2412 03eb 1E000000 		.4byte	.LVL41
 2413 03ef 4B0A0000 		.4byte	0xa4b
 2414 03f3 15       		.uleb128 0x15
 2415 03f4 01       		.uleb128 0x1
 2416 03f5 50       		.byte	0x50
 2417 03f6 01       		.uleb128 0x1
 2418 03f7 30       		.byte	0x30
 2419 03f8 00       		.byte	0
 2420 03f9 00       		.byte	0
 2421 03fa 18       		.uleb128 0x18
 2422 03fb 5E060000 		.4byte	.LASF59
 2423 03ff 01       		.byte	0x1
 2424 0400 6104     		.2byte	0x461
 2425 0402 9B000000 		.4byte	0x9b
 2426 0406 00000000 		.4byte	.LFB15
 2427 040a 64000000 		.4byte	.LFE15-.LFB15
 2428 040e 01       		.uleb128 0x1
 2429 040f 9C       		.byte	0x9c
 2430 0410 78040000 		.4byte	0x478
 2431 0414 10       		.uleb128 0x10
 2432 0415 5C050000 		.4byte	.LASF39
 2433 0419 01       		.byte	0x1
 2434 041a 6104     		.2byte	0x461
 2435 041c 83000000 		.4byte	0x83
 2436 0420 2A020000 		.4byte	.LLST14
 2437 0424 0D       		.uleb128 0xd
 2438 0425 27030000 		.4byte	.LASF58
 2439 0429 01       		.byte	0x1
 2440 042a 6304     		.2byte	0x463
 2441 042c 83000000 		.4byte	0x83
 2442 0430 56020000 		.4byte	.LLST15
 2443 0434 0D       		.uleb128 0xd
 2444 0435 98040000 		.4byte	.LASF60
 2445 0439 01       		.byte	0x1
 2446 043a 6404     		.2byte	0x464
 2447 043c 8F000000 		.4byte	0x8f
 2448 0440 74020000 		.4byte	.LLST16
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 84


 2449 0444 0D       		.uleb128 0xd
 2450 0445 75020000 		.4byte	.LASF61
 2451 0449 01       		.byte	0x1
 2452 044a 6504     		.2byte	0x465
 2453 044c 9B000000 		.4byte	0x9b
 2454 0450 87020000 		.4byte	.LLST17
 2455 0454 14       		.uleb128 0x14
 2456 0455 1E000000 		.4byte	.LVL49
 2457 0459 4B0A0000 		.4byte	0xa4b
 2458 045d 67040000 		.4byte	0x467
 2459 0461 15       		.uleb128 0x15
 2460 0462 01       		.uleb128 0x1
 2461 0463 50       		.byte	0x50
 2462 0464 01       		.uleb128 0x1
 2463 0465 30       		.byte	0x30
 2464 0466 00       		.byte	0
 2465 0467 16       		.uleb128 0x16
 2466 0468 4A000000 		.4byte	.LVL53
 2467 046c 02020000 		.4byte	0x202
 2468 0470 15       		.uleb128 0x15
 2469 0471 01       		.uleb128 0x1
 2470 0472 50       		.byte	0x50
 2471 0473 02       		.uleb128 0x2
 2472 0474 75       		.byte	0x75
 2473 0475 00       		.sleb128 0
 2474 0476 00       		.byte	0
 2475 0477 00       		.byte	0
 2476 0478 12       		.uleb128 0x12
 2477 0479 4B010000 		.4byte	.LASF62
 2478 047d 01       		.byte	0x1
 2479 047e 8D04     		.2byte	0x48d
 2480 0480 00000000 		.4byte	.LFB16
 2481 0484 1C000000 		.4byte	.LFE16-.LFB16
 2482 0488 01       		.uleb128 0x1
 2483 0489 9C       		.byte	0x9c
 2484 048a 9F040000 		.4byte	0x49f
 2485 048e 10       		.uleb128 0x10
 2486 048f 5C030000 		.4byte	.LASF63
 2487 0493 01       		.byte	0x1
 2488 0494 8D04     		.2byte	0x48d
 2489 0496 83000000 		.4byte	0x83
 2490 049a A5020000 		.4byte	.LLST18
 2491 049e 00       		.byte	0
 2492 049f 12       		.uleb128 0x12
 2493 04a0 08020000 		.4byte	.LASF64
 2494 04a4 01       		.byte	0x1
 2495 04a5 A104     		.2byte	0x4a1
 2496 04a7 00000000 		.4byte	.LFB17
 2497 04ab 18000000 		.4byte	.LFE17-.LFB17
 2498 04af 01       		.uleb128 0x1
 2499 04b0 9C       		.byte	0x9c
 2500 04b1 C6040000 		.4byte	0x4c6
 2501 04b5 10       		.uleb128 0x10
 2502 04b6 EC030000 		.4byte	.LASF65
 2503 04ba 01       		.byte	0x1
 2504 04bb A104     		.2byte	0x4a1
 2505 04bd 83000000 		.4byte	0x83
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 85


 2506 04c1 C6020000 		.4byte	.LLST19
 2507 04c5 00       		.byte	0
 2508 04c6 12       		.uleb128 0x12
 2509 04c7 02010000 		.4byte	.LASF66
 2510 04cb 01       		.byte	0x1
 2511 04cc B804     		.2byte	0x4b8
 2512 04ce 00000000 		.4byte	.LFB18
 2513 04d2 2C000000 		.4byte	.LFE18-.LFB18
 2514 04d6 01       		.uleb128 0x1
 2515 04d7 9C       		.byte	0x9c
 2516 04d8 FB040000 		.4byte	0x4fb
 2517 04dc 10       		.uleb128 0x10
 2518 04dd EC020000 		.4byte	.LASF67
 2519 04e1 01       		.byte	0x1
 2520 04e2 B804     		.2byte	0x4b8
 2521 04e4 83000000 		.4byte	0x83
 2522 04e8 E7020000 		.4byte	.LLST20
 2523 04ec 17       		.uleb128 0x17
 2524 04ed 07000000 		.4byte	.LASF53
 2525 04f1 01       		.byte	0x1
 2526 04f2 BA04     		.2byte	0x4ba
 2527 04f4 83000000 		.4byte	0x83
 2528 04f8 01       		.uleb128 0x1
 2529 04f9 52       		.byte	0x52
 2530 04fa 00       		.byte	0
 2531 04fb 12       		.uleb128 0x12
 2532 04fc 29040000 		.4byte	.LASF68
 2533 0500 01       		.byte	0x1
 2534 0501 D004     		.2byte	0x4d0
 2535 0503 00000000 		.4byte	.LFB19
 2536 0507 2C000000 		.4byte	.LFE19-.LFB19
 2537 050b 01       		.uleb128 0x1
 2538 050c 9C       		.byte	0x9c
 2539 050d 30050000 		.4byte	0x530
 2540 0511 10       		.uleb128 0x10
 2541 0512 B5030000 		.4byte	.LASF69
 2542 0516 01       		.byte	0x1
 2543 0517 D004     		.2byte	0x4d0
 2544 0519 83000000 		.4byte	0x83
 2545 051d 05030000 		.4byte	.LLST21
 2546 0521 17       		.uleb128 0x17
 2547 0522 07000000 		.4byte	.LASF53
 2548 0526 01       		.byte	0x1
 2549 0527 D204     		.2byte	0x4d2
 2550 0529 83000000 		.4byte	0x83
 2551 052d 01       		.uleb128 0x1
 2552 052e 52       		.byte	0x52
 2553 052f 00       		.byte	0
 2554 0530 12       		.uleb128 0x12
 2555 0531 70060000 		.4byte	.LASF70
 2556 0535 01       		.byte	0x1
 2557 0536 F104     		.2byte	0x4f1
 2558 0538 00000000 		.4byte	.LFB20
 2559 053c 44000000 		.4byte	.LFE20-.LFB20
 2560 0540 01       		.uleb128 0x1
 2561 0541 9C       		.byte	0x9c
 2562 0542 76050000 		.4byte	0x576
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 86


 2563 0546 10       		.uleb128 0x10
 2564 0547 5C050000 		.4byte	.LASF39
 2565 054b 01       		.byte	0x1
 2566 054c F104     		.2byte	0x4f1
 2567 054e 83000000 		.4byte	0x83
 2568 0552 23030000 		.4byte	.LLST22
 2569 0556 10       		.uleb128 0x10
 2570 0557 EF050000 		.4byte	.LASF71
 2571 055b 01       		.byte	0x1
 2572 055c F104     		.2byte	0x4f1
 2573 055e 8F000000 		.4byte	0x8f
 2574 0562 4F030000 		.4byte	.LLST23
 2575 0566 16       		.uleb128 0x16
 2576 0567 20000000 		.4byte	.LVL72
 2577 056b 4B0A0000 		.4byte	0xa4b
 2578 056f 15       		.uleb128 0x15
 2579 0570 01       		.uleb128 0x1
 2580 0571 50       		.byte	0x50
 2581 0572 01       		.uleb128 0x1
 2582 0573 30       		.byte	0x30
 2583 0574 00       		.byte	0
 2584 0575 00       		.byte	0
 2585 0576 12       		.uleb128 0x12
 2586 0577 91030000 		.4byte	.LASF72
 2587 057b 01       		.byte	0x1
 2588 057c 1105     		.2byte	0x511
 2589 057e 00000000 		.4byte	.LFB21
 2590 0582 44000000 		.4byte	.LFE21-.LFB21
 2591 0586 01       		.uleb128 0x1
 2592 0587 9C       		.byte	0x9c
 2593 0588 BC050000 		.4byte	0x5bc
 2594 058c 10       		.uleb128 0x10
 2595 058d 5C050000 		.4byte	.LASF39
 2596 0591 01       		.byte	0x1
 2597 0592 1105     		.2byte	0x511
 2598 0594 83000000 		.4byte	0x83
 2599 0598 70030000 		.4byte	.LLST24
 2600 059c 10       		.uleb128 0x10
 2601 059d 11000000 		.4byte	.LASF73
 2602 05a1 01       		.byte	0x1
 2603 05a2 1105     		.2byte	0x511
 2604 05a4 9B000000 		.4byte	0x9b
 2605 05a8 9C030000 		.4byte	.LLST25
 2606 05ac 16       		.uleb128 0x16
 2607 05ad 20000000 		.4byte	.LVL76
 2608 05b1 4B0A0000 		.4byte	0xa4b
 2609 05b5 15       		.uleb128 0x15
 2610 05b6 01       		.uleb128 0x1
 2611 05b7 50       		.byte	0x50
 2612 05b8 01       		.uleb128 0x1
 2613 05b9 30       		.byte	0x30
 2614 05ba 00       		.byte	0
 2615 05bb 00       		.byte	0
 2616 05bc 1A       		.uleb128 0x1a
 2617 05bd BF000000 		.4byte	.LASF74
 2618 05c1 01       		.byte	0x1
 2619 05c2 2A05     		.2byte	0x52a
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 87


 2620 05c4 8F000000 		.4byte	0x8f
 2621 05c8 00000000 		.4byte	.LFB22
 2622 05cc 98000000 		.4byte	.LFE22-.LFB22
 2623 05d0 01       		.uleb128 0x1
 2624 05d1 9C       		.byte	0x9c
 2625 05d2 4A060000 		.4byte	0x64a
 2626 05d6 10       		.uleb128 0x10
 2627 05d7 5C050000 		.4byte	.LASF39
 2628 05db 01       		.byte	0x1
 2629 05dc 2A05     		.2byte	0x52a
 2630 05de 83000000 		.4byte	0x83
 2631 05e2 C9030000 		.4byte	.LLST26
 2632 05e6 10       		.uleb128 0x10
 2633 05e7 06060000 		.4byte	.LASF75
 2634 05eb 01       		.byte	0x1
 2635 05ec 2A05     		.2byte	0x52a
 2636 05ee 8F000000 		.4byte	0x8f
 2637 05f2 F5030000 		.4byte	.LLST27
 2638 05f6 0D       		.uleb128 0xd
 2639 05f7 71010000 		.4byte	.LASF76
 2640 05fb 01       		.byte	0x1
 2641 05fc 2C05     		.2byte	0x52c
 2642 05fe 83000000 		.4byte	0x83
 2643 0602 45040000 		.4byte	.LLST28
 2644 0606 0D       		.uleb128 0xd
 2645 0607 1B020000 		.4byte	.LASF77
 2646 060b 01       		.byte	0x1
 2647 060c 2D05     		.2byte	0x52d
 2648 060e 83000000 		.4byte	0x83
 2649 0612 58040000 		.4byte	.LLST29
 2650 0616 0D       		.uleb128 0xd
 2651 0617 F6020000 		.4byte	.LASF78
 2652 061b 01       		.byte	0x1
 2653 061c 2E05     		.2byte	0x52e
 2654 061e 83000000 		.4byte	0x83
 2655 0622 83040000 		.4byte	.LLST30
 2656 0626 14       		.uleb128 0x14
 2657 0627 24000000 		.4byte	.LVL83
 2658 062b 4B0A0000 		.4byte	0xa4b
 2659 062f 39060000 		.4byte	0x639
 2660 0633 15       		.uleb128 0x15
 2661 0634 01       		.uleb128 0x1
 2662 0635 50       		.byte	0x50
 2663 0636 01       		.uleb128 0x1
 2664 0637 30       		.byte	0x30
 2665 0638 00       		.byte	0
 2666 0639 16       		.uleb128 0x16
 2667 063a 5E000000 		.4byte	.LVL88
 2668 063e 02020000 		.4byte	0x202
 2669 0642 15       		.uleb128 0x15
 2670 0643 01       		.uleb128 0x1
 2671 0644 50       		.byte	0x50
 2672 0645 02       		.uleb128 0x2
 2673 0646 76       		.byte	0x76
 2674 0647 00       		.sleb128 0
 2675 0648 00       		.byte	0
 2676 0649 00       		.byte	0
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 88


 2677 064a 1A       		.uleb128 0x1a
 2678 064b 7F050000 		.4byte	.LASF79
 2679 064f 01       		.byte	0x1
 2680 0650 7F05     		.2byte	0x57f
 2681 0652 A7000000 		.4byte	0xa7
 2682 0656 00000000 		.4byte	.LFB23
 2683 065a 54000000 		.4byte	.LFE23-.LFB23
 2684 065e 01       		.uleb128 0x1
 2685 065f 9C       		.byte	0x9c
 2686 0660 B6060000 		.4byte	0x6b6
 2687 0664 10       		.uleb128 0x10
 2688 0665 5C050000 		.4byte	.LASF39
 2689 0669 01       		.byte	0x1
 2690 066a 7F05     		.2byte	0x57f
 2691 066c 83000000 		.4byte	0x83
 2692 0670 96040000 		.4byte	.LLST31
 2693 0674 10       		.uleb128 0x10
 2694 0675 06060000 		.4byte	.LASF75
 2695 0679 01       		.byte	0x1
 2696 067a 7F05     		.2byte	0x57f
 2697 067c 8F000000 		.4byte	0x8f
 2698 0680 D0040000 		.4byte	.LLST32
 2699 0684 0D       		.uleb128 0xd
 2700 0685 7A040000 		.4byte	.LASF80
 2701 0689 01       		.byte	0x1
 2702 068a 8105     		.2byte	0x581
 2703 068c A7000000 		.4byte	0xa7
 2704 0690 07050000 		.4byte	.LLST33
 2705 0694 0D       		.uleb128 0xd
 2706 0695 F6020000 		.4byte	.LASF78
 2707 0699 01       		.byte	0x1
 2708 069a 8205     		.2byte	0x582
 2709 069c 83000000 		.4byte	0x83
 2710 06a0 45050000 		.4byte	.LLST34
 2711 06a4 16       		.uleb128 0x16
 2712 06a5 1E000000 		.4byte	.LVL100
 2713 06a9 BC050000 		.4byte	0x5bc
 2714 06ad 15       		.uleb128 0x15
 2715 06ae 01       		.uleb128 0x1
 2716 06af 50       		.byte	0x50
 2717 06b0 03       		.uleb128 0x3
 2718 06b1 F3       		.byte	0xf3
 2719 06b2 01       		.uleb128 0x1
 2720 06b3 50       		.byte	0x50
 2721 06b4 00       		.byte	0
 2722 06b5 00       		.byte	0
 2723 06b6 1A       		.uleb128 0x1a
 2724 06b7 5F020000 		.4byte	.LASF81
 2725 06bb 01       		.byte	0x1
 2726 06bc B205     		.2byte	0x5b2
 2727 06be 8F000000 		.4byte	0x8f
 2728 06c2 00000000 		.4byte	.LFB24
 2729 06c6 68000000 		.4byte	.LFE24-.LFB24
 2730 06ca 01       		.uleb128 0x1
 2731 06cb 9C       		.byte	0x9c
 2732 06cc 22070000 		.4byte	0x722
 2733 06d0 10       		.uleb128 0x10
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 89


 2734 06d1 5C050000 		.4byte	.LASF39
 2735 06d5 01       		.byte	0x1
 2736 06d6 B205     		.2byte	0x5b2
 2737 06d8 83000000 		.4byte	0x83
 2738 06dc 63050000 		.4byte	.LLST35
 2739 06e0 10       		.uleb128 0x10
 2740 06e1 06060000 		.4byte	.LASF75
 2741 06e5 01       		.byte	0x1
 2742 06e6 B205     		.2byte	0x5b2
 2743 06e8 8F000000 		.4byte	0x8f
 2744 06ec 9D050000 		.4byte	.LLST36
 2745 06f0 0D       		.uleb128 0xd
 2746 06f1 98060000 		.4byte	.LASF82
 2747 06f5 01       		.byte	0x1
 2748 06f6 B405     		.2byte	0x5b4
 2749 06f8 8F000000 		.4byte	0x8f
 2750 06fc DF050000 		.4byte	.LLST37
 2751 0700 0D       		.uleb128 0xd
 2752 0701 F6020000 		.4byte	.LASF78
 2753 0705 01       		.byte	0x1
 2754 0706 B505     		.2byte	0x5b5
 2755 0708 83000000 		.4byte	0x83
 2756 070c 15060000 		.4byte	.LLST38
 2757 0710 16       		.uleb128 0x16
 2758 0711 1E000000 		.4byte	.LVL111
 2759 0715 BC050000 		.4byte	0x5bc
 2760 0719 15       		.uleb128 0x15
 2761 071a 01       		.uleb128 0x1
 2762 071b 50       		.byte	0x50
 2763 071c 03       		.uleb128 0x3
 2764 071d F3       		.byte	0xf3
 2765 071e 01       		.uleb128 0x1
 2766 071f 50       		.byte	0x50
 2767 0720 00       		.byte	0
 2768 0721 00       		.byte	0
 2769 0722 1A       		.uleb128 0x1a
 2770 0723 D5060000 		.4byte	.LASF83
 2771 0727 01       		.byte	0x1
 2772 0728 E805     		.2byte	0x5e8
 2773 072a 9B000000 		.4byte	0x9b
 2774 072e 00000000 		.4byte	.LFB25
 2775 0732 4C000000 		.4byte	.LFE25-.LFB25
 2776 0736 01       		.uleb128 0x1
 2777 0737 9C       		.byte	0x9c
 2778 0738 8E070000 		.4byte	0x78e
 2779 073c 10       		.uleb128 0x10
 2780 073d 5C050000 		.4byte	.LASF39
 2781 0741 01       		.byte	0x1
 2782 0742 E805     		.2byte	0x5e8
 2783 0744 83000000 		.4byte	0x83
 2784 0748 6B060000 		.4byte	.LLST39
 2785 074c 10       		.uleb128 0x10
 2786 074d 06060000 		.4byte	.LASF75
 2787 0751 01       		.byte	0x1
 2788 0752 E805     		.2byte	0x5e8
 2789 0754 8F000000 		.4byte	0x8f
 2790 0758 A5060000 		.4byte	.LLST40
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 90


 2791 075c 0D       		.uleb128 0xd
 2792 075d D9050000 		.4byte	.LASF84
 2793 0761 01       		.byte	0x1
 2794 0762 EA05     		.2byte	0x5ea
 2795 0764 C1000000 		.4byte	0xc1
 2796 0768 DC060000 		.4byte	.LLST41
 2797 076c 0D       		.uleb128 0xd
 2798 076d F6020000 		.4byte	.LASF78
 2799 0771 01       		.byte	0x1
 2800 0772 EB05     		.2byte	0x5eb
 2801 0774 83000000 		.4byte	0x83
 2802 0778 0C070000 		.4byte	.LLST42
 2803 077c 16       		.uleb128 0x16
 2804 077d 1E000000 		.4byte	.LVL124
 2805 0781 BC050000 		.4byte	0x5bc
 2806 0785 15       		.uleb128 0x15
 2807 0786 01       		.uleb128 0x1
 2808 0787 50       		.byte	0x50
 2809 0788 03       		.uleb128 0x3
 2810 0789 F3       		.byte	0xf3
 2811 078a 01       		.uleb128 0x1
 2812 078b 50       		.byte	0x50
 2813 078c 00       		.byte	0
 2814 078d 00       		.byte	0
 2815 078e 1B       		.uleb128 0x1b
 2816 078f 7E000000 		.4byte	.LASF85
 2817 0793 01       		.byte	0x1
 2818 0794 F007     		.2byte	0x7f0
 2819 0796 00000000 		.4byte	.LFB26
 2820 079a 18010000 		.4byte	.LFE26-.LFB26
 2821 079e 01       		.uleb128 0x1
 2822 079f 9C       		.byte	0x9c
 2823 07a0 10080000 		.4byte	0x810
 2824 07a4 0D       		.uleb128 0xd
 2825 07a5 A4040000 		.4byte	.LASF43
 2826 07a9 01       		.byte	0x1
 2827 07aa F207     		.2byte	0x7f2
 2828 07ac 83000000 		.4byte	0x83
 2829 07b0 62070000 		.4byte	.LLST43
 2830 07b4 0D       		.uleb128 0xd
 2831 07b5 98010000 		.4byte	.LASF86
 2832 07b9 01       		.byte	0x1
 2833 07ba F307     		.2byte	0x7f3
 2834 07bc 83000000 		.4byte	0x83
 2835 07c0 98070000 		.4byte	.LLST44
 2836 07c4 0D       		.uleb128 0xd
 2837 07c5 19000000 		.4byte	.LASF87
 2838 07c9 01       		.byte	0x1
 2839 07ca F407     		.2byte	0x7f4
 2840 07cc 9B000000 		.4byte	0x9b
 2841 07d0 DA070000 		.4byte	.LLST45
 2842 07d4 14       		.uleb128 0x14
 2843 07d5 CE000000 		.4byte	.LVL140
 2844 07d9 560A0000 		.4byte	0xa56
 2845 07dd EC070000 		.4byte	0x7ec
 2846 07e1 15       		.uleb128 0x15
 2847 07e2 01       		.uleb128 0x1
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 91


 2848 07e3 50       		.byte	0x50
 2849 07e4 01       		.uleb128 0x1
 2850 07e5 3F       		.byte	0x3f
 2851 07e6 15       		.uleb128 0x15
 2852 07e7 01       		.uleb128 0x1
 2853 07e8 51       		.byte	0x51
 2854 07e9 01       		.uleb128 0x1
 2855 07ea 33       		.byte	0x33
 2856 07eb 00       		.byte	0
 2857 07ec 14       		.uleb128 0x14
 2858 07ed D6000000 		.4byte	.LVL141
 2859 07f1 610A0000 		.4byte	0xa61
 2860 07f5 FF070000 		.4byte	0x7ff
 2861 07f9 15       		.uleb128 0x15
 2862 07fa 01       		.uleb128 0x1
 2863 07fb 50       		.byte	0x50
 2864 07fc 01       		.uleb128 0x1
 2865 07fd 3F       		.byte	0x3f
 2866 07fe 00       		.byte	0
 2867 07ff 16       		.uleb128 0x16
 2868 0800 EC000000 		.4byte	.LVL144
 2869 0804 5F020000 		.4byte	0x25f
 2870 0808 15       		.uleb128 0x15
 2871 0809 01       		.uleb128 0x1
 2872 080a 50       		.byte	0x50
 2873 080b 02       		.uleb128 0x2
 2874 080c 74       		.byte	0x74
 2875 080d 00       		.sleb128 0
 2876 080e 00       		.byte	0
 2877 080f 00       		.byte	0
 2878 0810 12       		.uleb128 0x12
 2879 0811 57000000 		.4byte	.LASF88
 2880 0815 01       		.byte	0x1
 2881 0816 5C08     		.2byte	0x85c
 2882 0818 00000000 		.4byte	.LFB27
 2883 081c 48000000 		.4byte	.LFE27-.LFB27
 2884 0820 01       		.uleb128 0x1
 2885 0821 9C       		.byte	0x9c
 2886 0822 43080000 		.4byte	0x843
 2887 0826 14       		.uleb128 0x14
 2888 0827 24000000 		.4byte	.LVL146
 2889 082b 6C0A0000 		.4byte	0xa6c
 2890 082f 39080000 		.4byte	0x839
 2891 0833 15       		.uleb128 0x15
 2892 0834 01       		.uleb128 0x1
 2893 0835 50       		.byte	0x50
 2894 0836 01       		.uleb128 0x1
 2895 0837 3A       		.byte	0x3a
 2896 0838 00       		.byte	0
 2897 0839 13       		.uleb128 0x13
 2898 083a 36000000 		.4byte	.LVL147
 2899 083e C2010000 		.4byte	0x1c2
 2900 0842 00       		.byte	0
 2901 0843 12       		.uleb128 0x12
 2902 0844 C2060000 		.4byte	.LASF89
 2903 0848 01       		.byte	0x1
 2904 0849 2B02     		.2byte	0x22b
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 92


 2905 084b 00000000 		.4byte	.LFB1
 2906 084f 24000000 		.4byte	.LFE1-.LFB1
 2907 0853 01       		.uleb128 0x1
 2908 0854 9C       		.byte	0x9c
 2909 0855 6C080000 		.4byte	0x86c
 2910 0859 13       		.uleb128 0x13
 2911 085a 0E000000 		.4byte	.LVL148
 2912 085e 8E070000 		.4byte	0x78e
 2913 0862 13       		.uleb128 0x13
 2914 0863 1C000000 		.4byte	.LVL149
 2915 0867 10080000 		.4byte	0x810
 2916 086b 00       		.byte	0
 2917 086c 12       		.uleb128 0x12
 2918 086d 20000000 		.4byte	.LASF90
 2919 0871 01       		.byte	0x1
 2920 0872 4802     		.2byte	0x248
 2921 0874 00000000 		.4byte	.LFB2
 2922 0878 10000000 		.4byte	.LFE2-.LFB2
 2923 087c 01       		.uleb128 0x1
 2924 087d 9C       		.byte	0x9c
 2925 087e AC080000 		.4byte	0x8ac
 2926 0882 10       		.uleb128 0x10
 2927 0883 71030000 		.4byte	.LASF91
 2928 0887 01       		.byte	0x1
 2929 0888 4802     		.2byte	0x248
 2930 088a E5000000 		.4byte	0xe5
 2931 088e ED070000 		.4byte	.LLST46
 2932 0892 13       		.uleb128 0x13
 2933 0893 08000000 		.4byte	.LVL151
 2934 0897 43080000 		.4byte	0x843
 2935 089b 16       		.uleb128 0x16
 2936 089c 0E000000 		.4byte	.LVL152
 2937 08a0 770A0000 		.4byte	0xa77
 2938 08a4 15       		.uleb128 0x15
 2939 08a5 01       		.uleb128 0x1
 2940 08a6 50       		.byte	0x50
 2941 08a7 02       		.uleb128 0x2
 2942 08a8 74       		.byte	0x74
 2943 08a9 00       		.sleb128 0
 2944 08aa 00       		.byte	0
 2945 08ab 00       		.byte	0
 2946 08ac 12       		.uleb128 0x12
 2947 08ad 81020000 		.4byte	.LASF92
 2948 08b1 01       		.byte	0x1
 2949 08b2 0303     		.2byte	0x303
 2950 08b4 00000000 		.4byte	.LFB6
 2951 08b8 70000000 		.4byte	.LFE6-.LFB6
 2952 08bc 01       		.uleb128 0x1
 2953 08bd 9C       		.byte	0x9c
 2954 08be 1B090000 		.4byte	0x91b
 2955 08c2 10       		.uleb128 0x10
 2956 08c3 78050000 		.4byte	.LASF38
 2957 08c7 01       		.byte	0x1
 2958 08c8 0303     		.2byte	0x303
 2959 08ca 83000000 		.4byte	0x83
 2960 08ce 19080000 		.4byte	.LLST47
 2961 08d2 10       		.uleb128 0x10
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 93


 2962 08d3 E7050000 		.4byte	.LASF93
 2963 08d7 01       		.byte	0x1
 2964 08d8 0303     		.2byte	0x303
 2965 08da 83000000 		.4byte	0x83
 2966 08de 45080000 		.4byte	.LLST48
 2967 08e2 13       		.uleb128 0x13
 2968 08e3 0E000000 		.4byte	.LVL155
 2969 08e7 4D020000 		.4byte	0x24d
 2970 08eb 13       		.uleb128 0x13
 2971 08ec 1E000000 		.4byte	.LVL156
 2972 08f0 8E070000 		.4byte	0x78e
 2973 08f4 14       		.uleb128 0x14
 2974 08f5 38000000 		.4byte	.LVL157
 2975 08f9 5F020000 		.4byte	0x25f
 2976 08fd 08090000 		.4byte	0x908
 2977 0901 15       		.uleb128 0x15
 2978 0902 01       		.uleb128 0x1
 2979 0903 50       		.byte	0x50
 2980 0904 02       		.uleb128 0x2
 2981 0905 75       		.byte	0x75
 2982 0906 00       		.sleb128 0
 2983 0907 00       		.byte	0
 2984 0908 13       		.uleb128 0x13
 2985 0909 56000000 		.4byte	.LVL158
 2986 090d 43080000 		.4byte	0x843
 2987 0911 13       		.uleb128 0x13
 2988 0912 5A000000 		.4byte	.LVL159
 2989 0916 D2020000 		.4byte	0x2d2
 2990 091a 00       		.byte	0
 2991 091b 12       		.uleb128 0x12
 2992 091c 2E000000 		.4byte	.LASF94
 2993 0920 01       		.byte	0x1
 2994 0921 6003     		.2byte	0x360
 2995 0923 00000000 		.4byte	.LFB8
 2996 0927 44000000 		.4byte	.LFE8-.LFB8
 2997 092b 01       		.uleb128 0x1
 2998 092c 9C       		.byte	0x9c
 2999 092d 44090000 		.4byte	0x944
 3000 0931 13       		.uleb128 0x13
 3001 0932 2C000000 		.4byte	.LVL162
 3002 0936 4D020000 		.4byte	0x24d
 3003 093a 13       		.uleb128 0x13
 3004 093b 30000000 		.4byte	.LVL163
 3005 093f 43080000 		.4byte	0x843
 3006 0943 00       		.byte	0
 3007 0944 1C       		.uleb128 0x1c
 3008 0945 AA040000 		.4byte	.LASF95
 3009 0949 01       		.byte	0x1
 3010 094a 43       		.byte	0x43
 3011 094b 83000000 		.4byte	0x83
 3012 094f 05       		.uleb128 0x5
 3013 0950 03       		.byte	0x3
 3014 0951 00000000 		.4byte	ADC_1_currentConfig
 3015 0955 1D       		.uleb128 0x1d
 3016 0956 65090000 		.4byte	0x965
 3017 095a 65090000 		.4byte	0x965
 3018 095e 1E       		.uleb128 0x1e
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 94


 3019 095f FF000000 		.4byte	0xff
 3020 0963 01       		.byte	0x1
 3021 0964 00       		.byte	0
 3022 0965 0E       		.uleb128 0xe
 3023 0966 83000000 		.4byte	0x83
 3024 096a 1C       		.uleb128 0x1c
 3025 096b C7010000 		.4byte	.LASF96
 3026 096f 01       		.byte	0x1
 3027 0970 49       		.byte	0x49
 3028 0971 7B090000 		.4byte	0x97b
 3029 0975 05       		.uleb128 0x5
 3030 0976 03       		.byte	0x3
 3031 0977 00000000 		.4byte	ADC_1_channelsConfig
 3032 097b 0E       		.uleb128 0xe
 3033 097c 55090000 		.4byte	0x955
 3034 0980 1F       		.uleb128 0x1f
 3035 0981 15010000 		.4byte	.LASF97
 3036 0985 01       		.byte	0x1
 3037 0986 3D       		.byte	0x3d
 3038 0987 6B000000 		.4byte	0x6b
 3039 098b 05       		.uleb128 0x5
 3040 098c 03       		.byte	0x3
 3041 098d 00000000 		.4byte	ADC_1_initVar
 3042 0991 1F       		.uleb128 0x1f
 3043 0992 10060000 		.4byte	.LASF98
 3044 0996 01       		.byte	0x1
 3045 0997 3F       		.byte	0x3f
 3046 0998 6B000000 		.4byte	0x6b
 3047 099c 05       		.uleb128 0x5
 3048 099d 03       		.byte	0x3
 3049 099e 00000000 		.4byte	ADC_1_selected
 3050 09a2 1D       		.uleb128 0x1d
 3051 09a3 B2090000 		.4byte	0x9b2
 3052 09a7 B2090000 		.4byte	0x9b2
 3053 09ab 1E       		.uleb128 0x1e
 3054 09ac FF000000 		.4byte	0xff
 3055 09b0 01       		.byte	0x1
 3056 09b1 00       		.byte	0
 3057 09b2 05       		.uleb128 0x5
 3058 09b3 8F000000 		.4byte	0x8f
 3059 09b7 1F       		.uleb128 0x1f
 3060 09b8 F6030000 		.4byte	.LASF99
 3061 09bc 01       		.byte	0x1
 3062 09bd 40       		.byte	0x40
 3063 09be C8090000 		.4byte	0x9c8
 3064 09c2 05       		.uleb128 0x5
 3065 09c3 03       		.byte	0x3
 3066 09c4 00000000 		.4byte	ADC_1_offset
 3067 09c8 05       		.uleb128 0x5
 3068 09c9 A2090000 		.4byte	0x9a2
 3069 09cd 1D       		.uleb128 0x1d
 3070 09ce DD090000 		.4byte	0x9dd
 3071 09d2 DD090000 		.4byte	0x9dd
 3072 09d6 1E       		.uleb128 0x1e
 3073 09d7 FF000000 		.4byte	0xff
 3074 09db 01       		.byte	0x1
 3075 09dc 00       		.byte	0
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 95


 3076 09dd 05       		.uleb128 0x5
 3077 09de 9B000000 		.4byte	0x9b
 3078 09e2 1F       		.uleb128 0x1f
 3079 09e3 5A040000 		.4byte	.LASF100
 3080 09e7 01       		.byte	0x1
 3081 09e8 41       		.byte	0x41
 3082 09e9 F3090000 		.4byte	0x9f3
 3083 09ed 05       		.uleb128 0x5
 3084 09ee 03       		.byte	0x3
 3085 09ef 00000000 		.4byte	ADC_1_countsPer10Volt
 3086 09f3 05       		.uleb128 0x5
 3087 09f4 CD090000 		.4byte	0x9cd
 3088 09f8 1D       		.uleb128 0x1d
 3089 09f9 FD010000 		.4byte	0x1fd
 3090 09fd 080A0000 		.4byte	0xa08
 3091 0a01 1E       		.uleb128 0x1e
 3092 0a02 FF000000 		.4byte	0xff
 3093 0a06 00       		.byte	0
 3094 0a07 00       		.byte	0
 3095 0a08 20       		.uleb128 0x20
 3096 0a09 43020000 		.4byte	.LASF101
 3097 0a0d 03       		.byte	0x3
 3098 0a0e EC01     		.2byte	0x1ec
 3099 0a10 140A0000 		.4byte	0xa14
 3100 0a14 0E       		.uleb128 0xe
 3101 0a15 F8090000 		.4byte	0x9f8
 3102 0a19 20       		.uleb128 0x20
 3103 0a1a 9F030000 		.4byte	.LASF102
 3104 0a1e 03       		.byte	0x3
 3105 0a1f ED01     		.2byte	0x1ed
 3106 0a21 250A0000 		.4byte	0xa25
 3107 0a25 0E       		.uleb128 0xe
 3108 0a26 55090000 		.4byte	0x955
 3109 0a2a 21       		.uleb128 0x21
 3110 0a2b DC010000 		.4byte	.LASF103
 3111 0a2f DC010000 		.4byte	.LASF103
 3112 0a33 04       		.byte	0x4
 3113 0a34 27       		.byte	0x27
 3114 0a35 21       		.uleb128 0x21
 3115 0a36 94050000 		.4byte	.LASF104
 3116 0a3a 94050000 		.4byte	.LASF104
 3117 0a3e 04       		.byte	0x4
 3118 0a3f 29       		.byte	0x29
 3119 0a40 21       		.uleb128 0x21
 3120 0a41 42030000 		.4byte	.LASF105
 3121 0a45 42030000 		.4byte	.LASF105
 3122 0a49 04       		.byte	0x4
 3123 0a4a 1D       		.byte	0x1d
 3124 0a4b 21       		.uleb128 0x21
 3125 0a4c CE060000 		.4byte	.LASF106
 3126 0a50 CE060000 		.4byte	.LASF106
 3127 0a54 05       		.byte	0x5
 3128 0a55 FA       		.byte	0xfa
 3129 0a56 21       		.uleb128 0x21
 3130 0a57 C3030000 		.4byte	.LASF107
 3131 0a5b C3030000 		.4byte	.LASF107
 3132 0a5f 05       		.byte	0x5
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 96


 3133 0a60 D3       		.byte	0xd3
 3134 0a61 21       		.uleb128 0x21
 3135 0a62 37010000 		.4byte	.LASF108
 3136 0a66 37010000 		.4byte	.LASF108
 3137 0a6a 05       		.byte	0x5
 3138 0a6b D0       		.byte	0xd0
 3139 0a6c 21       		.uleb128 0x21
 3140 0a6d DC000000 		.4byte	.LASF109
 3141 0a71 DC000000 		.4byte	.LASF109
 3142 0a75 05       		.byte	0x5
 3143 0a76 ED       		.byte	0xed
 3144 0a77 21       		.uleb128 0x21
 3145 0a78 DA030000 		.4byte	.LASF110
 3146 0a7c DA030000 		.4byte	.LASF110
 3147 0a80 06       		.byte	0x6
 3148 0a81 18       		.byte	0x18
 3149 0a82 00       		.byte	0
 3150              		.section	.debug_abbrev,"",%progbits
 3151              	.Ldebug_abbrev0:
 3152 0000 01       		.uleb128 0x1
 3153 0001 11       		.uleb128 0x11
 3154 0002 01       		.byte	0x1
 3155 0003 25       		.uleb128 0x25
 3156 0004 0E       		.uleb128 0xe
 3157 0005 13       		.uleb128 0x13
 3158 0006 0B       		.uleb128 0xb
 3159 0007 03       		.uleb128 0x3
 3160 0008 0E       		.uleb128 0xe
 3161 0009 1B       		.uleb128 0x1b
 3162 000a 0E       		.uleb128 0xe
 3163 000b 55       		.uleb128 0x55
 3164 000c 17       		.uleb128 0x17
 3165 000d 11       		.uleb128 0x11
 3166 000e 01       		.uleb128 0x1
 3167 000f 10       		.uleb128 0x10
 3168 0010 17       		.uleb128 0x17
 3169 0011 00       		.byte	0
 3170 0012 00       		.byte	0
 3171 0013 02       		.uleb128 0x2
 3172 0014 24       		.uleb128 0x24
 3173 0015 00       		.byte	0
 3174 0016 0B       		.uleb128 0xb
 3175 0017 0B       		.uleb128 0xb
 3176 0018 3E       		.uleb128 0x3e
 3177 0019 0B       		.uleb128 0xb
 3178 001a 03       		.uleb128 0x3
 3179 001b 0E       		.uleb128 0xe
 3180 001c 00       		.byte	0
 3181 001d 00       		.byte	0
 3182 001e 03       		.uleb128 0x3
 3183 001f 24       		.uleb128 0x24
 3184 0020 00       		.byte	0
 3185 0021 0B       		.uleb128 0xb
 3186 0022 0B       		.uleb128 0xb
 3187 0023 3E       		.uleb128 0x3e
 3188 0024 0B       		.uleb128 0xb
 3189 0025 03       		.uleb128 0x3
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 97


 3190 0026 08       		.uleb128 0x8
 3191 0027 00       		.byte	0
 3192 0028 00       		.byte	0
 3193 0029 04       		.uleb128 0x4
 3194 002a 16       		.uleb128 0x16
 3195 002b 00       		.byte	0
 3196 002c 03       		.uleb128 0x3
 3197 002d 0E       		.uleb128 0xe
 3198 002e 3A       		.uleb128 0x3a
 3199 002f 0B       		.uleb128 0xb
 3200 0030 3B       		.uleb128 0x3b
 3201 0031 05       		.uleb128 0x5
 3202 0032 49       		.uleb128 0x49
 3203 0033 13       		.uleb128 0x13
 3204 0034 00       		.byte	0
 3205 0035 00       		.byte	0
 3206 0036 05       		.uleb128 0x5
 3207 0037 35       		.uleb128 0x35
 3208 0038 00       		.byte	0
 3209 0039 49       		.uleb128 0x49
 3210 003a 13       		.uleb128 0x13
 3211 003b 00       		.byte	0
 3212 003c 00       		.byte	0
 3213 003d 06       		.uleb128 0x6
 3214 003e 0F       		.uleb128 0xf
 3215 003f 00       		.byte	0
 3216 0040 0B       		.uleb128 0xb
 3217 0041 0B       		.uleb128 0xb
 3218 0042 49       		.uleb128 0x49
 3219 0043 13       		.uleb128 0x13
 3220 0044 00       		.byte	0
 3221 0045 00       		.byte	0
 3222 0046 07       		.uleb128 0x7
 3223 0047 15       		.uleb128 0x15
 3224 0048 00       		.byte	0
 3225 0049 27       		.uleb128 0x27
 3226 004a 19       		.uleb128 0x19
 3227 004b 00       		.byte	0
 3228 004c 00       		.byte	0
 3229 004d 08       		.uleb128 0x8
 3230 004e 13       		.uleb128 0x13
 3231 004f 01       		.byte	0x1
 3232 0050 0B       		.uleb128 0xb
 3233 0051 0B       		.uleb128 0xb
 3234 0052 3A       		.uleb128 0x3a
 3235 0053 0B       		.uleb128 0xb
 3236 0054 3B       		.uleb128 0x3b
 3237 0055 0B       		.uleb128 0xb
 3238 0056 01       		.uleb128 0x1
 3239 0057 13       		.uleb128 0x13
 3240 0058 00       		.byte	0
 3241 0059 00       		.byte	0
 3242 005a 09       		.uleb128 0x9
 3243 005b 0D       		.uleb128 0xd
 3244 005c 00       		.byte	0
 3245 005d 03       		.uleb128 0x3
 3246 005e 0E       		.uleb128 0xe
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 98


 3247 005f 3A       		.uleb128 0x3a
 3248 0060 0B       		.uleb128 0xb
 3249 0061 3B       		.uleb128 0x3b
 3250 0062 0B       		.uleb128 0xb
 3251 0063 49       		.uleb128 0x49
 3252 0064 13       		.uleb128 0x13
 3253 0065 38       		.uleb128 0x38
 3254 0066 0B       		.uleb128 0xb
 3255 0067 00       		.byte	0
 3256 0068 00       		.byte	0
 3257 0069 0A       		.uleb128 0xa
 3258 006a 16       		.uleb128 0x16
 3259 006b 00       		.byte	0
 3260 006c 03       		.uleb128 0x3
 3261 006d 0E       		.uleb128 0xe
 3262 006e 3A       		.uleb128 0x3a
 3263 006f 0B       		.uleb128 0xb
 3264 0070 3B       		.uleb128 0x3b
 3265 0071 0B       		.uleb128 0xb
 3266 0072 49       		.uleb128 0x49
 3267 0073 13       		.uleb128 0x13
 3268 0074 00       		.byte	0
 3269 0075 00       		.byte	0
 3270 0076 0B       		.uleb128 0xb
 3271 0077 2E       		.uleb128 0x2e
 3272 0078 01       		.byte	0x1
 3273 0079 03       		.uleb128 0x3
 3274 007a 0E       		.uleb128 0xe
 3275 007b 3A       		.uleb128 0x3a
 3276 007c 0B       		.uleb128 0xb
 3277 007d 3B       		.uleb128 0x3b
 3278 007e 05       		.uleb128 0x5
 3279 007f 27       		.uleb128 0x27
 3280 0080 19       		.uleb128 0x19
 3281 0081 11       		.uleb128 0x11
 3282 0082 01       		.uleb128 0x1
 3283 0083 12       		.uleb128 0x12
 3284 0084 06       		.uleb128 0x6
 3285 0085 40       		.uleb128 0x40
 3286 0086 18       		.uleb128 0x18
 3287 0087 9742     		.uleb128 0x2117
 3288 0089 19       		.uleb128 0x19
 3289 008a 01       		.uleb128 0x1
 3290 008b 13       		.uleb128 0x13
 3291 008c 00       		.byte	0
 3292 008d 00       		.byte	0
 3293 008e 0C       		.uleb128 0xc
 3294 008f 05       		.uleb128 0x5
 3295 0090 00       		.byte	0
 3296 0091 03       		.uleb128 0x3
 3297 0092 0E       		.uleb128 0xe
 3298 0093 3A       		.uleb128 0x3a
 3299 0094 0B       		.uleb128 0xb
 3300 0095 3B       		.uleb128 0x3b
 3301 0096 05       		.uleb128 0x5
 3302 0097 49       		.uleb128 0x49
 3303 0098 13       		.uleb128 0x13
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 99


 3304 0099 02       		.uleb128 0x2
 3305 009a 18       		.uleb128 0x18
 3306 009b 00       		.byte	0
 3307 009c 00       		.byte	0
 3308 009d 0D       		.uleb128 0xd
 3309 009e 34       		.uleb128 0x34
 3310 009f 00       		.byte	0
 3311 00a0 03       		.uleb128 0x3
 3312 00a1 0E       		.uleb128 0xe
 3313 00a2 3A       		.uleb128 0x3a
 3314 00a3 0B       		.uleb128 0xb
 3315 00a4 3B       		.uleb128 0x3b
 3316 00a5 05       		.uleb128 0x5
 3317 00a6 49       		.uleb128 0x49
 3318 00a7 13       		.uleb128 0x13
 3319 00a8 02       		.uleb128 0x2
 3320 00a9 17       		.uleb128 0x17
 3321 00aa 00       		.byte	0
 3322 00ab 00       		.byte	0
 3323 00ac 0E       		.uleb128 0xe
 3324 00ad 26       		.uleb128 0x26
 3325 00ae 00       		.byte	0
 3326 00af 49       		.uleb128 0x49
 3327 00b0 13       		.uleb128 0x13
 3328 00b1 00       		.byte	0
 3329 00b2 00       		.byte	0
 3330 00b3 0F       		.uleb128 0xf
 3331 00b4 2E       		.uleb128 0x2e
 3332 00b5 01       		.byte	0x1
 3333 00b6 03       		.uleb128 0x3
 3334 00b7 0E       		.uleb128 0xe
 3335 00b8 3A       		.uleb128 0x3a
 3336 00b9 0B       		.uleb128 0xb
 3337 00ba 3B       		.uleb128 0x3b
 3338 00bb 05       		.uleb128 0x5
 3339 00bc 27       		.uleb128 0x27
 3340 00bd 19       		.uleb128 0x19
 3341 00be 49       		.uleb128 0x49
 3342 00bf 13       		.uleb128 0x13
 3343 00c0 11       		.uleb128 0x11
 3344 00c1 01       		.uleb128 0x1
 3345 00c2 12       		.uleb128 0x12
 3346 00c3 06       		.uleb128 0x6
 3347 00c4 40       		.uleb128 0x40
 3348 00c5 18       		.uleb128 0x18
 3349 00c6 9742     		.uleb128 0x2117
 3350 00c8 19       		.uleb128 0x19
 3351 00c9 01       		.uleb128 0x1
 3352 00ca 13       		.uleb128 0x13
 3353 00cb 00       		.byte	0
 3354 00cc 00       		.byte	0
 3355 00cd 10       		.uleb128 0x10
 3356 00ce 05       		.uleb128 0x5
 3357 00cf 00       		.byte	0
 3358 00d0 03       		.uleb128 0x3
 3359 00d1 0E       		.uleb128 0xe
 3360 00d2 3A       		.uleb128 0x3a
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 100


 3361 00d3 0B       		.uleb128 0xb
 3362 00d4 3B       		.uleb128 0x3b
 3363 00d5 05       		.uleb128 0x5
 3364 00d6 49       		.uleb128 0x49
 3365 00d7 13       		.uleb128 0x13
 3366 00d8 02       		.uleb128 0x2
 3367 00d9 17       		.uleb128 0x17
 3368 00da 00       		.byte	0
 3369 00db 00       		.byte	0
 3370 00dc 11       		.uleb128 0x11
 3371 00dd 2E       		.uleb128 0x2e
 3372 00de 00       		.byte	0
 3373 00df 3F       		.uleb128 0x3f
 3374 00e0 19       		.uleb128 0x19
 3375 00e1 03       		.uleb128 0x3
 3376 00e2 0E       		.uleb128 0xe
 3377 00e3 3A       		.uleb128 0x3a
 3378 00e4 0B       		.uleb128 0xb
 3379 00e5 3B       		.uleb128 0x3b
 3380 00e6 05       		.uleb128 0x5
 3381 00e7 27       		.uleb128 0x27
 3382 00e8 19       		.uleb128 0x19
 3383 00e9 11       		.uleb128 0x11
 3384 00ea 01       		.uleb128 0x1
 3385 00eb 12       		.uleb128 0x12
 3386 00ec 06       		.uleb128 0x6
 3387 00ed 40       		.uleb128 0x40
 3388 00ee 18       		.uleb128 0x18
 3389 00ef 9742     		.uleb128 0x2117
 3390 00f1 19       		.uleb128 0x19
 3391 00f2 00       		.byte	0
 3392 00f3 00       		.byte	0
 3393 00f4 12       		.uleb128 0x12
 3394 00f5 2E       		.uleb128 0x2e
 3395 00f6 01       		.byte	0x1
 3396 00f7 3F       		.uleb128 0x3f
 3397 00f8 19       		.uleb128 0x19
 3398 00f9 03       		.uleb128 0x3
 3399 00fa 0E       		.uleb128 0xe
 3400 00fb 3A       		.uleb128 0x3a
 3401 00fc 0B       		.uleb128 0xb
 3402 00fd 3B       		.uleb128 0x3b
 3403 00fe 05       		.uleb128 0x5
 3404 00ff 27       		.uleb128 0x27
 3405 0100 19       		.uleb128 0x19
 3406 0101 11       		.uleb128 0x11
 3407 0102 01       		.uleb128 0x1
 3408 0103 12       		.uleb128 0x12
 3409 0104 06       		.uleb128 0x6
 3410 0105 40       		.uleb128 0x40
 3411 0106 18       		.uleb128 0x18
 3412 0107 9742     		.uleb128 0x2117
 3413 0109 19       		.uleb128 0x19
 3414 010a 01       		.uleb128 0x1
 3415 010b 13       		.uleb128 0x13
 3416 010c 00       		.byte	0
 3417 010d 00       		.byte	0
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 101


 3418 010e 13       		.uleb128 0x13
 3419 010f 898201   		.uleb128 0x4109
 3420 0112 00       		.byte	0
 3421 0113 11       		.uleb128 0x11
 3422 0114 01       		.uleb128 0x1
 3423 0115 31       		.uleb128 0x31
 3424 0116 13       		.uleb128 0x13
 3425 0117 00       		.byte	0
 3426 0118 00       		.byte	0
 3427 0119 14       		.uleb128 0x14
 3428 011a 898201   		.uleb128 0x4109
 3429 011d 01       		.byte	0x1
 3430 011e 11       		.uleb128 0x11
 3431 011f 01       		.uleb128 0x1
 3432 0120 31       		.uleb128 0x31
 3433 0121 13       		.uleb128 0x13
 3434 0122 01       		.uleb128 0x1
 3435 0123 13       		.uleb128 0x13
 3436 0124 00       		.byte	0
 3437 0125 00       		.byte	0
 3438 0126 15       		.uleb128 0x15
 3439 0127 8A8201   		.uleb128 0x410a
 3440 012a 00       		.byte	0
 3441 012b 02       		.uleb128 0x2
 3442 012c 18       		.uleb128 0x18
 3443 012d 9142     		.uleb128 0x2111
 3444 012f 18       		.uleb128 0x18
 3445 0130 00       		.byte	0
 3446 0131 00       		.byte	0
 3447 0132 16       		.uleb128 0x16
 3448 0133 898201   		.uleb128 0x4109
 3449 0136 01       		.byte	0x1
 3450 0137 11       		.uleb128 0x11
 3451 0138 01       		.uleb128 0x1
 3452 0139 31       		.uleb128 0x31
 3453 013a 13       		.uleb128 0x13
 3454 013b 00       		.byte	0
 3455 013c 00       		.byte	0
 3456 013d 17       		.uleb128 0x17
 3457 013e 34       		.uleb128 0x34
 3458 013f 00       		.byte	0
 3459 0140 03       		.uleb128 0x3
 3460 0141 0E       		.uleb128 0xe
 3461 0142 3A       		.uleb128 0x3a
 3462 0143 0B       		.uleb128 0xb
 3463 0144 3B       		.uleb128 0x3b
 3464 0145 05       		.uleb128 0x5
 3465 0146 49       		.uleb128 0x49
 3466 0147 13       		.uleb128 0x13
 3467 0148 02       		.uleb128 0x2
 3468 0149 18       		.uleb128 0x18
 3469 014a 00       		.byte	0
 3470 014b 00       		.byte	0
 3471 014c 18       		.uleb128 0x18
 3472 014d 2E       		.uleb128 0x2e
 3473 014e 01       		.byte	0x1
 3474 014f 3F       		.uleb128 0x3f
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 102


 3475 0150 19       		.uleb128 0x19
 3476 0151 03       		.uleb128 0x3
 3477 0152 0E       		.uleb128 0xe
 3478 0153 3A       		.uleb128 0x3a
 3479 0154 0B       		.uleb128 0xb
 3480 0155 3B       		.uleb128 0x3b
 3481 0156 05       		.uleb128 0x5
 3482 0157 27       		.uleb128 0x27
 3483 0158 19       		.uleb128 0x19
 3484 0159 49       		.uleb128 0x49
 3485 015a 13       		.uleb128 0x13
 3486 015b 11       		.uleb128 0x11
 3487 015c 01       		.uleb128 0x1
 3488 015d 12       		.uleb128 0x12
 3489 015e 06       		.uleb128 0x6
 3490 015f 40       		.uleb128 0x40
 3491 0160 18       		.uleb128 0x18
 3492 0161 9742     		.uleb128 0x2117
 3493 0163 19       		.uleb128 0x19
 3494 0164 01       		.uleb128 0x1
 3495 0165 13       		.uleb128 0x13
 3496 0166 00       		.byte	0
 3497 0167 00       		.byte	0
 3498 0168 19       		.uleb128 0x19
 3499 0169 34       		.uleb128 0x34
 3500 016a 00       		.byte	0
 3501 016b 03       		.uleb128 0x3
 3502 016c 08       		.uleb128 0x8
 3503 016d 3A       		.uleb128 0x3a
 3504 016e 0B       		.uleb128 0xb
 3505 016f 3B       		.uleb128 0x3b
 3506 0170 05       		.uleb128 0x5
 3507 0171 49       		.uleb128 0x49
 3508 0172 13       		.uleb128 0x13
 3509 0173 02       		.uleb128 0x2
 3510 0174 17       		.uleb128 0x17
 3511 0175 00       		.byte	0
 3512 0176 00       		.byte	0
 3513 0177 1A       		.uleb128 0x1a
 3514 0178 2E       		.uleb128 0x2e
 3515 0179 01       		.byte	0x1
 3516 017a 3F       		.uleb128 0x3f
 3517 017b 19       		.uleb128 0x19
 3518 017c 03       		.uleb128 0x3
 3519 017d 0E       		.uleb128 0xe
 3520 017e 3A       		.uleb128 0x3a
 3521 017f 0B       		.uleb128 0xb
 3522 0180 3B       		.uleb128 0x3b
 3523 0181 05       		.uleb128 0x5
 3524 0182 27       		.uleb128 0x27
 3525 0183 19       		.uleb128 0x19
 3526 0184 49       		.uleb128 0x49
 3527 0185 13       		.uleb128 0x13
 3528 0186 11       		.uleb128 0x11
 3529 0187 01       		.uleb128 0x1
 3530 0188 12       		.uleb128 0x12
 3531 0189 06       		.uleb128 0x6
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 103


 3532 018a 40       		.uleb128 0x40
 3533 018b 18       		.uleb128 0x18
 3534 018c 9642     		.uleb128 0x2116
 3535 018e 19       		.uleb128 0x19
 3536 018f 01       		.uleb128 0x1
 3537 0190 13       		.uleb128 0x13
 3538 0191 00       		.byte	0
 3539 0192 00       		.byte	0
 3540 0193 1B       		.uleb128 0x1b
 3541 0194 2E       		.uleb128 0x2e
 3542 0195 01       		.byte	0x1
 3543 0196 3F       		.uleb128 0x3f
 3544 0197 19       		.uleb128 0x19
 3545 0198 03       		.uleb128 0x3
 3546 0199 0E       		.uleb128 0xe
 3547 019a 3A       		.uleb128 0x3a
 3548 019b 0B       		.uleb128 0xb
 3549 019c 3B       		.uleb128 0x3b
 3550 019d 05       		.uleb128 0x5
 3551 019e 27       		.uleb128 0x27
 3552 019f 19       		.uleb128 0x19
 3553 01a0 11       		.uleb128 0x11
 3554 01a1 01       		.uleb128 0x1
 3555 01a2 12       		.uleb128 0x12
 3556 01a3 06       		.uleb128 0x6
 3557 01a4 40       		.uleb128 0x40
 3558 01a5 18       		.uleb128 0x18
 3559 01a6 9642     		.uleb128 0x2116
 3560 01a8 19       		.uleb128 0x19
 3561 01a9 01       		.uleb128 0x1
 3562 01aa 13       		.uleb128 0x13
 3563 01ab 00       		.byte	0
 3564 01ac 00       		.byte	0
 3565 01ad 1C       		.uleb128 0x1c
 3566 01ae 34       		.uleb128 0x34
 3567 01af 00       		.byte	0
 3568 01b0 03       		.uleb128 0x3
 3569 01b1 0E       		.uleb128 0xe
 3570 01b2 3A       		.uleb128 0x3a
 3571 01b3 0B       		.uleb128 0xb
 3572 01b4 3B       		.uleb128 0x3b
 3573 01b5 0B       		.uleb128 0xb
 3574 01b6 49       		.uleb128 0x49
 3575 01b7 13       		.uleb128 0x13
 3576 01b8 02       		.uleb128 0x2
 3577 01b9 18       		.uleb128 0x18
 3578 01ba 00       		.byte	0
 3579 01bb 00       		.byte	0
 3580 01bc 1D       		.uleb128 0x1d
 3581 01bd 01       		.uleb128 0x1
 3582 01be 01       		.byte	0x1
 3583 01bf 49       		.uleb128 0x49
 3584 01c0 13       		.uleb128 0x13
 3585 01c1 01       		.uleb128 0x1
 3586 01c2 13       		.uleb128 0x13
 3587 01c3 00       		.byte	0
 3588 01c4 00       		.byte	0
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 104


 3589 01c5 1E       		.uleb128 0x1e
 3590 01c6 21       		.uleb128 0x21
 3591 01c7 00       		.byte	0
 3592 01c8 49       		.uleb128 0x49
 3593 01c9 13       		.uleb128 0x13
 3594 01ca 2F       		.uleb128 0x2f
 3595 01cb 0B       		.uleb128 0xb
 3596 01cc 00       		.byte	0
 3597 01cd 00       		.byte	0
 3598 01ce 1F       		.uleb128 0x1f
 3599 01cf 34       		.uleb128 0x34
 3600 01d0 00       		.byte	0
 3601 01d1 03       		.uleb128 0x3
 3602 01d2 0E       		.uleb128 0xe
 3603 01d3 3A       		.uleb128 0x3a
 3604 01d4 0B       		.uleb128 0xb
 3605 01d5 3B       		.uleb128 0x3b
 3606 01d6 0B       		.uleb128 0xb
 3607 01d7 49       		.uleb128 0x49
 3608 01d8 13       		.uleb128 0x13
 3609 01d9 3F       		.uleb128 0x3f
 3610 01da 19       		.uleb128 0x19
 3611 01db 02       		.uleb128 0x2
 3612 01dc 18       		.uleb128 0x18
 3613 01dd 00       		.byte	0
 3614 01de 00       		.byte	0
 3615 01df 20       		.uleb128 0x20
 3616 01e0 34       		.uleb128 0x34
 3617 01e1 00       		.byte	0
 3618 01e2 03       		.uleb128 0x3
 3619 01e3 0E       		.uleb128 0xe
 3620 01e4 3A       		.uleb128 0x3a
 3621 01e5 0B       		.uleb128 0xb
 3622 01e6 3B       		.uleb128 0x3b
 3623 01e7 05       		.uleb128 0x5
 3624 01e8 49       		.uleb128 0x49
 3625 01e9 13       		.uleb128 0x13
 3626 01ea 3F       		.uleb128 0x3f
 3627 01eb 19       		.uleb128 0x19
 3628 01ec 3C       		.uleb128 0x3c
 3629 01ed 19       		.uleb128 0x19
 3630 01ee 00       		.byte	0
 3631 01ef 00       		.byte	0
 3632 01f0 21       		.uleb128 0x21
 3633 01f1 2E       		.uleb128 0x2e
 3634 01f2 00       		.byte	0
 3635 01f3 3F       		.uleb128 0x3f
 3636 01f4 19       		.uleb128 0x19
 3637 01f5 3C       		.uleb128 0x3c
 3638 01f6 19       		.uleb128 0x19
 3639 01f7 6E       		.uleb128 0x6e
 3640 01f8 0E       		.uleb128 0xe
 3641 01f9 03       		.uleb128 0x3
 3642 01fa 0E       		.uleb128 0xe
 3643 01fb 3A       		.uleb128 0x3a
 3644 01fc 0B       		.uleb128 0xb
 3645 01fd 3B       		.uleb128 0x3b
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 105


 3646 01fe 0B       		.uleb128 0xb
 3647 01ff 00       		.byte	0
 3648 0200 00       		.byte	0
 3649 0201 00       		.byte	0
 3650              		.section	.debug_loc,"",%progbits
 3651              	.Ldebug_loc0:
 3652              	.LLST0:
 3653 0000 04000000 		.4byte	.LVL1
 3654 0004 1C000000 		.4byte	.LVL4
 3655 0008 0100     		.2byte	0x1
 3656 000a 53       		.byte	0x53
 3657 000b 1C000000 		.4byte	.LVL4
 3658 000f 20000000 		.4byte	.LVL5
 3659 0013 0700     		.2byte	0x7
 3660 0015 73       		.byte	0x73
 3661 0016 00       		.sleb128 0
 3662 0017 40       		.byte	0x40
 3663 0018 49       		.byte	0x49
 3664 0019 24       		.byte	0x24
 3665 001a 21       		.byte	0x21
 3666 001b 9F       		.byte	0x9f
 3667 001c 26000000 		.4byte	.LVL6
 3668 0020 34000000 		.4byte	.LFE5
 3669 0024 0100     		.2byte	0x1
 3670 0026 53       		.byte	0x53
 3671 0027 00000000 		.4byte	0
 3672 002b 00000000 		.4byte	0
 3673              	.LLST1:
 3674 002f 00000000 		.4byte	.LVL7
 3675 0033 02000000 		.4byte	.LVL8
 3676 0037 0100     		.2byte	0x1
 3677 0039 50       		.byte	0x50
 3678 003a 02000000 		.4byte	.LVL8
 3679 003e 58000000 		.4byte	.LFE13
 3680 0042 0400     		.2byte	0x4
 3681 0044 F3       		.byte	0xf3
 3682 0045 01       		.uleb128 0x1
 3683 0046 50       		.byte	0x50
 3684 0047 9F       		.byte	0x9f
 3685 0048 00000000 		.4byte	0
 3686 004c 00000000 		.4byte	0
 3687              	.LLST2:
 3688 0050 00000000 		.4byte	.LVL7
 3689 0054 46000000 		.4byte	.LVL13
 3690 0058 0200     		.2byte	0x2
 3691 005a 30       		.byte	0x30
 3692 005b 9F       		.byte	0x9f
 3693 005c 46000000 		.4byte	.LVL13
 3694 0060 58000000 		.4byte	.LFE13
 3695 0064 0100     		.2byte	0x1
 3696 0066 50       		.byte	0x50
 3697 0067 00000000 		.4byte	0
 3698 006b 00000000 		.4byte	0
 3699              	.LLST3:
 3700 006f 0A000000 		.4byte	.LVL9
 3701 0073 14000000 		.4byte	.LVL10
 3702 0077 0100     		.2byte	0x1
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 106


 3703 0079 52       		.byte	0x52
 3704 007a 28000000 		.4byte	.LVL11
 3705 007e 2C000000 		.4byte	.LVL12
 3706 0082 0100     		.2byte	0x1
 3707 0084 52       		.byte	0x52
 3708 0085 00000000 		.4byte	0
 3709 0089 00000000 		.4byte	0
 3710              	.LLST4:
 3711 008d 00000000 		.4byte	.LVL14
 3712 0091 07000000 		.4byte	.LVL15-1
 3713 0095 0100     		.2byte	0x1
 3714 0097 50       		.byte	0x50
 3715 0098 07000000 		.4byte	.LVL15-1
 3716 009c 96000000 		.4byte	.LVL24
 3717 00a0 0100     		.2byte	0x1
 3718 00a2 54       		.byte	0x54
 3719 00a3 96000000 		.4byte	.LVL24
 3720 00a7 D4000000 		.4byte	.LFE4
 3721 00ab 0400     		.2byte	0x4
 3722 00ad F3       		.byte	0xf3
 3723 00ae 01       		.uleb128 0x1
 3724 00af 50       		.byte	0x50
 3725 00b0 9F       		.byte	0x9f
 3726 00b1 00000000 		.4byte	0
 3727 00b5 00000000 		.4byte	0
 3728              	.LLST5:
 3729 00b9 64000000 		.4byte	.LVL18
 3730 00bd 68000000 		.4byte	.LVL19
 3731 00c1 0200     		.2byte	0x2
 3732 00c3 30       		.byte	0x30
 3733 00c4 9F       		.byte	0x9f
 3734 00c5 68000000 		.4byte	.LVL19
 3735 00c9 D4000000 		.4byte	.LFE4
 3736 00cd 0100     		.2byte	0x1
 3737 00cf 51       		.byte	0x51
 3738 00d0 00000000 		.4byte	0
 3739 00d4 00000000 		.4byte	0
 3740              	.LLST6:
 3741 00d8 76000000 		.4byte	.LVL20
 3742 00dc 90000000 		.4byte	.LVL23
 3743 00e0 0100     		.2byte	0x1
 3744 00e2 53       		.byte	0x53
 3745 00e3 00000000 		.4byte	0
 3746 00e7 00000000 		.4byte	0
 3747              	.LLST7:
 3748 00eb 00000000 		.4byte	.LVL26
 3749 00ef 04000000 		.4byte	.LVL27
 3750 00f3 0100     		.2byte	0x1
 3751 00f5 50       		.byte	0x50
 3752 00f6 04000000 		.4byte	.LVL27
 3753 00fa 10000000 		.4byte	.LFE10
 3754 00fe 0400     		.2byte	0x4
 3755 0100 F3       		.byte	0xf3
 3756 0101 01       		.uleb128 0x1
 3757 0102 50       		.byte	0x50
 3758 0103 9F       		.byte	0x9f
 3759 0104 00000000 		.4byte	0
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 107


 3760 0108 00000000 		.4byte	0
 3761              	.LLST8:
 3762 010c 00000000 		.4byte	.LVL28
 3763 0110 18000000 		.4byte	.LVL30
 3764 0114 0100     		.2byte	0x1
 3765 0116 50       		.byte	0x50
 3766 0117 18000000 		.4byte	.LVL30
 3767 011b 2C000000 		.4byte	.LFE11
 3768 011f 0100     		.2byte	0x1
 3769 0121 50       		.byte	0x50
 3770 0122 00000000 		.4byte	0
 3771 0126 00000000 		.4byte	0
 3772              	.LLST9:
 3773 012a 00000000 		.4byte	.LVL31
 3774 012e 0A000000 		.4byte	.LVL33
 3775 0132 0100     		.2byte	0x1
 3776 0134 50       		.byte	0x50
 3777 0135 0A000000 		.4byte	.LVL33
 3778 0139 2C000000 		.4byte	.LVL37
 3779 013d 0100     		.2byte	0x1
 3780 013f 51       		.byte	0x51
 3781 0140 2C000000 		.4byte	.LVL37
 3782 0144 2E000000 		.4byte	.LVL38
 3783 0148 0100     		.2byte	0x1
 3784 014a 50       		.byte	0x50
 3785 014b 2E000000 		.4byte	.LVL38
 3786 014f 38000000 		.4byte	.LFE12
 3787 0153 0100     		.2byte	0x1
 3788 0155 51       		.byte	0x51
 3789 0156 00000000 		.4byte	0
 3790 015a 00000000 		.4byte	0
 3791              	.LLST10:
 3792 015e 02000000 		.4byte	.LVL32
 3793 0162 0A000000 		.4byte	.LVL33
 3794 0166 0200     		.2byte	0x2
 3795 0168 30       		.byte	0x30
 3796 0169 9F       		.byte	0x9f
 3797 016a 12000000 		.4byte	.LVL34
 3798 016e 2C000000 		.4byte	.LVL37
 3799 0172 0100     		.2byte	0x1
 3800 0174 50       		.byte	0x50
 3801 0175 2C000000 		.4byte	.LVL37
 3802 0179 2E000000 		.4byte	.LVL38
 3803 017d 0200     		.2byte	0x2
 3804 017f 30       		.byte	0x30
 3805 0180 9F       		.byte	0x9f
 3806 0181 2E000000 		.4byte	.LVL38
 3807 0185 38000000 		.4byte	.LFE12
 3808 0189 0100     		.2byte	0x1
 3809 018b 50       		.byte	0x50
 3810 018c 00000000 		.4byte	0
 3811 0190 00000000 		.4byte	0
 3812              	.LLST11:
 3813 0194 02000000 		.4byte	.LVL32
 3814 0198 0A000000 		.4byte	.LVL33
 3815 019c 0600     		.2byte	0x6
 3816 019e 0C       		.byte	0xc
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 108


 3817 019f FFFFFF03 		.4byte	0x3ffffff
 3818 01a3 9F       		.byte	0x9f
 3819 01a4 0A000000 		.4byte	.LVL33
 3820 01a8 26000000 		.4byte	.LVL36
 3821 01ac 0100     		.2byte	0x1
 3822 01ae 52       		.byte	0x52
 3823 01af 2C000000 		.4byte	.LVL37
 3824 01b3 2E000000 		.4byte	.LVL38
 3825 01b7 0600     		.2byte	0x6
 3826 01b9 0C       		.byte	0xc
 3827 01ba FFFFFF03 		.4byte	0x3ffffff
 3828 01be 9F       		.byte	0x9f
 3829 01bf 00000000 		.4byte	0
 3830 01c3 00000000 		.4byte	0
 3831              	.LLST12:
 3832 01c7 00000000 		.4byte	.LVL39
 3833 01cb 1A000000 		.4byte	.LVL40
 3834 01cf 0100     		.2byte	0x1
 3835 01d1 50       		.byte	0x50
 3836 01d2 1A000000 		.4byte	.LVL40
 3837 01d6 34000000 		.4byte	.LVL42
 3838 01da 0100     		.2byte	0x1
 3839 01dc 54       		.byte	0x54
 3840 01dd 34000000 		.4byte	.LVL42
 3841 01e1 42000000 		.4byte	.LVL44
 3842 01e5 0400     		.2byte	0x4
 3843 01e7 F3       		.byte	0xf3
 3844 01e8 01       		.uleb128 0x1
 3845 01e9 50       		.byte	0x50
 3846 01ea 9F       		.byte	0x9f
 3847 01eb 42000000 		.4byte	.LVL44
 3848 01ef 44000000 		.4byte	.LVL45
 3849 01f3 0100     		.2byte	0x1
 3850 01f5 54       		.byte	0x54
 3851 01f6 44000000 		.4byte	.LVL45
 3852 01fa 54000000 		.4byte	.LFE14
 3853 01fe 0400     		.2byte	0x4
 3854 0200 F3       		.byte	0xf3
 3855 0201 01       		.uleb128 0x1
 3856 0202 50       		.byte	0x50
 3857 0203 9F       		.byte	0x9f
 3858 0204 00000000 		.4byte	0
 3859 0208 00000000 		.4byte	0
 3860              	.LLST13:
 3861 020c 40000000 		.4byte	.LVL43
 3862 0210 42000000 		.4byte	.LVL44
 3863 0214 0100     		.2byte	0x1
 3864 0216 50       		.byte	0x50
 3865 0217 44000000 		.4byte	.LVL45
 3866 021b 46000000 		.4byte	.LVL46
 3867 021f 0100     		.2byte	0x1
 3868 0221 50       		.byte	0x50
 3869 0222 00000000 		.4byte	0
 3870 0226 00000000 		.4byte	0
 3871              	.LLST14:
 3872 022a 00000000 		.4byte	.LVL47
 3873 022e 1A000000 		.4byte	.LVL48
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 109


 3874 0232 0100     		.2byte	0x1
 3875 0234 50       		.byte	0x50
 3876 0235 1A000000 		.4byte	.LVL48
 3877 0239 54000000 		.4byte	.LVL59
 3878 023d 0100     		.2byte	0x1
 3879 023f 55       		.byte	0x55
 3880 0240 54000000 		.4byte	.LVL59
 3881 0244 64000000 		.4byte	.LFE15
 3882 0248 0400     		.2byte	0x4
 3883 024a F3       		.byte	0xf3
 3884 024b 01       		.uleb128 0x1
 3885 024c 50       		.byte	0x50
 3886 024d 9F       		.byte	0x9f
 3887 024e 00000000 		.4byte	0
 3888 0252 00000000 		.4byte	0
 3889              	.LLST15:
 3890 0256 40000000 		.4byte	.LVL50
 3891 025a 42000000 		.4byte	.LVL51
 3892 025e 0100     		.2byte	0x1
 3893 0260 54       		.byte	0x54
 3894 0261 44000000 		.4byte	.LVL52
 3895 0265 54000000 		.4byte	.LVL58
 3896 0269 0100     		.2byte	0x1
 3897 026b 54       		.byte	0x54
 3898 026c 00000000 		.4byte	0
 3899 0270 00000000 		.4byte	0
 3900              	.LLST16:
 3901 0274 4E000000 		.4byte	.LVL54
 3902 0278 52000000 		.4byte	.LVL56
 3903 027c 0100     		.2byte	0x1
 3904 027e 54       		.byte	0x54
 3905 027f 00000000 		.4byte	0
 3906 0283 00000000 		.4byte	0
 3907              	.LLST17:
 3908 0287 50000000 		.4byte	.LVL55
 3909 028b 52000000 		.4byte	.LVL56
 3910 028f 0100     		.2byte	0x1
 3911 0291 50       		.byte	0x50
 3912 0292 54000000 		.4byte	.LVL57
 3913 0296 64000000 		.4byte	.LFE15
 3914 029a 0100     		.2byte	0x1
 3915 029c 50       		.byte	0x50
 3916 029d 00000000 		.4byte	0
 3917 02a1 00000000 		.4byte	0
 3918              	.LLST18:
 3919 02a5 00000000 		.4byte	.LVL60
 3920 02a9 0E000000 		.4byte	.LVL61
 3921 02ad 0100     		.2byte	0x1
 3922 02af 50       		.byte	0x50
 3923 02b0 0E000000 		.4byte	.LVL61
 3924 02b4 1C000000 		.4byte	.LFE16
 3925 02b8 0400     		.2byte	0x4
 3926 02ba F3       		.byte	0xf3
 3927 02bb 01       		.uleb128 0x1
 3928 02bc 50       		.byte	0x50
 3929 02bd 9F       		.byte	0x9f
 3930 02be 00000000 		.4byte	0
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 110


 3931 02c2 00000000 		.4byte	0
 3932              	.LLST19:
 3933 02c6 00000000 		.4byte	.LVL62
 3934 02ca 0E000000 		.4byte	.LVL63
 3935 02ce 0100     		.2byte	0x1
 3936 02d0 50       		.byte	0x50
 3937 02d1 0E000000 		.4byte	.LVL63
 3938 02d5 18000000 		.4byte	.LFE17
 3939 02d9 0400     		.2byte	0x4
 3940 02db F3       		.byte	0xf3
 3941 02dc 01       		.uleb128 0x1
 3942 02dd 50       		.byte	0x50
 3943 02de 9F       		.byte	0x9f
 3944 02df 00000000 		.4byte	0
 3945 02e3 00000000 		.4byte	0
 3946              	.LLST20:
 3947 02e7 00000000 		.4byte	.LVL64
 3948 02eb 18000000 		.4byte	.LVL66
 3949 02ef 0100     		.2byte	0x1
 3950 02f1 50       		.byte	0x50
 3951 02f2 18000000 		.4byte	.LVL66
 3952 02f6 2C000000 		.4byte	.LFE18
 3953 02fa 0100     		.2byte	0x1
 3954 02fc 50       		.byte	0x50
 3955 02fd 00000000 		.4byte	0
 3956 0301 00000000 		.4byte	0
 3957              	.LLST21:
 3958 0305 00000000 		.4byte	.LVL67
 3959 0309 18000000 		.4byte	.LVL69
 3960 030d 0100     		.2byte	0x1
 3961 030f 50       		.byte	0x50
 3962 0310 18000000 		.4byte	.LVL69
 3963 0314 2C000000 		.4byte	.LFE19
 3964 0318 0100     		.2byte	0x1
 3965 031a 50       		.byte	0x50
 3966 031b 00000000 		.4byte	0
 3967 031f 00000000 		.4byte	0
 3968              	.LLST22:
 3969 0323 00000000 		.4byte	.LVL70
 3970 0327 1C000000 		.4byte	.LVL71
 3971 032b 0100     		.2byte	0x1
 3972 032d 50       		.byte	0x50
 3973 032e 1C000000 		.4byte	.LVL71
 3974 0332 36000000 		.4byte	.LVL73
 3975 0336 0100     		.2byte	0x1
 3976 0338 55       		.byte	0x55
 3977 0339 36000000 		.4byte	.LVL73
 3978 033d 44000000 		.4byte	.LFE20
 3979 0341 0400     		.2byte	0x4
 3980 0343 F3       		.byte	0xf3
 3981 0344 01       		.uleb128 0x1
 3982 0345 50       		.byte	0x50
 3983 0346 9F       		.byte	0x9f
 3984 0347 00000000 		.4byte	0
 3985 034b 00000000 		.4byte	0
 3986              	.LLST23:
 3987 034f 00000000 		.4byte	.LVL70
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 111


 3988 0353 1F000000 		.4byte	.LVL72-1
 3989 0357 0100     		.2byte	0x1
 3990 0359 51       		.byte	0x51
 3991 035a 1F000000 		.4byte	.LVL72-1
 3992 035e 44000000 		.4byte	.LFE20
 3993 0362 0400     		.2byte	0x4
 3994 0364 F3       		.byte	0xf3
 3995 0365 01       		.uleb128 0x1
 3996 0366 51       		.byte	0x51
 3997 0367 9F       		.byte	0x9f
 3998 0368 00000000 		.4byte	0
 3999 036c 00000000 		.4byte	0
 4000              	.LLST24:
 4001 0370 00000000 		.4byte	.LVL74
 4002 0374 1C000000 		.4byte	.LVL75
 4003 0378 0100     		.2byte	0x1
 4004 037a 50       		.byte	0x50
 4005 037b 1C000000 		.4byte	.LVL75
 4006 037f 36000000 		.4byte	.LVL78
 4007 0383 0100     		.2byte	0x1
 4008 0385 55       		.byte	0x55
 4009 0386 36000000 		.4byte	.LVL78
 4010 038a 44000000 		.4byte	.LFE21
 4011 038e 0400     		.2byte	0x4
 4012 0390 F3       		.byte	0xf3
 4013 0391 01       		.uleb128 0x1
 4014 0392 50       		.byte	0x50
 4015 0393 9F       		.byte	0x9f
 4016 0394 00000000 		.4byte	0
 4017 0398 00000000 		.4byte	0
 4018              	.LLST25:
 4019 039c 00000000 		.4byte	.LVL74
 4020 03a0 1F000000 		.4byte	.LVL76-1
 4021 03a4 0100     		.2byte	0x1
 4022 03a6 51       		.byte	0x51
 4023 03a7 1F000000 		.4byte	.LVL76-1
 4024 03ab 36000000 		.4byte	.LVL77
 4025 03af 0100     		.2byte	0x1
 4026 03b1 54       		.byte	0x54
 4027 03b2 36000000 		.4byte	.LVL77
 4028 03b6 44000000 		.4byte	.LFE21
 4029 03ba 0500     		.2byte	0x5
 4030 03bc 73       		.byte	0x73
 4031 03bd 00       		.sleb128 0
 4032 03be 70       		.byte	0x70
 4033 03bf 00       		.sleb128 0
 4034 03c0 22       		.byte	0x22
 4035 03c1 00000000 		.4byte	0
 4036 03c5 00000000 		.4byte	0
 4037              	.LLST26:
 4038 03c9 00000000 		.4byte	.LVL79
 4039 03cd 0C000000 		.4byte	.LVL81
 4040 03d1 0100     		.2byte	0x1
 4041 03d3 50       		.byte	0x50
 4042 03d4 0C000000 		.4byte	.LVL81
 4043 03d8 84000000 		.4byte	.LVL96
 4044 03dc 0100     		.2byte	0x1
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 112


 4045 03de 56       		.byte	0x56
 4046 03df 84000000 		.4byte	.LVL96
 4047 03e3 98000000 		.4byte	.LFE22
 4048 03e7 0400     		.2byte	0x4
 4049 03e9 F3       		.byte	0xf3
 4050 03ea 01       		.uleb128 0x1
 4051 03eb 50       		.byte	0x50
 4052 03ec 9F       		.byte	0x9f
 4053 03ed 00000000 		.4byte	0
 4054 03f1 00000000 		.4byte	0
 4055              	.LLST27:
 4056 03f5 00000000 		.4byte	.LVL79
 4057 03f9 0A000000 		.4byte	.LVL80
 4058 03fd 0100     		.2byte	0x1
 4059 03ff 51       		.byte	0x51
 4060 0400 0A000000 		.4byte	.LVL80
 4061 0404 6C000000 		.4byte	.LVL90
 4062 0408 0400     		.2byte	0x4
 4063 040a F3       		.byte	0xf3
 4064 040b 01       		.uleb128 0x1
 4065 040c 51       		.byte	0x51
 4066 040d 9F       		.byte	0x9f
 4067 040e 6C000000 		.4byte	.LVL90
 4068 0412 6E000000 		.4byte	.LVL91
 4069 0416 0100     		.2byte	0x1
 4070 0418 54       		.byte	0x54
 4071 0419 6E000000 		.4byte	.LVL91
 4072 041d 78000000 		.4byte	.LVL93
 4073 0421 0400     		.2byte	0x4
 4074 0423 F3       		.byte	0xf3
 4075 0424 01       		.uleb128 0x1
 4076 0425 51       		.byte	0x51
 4077 0426 9F       		.byte	0x9f
 4078 0427 78000000 		.4byte	.LVL93
 4079 042b 84000000 		.4byte	.LVL95
 4080 042f 0100     		.2byte	0x1
 4081 0431 54       		.byte	0x54
 4082 0432 84000000 		.4byte	.LVL95
 4083 0436 98000000 		.4byte	.LFE22
 4084 043a 0100     		.2byte	0x1
 4085 043c 50       		.byte	0x50
 4086 043d 00000000 		.4byte	0
 4087 0441 00000000 		.4byte	0
 4088              	.LLST28:
 4089 0445 6A000000 		.4byte	.LVL89
 4090 0449 6E000000 		.4byte	.LVL91
 4091 044d 0100     		.2byte	0x1
 4092 044f 50       		.byte	0x50
 4093 0450 00000000 		.4byte	0
 4094 0454 00000000 		.4byte	0
 4095              	.LLST29:
 4096 0458 48000000 		.4byte	.LVL84
 4097 045c 4A000000 		.4byte	.LVL85
 4098 0460 0100     		.2byte	0x1
 4099 0462 52       		.byte	0x52
 4100 0463 4A000000 		.4byte	.LVL85
 4101 0467 4E000000 		.4byte	.LVL86
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 113


 4102 046b 0300     		.2byte	0x3
 4103 046d 72       		.byte	0x72
 4104 046e 7F       		.sleb128 -1
 4105 046f 9F       		.byte	0x9f
 4106 0470 4E000000 		.4byte	.LVL86
 4107 0474 78000000 		.4byte	.LVL93
 4108 0478 0100     		.2byte	0x1
 4109 047a 57       		.byte	0x57
 4110 047b 00000000 		.4byte	0
 4111 047f 00000000 		.4byte	0
 4112              	.LLST30:
 4113 0483 16000000 		.4byte	.LVL82
 4114 0487 7A000000 		.4byte	.LVL94
 4115 048b 0100     		.2byte	0x1
 4116 048d 55       		.byte	0x55
 4117 048e 00000000 		.4byte	0
 4118 0492 00000000 		.4byte	0
 4119              	.LLST31:
 4120 0496 00000000 		.4byte	.LVL97
 4121 049a 1D000000 		.4byte	.LVL100-1
 4122 049e 0100     		.2byte	0x1
 4123 04a0 50       		.byte	0x50
 4124 04a1 1D000000 		.4byte	.LVL100-1
 4125 04a5 3E000000 		.4byte	.LVL106
 4126 04a9 0400     		.2byte	0x4
 4127 04ab F3       		.byte	0xf3
 4128 04ac 01       		.uleb128 0x1
 4129 04ad 50       		.byte	0x50
 4130 04ae 9F       		.byte	0x9f
 4131 04af 3E000000 		.4byte	.LVL106
 4132 04b3 40000000 		.4byte	.LVL107
 4133 04b7 0100     		.2byte	0x1
 4134 04b9 50       		.byte	0x50
 4135 04ba 40000000 		.4byte	.LVL107
 4136 04be 54000000 		.4byte	.LFE23
 4137 04c2 0400     		.2byte	0x4
 4138 04c4 F3       		.byte	0xf3
 4139 04c5 01       		.uleb128 0x1
 4140 04c6 50       		.byte	0x50
 4141 04c7 9F       		.byte	0x9f
 4142 04c8 00000000 		.4byte	0
 4143 04cc 00000000 		.4byte	0
 4144              	.LLST32:
 4145 04d0 00000000 		.4byte	.LVL97
 4146 04d4 1D000000 		.4byte	.LVL100-1
 4147 04d8 0100     		.2byte	0x1
 4148 04da 51       		.byte	0x51
 4149 04db 1D000000 		.4byte	.LVL100-1
 4150 04df 1E000000 		.4byte	.LVL100
 4151 04e3 0400     		.2byte	0x4
 4152 04e5 F3       		.byte	0xf3
 4153 04e6 01       		.uleb128 0x1
 4154 04e7 51       		.byte	0x51
 4155 04e8 9F       		.byte	0x9f
 4156 04e9 1E000000 		.4byte	.LVL100
 4157 04ed 21000000 		.4byte	.LVL101-1
 4158 04f1 0100     		.2byte	0x1
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 114


 4159 04f3 50       		.byte	0x50
 4160 04f4 3E000000 		.4byte	.LVL106
 4161 04f8 40000000 		.4byte	.LVL107
 4162 04fc 0100     		.2byte	0x1
 4163 04fe 51       		.byte	0x51
 4164 04ff 00000000 		.4byte	0
 4165 0503 00000000 		.4byte	0
 4166              	.LLST33:
 4167 0507 02000000 		.4byte	.LVL98
 4168 050b 3C000000 		.4byte	.LVL105
 4169 050f 0600     		.2byte	0x6
 4170 0511 9E       		.byte	0x9e
 4171 0512 04       		.uleb128 0x4
 4172 0513 00000000 		.4byte	0
 4173 0517 3C000000 		.4byte	.LVL105
 4174 051b 3E000000 		.4byte	.LVL106
 4175 051f 0100     		.2byte	0x1
 4176 0521 50       		.byte	0x50
 4177 0522 3E000000 		.4byte	.LVL106
 4178 0526 40000000 		.4byte	.LVL107
 4179 052a 0600     		.2byte	0x6
 4180 052c 9E       		.byte	0x9e
 4181 052d 04       		.uleb128 0x4
 4182 052e 00000000 		.4byte	0
 4183 0532 40000000 		.4byte	.LVL107
 4184 0536 54000000 		.4byte	.LFE23
 4185 053a 0100     		.2byte	0x1
 4186 053c 50       		.byte	0x50
 4187 053d 00000000 		.4byte	0
 4188 0541 00000000 		.4byte	0
 4189              	.LLST34:
 4190 0545 12000000 		.4byte	.LVL99
 4191 0549 2C000000 		.4byte	.LVL103
 4192 054d 0100     		.2byte	0x1
 4193 054f 54       		.byte	0x54
 4194 0550 3E000000 		.4byte	.LVL106
 4195 0554 40000000 		.4byte	.LVL107
 4196 0558 0100     		.2byte	0x1
 4197 055a 54       		.byte	0x54
 4198 055b 00000000 		.4byte	0
 4199 055f 00000000 		.4byte	0
 4200              	.LLST35:
 4201 0563 00000000 		.4byte	.LVL108
 4202 0567 1D000000 		.4byte	.LVL111-1
 4203 056b 0100     		.2byte	0x1
 4204 056d 50       		.byte	0x50
 4205 056e 1D000000 		.4byte	.LVL111-1
 4206 0572 52000000 		.4byte	.LVL118
 4207 0576 0400     		.2byte	0x4
 4208 0578 F3       		.byte	0xf3
 4209 0579 01       		.uleb128 0x1
 4210 057a 50       		.byte	0x50
 4211 057b 9F       		.byte	0x9f
 4212 057c 52000000 		.4byte	.LVL118
 4213 0580 54000000 		.4byte	.LVL119
 4214 0584 0100     		.2byte	0x1
 4215 0586 50       		.byte	0x50
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 115


 4216 0587 54000000 		.4byte	.LVL119
 4217 058b 68000000 		.4byte	.LFE24
 4218 058f 0400     		.2byte	0x4
 4219 0591 F3       		.byte	0xf3
 4220 0592 01       		.uleb128 0x1
 4221 0593 50       		.byte	0x50
 4222 0594 9F       		.byte	0x9f
 4223 0595 00000000 		.4byte	0
 4224 0599 00000000 		.4byte	0
 4225              	.LLST36:
 4226 059d 00000000 		.4byte	.LVL108
 4227 05a1 1D000000 		.4byte	.LVL111-1
 4228 05a5 0100     		.2byte	0x1
 4229 05a7 51       		.byte	0x51
 4230 05a8 1D000000 		.4byte	.LVL111-1
 4231 05ac 1E000000 		.4byte	.LVL111
 4232 05b0 0400     		.2byte	0x4
 4233 05b2 F3       		.byte	0xf3
 4234 05b3 01       		.uleb128 0x1
 4235 05b4 51       		.byte	0x51
 4236 05b5 9F       		.byte	0x9f
 4237 05b6 1E000000 		.4byte	.LVL111
 4238 05ba 2E000000 		.4byte	.LVL112
 4239 05be 0100     		.2byte	0x1
 4240 05c0 50       		.byte	0x50
 4241 05c1 34000000 		.4byte	.LVL113
 4242 05c5 42000000 		.4byte	.LVL114
 4243 05c9 0100     		.2byte	0x1
 4244 05cb 50       		.byte	0x50
 4245 05cc 52000000 		.4byte	.LVL118
 4246 05d0 54000000 		.4byte	.LVL119
 4247 05d4 0100     		.2byte	0x1
 4248 05d6 51       		.byte	0x51
 4249 05d7 00000000 		.4byte	0
 4250 05db 00000000 		.4byte	0
 4251              	.LLST37:
 4252 05df 02000000 		.4byte	.LVL109
 4253 05e3 50000000 		.4byte	.LVL117
 4254 05e7 0200     		.2byte	0x2
 4255 05e9 30       		.byte	0x30
 4256 05ea 9F       		.byte	0x9f
 4257 05eb 50000000 		.4byte	.LVL117
 4258 05ef 52000000 		.4byte	.LVL118
 4259 05f3 0100     		.2byte	0x1
 4260 05f5 50       		.byte	0x50
 4261 05f6 52000000 		.4byte	.LVL118
 4262 05fa 54000000 		.4byte	.LVL119
 4263 05fe 0200     		.2byte	0x2
 4264 0600 30       		.byte	0x30
 4265 0601 9F       		.byte	0x9f
 4266 0602 54000000 		.4byte	.LVL119
 4267 0606 68000000 		.4byte	.LFE24
 4268 060a 0100     		.2byte	0x1
 4269 060c 50       		.byte	0x50
 4270 060d 00000000 		.4byte	0
 4271 0611 00000000 		.4byte	0
 4272              	.LLST38:
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 116


 4273 0615 12000000 		.4byte	.LVL110
 4274 0619 46000000 		.4byte	.LVL115
 4275 061d 0100     		.2byte	0x1
 4276 061f 54       		.byte	0x54
 4277 0620 46000000 		.4byte	.LVL115
 4278 0624 52000000 		.4byte	.LVL118
 4279 0628 1200     		.2byte	0x12
 4280 062a 75       		.byte	0x75
 4281 062b 00       		.sleb128 0
 4282 062c 33       		.byte	0x33
 4283 062d 24       		.byte	0x24
 4284 062e 75       		.byte	0x75
 4285 062f 00       		.sleb128 0
 4286 0630 1C       		.byte	0x1c
 4287 0631 33       		.byte	0x33
 4288 0632 24       		.byte	0x24
 4289 0633 76       		.byte	0x76
 4290 0634 00       		.sleb128 0
 4291 0635 22       		.byte	0x22
 4292 0636 06       		.byte	0x6
 4293 0637 F3       		.byte	0xf3
 4294 0638 01       		.uleb128 0x1
 4295 0639 50       		.byte	0x50
 4296 063a 22       		.byte	0x22
 4297 063b 9F       		.byte	0x9f
 4298 063c 52000000 		.4byte	.LVL118
 4299 0640 54000000 		.4byte	.LVL119
 4300 0644 0100     		.2byte	0x1
 4301 0646 54       		.byte	0x54
 4302 0647 54000000 		.4byte	.LVL119
 4303 064b 54000000 		.4byte	.LVL120
 4304 064f 1200     		.2byte	0x12
 4305 0651 75       		.byte	0x75
 4306 0652 00       		.sleb128 0
 4307 0653 33       		.byte	0x33
 4308 0654 24       		.byte	0x24
 4309 0655 75       		.byte	0x75
 4310 0656 00       		.sleb128 0
 4311 0657 1C       		.byte	0x1c
 4312 0658 33       		.byte	0x33
 4313 0659 24       		.byte	0x24
 4314 065a 76       		.byte	0x76
 4315 065b 00       		.sleb128 0
 4316 065c 22       		.byte	0x22
 4317 065d 06       		.byte	0x6
 4318 065e F3       		.byte	0xf3
 4319 065f 01       		.uleb128 0x1
 4320 0660 50       		.byte	0x50
 4321 0661 22       		.byte	0x22
 4322 0662 9F       		.byte	0x9f
 4323 0663 00000000 		.4byte	0
 4324 0667 00000000 		.4byte	0
 4325              	.LLST39:
 4326 066b 00000000 		.4byte	.LVL121
 4327 066f 1D000000 		.4byte	.LVL124-1
 4328 0673 0100     		.2byte	0x1
 4329 0675 50       		.byte	0x50
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 117


 4330 0676 1D000000 		.4byte	.LVL124-1
 4331 067a 36000000 		.4byte	.LVL128
 4332 067e 0400     		.2byte	0x4
 4333 0680 F3       		.byte	0xf3
 4334 0681 01       		.uleb128 0x1
 4335 0682 50       		.byte	0x50
 4336 0683 9F       		.byte	0x9f
 4337 0684 36000000 		.4byte	.LVL128
 4338 0688 38000000 		.4byte	.LVL129
 4339 068c 0100     		.2byte	0x1
 4340 068e 50       		.byte	0x50
 4341 068f 38000000 		.4byte	.LVL129
 4342 0693 4C000000 		.4byte	.LFE25
 4343 0697 0400     		.2byte	0x4
 4344 0699 F3       		.byte	0xf3
 4345 069a 01       		.uleb128 0x1
 4346 069b 50       		.byte	0x50
 4347 069c 9F       		.byte	0x9f
 4348 069d 00000000 		.4byte	0
 4349 06a1 00000000 		.4byte	0
 4350              	.LLST40:
 4351 06a5 00000000 		.4byte	.LVL121
 4352 06a9 1D000000 		.4byte	.LVL124-1
 4353 06ad 0100     		.2byte	0x1
 4354 06af 51       		.byte	0x51
 4355 06b0 1D000000 		.4byte	.LVL124-1
 4356 06b4 1E000000 		.4byte	.LVL124
 4357 06b8 0400     		.2byte	0x4
 4358 06ba F3       		.byte	0xf3
 4359 06bb 01       		.uleb128 0x1
 4360 06bc 51       		.byte	0x51
 4361 06bd 9F       		.byte	0x9f
 4362 06be 1E000000 		.4byte	.LVL124
 4363 06c2 27000000 		.4byte	.LVL125-1
 4364 06c6 0100     		.2byte	0x1
 4365 06c8 50       		.byte	0x50
 4366 06c9 36000000 		.4byte	.LVL128
 4367 06cd 38000000 		.4byte	.LVL129
 4368 06d1 0100     		.2byte	0x1
 4369 06d3 51       		.byte	0x51
 4370 06d4 00000000 		.4byte	0
 4371 06d8 00000000 		.4byte	0
 4372              	.LLST41:
 4373 06dc 02000000 		.4byte	.LVL122
 4374 06e0 34000000 		.4byte	.LVL127
 4375 06e4 0A00     		.2byte	0xa
 4376 06e6 9E       		.byte	0x9e
 4377 06e7 08       		.uleb128 0x8
 4378 06e8 00000000 		.8byte	0
 4378      00000000 
 4379 06f0 36000000 		.4byte	.LVL128
 4380 06f4 38000000 		.4byte	.LVL129
 4381 06f8 0A00     		.2byte	0xa
 4382 06fa 9E       		.byte	0x9e
 4383 06fb 08       		.uleb128 0x8
 4384 06fc 00000000 		.8byte	0
 4384      00000000 
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 118


 4385 0704 00000000 		.4byte	0
 4386 0708 00000000 		.4byte	0
 4387              	.LLST42:
 4388 070c 12000000 		.4byte	.LVL123
 4389 0710 2A000000 		.4byte	.LVL126
 4390 0714 0100     		.2byte	0x1
 4391 0716 54       		.byte	0x54
 4392 0717 2A000000 		.4byte	.LVL126
 4393 071b 36000000 		.4byte	.LVL128
 4394 071f 1200     		.2byte	0x12
 4395 0721 75       		.byte	0x75
 4396 0722 00       		.sleb128 0
 4397 0723 33       		.byte	0x33
 4398 0724 24       		.byte	0x24
 4399 0725 75       		.byte	0x75
 4400 0726 00       		.sleb128 0
 4401 0727 1C       		.byte	0x1c
 4402 0728 33       		.byte	0x33
 4403 0729 24       		.byte	0x24
 4404 072a 76       		.byte	0x76
 4405 072b 00       		.sleb128 0
 4406 072c 22       		.byte	0x22
 4407 072d 06       		.byte	0x6
 4408 072e F3       		.byte	0xf3
 4409 072f 01       		.uleb128 0x1
 4410 0730 50       		.byte	0x50
 4411 0731 22       		.byte	0x22
 4412 0732 9F       		.byte	0x9f
 4413 0733 36000000 		.4byte	.LVL128
 4414 0737 38000000 		.4byte	.LVL129
 4415 073b 0100     		.2byte	0x1
 4416 073d 54       		.byte	0x54
 4417 073e 38000000 		.4byte	.LVL129
 4418 0742 38000000 		.4byte	.LVL130
 4419 0746 1200     		.2byte	0x12
 4420 0748 75       		.byte	0x75
 4421 0749 00       		.sleb128 0
 4422 074a 33       		.byte	0x33
 4423 074b 24       		.byte	0x24
 4424 074c 75       		.byte	0x75
 4425 074d 00       		.sleb128 0
 4426 074e 1C       		.byte	0x1c
 4427 074f 33       		.byte	0x33
 4428 0750 24       		.byte	0x24
 4429 0751 76       		.byte	0x76
 4430 0752 00       		.sleb128 0
 4431 0753 22       		.byte	0x22
 4432 0754 06       		.byte	0x6
 4433 0755 F3       		.byte	0xf3
 4434 0756 01       		.uleb128 0x1
 4435 0757 50       		.byte	0x50
 4436 0758 22       		.byte	0x22
 4437 0759 9F       		.byte	0x9f
 4438 075a 00000000 		.4byte	0
 4439 075e 00000000 		.4byte	0
 4440              	.LLST43:
 4441 0762 06000000 		.4byte	.LVL131
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 119


 4442 0766 10000000 		.4byte	.LVL132
 4443 076a 0200     		.2byte	0x2
 4444 076c 30       		.byte	0x30
 4445 076d 9F       		.byte	0x9f
 4446 076e 10000000 		.4byte	.LVL132
 4447 0772 BE000000 		.4byte	.LVL138
 4448 0776 0100     		.2byte	0x1
 4449 0778 54       		.byte	0x54
 4450 0779 BE000000 		.4byte	.LVL138
 4451 077d C2000000 		.4byte	.LVL139
 4452 0781 0200     		.2byte	0x2
 4453 0783 30       		.byte	0x30
 4454 0784 9F       		.byte	0x9f
 4455 0785 C2000000 		.4byte	.LVL139
 4456 0789 E6000000 		.4byte	.LVL143
 4457 078d 0100     		.2byte	0x1
 4458 078f 54       		.byte	0x54
 4459 0790 00000000 		.4byte	0
 4460 0794 00000000 		.4byte	0
 4461              	.LLST44:
 4462 0798 06000000 		.4byte	.LVL131
 4463 079c 10000000 		.4byte	.LVL132
 4464 07a0 0200     		.2byte	0x2
 4465 07a2 30       		.byte	0x30
 4466 07a3 9F       		.byte	0x9f
 4467 07a4 10000000 		.4byte	.LVL132
 4468 07a8 BE000000 		.4byte	.LVL138
 4469 07ac 0100     		.2byte	0x1
 4470 07ae 55       		.byte	0x55
 4471 07af BE000000 		.4byte	.LVL138
 4472 07b3 C2000000 		.4byte	.LVL139
 4473 07b7 0200     		.2byte	0x2
 4474 07b9 30       		.byte	0x30
 4475 07ba 9F       		.byte	0x9f
 4476 07bb C2000000 		.4byte	.LVL139
 4477 07bf E4000000 		.4byte	.LVL142
 4478 07c3 0100     		.2byte	0x1
 4479 07c5 55       		.byte	0x55
 4480 07c6 E4000000 		.4byte	.LVL142
 4481 07ca F2000000 		.4byte	.LVL145
 4482 07ce 0200     		.2byte	0x2
 4483 07d0 30       		.byte	0x30
 4484 07d1 9F       		.byte	0x9f
 4485 07d2 00000000 		.4byte	0
 4486 07d6 00000000 		.4byte	0
 4487              	.LLST45:
 4488 07da 3A000000 		.4byte	.LVL133
 4489 07de 88000000 		.4byte	.LVL134
 4490 07e2 0100     		.2byte	0x1
 4491 07e4 50       		.byte	0x50
 4492 07e5 00000000 		.4byte	0
 4493 07e9 00000000 		.4byte	0
 4494              	.LLST46:
 4495 07ed 00000000 		.4byte	.LVL150
 4496 07f1 07000000 		.4byte	.LVL151-1
 4497 07f5 0100     		.2byte	0x1
 4498 07f7 50       		.byte	0x50
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 120


 4499 07f8 07000000 		.4byte	.LVL151-1
 4500 07fc 0E000000 		.4byte	.LVL153
 4501 0800 0100     		.2byte	0x1
 4502 0802 54       		.byte	0x54
 4503 0803 0E000000 		.4byte	.LVL153
 4504 0807 10000000 		.4byte	.LFE2
 4505 080b 0400     		.2byte	0x4
 4506 080d F3       		.byte	0xf3
 4507 080e 01       		.uleb128 0x1
 4508 080f 50       		.byte	0x50
 4509 0810 9F       		.byte	0x9f
 4510 0811 00000000 		.4byte	0
 4511 0815 00000000 		.4byte	0
 4512              	.LLST47:
 4513 0819 00000000 		.4byte	.LVL154
 4514 081d 0D000000 		.4byte	.LVL155-1
 4515 0821 0100     		.2byte	0x1
 4516 0823 50       		.byte	0x50
 4517 0824 0D000000 		.4byte	.LVL155-1
 4518 0828 5A000000 		.4byte	.LVL160
 4519 082c 0100     		.2byte	0x1
 4520 082e 54       		.byte	0x54
 4521 082f 5A000000 		.4byte	.LVL160
 4522 0833 70000000 		.4byte	.LFE6
 4523 0837 0400     		.2byte	0x4
 4524 0839 F3       		.byte	0xf3
 4525 083a 01       		.uleb128 0x1
 4526 083b 50       		.byte	0x50
 4527 083c 9F       		.byte	0x9f
 4528 083d 00000000 		.4byte	0
 4529 0841 00000000 		.4byte	0
 4530              	.LLST48:
 4531 0845 00000000 		.4byte	.LVL154
 4532 0849 0D000000 		.4byte	.LVL155-1
 4533 084d 0100     		.2byte	0x1
 4534 084f 51       		.byte	0x51
 4535 0850 0D000000 		.4byte	.LVL155-1
 4536 0854 5A000000 		.4byte	.LVL161
 4537 0858 0100     		.2byte	0x1
 4538 085a 56       		.byte	0x56
 4539 085b 5A000000 		.4byte	.LVL161
 4540 085f 70000000 		.4byte	.LFE6
 4541 0863 0400     		.2byte	0x4
 4542 0865 F3       		.byte	0xf3
 4543 0866 01       		.uleb128 0x1
 4544 0867 51       		.byte	0x51
 4545 0868 9F       		.byte	0x9f
 4546 0869 00000000 		.4byte	0
 4547 086d 00000000 		.4byte	0
 4548              		.section	.debug_aranges,"",%progbits
 4549 0000 EC000000 		.4byte	0xec
 4550 0004 0200     		.2byte	0x2
 4551 0006 00000000 		.4byte	.Ldebug_info0
 4552 000a 04       		.byte	0x4
 4553 000b 00       		.byte	0
 4554 000c 0000     		.2byte	0
 4555 000e 0000     		.2byte	0
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 121


 4556 0010 00000000 		.4byte	.LFB5
 4557 0014 34000000 		.4byte	.LFE5-.LFB5
 4558 0018 00000000 		.4byte	.LFB13
 4559 001c 58000000 		.4byte	.LFE13-.LFB13
 4560 0020 00000000 		.4byte	.LFB3
 4561 0024 10000000 		.4byte	.LFE3-.LFB3
 4562 0028 00000000 		.4byte	.LFB4
 4563 002c D4000000 		.4byte	.LFE4-.LFB4
 4564 0030 00000000 		.4byte	.LFB7
 4565 0034 28000000 		.4byte	.LFE7-.LFB7
 4566 0038 00000000 		.4byte	.LFB9
 4567 003c 28000000 		.4byte	.LFE9-.LFB9
 4568 0040 00000000 		.4byte	.LFB10
 4569 0044 10000000 		.4byte	.LFE10-.LFB10
 4570 0048 00000000 		.4byte	.LFB11
 4571 004c 2C000000 		.4byte	.LFE11-.LFB11
 4572 0050 00000000 		.4byte	.LFB12
 4573 0054 38000000 		.4byte	.LFE12-.LFB12
 4574 0058 00000000 		.4byte	.LFB14
 4575 005c 54000000 		.4byte	.LFE14-.LFB14
 4576 0060 00000000 		.4byte	.LFB15
 4577 0064 64000000 		.4byte	.LFE15-.LFB15
 4578 0068 00000000 		.4byte	.LFB16
 4579 006c 1C000000 		.4byte	.LFE16-.LFB16
 4580 0070 00000000 		.4byte	.LFB17
 4581 0074 18000000 		.4byte	.LFE17-.LFB17
 4582 0078 00000000 		.4byte	.LFB18
 4583 007c 2C000000 		.4byte	.LFE18-.LFB18
 4584 0080 00000000 		.4byte	.LFB19
 4585 0084 2C000000 		.4byte	.LFE19-.LFB19
 4586 0088 00000000 		.4byte	.LFB20
 4587 008c 44000000 		.4byte	.LFE20-.LFB20
 4588 0090 00000000 		.4byte	.LFB21
 4589 0094 44000000 		.4byte	.LFE21-.LFB21
 4590 0098 00000000 		.4byte	.LFB22
 4591 009c 98000000 		.4byte	.LFE22-.LFB22
 4592 00a0 00000000 		.4byte	.LFB23
 4593 00a4 54000000 		.4byte	.LFE23-.LFB23
 4594 00a8 00000000 		.4byte	.LFB24
 4595 00ac 68000000 		.4byte	.LFE24-.LFB24
 4596 00b0 00000000 		.4byte	.LFB25
 4597 00b4 4C000000 		.4byte	.LFE25-.LFB25
 4598 00b8 00000000 		.4byte	.LFB26
 4599 00bc 18010000 		.4byte	.LFE26-.LFB26
 4600 00c0 00000000 		.4byte	.LFB27
 4601 00c4 48000000 		.4byte	.LFE27-.LFB27
 4602 00c8 00000000 		.4byte	.LFB1
 4603 00cc 24000000 		.4byte	.LFE1-.LFB1
 4604 00d0 00000000 		.4byte	.LFB2
 4605 00d4 10000000 		.4byte	.LFE2-.LFB2
 4606 00d8 00000000 		.4byte	.LFB6
 4607 00dc 70000000 		.4byte	.LFE6-.LFB6
 4608 00e0 00000000 		.4byte	.LFB8
 4609 00e4 44000000 		.4byte	.LFE8-.LFB8
 4610 00e8 00000000 		.4byte	0
 4611 00ec 00000000 		.4byte	0
 4612              		.section	.debug_ranges,"",%progbits
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 122


 4613              	.Ldebug_ranges0:
 4614 0000 00000000 		.4byte	.LFB5
 4615 0004 34000000 		.4byte	.LFE5
 4616 0008 00000000 		.4byte	.LFB13
 4617 000c 58000000 		.4byte	.LFE13
 4618 0010 00000000 		.4byte	.LFB3
 4619 0014 10000000 		.4byte	.LFE3
 4620 0018 00000000 		.4byte	.LFB4
 4621 001c D4000000 		.4byte	.LFE4
 4622 0020 00000000 		.4byte	.LFB7
 4623 0024 28000000 		.4byte	.LFE7
 4624 0028 00000000 		.4byte	.LFB9
 4625 002c 28000000 		.4byte	.LFE9
 4626 0030 00000000 		.4byte	.LFB10
 4627 0034 10000000 		.4byte	.LFE10
 4628 0038 00000000 		.4byte	.LFB11
 4629 003c 2C000000 		.4byte	.LFE11
 4630 0040 00000000 		.4byte	.LFB12
 4631 0044 38000000 		.4byte	.LFE12
 4632 0048 00000000 		.4byte	.LFB14
 4633 004c 54000000 		.4byte	.LFE14
 4634 0050 00000000 		.4byte	.LFB15
 4635 0054 64000000 		.4byte	.LFE15
 4636 0058 00000000 		.4byte	.LFB16
 4637 005c 1C000000 		.4byte	.LFE16
 4638 0060 00000000 		.4byte	.LFB17
 4639 0064 18000000 		.4byte	.LFE17
 4640 0068 00000000 		.4byte	.LFB18
 4641 006c 2C000000 		.4byte	.LFE18
 4642 0070 00000000 		.4byte	.LFB19
 4643 0074 2C000000 		.4byte	.LFE19
 4644 0078 00000000 		.4byte	.LFB20
 4645 007c 44000000 		.4byte	.LFE20
 4646 0080 00000000 		.4byte	.LFB21
 4647 0084 44000000 		.4byte	.LFE21
 4648 0088 00000000 		.4byte	.LFB22
 4649 008c 98000000 		.4byte	.LFE22
 4650 0090 00000000 		.4byte	.LFB23
 4651 0094 54000000 		.4byte	.LFE23
 4652 0098 00000000 		.4byte	.LFB24
 4653 009c 68000000 		.4byte	.LFE24
 4654 00a0 00000000 		.4byte	.LFB25
 4655 00a4 4C000000 		.4byte	.LFE25
 4656 00a8 00000000 		.4byte	.LFB26
 4657 00ac 18010000 		.4byte	.LFE26
 4658 00b0 00000000 		.4byte	.LFB27
 4659 00b4 48000000 		.4byte	.LFE27
 4660 00b8 00000000 		.4byte	.LFB1
 4661 00bc 24000000 		.4byte	.LFE1
 4662 00c0 00000000 		.4byte	.LFB2
 4663 00c4 10000000 		.4byte	.LFE2
 4664 00c8 00000000 		.4byte	.LFB6
 4665 00cc 70000000 		.4byte	.LFE6
 4666 00d0 00000000 		.4byte	.LFB8
 4667 00d4 44000000 		.4byte	.LFE8
 4668 00d8 00000000 		.4byte	0
 4669 00dc 00000000 		.4byte	0
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 123


 4670              		.section	.debug_line,"",%progbits
 4671              	.Ldebug_line0:
 4672 0000 C5030000 		.section	.debug_str,"MS",%progbits,1
 4672      02007E00 
 4672      00000201 
 4672      FB0E0D00 
 4672      01010101 
 4673              	.LASF10:
 4674 0000 75696E74 		.ascii	"uint16\000"
 4674      313600
 4675              	.LASF53:
 4676 0007 6368616E 		.ascii	"chanCount\000"
 4676      436F756E 
 4676      7400
 4677              	.LASF73:
 4678 0011 61646347 		.ascii	"adcGain\000"
 4678      61696E00 
 4679              	.LASF87:
 4680 0019 636F756E 		.ascii	"counts\000"
 4680      747300
 4681              	.LASF90:
 4682 0020 4144435F 		.ascii	"ADC_1_StartEx\000"
 4682      315F5374 
 4682      61727445 
 4682      7800
 4683              	.LASF94:
 4684 002e 4144435F 		.ascii	"ADC_1_StopConvert\000"
 4684      315F5374 
 4684      6F70436F 
 4684      6E766572 
 4684      7400
 4685              	.LASF7:
 4686 0040 6C6F6E67 		.ascii	"long long unsigned int\000"
 4686      206C6F6E 
 4686      6720756E 
 4686      7369676E 
 4686      65642069 
 4687              	.LASF88:
 4688 0057 4144435F 		.ascii	"ADC_1_Enable\000"
 4688      315F456E 
 4688      61626C65 
 4688      00
 4689              	.LASF6:
 4690 0064 6C6F6E67 		.ascii	"long long int\000"
 4690      206C6F6E 
 4690      6720696E 
 4690      7400
 4691              	.LASF0:
 4692 0072 7369676E 		.ascii	"signed char\000"
 4692      65642063 
 4692      68617200 
 4693              	.LASF85:
 4694 007e 4144435F 		.ascii	"ADC_1_Init\000"
 4694      315F496E 
 4694      697400
 4695              	.LASF36:
 4696 0089 636C6B44 		.ascii	"clkDivider\000"
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 124


 4696      69766964 
 4696      657200
 4697              	.LASF44:
 4698 0094 4144435F 		.ascii	"ADC_1_Stop\000"
 4698      315F5374 
 4698      6F7000
 4699              	.LASF13:
 4700 009f 696E7433 		.ascii	"int32\000"
 4700      3200
 4701              	.LASF46:
 4702 00a5 4144435F 		.ascii	"ADC_1_InitConfig\000"
 4702      315F496E 
 4702      6974436F 
 4702      6E666967 
 4702      00
 4703              	.LASF4:
 4704 00b6 6C6F6E67 		.ascii	"long int\000"
 4704      20696E74 
 4704      00
 4705              	.LASF74:
 4706 00bf 4144435F 		.ascii	"ADC_1_RawCounts2Counts\000"
 4706      315F5261 
 4706      77436F75 
 4706      6E747332 
 4706      436F756E 
 4707              	.LASF9:
 4708 00d6 75696E74 		.ascii	"uint8\000"
 4708      3800
 4709              	.LASF109:
 4710 00dc 43794465 		.ascii	"CyDelayUs\000"
 4710      6C617955 
 4710      7300
 4711              	.LASF16:
 4712 00e6 646F7562 		.ascii	"double\000"
 4712      6C6500
 4713              	.LASF47:
 4714 00ed 4144435F 		.ascii	"ADC_1_SetConvertMode\000"
 4714      315F5365 
 4714      74436F6E 
 4714      76657274 
 4714      4D6F6465 
 4715              	.LASF66:
 4716 0102 4144435F 		.ascii	"ADC_1_SetLimitMask\000"
 4716      315F5365 
 4716      744C696D 
 4716      69744D61 
 4716      736B00
 4717              	.LASF97:
 4718 0115 4144435F 		.ascii	"ADC_1_initVar\000"
 4718      315F696E 
 4718      69745661 
 4718      7200
 4719              	.LASF27:
 4720 0123 73616D70 		.ascii	"sampleTime01\000"
 4720      6C655469 
 4720      6D653031 
 4720      00
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 125


 4721              	.LASF11:
 4722 0130 75696E74 		.ascii	"uint32\000"
 4722      333200
 4723              	.LASF108:
 4724 0137 4379496E 		.ascii	"CyIntSetVector\000"
 4724      74536574 
 4724      56656374 
 4724      6F7200
 4725              	.LASF50:
 4726 0146 6D61736B 		.ascii	"mask\000"
 4726      00
 4727              	.LASF62:
 4728 014b 4144435F 		.ascii	"ADC_1_SetLowLimit\000"
 4728      315F5365 
 4728      744C6F77 
 4728      4C696D69 
 4728      7400
 4729              	.LASF114:
 4730 015d 4144435F 		.ascii	"ADC_1_SetDFTControl\000"
 4730      315F5365 
 4730      74444654 
 4730      436F6E74 
 4730      726F6C00 
 4731              	.LASF76:
 4732 0171 74656D70 		.ascii	"temp\000"
 4732      00
 4733              	.LASF54:
 4734 0176 7265744D 		.ascii	"retMode\000"
 4734      6F646500 
 4735              	.LASF8:
 4736 017e 756E7369 		.ascii	"unsigned int\000"
 4736      676E6564 
 4736      20696E74 
 4736      00
 4737              	.LASF32:
 4738 018b 72616E67 		.ascii	"rangeIntMask\000"
 4738      65496E74 
 4738      4D61736B 
 4738      00
 4739              	.LASF86:
 4740 0198 636F6E66 		.ascii	"configNum\000"
 4740      69674E75 
 4740      6D00
 4741              	.LASF45:
 4742 01a2 4144435F 		.ascii	"ADC_1_StartConvert\000"
 4742      315F5374 
 4742      61727443 
 4742      6F6E7665 
 4742      727400
 4743              	.LASF5:
 4744 01b5 6C6F6E67 		.ascii	"long unsigned int\000"
 4744      20756E73 
 4744      69676E65 
 4744      6420696E 
 4744      7400
 4745              	.LASF96:
 4746 01c7 4144435F 		.ascii	"ADC_1_channelsConfig\000"
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 126


 4746      315F6368 
 4746      616E6E65 
 4746      6C73436F 
 4746      6E666967 
 4747              	.LASF103:
 4748 01dc 4144435F 		.ascii	"ADC_1_intSarClock_Stop\000"
 4748      315F696E 
 4748      74536172 
 4748      436C6F63 
 4748      6B5F5374 
 4749              	.LASF40:
 4750 01f3 746D7052 		.ascii	"tmpRegVal\000"
 4750      65675661 
 4750      6C00
 4751              	.LASF52:
 4752 01fd 656E6162 		.ascii	"enableMask\000"
 4752      6C654D61 
 4752      736B00
 4753              	.LASF64:
 4754 0208 4144435F 		.ascii	"ADC_1_SetHighLimit\000"
 4754      315F5365 
 4754      74486967 
 4754      684C696D 
 4754      697400
 4755              	.LASF77:
 4756 021b 61766572 		.ascii	"averageAdcSamplesDiv\000"
 4756      61676541 
 4756      64635361 
 4756      6D706C65 
 4756      73446976 
 4757              	.LASF3:
 4758 0230 73686F72 		.ascii	"short unsigned int\000"
 4758      7420756E 
 4758      7369676E 
 4758      65642069 
 4758      6E7400
 4759              	.LASF101:
 4760 0243 4144435F 		.ascii	"ADC_1_allConfigs\000"
 4760      315F616C 
 4760      6C436F6E 
 4760      66696773 
 4760      00
 4761              	.LASF29:
 4762 0254 72616E67 		.ascii	"rangeThres\000"
 4762      65546872 
 4762      657300
 4763              	.LASF81:
 4764 025f 4144435F 		.ascii	"ADC_1_CountsTo_mVolts\000"
 4764      315F436F 
 4764      756E7473 
 4764      546F5F6D 
 4764      566F6C74 
 4765              	.LASF61:
 4766 0275 66696E61 		.ascii	"finalResult\000"
 4766      6C526573 
 4766      756C7400 
 4767              	.LASF92:
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 127


 4768 0281 4144435F 		.ascii	"ADC_1_SelectConfig\000"
 4768      315F5365 
 4768      6C656374 
 4768      436F6E66 
 4768      696700
 4769              	.LASF113:
 4770 0294 433A5C55 		.ascii	"C:\\Users\\cdrow\\Documents\\GitHub\\Li-CellTesting"
 4770      73657273 
 4770      5C636472 
 4770      6F775C44 
 4770      6F63756D 
 4771 02c2 5F536372 		.ascii	"_Script\\Internal_Main\\Internal_Main.cydsn\000"
 4771      6970745C 
 4771      496E7465 
 4771      726E616C 
 4771      5F4D6169 
 4772              	.LASF67:
 4773 02ec 6C696D69 		.ascii	"limitMask\000"
 4773      744D6173 
 4773      6B00
 4774              	.LASF78:
 4775 02f6 72617743 		.ascii	"rawChannel\000"
 4775      68616E6E 
 4775      656C00
 4776              	.LASF24:
 4777 0301 6E756D43 		.ascii	"numChannels\000"
 4777      68616E6E 
 4777      656C7300 
 4778              	.LASF42:
 4779 030d 6368616E 		.ascii	"chanConfig\000"
 4779      436F6E66 
 4779      696700
 4780              	.LASF19:
 4781 0318 72656733 		.ascii	"reg32\000"
 4781      3200
 4782              	.LASF41:
 4783 031e 69735369 		.ascii	"isSigned\000"
 4783      676E6564 
 4783      00
 4784              	.LASF58:
 4785 0327 61646352 		.ascii	"adcResult\000"
 4785      6573756C 
 4785      7400
 4786              	.LASF14:
 4787 0331 666C6F61 		.ascii	"float32\000"
 4787      74333200 
 4788              	.LASF22:
 4789 0339 73697A65 		.ascii	"sizetype\000"
 4789      74797065 
 4789      00
 4790              	.LASF105:
 4791 0342 4144435F 		.ascii	"ADC_1_intSarClock_StartEx\000"
 4791      315F696E 
 4791      74536172 
 4791      436C6F63 
 4791      6B5F5374 
 4792              	.LASF63:
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 128


 4793 035c 6C6F774C 		.ascii	"lowLimit\000"
 4793      696D6974 
 4793      00
 4794              	.LASF21:
 4795 0365 6C6F6E67 		.ascii	"long double\000"
 4795      20646F75 
 4795      626C6500 
 4796              	.LASF91:
 4797 0371 61646472 		.ascii	"address\000"
 4797      65737300 
 4798              	.LASF28:
 4799 0379 73616D70 		.ascii	"sampleTime23\000"
 4799      6C655469 
 4799      6D653233 
 4799      00
 4800              	.LASF33:
 4801 0386 73617449 		.ascii	"satIntMask\000"
 4801      6E744D61 
 4801      736B00
 4802              	.LASF72:
 4803 0391 4144435F 		.ascii	"ADC_1_SetGain\000"
 4803      315F5365 
 4803      74476169 
 4803      6E00
 4804              	.LASF102:
 4805 039f 4144435F 		.ascii	"ADC_1_InputsPlacement\000"
 4805      315F496E 
 4805      70757473 
 4805      506C6163 
 4805      656D656E 
 4806              	.LASF69:
 4807 03b5 7361744D 		.ascii	"satMask\000"
 4807      61736B00 
 4808              	.LASF17:
 4809 03bd 696E7436 		.ascii	"int64\000"
 4809      3400
 4810              	.LASF107:
 4811 03c3 4379496E 		.ascii	"CyIntSetPriority\000"
 4811      74536574 
 4811      5072696F 
 4811      72697479 
 4811      00
 4812              	.LASF15:
 4813 03d4 666C6F61 		.ascii	"float\000"
 4813      7400
 4814              	.LASF110:
 4815 03da 4144435F 		.ascii	"ADC_1_IRQ_StartEx\000"
 4815      315F4952 
 4815      515F5374 
 4815      61727445 
 4815      7800
 4816              	.LASF65:
 4817 03ec 68696768 		.ascii	"highLimit\000"
 4817      4C696D69 
 4817      7400
 4818              	.LASF99:
 4819 03f6 4144435F 		.ascii	"ADC_1_offset\000"
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 129


 4819      315F6F66 
 4819      66736574 
 4819      00
 4820              	.LASF31:
 4821 0403 6368616E 		.ascii	"chanEn\000"
 4821      456E00
 4822              	.LASF112:
 4823 040a 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC_1.c\000"
 4823      72617465 
 4823      645F536F 
 4823      75726365 
 4823      5C50536F 
 4824              	.LASF68:
 4825 0429 4144435F 		.ascii	"ADC_1_SetSatMask\000"
 4825      315F5365 
 4825      74536174 
 4825      4D61736B 
 4825      00
 4826              	.LASF1:
 4827 043a 756E7369 		.ascii	"unsigned char\000"
 4827      676E6564 
 4827      20636861 
 4827      7200
 4828              	.LASF57:
 4829 0448 4144435F 		.ascii	"ADC_1_GetResult16\000"
 4829      315F4765 
 4829      74526573 
 4829      756C7431 
 4829      3600
 4830              	.LASF100:
 4831 045a 4144435F 		.ascii	"ADC_1_countsPer10Volt\000"
 4831      315F636F 
 4831      756E7473 
 4831      50657231 
 4831      30566F6C 
 4832              	.LASF2:
 4833 0470 73686F72 		.ascii	"short int\000"
 4833      7420696E 
 4833      7400
 4834              	.LASF80:
 4835 047a 72657375 		.ascii	"result_Volts\000"
 4835      6C745F56 
 4835      6F6C7473 
 4835      00
 4836              	.LASF49:
 4837 0487 4144435F 		.ascii	"ADC_1_SetEosMask\000"
 4837      315F5365 
 4837      74456F73 
 4837      4D61736B 
 4837      00
 4838              	.LASF60:
 4839 0498 61646352 		.ascii	"adcResult16\000"
 4839      6573756C 
 4839      74313600 
 4840              	.LASF43:
 4841 04a4 63684E75 		.ascii	"chNum\000"
 4841      6D00
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 130


 4842              	.LASF95:
 4843 04aa 4144435F 		.ascii	"ADC_1_currentConfig\000"
 4843      315F6375 
 4843      7272656E 
 4843      74436F6E 
 4843      66696700 
 4844              	.LASF34:
 4845 04be 76726566 		.ascii	"vrefMvValue\000"
 4845      4D765661 
 4845      6C756500 
 4846              	.LASF111:
 4847 04ca 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4847      43313120 
 4847      352E342E 
 4847      31203230 
 4847      31363036 
 4848 04fd 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 4848      20726576 
 4848      6973696F 
 4848      6E203233 
 4848      37373135 
 4849 0530 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 4849      67202D66 
 4849      66756E63 
 4849      74696F6E 
 4849      2D736563 
 4850              	.LASF39:
 4851 055c 6368616E 		.ascii	"chan\000"
 4851      00
 4852              	.LASF18:
 4853 0561 63686172 		.ascii	"char\000"
 4853      00
 4854              	.LASF48:
 4855 0566 6D6F6465 		.ascii	"mode\000"
 4855      00
 4856              	.LASF20:
 4857 056b 63796973 		.ascii	"cyisraddress\000"
 4857      72616464 
 4857      72657373 
 4857      00
 4858              	.LASF38:
 4859 0578 636F6E66 		.ascii	"config\000"
 4859      696700
 4860              	.LASF79:
 4861 057f 4144435F 		.ascii	"ADC_1_CountsTo_Volts\000"
 4861      315F436F 
 4861      756E7473 
 4861      546F5F56 
 4861      6F6C7473 
 4862              	.LASF104:
 4863 0594 4144435F 		.ascii	"ADC_1_intSarClock_SetFractionalDividerRegister\000"
 4863      315F696E 
 4863      74536172 
 4863      436C6F63 
 4863      6B5F5365 
 4864              	.LASF115:
 4865 05c3 4144435F 		.ascii	"ADC_1_IsChannelSigned\000"
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 131


 4865      315F4973 
 4865      4368616E 
 4865      6E656C53 
 4865      69676E65 
 4866              	.LASF84:
 4867 05d9 72657375 		.ascii	"result_uVolts\000"
 4867      6C745F75 
 4867      566F6C74 
 4867      7300
 4868              	.LASF93:
 4869 05e7 72657374 		.ascii	"restart\000"
 4869      61727400 
 4870              	.LASF71:
 4871 05ef 6F666673 		.ascii	"offset\000"
 4871      657400
 4872              	.LASF25:
 4873 05f6 6374726C 		.ascii	"ctrl\000"
 4873      00
 4874              	.LASF35:
 4875 05fb 6D697363 		.ascii	"miscConfig\000"
 4875      436F6E66 
 4875      696700
 4876              	.LASF75:
 4877 0606 61646343 		.ascii	"adcCounts\000"
 4877      6F756E74 
 4877      7300
 4878              	.LASF98:
 4879 0610 4144435F 		.ascii	"ADC_1_selected\000"
 4879      315F7365 
 4879      6C656374 
 4879      656400
 4880              	.LASF30:
 4881 061f 72616E67 		.ascii	"rangeCond\000"
 4881      65436F6E 
 4881      6400
 4882              	.LASF56:
 4883 0629 4144435F 		.ascii	"ADC_1_IsEndConversion\000"
 4883      315F4973 
 4883      456E6443 
 4883      6F6E7665 
 4883      7273696F 
 4884              	.LASF26:
 4885 063f 73616D70 		.ascii	"sampleCtrl\000"
 4885      6C654374 
 4885      726C00
 4886              	.LASF37:
 4887 064a 4144435F 		.ascii	"ADC_1_CONFIG_STRUCT\000"
 4887      315F434F 
 4887      4E464947 
 4887      5F535452 
 4887      55435400 
 4888              	.LASF59:
 4889 065e 4144435F 		.ascii	"ADC_1_GetResult32\000"
 4889      315F4765 
 4889      74526573 
 4889      756C7433 
 4889      3200
ARM GAS  C:\Users\cdrow\AppData\Local\Temp\ccI2bafI.s 			page 132


 4890              	.LASF70:
 4891 0670 4144435F 		.ascii	"ADC_1_SetOffset\000"
 4891      315F5365 
 4891      744F6666 
 4891      73657400 
 4892              	.LASF12:
 4893 0680 696E7431 		.ascii	"int16\000"
 4893      3600
 4894              	.LASF51:
 4895 0686 4144435F 		.ascii	"ADC_1_SetChanMask\000"
 4895      315F5365 
 4895      74436861 
 4895      6E4D6173 
 4895      6B00
 4896              	.LASF82:
 4897 0698 72657375 		.ascii	"result_mVolts\000"
 4897      6C745F6D 
 4897      566F6C74 
 4897      7300
 4898              	.LASF23:
 4899 06a6 6368616E 		.ascii	"channelBase\000"
 4899      6E656C42 
 4899      61736500 
 4900              	.LASF55:
 4901 06b2 656E644F 		.ascii	"endOfConversion\000"
 4901      66436F6E 
 4901      76657273 
 4901      696F6E00 
 4902              	.LASF89:
 4903 06c2 4144435F 		.ascii	"ADC_1_Start\000"
 4903      315F5374 
 4903      61727400 
 4904              	.LASF106:
 4905 06ce 43794861 		.ascii	"CyHalt\000"
 4905      6C7400
 4906              	.LASF83:
 4907 06d5 4144435F 		.ascii	"ADC_1_CountsTo_uVolts\000"
 4907      315F436F 
 4907      756E7473 
 4907      546F5F75 
 4907      566F6C74 
 4908              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
