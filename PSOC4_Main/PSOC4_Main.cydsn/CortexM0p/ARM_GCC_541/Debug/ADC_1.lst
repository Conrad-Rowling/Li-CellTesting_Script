ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADC_1_SetDFTControl,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	ADC_1_SetDFTControl, %function
  24              	ADC_1_SetDFTControl:
  25              	.LFB5:
  26              		.file 1 "Generated_Source\\PSoC4\\ADC_1.c"
   1:Generated_Source\PSoC4/ADC_1.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/ADC_1.c **** * \file     ADC_1.c
   3:Generated_Source\PSoC4/ADC_1.c **** * \version  3.10
   4:Generated_Source\PSoC4/ADC_1.c **** *
   5:Generated_Source\PSoC4/ADC_1.c **** * \brief
   6:Generated_Source\PSoC4/ADC_1.c **** * Provides the source code to the API for the ADC_1 Component.
   7:Generated_Source\PSoC4/ADC_1.c **** *
   8:Generated_Source\PSoC4/ADC_1.c **** ********************************************************************************
   9:Generated_Source\PSoC4/ADC_1.c **** * \copyright
  10:Generated_Source\PSoC4/ADC_1.c **** * (c) 2015-2018, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC4/ADC_1.c **** * This software, including source code, documentation and related
  12:Generated_Source\PSoC4/ADC_1.c **** * materials ("Software"), is owned by Cypress Semiconductor
  13:Generated_Source\PSoC4/ADC_1.c **** * Corporation ("Cypress") and is protected by and subject to worldwide
  14:Generated_Source\PSoC4/ADC_1.c **** * patent protection (United States and foreign), United States copyright
  15:Generated_Source\PSoC4/ADC_1.c **** * laws and international treaty provisions. Therefore, you may use this
  16:Generated_Source\PSoC4/ADC_1.c **** * Software only as provided in the license agreement accompanying the
  17:Generated_Source\PSoC4/ADC_1.c **** * software package from which you obtained this Software ("EULA").
  18:Generated_Source\PSoC4/ADC_1.c **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  19:Generated_Source\PSoC4/ADC_1.c **** * non-transferable license to copy, modify, and compile the
  20:Generated_Source\PSoC4/ADC_1.c **** * Software source code solely for use in connection with Cypress's
  21:Generated_Source\PSoC4/ADC_1.c **** * integrated circuit products. Any reproduction, modification, translation,
  22:Generated_Source\PSoC4/ADC_1.c **** * compilation, or representation of this Software except as specified
  23:Generated_Source\PSoC4/ADC_1.c **** * above is prohibited without the express written permission of Cypress.
  24:Generated_Source\PSoC4/ADC_1.c **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO
  25:Generated_Source\PSoC4/ADC_1.c **** * WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
  26:Generated_Source\PSoC4/ADC_1.c **** * BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
  27:Generated_Source\PSoC4/ADC_1.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  28:Generated_Source\PSoC4/ADC_1.c **** * PARTICULAR PURPOSE. Cypress reserves the right to make
  29:Generated_Source\PSoC4/ADC_1.c **** * changes to the Software without notice. Cypress does not assume any
  30:Generated_Source\PSoC4/ADC_1.c **** * liability arising out of the application or use of the Software or any
  31:Generated_Source\PSoC4/ADC_1.c **** * product or circuit described in the Software. Cypress does not
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 2


  32:Generated_Source\PSoC4/ADC_1.c **** * authorize its products for use in any products where a malfunction or
  33:Generated_Source\PSoC4/ADC_1.c **** * failure of the Cypress product may reasonably be expected to result in
  34:Generated_Source\PSoC4/ADC_1.c **** * significant property damage, injury or death ("High Risk Product"). By
  35:Generated_Source\PSoC4/ADC_1.c **** * including Cypress's product in a High Risk Product, the manufacturer
  36:Generated_Source\PSoC4/ADC_1.c **** * of such system or application assumes all risk of such use and in doing
  37:Generated_Source\PSoC4/ADC_1.c **** * so agrees to indemnify Cypress against all liability.
  38:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/ADC_1.c **** #include "ADC_1.h"
  40:Generated_Source\PSoC4/ADC_1.c **** 
  41:Generated_Source\PSoC4/ADC_1.c **** static void ADC_1_SetDFTControl(const ADC_1_CONFIG_STRUCT *config);
  42:Generated_Source\PSoC4/ADC_1.c **** static int32 ADC_1_IsChannelSigned(uint32 chan);
  43:Generated_Source\PSoC4/ADC_1.c **** #if(ADC_1_ANY_CONFIG_USES_FILTER != 0u)
  44:Generated_Source\PSoC4/ADC_1.c **** static void ADC_1_SetupComparatorTrim(void);
  45:Generated_Source\PSoC4/ADC_1.c **** static void ADC_1_UndoComparatorTrimSetup(void);
  46:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_RaiseOpampTrimToCrossing(uint32 startTrim);
  47:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_LowerOpampTrimToCrossing(uint32 startTrim);
  48:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_RaiseAgndTrimToCrossing(uint32 startTrim);
  49:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_LowerAgndTrimToCrossing(uint32 startTrim);
  50:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_SetOpampAndAgndTrim(uint32 opampTrim, uint32 agndTrim);
  51:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_SetOpampTrim(uint32 opampTrim);
  52:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_SetAgndTrim(uint32 agndTrim);
  53:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_IncOpampTrim(uint32 trim);
  54:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_DecOpampTrim(uint32 trim);
  55:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_IncAgndTrim(uint32 trim);
  56:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_DecAgndTrim(uint32 trim);
  57:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_GetCompStatus(void);
  58:Generated_Source\PSoC4/ADC_1.c **** #define OFFSET_SAMPLES (30)
  59:Generated_Source\PSoC4/ADC_1.c **** #endif
  60:Generated_Source\PSoC4/ADC_1.c **** 
  61:Generated_Source\PSoC4/ADC_1.c **** uint8 ADC_1_initVar = 0u;
  62:Generated_Source\PSoC4/ADC_1.c **** 
  63:Generated_Source\PSoC4/ADC_1.c **** uint8 ADC_1_selected = 0u; /* 0 if no configuration selected. 1 otherwise. */
  64:Generated_Source\PSoC4/ADC_1.c **** volatile int16 ADC_1_offset[ADC_1_TOTAL_CHANNELS_NUM];
  65:Generated_Source\PSoC4/ADC_1.c **** volatile int32 ADC_1_countsPer10Volt[ADC_1_TOTAL_CHANNELS_NUM];
  66:Generated_Source\PSoC4/ADC_1.c **** 
  67:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_currentConfig = 0u; /* Currently active configuration */
  68:Generated_Source\PSoC4/ADC_1.c **** 
  69:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
  70:Generated_Source\PSoC4/ADC_1.c **** * Local data allocation
  71:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
  72:Generated_Source\PSoC4/ADC_1.c **** /* Channels configuration generated by customiser */
  73:Generated_Source\PSoC4/ADC_1.c **** static const uint32 CYCODE ADC_1_channelsConfig[] = { 0x00000400UL,  };
  74:Generated_Source\PSoC4/ADC_1.c **** 
  75:Generated_Source\PSoC4/ADC_1.c **** /* Filter init */
  76:Generated_Source\PSoC4/ADC_1.c **** #if(ADC_1_ANY_CONFIG_USES_FILTER != 0u)
  77:Generated_Source\PSoC4/ADC_1.c ****     #if (0u != ADC_1_CFG0_FILTER_PRESENT)
  78:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG0_UABH_A_FILTER_INITPAIRSSIZE (19u)
  79:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG0_UABH_A_FILTER_initPairs[ADC_1_CFG0_UABH_A_FILTER_INI
  80:Generated_Source\PSoC4/ADC_1.c ****         {
  81:Generated_Source\PSoC4/ADC_1.c ****             /*OA_CTRL default always first element in initPairs*/
  82:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
  83:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_A_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_A_DEFAULT_OA_CTRL)}
  84:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_A_DEFAULT_SW_STATIC)}
  85:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_MODBIT_SRC_PTR  , ((uint32)ADC_1_UABH_A_INVAR_SW_MODBIT_SRC)}
  86:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_A_INVAR_SRAM_CTRL)}
  87:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG0_UABH_A_STARTUP_DELAY)}
  88:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_A_DEFAULT_SW_BOOST_CTRL)}
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 3


  89:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_A_DEFAULT_SW_CA_IN1)}
  90:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_OTHER_PTR       , ((uint32)ADC_1_UABH_A_DEFAULT_SW_OTHER)}
  91:Generated_Source\PSoC4/ADC_1.c **** 
  92:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG0_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
  93:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
  94:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_IN0)}
  95:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_TOP)}
  96:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN0)}
  97:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN1)}
  98:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CF_BOT)}
  99:Generated_Source\PSoC4/ADC_1.c **** 
 100:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 101:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG0_UABH_A_LOWQDYN_CAP_CTRL)}
 102:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_CFG0_UABH_A_LOWQDYN_SW_CB_IN0)}
 103:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_CFG0_UABH_A_LOWQDYN_SW_CB_IN1)}
 104:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG0_UABH_A_LOWQDYN_SW_CB_TOP)}
 105:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG0_UABH_A_LOWQDYN_SW_CC_TOP)}
 106:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG0_UABH_A_LOWQDYN_CAP_ABCF_VAL
 107:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG0_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 108:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 109:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_IN0)}
 110:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_TOP)}
 111:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN0)}
 112:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN1)}
 113:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN0)}
 114:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN1)}
 115:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_TOP)}
 116:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CF_BOT)}
 117:Generated_Source\PSoC4/ADC_1.c **** 
 118:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 119:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG0_UABH_A_HIGHQDYN_CAP_CTRL)}
 120:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG0_UABH_A_HIGHQDYN_SW_CB_TOP)}
 121:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG0_UABH_A_HIGHQDYN_CAP_ABCF_VA
 122:Generated_Source\PSoC4/ADC_1.c ****             #endif /* (ADC_1_CFG0_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 123:Generated_Source\PSoC4/ADC_1.c ****         };
 124:Generated_Source\PSoC4/ADC_1.c **** 
 125:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG0_UABH_B_FILTER_INITPAIRSSIZE (19u)
 126:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG0_UABH_B_FILTER_initPairs[ADC_1_CFG0_UABH_B_FILTER_INI
 127:Generated_Source\PSoC4/ADC_1.c ****         {
 128:Generated_Source\PSoC4/ADC_1.c ****             /*OA_CTRL default always first element in initPairs*/
 129:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
 130:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_B_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_B_DEFAULT_OA_CTRL)}
 131:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_B_DEFAULT_SW_STATIC)}
 132:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_MODBIT_SRC_PTR  , ((uint32)ADC_1_UABH_B_INVAR_SW_MODBIT_SRC)}
 133:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_B_INVAR_SRAM_CTRL)}
 134:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG0_UABH_B_STARTUP_DELAY)}
 135:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_B_DEFAULT_SW_BOOST_CTRL)}
 136:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_OTHER_PTR  , ((uint32)ADC_1_UABH_B_DEFAULT_SW_OTHER)}
 137:Generated_Source\PSoC4/ADC_1.c **** 
 138:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG0_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
 139:Generated_Source\PSoC4/ADC_1.c ****                         /* Filter-invariant registers */
 140:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN0)}
 141:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN1)}
 142:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_TOP)}
 143:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN0)}
 144:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN1)}
 145:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_TOP)}
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 4


 146:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN0)}
 147:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN1)}
 148:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CF_BOT)}
 149:Generated_Source\PSoC4/ADC_1.c **** 
 150:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 151:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG0_UABH_B_LOWQDYN_CAP_CTRL)}
 152:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG0_UABH_B_LOWQDYN_SW_CC_TOP)}
 153:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG0_UABH_B_LOWQDYN_CAP_ABCF_VAL
 154:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG0_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 155:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 156:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN0)}
 157:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN1)}
 158:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_TOP)}
 159:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN0)}
 160:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN1)}
 161:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN0)}
 162:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN1)}
 163:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CF_BOT)}
 164:Generated_Source\PSoC4/ADC_1.c **** 
 165:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 166:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG0_UABH_B_HIGHQDYN_CAP_CTRL)}
 167:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG0_UABH_B_HIGHQDYN_SW_CB_TOP)}
 168:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG0_UABH_B_HIGHQDYN_SW_CC_TOP)}
 169:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG0_UABH_B_HIGHQDYN_CAP_ABCF_VA
 170:Generated_Source\PSoC4/ADC_1.c ****             #endif /* #if (ADC_1_CFG0_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 171:Generated_Source\PSoC4/ADC_1.c ****         };
 172:Generated_Source\PSoC4/ADC_1.c **** 
 173:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG0_UABH_A_FILTER_config = {
 174:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_waveConfig,
 175:Generated_Source\PSoC4/ADC_1.c ****             (CyUAB_reg_pair*) ADC_1_CFG0_UABH_A_FILTER_initPairs,
 176:Generated_Source\PSoC4/ADC_1.c ****             CyUAB_SHARED_SW_CFG(ADC_1_UABH_A_PARAM_REF_TIED,ADC_1_UABH_A_PARAM_AGND_TIED,
 177:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_A_PARAM_SW_CC,ADC_1_UABH_A_PARAM_SW_BB,ADC_1_UABH_A_PARAM_SW_AA),
 178:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_NUM_STEPS,
 179:Generated_Source\PSoC4/ADC_1.c ****             (uint8)(ADC_1_UABH_A_ELEMENT_COUNT(ADC_1_CFG0_UABH_A_FILTER_initPairs))
 180:Generated_Source\PSoC4/ADC_1.c ****         };
 181:Generated_Source\PSoC4/ADC_1.c **** 
 182:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG0_UABH_B_FILTER_config = {
 183:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_waveConfig,
 184:Generated_Source\PSoC4/ADC_1.c ****         (CyUAB_reg_pair*) ADC_1_CFG0_UABH_B_FILTER_initPairs,
 185:Generated_Source\PSoC4/ADC_1.c ****         CyUAB_SHARED_SW_CFG(ADC_1_UABH_B_PARAM_REF_TIED,ADC_1_UABH_B_PARAM_AGND_TIED,
 186:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_B_PARAM_SW_CC,ADC_1_UABH_B_PARAM_SW_BB,ADC_1_UABH_B_PARAM_SW_AA),
 187:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_NUM_STEPS,
 188:Generated_Source\PSoC4/ADC_1.c ****         (uint8)(ADC_1_UABH_B_ELEMENT_COUNT(ADC_1_CFG0_UABH_B_FILTER_initPairs))
 189:Generated_Source\PSoC4/ADC_1.c ****     };
 190:Generated_Source\PSoC4/ADC_1.c ****     #endif /* (0u != ADC_1_CFG0_FILTER_PRESENT) */
 191:Generated_Source\PSoC4/ADC_1.c ****     #if (0u != ADC_1_CFG1_FILTER_PRESENT)
 192:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG1_UABH_A_FILTER_INITPAIRSSIZE (19u)
 193:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG1_UABH_A_FILTER_initPairs[ADC_1_CFG1_UABH_A_FILTER_INI
 194:Generated_Source\PSoC4/ADC_1.c ****         {
 195:Generated_Source\PSoC4/ADC_1.c ****             /*OA_CTRL default always first element in initPairs*/
 196:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
 197:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_A_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_A_DEFAULT_OA_CTRL)}
 198:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_A_DEFAULT_SW_STATIC)}
 199:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_MODBIT_SRC_PTR  , ((uint32)ADC_1_UABH_A_INVAR_SW_MODBIT_SRC)}
 200:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_A_INVAR_SRAM_CTRL)}
 201:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG1_UABH_A_STARTUP_DELAY)}
 202:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_A_DEFAULT_SW_BOOST_CTRL)}
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 5


 203:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_A_DEFAULT_SW_CA_IN1)}
 204:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_OTHER_PTR       , ((uint32)ADC_1_UABH_A_DEFAULT_SW_OTHER)}
 205:Generated_Source\PSoC4/ADC_1.c **** 
 206:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG1_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
 207:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 208:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_IN0)}
 209:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_TOP)}
 210:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN0)}
 211:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN1)}
 212:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CF_BOT)}
 213:Generated_Source\PSoC4/ADC_1.c **** 
 214:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 215:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG1_UABH_A_LOWQDYN_CAP_CTRL)}
 216:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_CFG1_UABH_A_LOWQDYN_SW_CB_IN0)}
 217:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_CFG1_UABH_A_LOWQDYN_SW_CB_IN1)}
 218:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG1_UABH_A_LOWQDYN_SW_CB_TOP)}
 219:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG1_UABH_A_LOWQDYN_SW_CC_TOP)}
 220:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG1_UABH_A_LOWQDYN_CAP_ABCF_VAL
 221:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG1_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 222:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 223:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_IN0)}
 224:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_TOP)}
 225:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN0)}
 226:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN1)}
 227:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN0)}
 228:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN1)}
 229:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_TOP)}
 230:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CF_BOT)}
 231:Generated_Source\PSoC4/ADC_1.c **** 
 232:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 233:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG1_UABH_A_HIGHQDYN_CAP_CTRL)}
 234:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG1_UABH_A_HIGHQDYN_SW_CB_TOP)}
 235:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG1_UABH_A_HIGHQDYN_CAP_ABCF_VA
 236:Generated_Source\PSoC4/ADC_1.c ****             #endif /* (ADC_1_CFG1_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 237:Generated_Source\PSoC4/ADC_1.c ****         };
 238:Generated_Source\PSoC4/ADC_1.c **** 
 239:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG1_UABH_B_FILTER_INITPAIRSSIZE (19u)
 240:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG1_UABH_B_FILTER_initPairs[ADC_1_CFG1_UABH_B_FILTER_INI
 241:Generated_Source\PSoC4/ADC_1.c ****         {
 242:Generated_Source\PSoC4/ADC_1.c ****             /*OA_CTRL default always first element in initPairs*/
 243:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
 244:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_B_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_B_DEFAULT_OA_CTRL)}
 245:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_B_DEFAULT_SW_STATIC)}
 246:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_MODBIT_SRC_PTR  , ((uint32)ADC_1_UABH_B_INVAR_SW_MODBIT_SRC)}
 247:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_B_INVAR_SRAM_CTRL)}
 248:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG1_UABH_B_STARTUP_DELAY)}
 249:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_B_DEFAULT_SW_BOOST_CTRL)}
 250:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_OTHER_PTR       , ((uint32)ADC_1_UABH_B_DEFAULT_SW_OTHER)}
 251:Generated_Source\PSoC4/ADC_1.c **** 
 252:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG1_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
 253:Generated_Source\PSoC4/ADC_1.c ****                         /* Filter-invariant registers */
 254:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN0)}
 255:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN1)}
 256:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_TOP)}
 257:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN0)}
 258:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN1)}
 259:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_TOP)}
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 6


 260:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN0)}
 261:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN1)}
 262:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CF_BOT)}
 263:Generated_Source\PSoC4/ADC_1.c **** 
 264:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 265:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG1_UABH_B_LOWQDYN_CAP_CTRL)}
 266:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG1_UABH_B_LOWQDYN_SW_CC_TOP)}
 267:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG1_UABH_B_LOWQDYN_CAP_ABCF_VAL
 268:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG1_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 269:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 270:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN0)}
 271:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN1)}
 272:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_TOP)}
 273:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN0)}
 274:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN1)}
 275:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN0)}
 276:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN1)}
 277:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CF_BOT)}
 278:Generated_Source\PSoC4/ADC_1.c **** 
 279:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 280:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG1_UABH_B_HIGHQDYN_CAP_CTRL)}
 281:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG1_UABH_B_HIGHQDYN_SW_CB_TOP)}
 282:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG1_UABH_B_HIGHQDYN_SW_CC_TOP)}
 283:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG1_UABH_B_HIGHQDYN_CAP_ABCF_VA
 284:Generated_Source\PSoC4/ADC_1.c ****             #endif /* #if (ADC_1_CFG1_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 285:Generated_Source\PSoC4/ADC_1.c ****         };
 286:Generated_Source\PSoC4/ADC_1.c **** 
 287:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG1_UABH_A_FILTER_config = {
 288:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_waveConfig,
 289:Generated_Source\PSoC4/ADC_1.c ****             (CyUAB_reg_pair*) ADC_1_CFG1_UABH_A_FILTER_initPairs,
 290:Generated_Source\PSoC4/ADC_1.c ****             CyUAB_SHARED_SW_CFG(ADC_1_UABH_A_PARAM_REF_TIED,ADC_1_UABH_A_PARAM_AGND_TIED,
 291:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_A_PARAM_SW_CC,ADC_1_UABH_A_PARAM_SW_BB,ADC_1_UABH_A_PARAM_SW_AA),
 292:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_NUM_STEPS,
 293:Generated_Source\PSoC4/ADC_1.c ****             (uint8)(ADC_1_UABH_A_ELEMENT_COUNT(ADC_1_CFG1_UABH_A_FILTER_initPairs))
 294:Generated_Source\PSoC4/ADC_1.c ****         };
 295:Generated_Source\PSoC4/ADC_1.c **** 
 296:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG1_UABH_B_FILTER_config = {
 297:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_waveConfig,
 298:Generated_Source\PSoC4/ADC_1.c ****         (CyUAB_reg_pair*) ADC_1_CFG1_UABH_B_FILTER_initPairs,
 299:Generated_Source\PSoC4/ADC_1.c ****         CyUAB_SHARED_SW_CFG(ADC_1_UABH_B_PARAM_REF_TIED,ADC_1_UABH_B_PARAM_AGND_TIED,
 300:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_B_PARAM_SW_CC,ADC_1_UABH_B_PARAM_SW_BB,ADC_1_UABH_B_PARAM_SW_AA),
 301:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_NUM_STEPS,
 302:Generated_Source\PSoC4/ADC_1.c ****         (uint8)(ADC_1_UABH_B_ELEMENT_COUNT(ADC_1_CFG1_UABH_B_FILTER_initPairs))
 303:Generated_Source\PSoC4/ADC_1.c ****     };
 304:Generated_Source\PSoC4/ADC_1.c ****     #endif /* (0u != ADC_1_CFG1_FILTER_PRESENT) */
 305:Generated_Source\PSoC4/ADC_1.c ****     #if (0u != ADC_1_CFG2_FILTER_PRESENT)
 306:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG2_UABH_A_FILTER_INITPAIRSSIZE (19u)
 307:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG2_UABH_A_FILTER_initPairs[ADC_1_CFG2_UABH_A_FILTER_INI
 308:Generated_Source\PSoC4/ADC_1.c ****         {
 309:Generated_Source\PSoC4/ADC_1.c ****             /*OA_CTRL default always first element in initPairs*/
 310:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
 311:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_A_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_A_DEFAULT_OA_CTRL)}
 312:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_A_DEFAULT_SW_STATIC)}
 313:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_MODBIT_SRC_PTR  , ((uint32)ADC_1_UABH_A_INVAR_SW_MODBIT_SRC)}
 314:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_A_INVAR_SRAM_CTRL)}
 315:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG2_UABH_A_STARTUP_DELAY)}
 316:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_A_DEFAULT_SW_BOOST_CTRL)}
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 7


 317:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_A_DEFAULT_SW_CA_IN1)}
 318:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_OTHER_PTR       , ((uint32)ADC_1_UABH_A_DEFAULT_SW_OTHER)}
 319:Generated_Source\PSoC4/ADC_1.c **** 
 320:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG2_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
 321:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 322:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_IN0)}
 323:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_TOP)}
 324:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN0)}
 325:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN1)}
 326:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CF_BOT)}
 327:Generated_Source\PSoC4/ADC_1.c **** 
 328:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 329:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG2_UABH_A_LOWQDYN_CAP_CTRL)}
 330:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_CFG2_UABH_A_LOWQDYN_SW_CB_IN0)}
 331:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_CFG2_UABH_A_LOWQDYN_SW_CB_IN1)}
 332:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG2_UABH_A_LOWQDYN_SW_CB_TOP)}
 333:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG2_UABH_A_LOWQDYN_SW_CC_TOP)}
 334:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG2_UABH_A_LOWQDYN_CAP_ABCF_VAL
 335:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG2_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 336:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 337:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_IN0)}
 338:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_TOP)}
 339:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN0)}
 340:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN1)}
 341:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN0)}
 342:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN1)}
 343:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_TOP)}
 344:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CF_BOT)}
 345:Generated_Source\PSoC4/ADC_1.c **** 
 346:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 347:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG2_UABH_A_HIGHQDYN_CAP_CTRL)}
 348:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG2_UABH_A_HIGHQDYN_SW_CB_TOP)}
 349:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG2_UABH_A_HIGHQDYN_CAP_ABCF_VA
 350:Generated_Source\PSoC4/ADC_1.c ****             #endif /* (ADC_1_CFG2_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 351:Generated_Source\PSoC4/ADC_1.c ****         };
 352:Generated_Source\PSoC4/ADC_1.c **** 
 353:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG2_UABH_B_FILTER_INITPAIRSSIZE (19u)
 354:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG2_UABH_B_FILTER_initPairs[ADC_1_CFG2_UABH_B_FILTER_INI
 355:Generated_Source\PSoC4/ADC_1.c ****         {
 356:Generated_Source\PSoC4/ADC_1.c ****             /*OA_CTRL default always first element in initPairs*/
 357:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
 358:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_B_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_B_DEFAULT_OA_CTRL)}
 359:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_B_DEFAULT_SW_STATIC)}
 360:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_MODBIT_SRC_PTR  , ((uint32)ADC_1_UABH_B_INVAR_SW_MODBIT_SRC)}
 361:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_B_INVAR_SRAM_CTRL)}
 362:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG2_UABH_B_STARTUP_DELAY)}
 363:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_B_DEFAULT_SW_BOOST_CTRL)}
 364:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_OTHER_PTR       , ((uint32)ADC_1_UABH_B_DEFAULT_SW_OTHER)}
 365:Generated_Source\PSoC4/ADC_1.c **** 
 366:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG2_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
 367:Generated_Source\PSoC4/ADC_1.c ****                         /* Filter-invariant registers */
 368:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN0)}
 369:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN1)}
 370:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_TOP)}
 371:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN0)}
 372:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN1)}
 373:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_TOP)}
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 8


 374:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN0)}
 375:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN1)}
 376:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CF_BOT)}
 377:Generated_Source\PSoC4/ADC_1.c **** 
 378:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 379:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG2_UABH_B_LOWQDYN_CAP_CTRL)}
 380:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG2_UABH_B_LOWQDYN_SW_CC_TOP)}
 381:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG2_UABH_B_LOWQDYN_CAP_ABCF_VAL
 382:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG2_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 383:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 384:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN0)}
 385:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN1)}
 386:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_TOP)}
 387:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN0)}
 388:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN1)}
 389:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN0)}
 390:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN1)}
 391:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CF_BOT)}
 392:Generated_Source\PSoC4/ADC_1.c **** 
 393:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 394:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG2_UABH_B_HIGHQDYN_CAP_CTRL)}
 395:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG2_UABH_B_HIGHQDYN_SW_CB_TOP)}
 396:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG2_UABH_B_HIGHQDYN_SW_CC_TOP)}
 397:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG2_UABH_B_HIGHQDYN_CAP_ABCF_VA
 398:Generated_Source\PSoC4/ADC_1.c ****             #endif /* #if (ADC_1_CFG2_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 399:Generated_Source\PSoC4/ADC_1.c ****         };
 400:Generated_Source\PSoC4/ADC_1.c **** 
 401:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG2_UABH_A_FILTER_config = {
 402:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_waveConfig,
 403:Generated_Source\PSoC4/ADC_1.c ****             (CyUAB_reg_pair*) ADC_1_CFG2_UABH_A_FILTER_initPairs,
 404:Generated_Source\PSoC4/ADC_1.c ****             CyUAB_SHARED_SW_CFG(ADC_1_UABH_A_PARAM_REF_TIED,ADC_1_UABH_A_PARAM_AGND_TIED,
 405:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_A_PARAM_SW_CC,ADC_1_UABH_A_PARAM_SW_BB,ADC_1_UABH_A_PARAM_SW_AA),
 406:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_NUM_STEPS,
 407:Generated_Source\PSoC4/ADC_1.c ****             (uint8)(ADC_1_UABH_A_ELEMENT_COUNT(ADC_1_CFG2_UABH_A_FILTER_initPairs))
 408:Generated_Source\PSoC4/ADC_1.c ****         };
 409:Generated_Source\PSoC4/ADC_1.c **** 
 410:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG2_UABH_B_FILTER_config = {
 411:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_waveConfig,
 412:Generated_Source\PSoC4/ADC_1.c ****         (CyUAB_reg_pair*) ADC_1_CFG2_UABH_B_FILTER_initPairs,
 413:Generated_Source\PSoC4/ADC_1.c ****         CyUAB_SHARED_SW_CFG(ADC_1_UABH_B_PARAM_REF_TIED,ADC_1_UABH_B_PARAM_AGND_TIED,
 414:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_B_PARAM_SW_CC,ADC_1_UABH_B_PARAM_SW_BB,ADC_1_UABH_B_PARAM_SW_AA),
 415:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_NUM_STEPS,
 416:Generated_Source\PSoC4/ADC_1.c ****         (uint8)(ADC_1_UABH_B_ELEMENT_COUNT(ADC_1_CFG2_UABH_B_FILTER_initPairs))
 417:Generated_Source\PSoC4/ADC_1.c ****     };
 418:Generated_Source\PSoC4/ADC_1.c ****     #endif /* (0u != ADC_1_CFG2_FILTER_PRESENT) */
 419:Generated_Source\PSoC4/ADC_1.c ****     #if (0u != ADC_1_CFG3_FILTER_PRESENT)
 420:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG3_UABH_A_FILTER_INITPAIRSSIZE (19u)
 421:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG3_UABH_A_FILTER_initPairs[ADC_1_CFG3_UABH_A_FILTER_INI
 422:Generated_Source\PSoC4/ADC_1.c ****         {
 423:Generated_Source\PSoC4/ADC_1.c ****             /*OA_CTRL default always first element in initPairs*/
 424:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
 425:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_A_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_A_DEFAULT_OA_CTRL)}
 426:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_A_DEFAULT_SW_STATIC)}
 427:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_MODBIT_SRC_PTR  , ((uint32)ADC_1_UABH_A_INVAR_SW_MODBIT_SRC)}
 428:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_A_INVAR_SRAM_CTRL)}
 429:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG3_UABH_A_STARTUP_DELAY)}
 430:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_A_DEFAULT_SW_BOOST_CTRL)}
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 9


 431:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_A_DEFAULT_SW_CA_IN1)}
 432:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_OTHER_PTR       , ((uint32)ADC_1_UABH_A_DEFAULT_SW_OTHER)}
 433:Generated_Source\PSoC4/ADC_1.c **** 
 434:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG3_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
 435:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 436:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_IN0)}
 437:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_TOP)}
 438:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN0)}
 439:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN1)}
 440:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CF_BOT)}
 441:Generated_Source\PSoC4/ADC_1.c **** 
 442:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 443:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG3_UABH_A_LOWQDYN_CAP_CTRL)}
 444:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_CFG3_UABH_A_LOWQDYN_SW_CB_IN0)}
 445:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_CFG3_UABH_A_LOWQDYN_SW_CB_IN1)}
 446:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG3_UABH_A_LOWQDYN_SW_CB_TOP)}
 447:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG3_UABH_A_LOWQDYN_SW_CC_TOP)}
 448:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG3_UABH_A_LOWQDYN_CAP_ABCF_VAL
 449:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG3_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 450:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 451:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_IN0)}
 452:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_TOP)}
 453:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN0)}
 454:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN1)}
 455:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN0)}
 456:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN1)}
 457:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_TOP)}
 458:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CF_BOT)}
 459:Generated_Source\PSoC4/ADC_1.c **** 
 460:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 461:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG3_UABH_A_HIGHQDYN_CAP_CTRL)}
 462:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG3_UABH_A_HIGHQDYN_SW_CB_TOP)}
 463:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG3_UABH_A_HIGHQDYN_CAP_ABCF_VA
 464:Generated_Source\PSoC4/ADC_1.c ****             #endif /* (ADC_1_CFG3_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 465:Generated_Source\PSoC4/ADC_1.c ****         };
 466:Generated_Source\PSoC4/ADC_1.c **** 
 467:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG3_UABH_B_FILTER_INITPAIRSSIZE (19u)
 468:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG3_UABH_B_FILTER_initPairs[ADC_1_CFG3_UABH_B_FILTER_INI
 469:Generated_Source\PSoC4/ADC_1.c ****         {
 470:Generated_Source\PSoC4/ADC_1.c ****             /*OA_CTRL default always first element in initPairs*/
 471:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
 472:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_B_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_B_DEFAULT_OA_CTRL)}
 473:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_B_DEFAULT_SW_STATIC)}
 474:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_MODBIT_SRC_PTR  , ((uint32)ADC_1_UABH_B_INVAR_SW_MODBIT_SRC)}
 475:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_B_INVAR_SRAM_CTRL)}
 476:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG3_UABH_B_STARTUP_DELAY)}
 477:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_B_DEFAULT_SW_BOOST_CTRL)}
 478:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_OTHER_PTR       , ((uint32)ADC_1_UABH_B_DEFAULT_SW_OTHER)}
 479:Generated_Source\PSoC4/ADC_1.c **** 
 480:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG3_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
 481:Generated_Source\PSoC4/ADC_1.c ****                         /* Filter-invariant registers */
 482:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN0)}
 483:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN1)}
 484:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_TOP)}
 485:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN0)}
 486:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN1)}
 487:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_TOP)}
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 10


 488:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN0)}
 489:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN1)}
 490:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CF_BOT)}
 491:Generated_Source\PSoC4/ADC_1.c **** 
 492:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 493:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG3_UABH_B_LOWQDYN_CAP_CTRL)}
 494:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG3_UABH_B_LOWQDYN_SW_CC_TOP)}
 495:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG3_UABH_B_LOWQDYN_CAP_ABCF_VAL
 496:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG3_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 497:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 498:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN0)}
 499:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN1)}
 500:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_TOP)}
 501:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN0)}
 502:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN1)}
 503:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN0)}
 504:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN1)}
 505:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CF_BOT)}
 506:Generated_Source\PSoC4/ADC_1.c **** 
 507:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 508:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG3_UABH_B_HIGHQDYN_CAP_CTRL)}
 509:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG3_UABH_B_HIGHQDYN_SW_CB_TOP)}
 510:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG3_UABH_B_HIGHQDYN_SW_CC_TOP)}
 511:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG3_UABH_B_HIGHQDYN_CAP_ABCF_VA
 512:Generated_Source\PSoC4/ADC_1.c ****             #endif /* #if (ADC_1_CFG3_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 513:Generated_Source\PSoC4/ADC_1.c ****         };
 514:Generated_Source\PSoC4/ADC_1.c **** 
 515:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG3_UABH_A_FILTER_config = {
 516:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_waveConfig,
 517:Generated_Source\PSoC4/ADC_1.c ****             (CyUAB_reg_pair*) ADC_1_CFG3_UABH_A_FILTER_initPairs,
 518:Generated_Source\PSoC4/ADC_1.c ****             CyUAB_SHARED_SW_CFG(ADC_1_UABH_A_PARAM_REF_TIED,ADC_1_UABH_A_PARAM_AGND_TIED,
 519:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_A_PARAM_SW_CC,ADC_1_UABH_A_PARAM_SW_BB,ADC_1_UABH_A_PARAM_SW_AA),
 520:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_NUM_STEPS,
 521:Generated_Source\PSoC4/ADC_1.c ****             (uint8)(ADC_1_UABH_A_ELEMENT_COUNT(ADC_1_CFG3_UABH_A_FILTER_initPairs))
 522:Generated_Source\PSoC4/ADC_1.c ****         };
 523:Generated_Source\PSoC4/ADC_1.c **** 
 524:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG3_UABH_B_FILTER_config = {
 525:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_waveConfig,
 526:Generated_Source\PSoC4/ADC_1.c ****         (CyUAB_reg_pair*) ADC_1_CFG3_UABH_B_FILTER_initPairs,
 527:Generated_Source\PSoC4/ADC_1.c ****         CyUAB_SHARED_SW_CFG(ADC_1_UABH_B_PARAM_REF_TIED,ADC_1_UABH_B_PARAM_AGND_TIED,
 528:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_B_PARAM_SW_CC,ADC_1_UABH_B_PARAM_SW_BB,ADC_1_UABH_B_PARAM_SW_AA),
 529:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_NUM_STEPS,
 530:Generated_Source\PSoC4/ADC_1.c ****         (uint8)(ADC_1_UABH_B_ELEMENT_COUNT(ADC_1_CFG3_UABH_B_FILTER_initPairs))
 531:Generated_Source\PSoC4/ADC_1.c ****     };
 532:Generated_Source\PSoC4/ADC_1.c ****     #endif /* (0u != ADC_1_CFG3_FILTER_PRESENT) */
 533:Generated_Source\PSoC4/ADC_1.c **** 
 534:Generated_Source\PSoC4/ADC_1.c **** 
 535:Generated_Source\PSoC4/ADC_1.c **** #endif /* (ADC_1_ANY_CONFIG_USES_FILTER  != 0u)  */
 536:Generated_Source\PSoC4/ADC_1.c **** 
 537:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 538:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_Start
 539:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 540:Generated_Source\PSoC4/ADC_1.c **** *
 541:Generated_Source\PSoC4/ADC_1.c **** * \brief Performs all required initialization for this component and enables the
 542:Generated_Source\PSoC4/ADC_1.c **** *  power. The power will be set to the appropriate power based on the clock
 543:Generated_Source\PSoC4/ADC_1.c **** *  frequency.
 544:Generated_Source\PSoC4/ADC_1.c **** *
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 11


 545:Generated_Source\PSoC4/ADC_1.c **** * \param None
 546:Generated_Source\PSoC4/ADC_1.c **** *
 547:Generated_Source\PSoC4/ADC_1.c **** * \return None
 548:Generated_Source\PSoC4/ADC_1.c **** *
 549:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 550:Generated_Source\PSoC4/ADC_1.c **** *
 551:Generated_Source\PSoC4/ADC_1.c **** * \globalvars
 552:Generated_Source\PSoC4/ADC_1.c **** *  \ref ADC_1_initVar (RW)
 553:Generated_Source\PSoC4/ADC_1.c **** *
 554:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 555:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_Start(void)
 556:Generated_Source\PSoC4/ADC_1.c **** {
 557:Generated_Source\PSoC4/ADC_1.c ****     if (ADC_1_INIT_VAR_INIT_FLAG != (ADC_1_INIT_VAR_INIT_FLAG & ADC_1_initVar))
 558:Generated_Source\PSoC4/ADC_1.c ****     {
 559:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_Init();
 560:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_initVar |= ADC_1_INIT_VAR_INIT_FLAG;
 561:Generated_Source\PSoC4/ADC_1.c ****     }
 562:Generated_Source\PSoC4/ADC_1.c **** 
 563:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_Enable();
 564:Generated_Source\PSoC4/ADC_1.c **** 
 565:Generated_Source\PSoC4/ADC_1.c ****     return;
 566:Generated_Source\PSoC4/ADC_1.c **** }
 567:Generated_Source\PSoC4/ADC_1.c **** 
 568:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 569:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_StartEx
 570:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 571:Generated_Source\PSoC4/ADC_1.c **** *
 572:Generated_Source\PSoC4/ADC_1.c **** * \brief This function starts the ADC_1 and sets the Interrupt
 573:Generated_Source\PSoC4/ADC_1.c **** * Service Routine to the provided address using the
 574:Generated_Source\PSoC4/ADC_1.c **** * ADC_1_IRQ_StartEx() function. Refer to the Interrupt component
 575:Generated_Source\PSoC4/ADC_1.c **** * datasheet for more information on the ADC_1_IRQ_StartEx() function.
 576:Generated_Source\PSoC4/ADC_1.c **** *
 577:Generated_Source\PSoC4/ADC_1.c **** * \param address This is the address of a user defined function for the ISR.
 578:Generated_Source\PSoC4/ADC_1.c **** *
 579:Generated_Source\PSoC4/ADC_1.c **** * \return None
 580:Generated_Source\PSoC4/ADC_1.c **** *
 581:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 582:Generated_Source\PSoC4/ADC_1.c **** *
 583:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 584:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_StartEx(cyisraddress address)
 585:Generated_Source\PSoC4/ADC_1.c **** {
 586:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_Start();
 587:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_IRQ_StartEx(address);
 588:Generated_Source\PSoC4/ADC_1.c ****     return;
 589:Generated_Source\PSoC4/ADC_1.c **** }
 590:Generated_Source\PSoC4/ADC_1.c **** 
 591:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 592:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_Stop
 593:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 594:Generated_Source\PSoC4/ADC_1.c **** *
 595:Generated_Source\PSoC4/ADC_1.c **** * \brief This function stops ADC conversions and puts the ADC into its lowest
 596:Generated_Source\PSoC4/ADC_1.c **** * power mode.
 597:Generated_Source\PSoC4/ADC_1.c **** *
 598:Generated_Source\PSoC4/ADC_1.c **** * \param None
 599:Generated_Source\PSoC4/ADC_1.c **** *
 600:Generated_Source\PSoC4/ADC_1.c **** * \return None
 601:Generated_Source\PSoC4/ADC_1.c **** *
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 12


 602:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect
 603:Generated_Source\PSoC4/ADC_1.c **** * Do not use the ADC_1_Stop() API to halt conversions. Instead use the
 604:Generated_Source\PSoC4/ADC_1.c **** * ADC_1_StopConvert() API. If you use the ADC_1_Stop() API
 605:Generated_Source\PSoC4/ADC_1.c **** * to halt conversions then later use the ADC_1_Start() and
 606:Generated_Source\PSoC4/ADC_1.c **** * ADC_1_StartConvert() APIs to resume conversions, the first channel
 607:Generated_Source\PSoC4/ADC_1.c **** * of the scan may be corrupt. The ADC_1_StopConvert() API will enable
 608:Generated_Source\PSoC4/ADC_1.c **** * the ADC_1 to complete the current scan of channels. After the
 609:Generated_Source\PSoC4/ADC_1.c **** * channel scan is complete, the ADC_1 will stop all conversions, which
 610:Generated_Source\PSoC4/ADC_1.c **** * can be detected by the use of an ISR or the ADC_1_IsEndConversion()
 611:Generated_Source\PSoC4/ADC_1.c **** * flag.
 612:Generated_Source\PSoC4/ADC_1.c **** *
 613:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 614:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_Stop(void)
 615:Generated_Source\PSoC4/ADC_1.c **** {
 616:Generated_Source\PSoC4/ADC_1.c ****     #if(0u != ADC_1_ANY_CONFIG_USES_FILTER)
 617:Generated_Source\PSoC4/ADC_1.c ****         if((ADC_1_allConfigs[ADC_1_currentConfig].miscConfig
 618:Generated_Source\PSoC4/ADC_1.c ****            & ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
 619:Generated_Source\PSoC4/ADC_1.c ****            == ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
 620:Generated_Source\PSoC4/ADC_1.c ****         {
 621:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_Stop();
 622:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_B_Stop();
 623:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_FILTERAGND2SAR_BUFFER_Stop();
 624:Generated_Source\PSoC4/ADC_1.c ****         }
 625:Generated_Source\PSoC4/ADC_1.c ****     #endif /* ADC_1_ANY_CONFIG_USES_FILTER != 0u */
 626:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_CTRL_REG &= (uint32)~ADC_1_SAR_CTRL_ENABLED_MSK;
 627:Generated_Source\PSoC4/ADC_1.c ****     return;
 628:Generated_Source\PSoC4/ADC_1.c **** }
 629:Generated_Source\PSoC4/ADC_1.c **** 
 630:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
 631:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_InitConfig
 632:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
 633:Generated_Source\PSoC4/ADC_1.c **** *
 634:Generated_Source\PSoC4/ADC_1.c **** * \brief Configures all of the registers for a given configuration for scanning.
 635:Generated_Source\PSoC4/ADC_1.c **** *
 636:Generated_Source\PSoC4/ADC_1.c **** * \param
 637:Generated_Source\PSoC4/ADC_1.c **** * config: Pointer to the configuration structure
 638:Generated_Source\PSoC4/ADC_1.c **** *
 639:Generated_Source\PSoC4/ADC_1.c **** * \return None
 640:Generated_Source\PSoC4/ADC_1.c **** *
 641:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 642:Generated_Source\PSoC4/ADC_1.c **** *
 643:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 644:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_InitConfig(const ADC_1_CONFIG_STRUCT *config)
 645:Generated_Source\PSoC4/ADC_1.c **** {
 646:Generated_Source\PSoC4/ADC_1.c ****     uint32 chNum;
 647:Generated_Source\PSoC4/ADC_1.c ****     uint32 tmpRegVal;
 648:Generated_Source\PSoC4/ADC_1.c **** 
 649:Generated_Source\PSoC4/ADC_1.c ****     /* If there is an internal SAR clock, set up its divider values. */
 650:Generated_Source\PSoC4/ADC_1.c ****     #if (ADC_1_CLOCK_INTERNAL)
 651:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_intSarClock_Stop();
 652:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_intSarClock_SetFractionalDividerRegister(config->clkDivider, 0u);
 653:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_intSarClock_Start();
 654:Generated_Source\PSoC4/ADC_1.c ****     #endif /* ADC_1_CLOCK_INTERNAL */
 655:Generated_Source\PSoC4/ADC_1.c **** 
 656:Generated_Source\PSoC4/ADC_1.c ****     /* If the current configuration has a filter, set up the UAB clock divider values. */
 657:Generated_Source\PSoC4/ADC_1.c ****     #if(0u != ADC_1_ANY_CONFIG_USES_FILTER)
 658:Generated_Source\PSoC4/ADC_1.c ****         if((config->miscConfig & ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 13


 659:Generated_Source\PSoC4/ADC_1.c ****             == ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
 660:Generated_Source\PSoC4/ADC_1.c ****         {
 661:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_intUabClock_Stop();
 662:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_intUabClock_SetFractionalDividerRegister(config->filterClkDivider, 0u);
 663:Generated_Source\PSoC4/ADC_1.c ****             #if defined(ADC_1_cy_psoc4_sar_1__CLOCK_DIV_ID)
 664:Generated_Source\PSoC4/ADC_1.c ****                 /* If the SAR clock divider ID is known,
 665:Generated_Source\PSoC4/ADC_1.c ****                  * start the internal UAB divider aligned to the SAR divider. */
 666:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_intUabClock_StartEx(ADC_1_cy_psoc4_sar_1__CLOCK_DIV_ID);
 667:Generated_Source\PSoC4/ADC_1.c ****             #else
 668:Generated_Source\PSoC4/ADC_1.c ****                 /* Otherwise start it unaligned. */
 669:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_intUabClock_Start();
 670:Generated_Source\PSoC4/ADC_1.c ****             #endif
 671:Generated_Source\PSoC4/ADC_1.c ****         }
 672:Generated_Source\PSoC4/ADC_1.c ****     #endif /* ADC_1_ANY_CONFIG_USES_FILTER != 0u */
 673:Generated_Source\PSoC4/ADC_1.c **** 
 674:Generated_Source\PSoC4/ADC_1.c ****     /* Init SAR and MUX registers */
 675:Generated_Source\PSoC4/ADC_1.c ****     /* Enable the SAR internal pump when global pump is enabled */
 676:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_CTRL_REG = config->ctrl
 677:Generated_Source\PSoC4/ADC_1.c ****         | (((ADC_1_PUMP_CTRL_REG & ADC_1_PUMP_CTRL_ENABLED) != 0u)
 678:Generated_Source\PSoC4/ADC_1.c ****             ? ADC_1_SAR_CTRL_BOOSTPUMP_EN_MSK : 0u);
 679:Generated_Source\PSoC4/ADC_1.c **** 
 680:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SAMPLE_CTRL_REG = config->sampleCtrl;
 681:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_THRES_REG = config->rangeThres;
 682:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_COND_REG = config->rangeCond;
 683:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SAMPLE_TIME01_REG = config->sampleTime01;
 684:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SAMPLE_TIME23_REG = config->sampleTime23;
 685:Generated_Source\PSoC4/ADC_1.c **** 
 686:Generated_Source\PSoC4/ADC_1.c ****     /* Connect Vminus to VSSA when even one channel is single-ended or multiple channels configured
 687:Generated_Source\PSoC4/ADC_1.c ****     if(1u == ADC_1_MUX_SWITCH0_INIT)
 688:Generated_Source\PSoC4/ADC_1.c ****     {
 689:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_MUX_SWITCH0_REG |= ADC_1_MUX_FW_VSSA_VMINUS;
 690:Generated_Source\PSoC4/ADC_1.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 691:Generated_Source\PSoC4/ADC_1.c ****         if(1ul < config->numChannels)
 692:Generated_Source\PSoC4/ADC_1.c ****         {
 693:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_MUX_SWITCH_HW_CTRL_REG |= ADC_1_MUX_FW_VSSA_VMINUS;
 694:Generated_Source\PSoC4/ADC_1.c ****         }
 695:Generated_Source\PSoC4/ADC_1.c ****     }
 696:Generated_Source\PSoC4/ADC_1.c **** 
 697:Generated_Source\PSoC4/ADC_1.c ****     /* Clear and set interrupt masks */
 698:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SATURATE_INTR_MASK_REG = 0u;
 699:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_INTR_MASK_REG = 0u;
 700:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SATURATE_INTR_MASK_REG = config->satIntMask;
 701:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_INTR_MASK_REG = config->rangeIntMask;
 702:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_INTR_MASK_REG = ADC_1_EOS_MASK;
 703:Generated_Source\PSoC4/ADC_1.c **** 
 704:Generated_Source\PSoC4/ADC_1.c ****     for(chNum = 0u; chNum < config->numChannels; chNum++)
 705:Generated_Source\PSoC4/ADC_1.c ****     {
 706:Generated_Source\PSoC4/ADC_1.c ****         tmpRegVal = (ADC_1_channelsConfig[config->channelBase + chNum]
 707:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_CHANNEL_CONFIG_MASK);
 708:Generated_Source\PSoC4/ADC_1.c **** 
 709:Generated_Source\PSoC4/ADC_1.c ****         #if(ADC_1_TOTAL_CHANNELS_NUM > 1)
 710:Generated_Source\PSoC4/ADC_1.c ****             tmpRegVal |= ADC_1_InputsPlacement[config->channelBase + chNum];
 711:Generated_Source\PSoC4/ADC_1.c ****             /*Non-paired differential channels set NEG_ADDR_EN and clear DIFFERENTIAL_EN */
 712:Generated_Source\PSoC4/ADC_1.c ****             if(0u != (ADC_1_InputsPlacement[config->channelBase + chNum] & ADC_1_CHANNEL_CONFIG_NEG
 713:Generated_Source\PSoC4/ADC_1.c ****             {
 714:Generated_Source\PSoC4/ADC_1.c ****                 tmpRegVal &= ~ADC_1_SAR_CHAN_CONFIG_DIFFERENTIAL_EN_MSK;
 715:Generated_Source\PSoC4/ADC_1.c ****             }
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 14


 716:Generated_Source\PSoC4/ADC_1.c ****         #endif
 717:Generated_Source\PSoC4/ADC_1.c **** 
 718:Generated_Source\PSoC4/ADC_1.c ****         CY_SET_REG32((reg32 *)(ADC_1_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 719:Generated_Source\PSoC4/ADC_1.c ****     }
 720:Generated_Source\PSoC4/ADC_1.c **** 
 721:Generated_Source\PSoC4/ADC_1.c ****     return;
 722:Generated_Source\PSoC4/ADC_1.c **** }
 723:Generated_Source\PSoC4/ADC_1.c **** 
 724:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
 725:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetDFTControl
 726:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
 727:Generated_Source\PSoC4/ADC_1.c **** *
 728:Generated_Source\PSoC4/ADC_1.c **** * \brief Internal function to configure the DFT_CTRL register.
 729:Generated_Source\PSoC4/ADC_1.c **** * This register is a non-retention register therefore it resets
 730:Generated_Source\PSoC4/ADC_1.c **** * when the SAR block is powered down.
 731:Generated_Source\PSoC4/ADC_1.c **** * The register must be configured every time the SAR block is enabled.
 732:Generated_Source\PSoC4/ADC_1.c **** *
 733:Generated_Source\PSoC4/ADC_1.c **** * \param
 734:Generated_Source\PSoC4/ADC_1.c **** * config: Pointer to the configuration structure
 735:Generated_Source\PSoC4/ADC_1.c **** *
 736:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 737:Generated_Source\PSoC4/ADC_1.c **** static void ADC_1_SetDFTControl(const ADC_1_CONFIG_STRUCT *config)
 738:Generated_Source\PSoC4/ADC_1.c **** {
  27              		.loc 1 738 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 739:Generated_Source\PSoC4/ADC_1.c ****     /* Double the non-overlap delay and latch enable time when using */
 740:Generated_Source\PSoC4/ADC_1.c ****     /* internal reference without bypass cap */
 741:Generated_Source\PSoC4/ADC_1.c ****     uint32 tmpRegVal = ADC_1_SAR_DFT_CTRL_REG;
  33              		.loc 1 741 0
  34 0000 0A4B     		ldr	r3, .L5
  35 0002 1B68     		ldr	r3, [r3]
  36              	.LVL1:
 742:Generated_Source\PSoC4/ADC_1.c ****     if(((config->ctrl & ADC_1__SAR_CTRL_VREF_BYP_AND_SEL_MSK)
  37              		.loc 1 742 0
  38 0004 8268     		ldr	r2, [r0, #8]
  39 0006 F021     		movs	r1, #240
  40 0008 0A40     		ands	r2, r1
  41 000a 402A     		cmp	r2, #64
  42 000c 01D0     		beq	.L2
 743:Generated_Source\PSoC4/ADC_1.c ****         == ADC_1__INTERNAL1024)
 744:Generated_Source\PSoC4/ADC_1.c ****         || ((config->ctrl & ADC_1__SAR_CTRL_VREF_BYP_AND_SEL_MSK)
  43              		.loc 1 744 0
  44 000e 002A     		cmp	r2, #0
  45 0010 04D1     		bne	.L3
  46              	.L2:
 745:Generated_Source\PSoC4/ADC_1.c ****         == ADC_1__INTERNALVREF))
 746:Generated_Source\PSoC4/ADC_1.c ****     {
 747:Generated_Source\PSoC4/ADC_1.c ****         tmpRegVal &= ~ADC_1_SAR_DFT_CTRL_DCEN_MSK;
  47              		.loc 1 747 0
  48 0012 074A     		ldr	r2, .L5+4
  49 0014 1340     		ands	r3, r2
  50              	.LVL2:
 748:Generated_Source\PSoC4/ADC_1.c ****         tmpRegVal |= ADC_1_SAR_DFT_CTRL_DLY_INC_MSK;
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 15


  51              		.loc 1 748 0
  52 0016 0122     		movs	r2, #1
  53 0018 1343     		orrs	r3, r2
  54              	.LVL3:
  55 001a 04E0     		b	.L4
  56              	.L3:
  57              	.LVL4:
  58 001c 0122     		movs	r2, #1
  59 001e 9343     		bics	r3, r2
  60              	.LVL5:
 749:Generated_Source\PSoC4/ADC_1.c ****     }
 750:Generated_Source\PSoC4/ADC_1.c ****     else
 751:Generated_Source\PSoC4/ADC_1.c ****     {
 752:Generated_Source\PSoC4/ADC_1.c ****         tmpRegVal |= ADC_1_SAR_DFT_CTRL_DCEN_MSK;
 753:Generated_Source\PSoC4/ADC_1.c ****         tmpRegVal &= (uint32)~ADC_1_SAR_DFT_CTRL_DLY_INC_MSK;
  61              		.loc 1 753 0
  62 0020 8022     		movs	r2, #128
  63 0022 9205     		lsls	r2, r2, #22
  64 0024 1343     		orrs	r3, r2
  65              	.LVL6:
  66              	.L4:
 754:Generated_Source\PSoC4/ADC_1.c ****     }
 755:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_DFT_CTRL_REG = tmpRegVal;
  67              		.loc 1 755 0
  68 0026 014A     		ldr	r2, .L5
  69 0028 1360     		str	r3, [r2]
 756:Generated_Source\PSoC4/ADC_1.c **** }
  70              		.loc 1 756 0
  71              		@ sp needed
  72 002a 7047     		bx	lr
  73              	.L6:
  74              		.align	2
  75              	.L5:
  76 002c 30003A40 		.word	1077542960
  77 0030 FFFFFFDF 		.word	-536870913
  78              		.cfi_endproc
  79              	.LFE5:
  80              		.size	ADC_1_SetDFTControl, .-ADC_1_SetDFTControl
  81              		.section	.text.ADC_1_IsChannelSigned,"ax",%progbits
  82              		.align	2
  83              		.code	16
  84              		.thumb_func
  85              		.type	ADC_1_IsChannelSigned, %function
  86              	ADC_1_IsChannelSigned:
  87              	.LFB13:
 757:Generated_Source\PSoC4/ADC_1.c **** 
 758:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
 759:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SelectConfig
 760:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
 761:Generated_Source\PSoC4/ADC_1.c **** *
 762:Generated_Source\PSoC4/ADC_1.c **** * \brief Selects the predefined configuration for scanning. Disables
 763:Generated_Source\PSoC4/ADC_1.c **** * and re-enables the SAR and filter (if filter used).
 764:Generated_Source\PSoC4/ADC_1.c **** *
 765:Generated_Source\PSoC4/ADC_1.c **** * \param config Number of configuration  in the ADC_1.
 766:Generated_Source\PSoC4/ADC_1.c **** *
 767:Generated_Source\PSoC4/ADC_1.c **** * \param restart Set to 1u to restart the ADC_1 after
 768:Generated_Source\PSoC4/ADC_1.c **** * selecting the configuration.
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 16


 769:Generated_Source\PSoC4/ADC_1.c **** *
 770:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 771:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SelectConfig(uint32 config, uint32 restart)
 772:Generated_Source\PSoC4/ADC_1.c **** {
 773:Generated_Source\PSoC4/ADC_1.c ****     /* Check whether the configuration number is valid or not */
 774:Generated_Source\PSoC4/ADC_1.c ****     if(ADC_1_TOTAL_CONFIGS > config)
 775:Generated_Source\PSoC4/ADC_1.c ****     {
 776:Generated_Source\PSoC4/ADC_1.c ****         /* Stop the ADC before changing configurations */
 777:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_Stop();
 778:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_selected = 1u;
 779:Generated_Source\PSoC4/ADC_1.c **** 
 780:Generated_Source\PSoC4/ADC_1.c ****         if(0u == ADC_1_initVar)
 781:Generated_Source\PSoC4/ADC_1.c ****         {
 782:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_Init();
 783:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_initVar |= ADC_1_INIT_VAR_INIT_FLAG;
 784:Generated_Source\PSoC4/ADC_1.c ****         }
 785:Generated_Source\PSoC4/ADC_1.c ****         #if (ADC_1_VREF_ROUTED)
 786:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_vrefAMux_DisconnectAll();
 787:Generated_Source\PSoC4/ADC_1.c ****         #endif
 788:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_InitConfig(&ADC_1_allConfigs[config]);
 789:Generated_Source\PSoC4/ADC_1.c ****         #if (ADC_1_VREF_ROUTED)
 790:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_vrefAMux_Select((uint8)config);
 791:Generated_Source\PSoC4/ADC_1.c ****         #endif
 792:Generated_Source\PSoC4/ADC_1.c ****         #if(0u != ADC_1_ANY_CONFIG_USES_FILTER)
 793:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_filterVinMux_Select((uint8)config);
 794:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_filterInit(config);
 795:Generated_Source\PSoC4/ADC_1.c ****         #endif
 796:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_CHAN_EN_REG = ADC_1_allConfigs[config].chanEn;
 797:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_RANGE_INTR_MASK_REG = ADC_1_allConfigs[config].rangeIntMask;
 798:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_SATURATE_INTR_MASK_REG = ADC_1_allConfigs[config].satIntMask;
 799:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_currentConfig = config;
 800:Generated_Source\PSoC4/ADC_1.c **** 
 801:Generated_Source\PSoC4/ADC_1.c ****         if(1u == restart)
 802:Generated_Source\PSoC4/ADC_1.c ****         {
 803:Generated_Source\PSoC4/ADC_1.c ****             /* Restart the ADC */
 804:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_Start();
 805:Generated_Source\PSoC4/ADC_1.c **** 
 806:Generated_Source\PSoC4/ADC_1.c ****             /* Restart the scan */
 807:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_StartConvert();
 808:Generated_Source\PSoC4/ADC_1.c ****         }
 809:Generated_Source\PSoC4/ADC_1.c ****     }
 810:Generated_Source\PSoC4/ADC_1.c ****     return;
 811:Generated_Source\PSoC4/ADC_1.c **** }
 812:Generated_Source\PSoC4/ADC_1.c **** 
 813:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 814:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_StartConvert
 815:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 816:Generated_Source\PSoC4/ADC_1.c **** *
 817:Generated_Source\PSoC4/ADC_1.c **** * \brief In continuous mode, this API starts the conversion process and it runs
 818:Generated_Source\PSoC4/ADC_1.c **** * continuously.
 819:Generated_Source\PSoC4/ADC_1.c **** 
 820:Generated_Source\PSoC4/ADC_1.c **** * In Single Shot mode, the function triggers a single scan and
 821:Generated_Source\PSoC4/ADC_1.c **** * every scan requires a call of this function. The mode is set with the
 822:Generated_Source\PSoC4/ADC_1.c **** * Sample Mode parameter in the customizer. The customizer setting can be
 823:Generated_Source\PSoC4/ADC_1.c **** * overridden at run time with the ADC_1_SetConvertMode() function.
 824:Generated_Source\PSoC4/ADC_1.c **** *
 825:Generated_Source\PSoC4/ADC_1.c **** * \param None
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 17


 826:Generated_Source\PSoC4/ADC_1.c **** *
 827:Generated_Source\PSoC4/ADC_1.c **** * \return None
 828:Generated_Source\PSoC4/ADC_1.c **** *
 829:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 830:Generated_Source\PSoC4/ADC_1.c **** *
 831:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 832:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_StartConvert(void)
 833:Generated_Source\PSoC4/ADC_1.c **** {
 834:Generated_Source\PSoC4/ADC_1.c ****     /* Freerunning mode */
 835:Generated_Source\PSoC4/ADC_1.c ****     if((ADC_1_SAR_SAMPLE_CTRL_REG
 836:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 837:Generated_Source\PSoC4/ADC_1.c ****         == ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 838:Generated_Source\PSoC4/ADC_1.c ****     {
 839:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_SAMPLE_CTRL_REG |= ADC_1_SAR_SAMPLE_CTRL_CONTINUOUS_MSK ;
 840:Generated_Source\PSoC4/ADC_1.c ****     }
 841:Generated_Source\PSoC4/ADC_1.c ****     else /* Firmware trigger */
 842:Generated_Source\PSoC4/ADC_1.c ****     {
 843:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_START_CTRL_REG = ADC_1_SAR_START_CTRL_FW_TRIGGER_MSK;
 844:Generated_Source\PSoC4/ADC_1.c ****     }
 845:Generated_Source\PSoC4/ADC_1.c **** 
 846:Generated_Source\PSoC4/ADC_1.c ****     return;
 847:Generated_Source\PSoC4/ADC_1.c **** }
 848:Generated_Source\PSoC4/ADC_1.c **** 
 849:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 850:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_StopConvert
 851:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 852:Generated_Source\PSoC4/ADC_1.c **** *
 853:Generated_Source\PSoC4/ADC_1.c **** * \brief Forces the ADC_1 to stop conversions. If a conversion is
 854:Generated_Source\PSoC4/ADC_1.c **** * currently executing, that conversion will complete, but no further conversions
 855:Generated_Source\PSoC4/ADC_1.c **** * will occur.
 856:Generated_Source\PSoC4/ADC_1.c **** *
 857:Generated_Source\PSoC4/ADC_1.c **** * \param None
 858:Generated_Source\PSoC4/ADC_1.c **** *
 859:Generated_Source\PSoC4/ADC_1.c **** * \return None
 860:Generated_Source\PSoC4/ADC_1.c **** *
 861:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 862:Generated_Source\PSoC4/ADC_1.c **** *
 863:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 864:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_StopConvert(void)
 865:Generated_Source\PSoC4/ADC_1.c **** {
 866:Generated_Source\PSoC4/ADC_1.c ****     if((ADC_1_SAR_SAMPLE_CTRL_REG
 867:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 868:Generated_Source\PSoC4/ADC_1.c ****         == ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 869:Generated_Source\PSoC4/ADC_1.c ****     {
 870:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_SAMPLE_CTRL_REG &= ~ADC_1_SAR_SAMPLE_CTRL_CONTINUOUS_MSK;
 871:Generated_Source\PSoC4/ADC_1.c **** 
 872:Generated_Source\PSoC4/ADC_1.c ****         if((ADC_1_allConfigs[ADC_1_currentConfig].miscConfig
 873:Generated_Source\PSoC4/ADC_1.c ****             & ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
 874:Generated_Source\PSoC4/ADC_1.c ****             == ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
 875:Generated_Source\PSoC4/ADC_1.c ****         {
 876:Generated_Source\PSoC4/ADC_1.c ****             /* Re-synchronize the Filter if a filter is present */
 877:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_Stop();
 878:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_Start();
 879:Generated_Source\PSoC4/ADC_1.c ****         }
 880:Generated_Source\PSoC4/ADC_1.c ****     }
 881:Generated_Source\PSoC4/ADC_1.c **** 
 882:Generated_Source\PSoC4/ADC_1.c ****     return;
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 18


 883:Generated_Source\PSoC4/ADC_1.c **** }
 884:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 885:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetConvertMode
 886:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 887:Generated_Source\PSoC4/ADC_1.c **** *
 888:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets the conversion mode to either Single-Shot or continuous. This
 889:Generated_Source\PSoC4/ADC_1.c **** * function overrides the settings applied in the customizer. Changing
 890:Generated_Source\PSoC4/ADC_1.c **** * configurations will restore the values set in the customizer.
 891:Generated_Source\PSoC4/ADC_1.c **** *
 892:Generated_Source\PSoC4/ADC_1.c **** * \param mode Sets the conversion mode. See table below for details.
 893:Generated_Source\PSoC4/ADC_1.c **** * | Options                          | Description                             |
 894:Generated_Source\PSoC4/ADC_1.c **** * | :------------------------------- | :-------------------------------------- |
 895:Generated_Source\PSoC4/ADC_1.c **** * | ADC_1_SINGLE_SHOT     | Calling the ADC_1_StartConvert() function after setting mode this will 
 896:Generated_Source\PSoC4/ADC_1.c **** * | ADC_1_CONTINUOUS      | Calling the ADC_1_StartConvert() function after setting this mode trigg
 897:Generated_Source\PSoC4/ADC_1.c **** *
 898:Generated_Source\PSoC4/ADC_1.c **** * \return None
 899:Generated_Source\PSoC4/ADC_1.c **** *
 900:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 901:Generated_Source\PSoC4/ADC_1.c **** *
 902:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 903:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetConvertMode(uint32 mode)
 904:Generated_Source\PSoC4/ADC_1.c **** {
 905:Generated_Source\PSoC4/ADC_1.c ****     if(ADC_1_CONTINUOUS == mode)
 906:Generated_Source\PSoC4/ADC_1.c ****     {
 907:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_SAMPLE_CTRL_REG |= ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK;
 908:Generated_Source\PSoC4/ADC_1.c ****     }
 909:Generated_Source\PSoC4/ADC_1.c ****     else
 910:Generated_Source\PSoC4/ADC_1.c ****     {
 911:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_SAMPLE_CTRL_REG &= ~ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK;
 912:Generated_Source\PSoC4/ADC_1.c ****     }
 913:Generated_Source\PSoC4/ADC_1.c **** }
 914:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
 915:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_IRQ_Enable
 916:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
 917:Generated_Source\PSoC4/ADC_1.c **** *
 918:Generated_Source\PSoC4/ADC_1.c **** * \brief Enables interrupts to occur at the end of a conversion. Global
 919:Generated_Source\PSoC4/ADC_1.c **** * interrupts must also be enabled for the ADC_1 interrupts to occur.
 920:Generated_Source\PSoC4/ADC_1.c **** *
 921:Generated_Source\PSoC4/ADC_1.c **** * \param None
 922:Generated_Source\PSoC4/ADC_1.c **** *
 923:Generated_Source\PSoC4/ADC_1.c **** * \return None
 924:Generated_Source\PSoC4/ADC_1.c **** *
 925:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 926:Generated_Source\PSoC4/ADC_1.c **** *
 927:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 928:Generated_Source\PSoC4/ADC_1.c **** 
 929:Generated_Source\PSoC4/ADC_1.c **** 
 930:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
 931:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_IRQ_Disable
 932:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
 933:Generated_Source\PSoC4/ADC_1.c **** *
 934:Generated_Source\PSoC4/ADC_1.c **** * \brief Disables end of conversion interrupts.
 935:Generated_Source\PSoC4/ADC_1.c **** *
 936:Generated_Source\PSoC4/ADC_1.c **** * \param None
 937:Generated_Source\PSoC4/ADC_1.c **** *
 938:Generated_Source\PSoC4/ADC_1.c **** * \return None
 939:Generated_Source\PSoC4/ADC_1.c **** *
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 19


 940:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 941:Generated_Source\PSoC4/ADC_1.c **** *
 942:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 943:Generated_Source\PSoC4/ADC_1.c **** 
 944:Generated_Source\PSoC4/ADC_1.c **** 
 945:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 946:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetEosMask
 947:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 948:Generated_Source\PSoC4/ADC_1.c **** *
 949:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets of clears the End of Scan (EOS) interrupt mask.
 950:Generated_Source\PSoC4/ADC_1.c **** *
 951:Generated_Source\PSoC4/ADC_1.c **** * \param mask 1 to set the mask, 0 to clear the mask.
 952:Generated_Source\PSoC4/ADC_1.c **** *
 953:Generated_Source\PSoC4/ADC_1.c **** * \return None
 954:Generated_Source\PSoC4/ADC_1.c **** *
 955:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect All other bits in the INTR register are cleared by this function.
 956:Generated_Source\PSoC4/ADC_1.c **** *
 957:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 958:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetEosMask(uint32 mask)
 959:Generated_Source\PSoC4/ADC_1.c **** {
 960:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_INTR_MASK_REG = mask & ADC_1_EOS_MASK;
 961:Generated_Source\PSoC4/ADC_1.c **** 
 962:Generated_Source\PSoC4/ADC_1.c ****     return;
 963:Generated_Source\PSoC4/ADC_1.c **** }
 964:Generated_Source\PSoC4/ADC_1.c **** 
 965:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
 966:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetChanMask
 967:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
 968:Generated_Source\PSoC4/ADC_1.c **** *
 969:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets enable/disable mask for all channels in current configuration.
 970:Generated_Source\PSoC4/ADC_1.c **** *
 971:Generated_Source\PSoC4/ADC_1.c **** *
 972:Generated_Source\PSoC4/ADC_1.c **** * \param enableMask
 973:Generated_Source\PSoC4/ADC_1.c **** *  Channel enable/disable mask.
 974:Generated_Source\PSoC4/ADC_1.c **** *
 975:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect
 976:Generated_Source\PSoC4/ADC_1.c **** *  None.
 977:Generated_Source\PSoC4/ADC_1.c **** *
 978:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 979:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetChanMask(uint32 enableMask)
 980:Generated_Source\PSoC4/ADC_1.c **** {
 981:Generated_Source\PSoC4/ADC_1.c ****     uint32 chanCount = ADC_1_allConfigs[ADC_1_currentConfig].numChannels;
 982:Generated_Source\PSoC4/ADC_1.c ****     enableMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 983:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_CHAN_EN_REG = enableMask;
 984:Generated_Source\PSoC4/ADC_1.c ****     return;
 985:Generated_Source\PSoC4/ADC_1.c **** }
 986:Generated_Source\PSoC4/ADC_1.c **** 
 987:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 988:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_IsEndConversion
 989:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 990:Generated_Source\PSoC4/ADC_1.c **** *
 991:Generated_Source\PSoC4/ADC_1.c **** * \brief Immediately returns the status of the conversion or does not return
 992:Generated_Source\PSoC4/ADC_1.c **** * (blocking) until the conversion completes, depending on the retMode parameter.
 993:Generated_Source\PSoC4/ADC_1.c **** *
 994:Generated_Source\PSoC4/ADC_1.c **** * \param retMode Check conversion return mode. See the following table for
 995:Generated_Source\PSoC4/ADC_1.c **** * options.
 996:Generated_Source\PSoC4/ADC_1.c **** * | Options                              | Description                             |
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 20


 997:Generated_Source\PSoC4/ADC_1.c **** * | :-------------------------------     | :-------------------------------------- |
 998:Generated_Source\PSoC4/ADC_1.c **** * | ADC_1_RETURN_STATUS       | Immediately returns the conversion status for sequential channels. 
 999:Generated_Source\PSoC4/ADC_1.c **** * | ADC_1_WAIT_FOR_RESULT     | Does not return a result until the ADC_1 conversion of all sequenti
1000:Generated_Source\PSoC4/ADC_1.c **** *
1001:Generated_Source\PSoC4/ADC_1.c **** * \return uint8: If a nonzero value is returned, the last conversion is complete.
1002:Generated_Source\PSoC4/ADC_1.c **** * If the returned value is zero, the ADC_1 is still calculating the last result.
1003:Generated_Source\PSoC4/ADC_1.c **** *
1004:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect This function reads the end of conversion status, and clears it afterward.
1005:Generated_Source\PSoC4/ADC_1.c **** *
1006:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1007:Generated_Source\PSoC4/ADC_1.c **** uint32 ADC_1_IsEndConversion(uint32 retMode)
1008:Generated_Source\PSoC4/ADC_1.c **** {
1009:Generated_Source\PSoC4/ADC_1.c ****     uint32 endOfConversion = 0u;
1010:Generated_Source\PSoC4/ADC_1.c ****     uint32 wdt = 0x3FFFFFFuL; /* Watchdog timer for blocking while loop */
1011:Generated_Source\PSoC4/ADC_1.c ****     if((ADC_1_RETURN_STATUS == retMode) || (ADC_1_WAIT_FOR_RESULT == retMode))
1012:Generated_Source\PSoC4/ADC_1.c ****     {
1013:Generated_Source\PSoC4/ADC_1.c ****         do
1014:Generated_Source\PSoC4/ADC_1.c ****         {
1015:Generated_Source\PSoC4/ADC_1.c ****             endOfConversion = ADC_1_SAR_INTR_REG & ADC_1_EOS_MASK;
1016:Generated_Source\PSoC4/ADC_1.c ****             wdt--;
1017:Generated_Source\PSoC4/ADC_1.c ****         }while(((0u == endOfConversion)
1018:Generated_Source\PSoC4/ADC_1.c ****             && (((uint32) retMode & ADC_1_WAIT_FOR_RESULT) != 0u))
1019:Generated_Source\PSoC4/ADC_1.c ****             && (0uL != wdt));
1020:Generated_Source\PSoC4/ADC_1.c **** 
1021:Generated_Source\PSoC4/ADC_1.c ****         if(0u != endOfConversion)
1022:Generated_Source\PSoC4/ADC_1.c ****         {
1023:Generated_Source\PSoC4/ADC_1.c ****             /* Clear EOS bit */
1024:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_SAR_INTR_REG = ADC_1_EOS_MASK;
1025:Generated_Source\PSoC4/ADC_1.c ****         }
1026:Generated_Source\PSoC4/ADC_1.c ****     }
1027:Generated_Source\PSoC4/ADC_1.c **** 
1028:Generated_Source\PSoC4/ADC_1.c ****     return endOfConversion;
1029:Generated_Source\PSoC4/ADC_1.c **** }
1030:Generated_Source\PSoC4/ADC_1.c **** 
1031:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
1032:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_IsChannelSigned(uint32 chan)
1033:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
1034:Generated_Source\PSoC4/ADC_1.c **** *
1035:Generated_Source\PSoC4/ADC_1.c **** * Determines if the provided channel is in signed format.
1036:Generated_Source\PSoC4/ADC_1.c **** *
1037:Generated_Source\PSoC4/ADC_1.c **** * \param chan The ADC_1 channel to check.
1038:Generated_Source\PSoC4/ADC_1.c **** *
1039:Generated_Source\PSoC4/ADC_1.c **** * \return None
1040:Generated_Source\PSoC4/ADC_1.c **** *
1041:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1042:Generated_Source\PSoC4/ADC_1.c **** *
1043:Generated_Source\PSoC4/ADC_1.c **** *
1044:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1045:Generated_Source\PSoC4/ADC_1.c **** static int32 ADC_1_IsChannelSigned(uint32 chan)
1046:Generated_Source\PSoC4/ADC_1.c **** {
  88              		.loc 1 1046 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              		@ link register save eliminated.
  93              	.LVL7:
1047:Generated_Source\PSoC4/ADC_1.c ****     int32 isSigned = 0;
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 21


1048:Generated_Source\PSoC4/ADC_1.c ****     uint32 chanConfig;
1049:Generated_Source\PSoC4/ADC_1.c **** 
1050:Generated_Source\PSoC4/ADC_1.c ****     chanConfig = CY_GET_REG32((reg32 *)(ADC_1_SAR_CHAN_CONFIG_IND + (uint32)(chan << 2u)));
  94              		.loc 1 1050 0
  95 0000 8000     		lsls	r0, r0, #2
  96              	.LVL8:
  97 0002 114B     		ldr	r3, .L12
  98 0004 9C46     		mov	ip, r3
  99 0006 6044     		add	r0, r0, ip
 100 0008 0268     		ldr	r2, [r0]
 101              	.LVL9:
1051:Generated_Source\PSoC4/ADC_1.c ****     /* If differential mode */
1052:Generated_Source\PSoC4/ADC_1.c ****     if(0u != (chanConfig & ADC_1_CHANNEL_CONFIG_DIFF_ALL_MSK))
 102              		.loc 1 1052 0
 103 000a 104B     		ldr	r3, .L12+4
 104 000c 1A42     		tst	r2, r3
 105 000e 0BD0     		beq	.L8
1053:Generated_Source\PSoC4/ADC_1.c ****     {
1054:Generated_Source\PSoC4/ADC_1.c ****         /*If signed differential */
1055:Generated_Source\PSoC4/ADC_1.c ****         if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
 106              		.loc 1 1055 0
 107 0010 0F4B     		ldr	r3, .L12+8
 108 0012 1A68     		ldr	r2, [r3]
 109              	.LVL10:
 110 0014 D300     		lsls	r3, r2, #3
 111 0016 9A1A     		subs	r2, r3, r2
 112 0018 D300     		lsls	r3, r2, #3
 113 001a 0E4A     		ldr	r2, .L12+12
 114 001c D318     		adds	r3, r2, r3
 115 001e DB68     		ldr	r3, [r3, #12]
 116 0020 1B07     		lsls	r3, r3, #28
 117 0022 0DD4     		bmi	.L10
1047:Generated_Source\PSoC4/ADC_1.c ****     uint32 chanConfig;
 118              		.loc 1 1047 0
 119 0024 0020     		movs	r0, #0
 120 0026 0EE0     		b	.L9
 121              	.LVL11:
 122              	.L8:
1056:Generated_Source\PSoC4/ADC_1.c ****             & ADC_1_SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_MSK) != 0u)
1057:Generated_Source\PSoC4/ADC_1.c ****         {
1058:Generated_Source\PSoC4/ADC_1.c ****             isSigned = 1;
1059:Generated_Source\PSoC4/ADC_1.c ****         }
1060:Generated_Source\PSoC4/ADC_1.c ****     }
1061:Generated_Source\PSoC4/ADC_1.c ****     else
1062:Generated_Source\PSoC4/ADC_1.c ****     {
1063:Generated_Source\PSoC4/ADC_1.c ****         if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
 123              		.loc 1 1063 0
 124 0028 094B     		ldr	r3, .L12+8
 125 002a 1A68     		ldr	r2, [r3]
 126              	.LVL12:
 127 002c D300     		lsls	r3, r2, #3
 128 002e 9A1A     		subs	r2, r3, r2
 129 0030 D300     		lsls	r3, r2, #3
 130 0032 084A     		ldr	r2, .L12+12
 131 0034 D318     		adds	r3, r2, r3
 132 0036 DB68     		ldr	r3, [r3, #12]
 133 0038 5B07     		lsls	r3, r3, #29
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 22


 134 003a 03D4     		bmi	.L11
1047:Generated_Source\PSoC4/ADC_1.c ****     uint32 chanConfig;
 135              		.loc 1 1047 0
 136 003c 0020     		movs	r0, #0
 137 003e 02E0     		b	.L9
 138              	.L10:
1058:Generated_Source\PSoC4/ADC_1.c ****         }
 139              		.loc 1 1058 0
 140 0040 0120     		movs	r0, #1
 141 0042 00E0     		b	.L9
 142              	.L11:
1064:Generated_Source\PSoC4/ADC_1.c ****             & ADC_1_SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_MSK) != 0u)
1065:Generated_Source\PSoC4/ADC_1.c ****         {
1066:Generated_Source\PSoC4/ADC_1.c ****             isSigned = 1;
 143              		.loc 1 1066 0
 144 0044 0120     		movs	r0, #1
 145              	.L9:
 146              	.LVL13:
1067:Generated_Source\PSoC4/ADC_1.c ****         }
1068:Generated_Source\PSoC4/ADC_1.c ****     }
1069:Generated_Source\PSoC4/ADC_1.c ****     return isSigned;
1070:Generated_Source\PSoC4/ADC_1.c **** }
 147              		.loc 1 1070 0
 148              		@ sp needed
 149 0046 7047     		bx	lr
 150              	.L13:
 151              		.align	2
 152              	.L12:
 153 0048 80003A40 		.word	1077543040
 154 004c 00010001 		.word	16777472
 155 0050 00000000 		.word	.LANCHOR0
 156 0054 00000000 		.word	ADC_1_allConfigs
 157              		.cfi_endproc
 158              	.LFE13:
 159              		.size	ADC_1_IsChannelSigned, .-ADC_1_IsChannelSigned
 160              		.section	.text.ADC_1_Stop,"ax",%progbits
 161              		.align	2
 162              		.global	ADC_1_Stop
 163              		.code	16
 164              		.thumb_func
 165              		.type	ADC_1_Stop, %function
 166              	ADC_1_Stop:
 167              	.LFB3:
 615:Generated_Source\PSoC4/ADC_1.c ****     #if(0u != ADC_1_ANY_CONFIG_USES_FILTER)
 168              		.loc 1 615 0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172              		@ link register save eliminated.
 626:Generated_Source\PSoC4/ADC_1.c ****     return;
 173              		.loc 1 626 0
 174 0000 024A     		ldr	r2, .L15
 175 0002 1368     		ldr	r3, [r2]
 176 0004 5B00     		lsls	r3, r3, #1
 177 0006 5B08     		lsrs	r3, r3, #1
 178 0008 1360     		str	r3, [r2]
 628:Generated_Source\PSoC4/ADC_1.c **** 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 23


 179              		.loc 1 628 0
 180              		@ sp needed
 181 000a 7047     		bx	lr
 182              	.L16:
 183              		.align	2
 184              	.L15:
 185 000c 00003A40 		.word	1077542912
 186              		.cfi_endproc
 187              	.LFE3:
 188              		.size	ADC_1_Stop, .-ADC_1_Stop
 189              		.section	.text.ADC_1_InitConfig,"ax",%progbits
 190              		.align	2
 191              		.global	ADC_1_InitConfig
 192              		.code	16
 193              		.thumb_func
 194              		.type	ADC_1_InitConfig, %function
 195              	ADC_1_InitConfig:
 196              	.LFB4:
 645:Generated_Source\PSoC4/ADC_1.c ****     uint32 chNum;
 197              		.loc 1 645 0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201              	.LVL14:
 202 0000 10B5     		push	{r4, lr}
 203              		.cfi_def_cfa_offset 8
 204              		.cfi_offset 4, -8
 205              		.cfi_offset 14, -4
 206 0002 0400     		movs	r4, r0
 651:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_intSarClock_SetFractionalDividerRegister(config->clkDivider, 0u);
 207              		.loc 1 651 0
 208 0004 FFF7FEFF 		bl	ADC_1_intSarClock_Stop
 209              	.LVL15:
 652:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_intSarClock_Start();
 210              		.loc 1 652 0
 211 0008 A08E     		ldrh	r0, [r4, #52]
 212 000a 0021     		movs	r1, #0
 213 000c FFF7FEFF 		bl	ADC_1_intSarClock_SetFractionalDividerRegister
 214              	.LVL16:
 653:Generated_Source\PSoC4/ADC_1.c ****     #endif /* ADC_1_CLOCK_INTERNAL */
 215              		.loc 1 653 0
 216 0010 FF20     		movs	r0, #255
 217 0012 FFF7FEFF 		bl	ADC_1_intSarClock_StartEx
 218              	.LVL17:
 676:Generated_Source\PSoC4/ADC_1.c ****         | (((ADC_1_PUMP_CTRL_REG & ADC_1_PUMP_CTRL_ENABLED) != 0u)
 219              		.loc 1 676 0
 220 0016 A368     		ldr	r3, [r4, #8]
 677:Generated_Source\PSoC4/ADC_1.c ****             ? ADC_1_SAR_CTRL_BOOSTPUMP_EN_MSK : 0u);
 221              		.loc 1 677 0
 222 0018 194A     		ldr	r2, .L22
 223 001a 1268     		ldr	r2, [r2]
 224 001c 002A     		cmp	r2, #0
 225 001e 02DA     		bge	.L21
 226 0020 8022     		movs	r2, #128
 227 0022 5203     		lsls	r2, r2, #13
 228 0024 00E0     		b	.L18
 229              	.L21:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 24


 230 0026 0022     		movs	r2, #0
 231              	.L18:
 677:Generated_Source\PSoC4/ADC_1.c ****             ? ADC_1_SAR_CTRL_BOOSTPUMP_EN_MSK : 0u);
 232              		.loc 1 677 0 is_stmt 0 discriminator 4
 233 0028 1343     		orrs	r3, r2
 676:Generated_Source\PSoC4/ADC_1.c ****         | (((ADC_1_PUMP_CTRL_REG & ADC_1_PUMP_CTRL_ENABLED) != 0u)
 234              		.loc 1 676 0 is_stmt 1 discriminator 4
 235 002a 164A     		ldr	r2, .L22+4
 236 002c 1360     		str	r3, [r2]
 680:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_THRES_REG = config->rangeThres;
 237              		.loc 1 680 0 discriminator 4
 238 002e 164B     		ldr	r3, .L22+8
 239 0030 E268     		ldr	r2, [r4, #12]
 240 0032 1A60     		str	r2, [r3]
 681:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_COND_REG = config->rangeCond;
 241              		.loc 1 681 0 discriminator 4
 242 0034 154B     		ldr	r3, .L22+12
 243 0036 A269     		ldr	r2, [r4, #24]
 244 0038 1A60     		str	r2, [r3]
 682:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SAMPLE_TIME01_REG = config->sampleTime01;
 245              		.loc 1 682 0 discriminator 4
 246 003a 154B     		ldr	r3, .L22+16
 247 003c E269     		ldr	r2, [r4, #28]
 248 003e 1A60     		str	r2, [r3]
 683:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SAMPLE_TIME23_REG = config->sampleTime23;
 249              		.loc 1 683 0 discriminator 4
 250 0040 144B     		ldr	r3, .L22+20
 251 0042 2269     		ldr	r2, [r4, #16]
 252 0044 1A60     		str	r2, [r3]
 684:Generated_Source\PSoC4/ADC_1.c **** 
 253              		.loc 1 684 0 discriminator 4
 254 0046 144B     		ldr	r3, .L22+24
 255 0048 6269     		ldr	r2, [r4, #20]
 256 004a 1A60     		str	r2, [r3]
 698:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_INTR_MASK_REG = 0u;
 257              		.loc 1 698 0 discriminator 4
 258 004c 134A     		ldr	r2, .L22+28
 259 004e 0021     		movs	r1, #0
 260 0050 1160     		str	r1, [r2]
 699:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SATURATE_INTR_MASK_REG = config->satIntMask;
 261              		.loc 1 699 0 discriminator 4
 262 0052 134B     		ldr	r3, .L22+32
 263 0054 1960     		str	r1, [r3]
 700:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_INTR_MASK_REG = config->rangeIntMask;
 264              		.loc 1 700 0 discriminator 4
 265 0056 A16A     		ldr	r1, [r4, #40]
 266 0058 1160     		str	r1, [r2]
 701:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_INTR_MASK_REG = ADC_1_EOS_MASK;
 267              		.loc 1 701 0 discriminator 4
 268 005a 626A     		ldr	r2, [r4, #36]
 269 005c 1A60     		str	r2, [r3]
 702:Generated_Source\PSoC4/ADC_1.c **** 
 270              		.loc 1 702 0 discriminator 4
 271 005e 0122     		movs	r2, #1
 272 0060 104B     		ldr	r3, .L22+36
 273 0062 1A60     		str	r2, [r3]
 274              	.LVL18:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 25


 704:Generated_Source\PSoC4/ADC_1.c ****     {
 275              		.loc 1 704 0 discriminator 4
 276 0064 0023     		movs	r3, #0
 277 0066 07E0     		b	.L19
 278              	.LVL19:
 279              	.L20:
 718:Generated_Source\PSoC4/ADC_1.c ****     }
 280              		.loc 1 718 0 discriminator 3
 281 0068 9A00     		lsls	r2, r3, #2
 282 006a 0F49     		ldr	r1, .L22+40
 283 006c 8C46     		mov	ip, r1
 284 006e 6244     		add	r2, r2, ip
 285 0070 8021     		movs	r1, #128
 286 0072 C900     		lsls	r1, r1, #3
 287 0074 1160     		str	r1, [r2]
 704:Generated_Source\PSoC4/ADC_1.c ****     {
 288              		.loc 1 704 0 discriminator 3
 289 0076 0133     		adds	r3, r3, #1
 290              	.LVL20:
 291              	.L19:
 704:Generated_Source\PSoC4/ADC_1.c ****     {
 292              		.loc 1 704 0 is_stmt 0 discriminator 1
 293 0078 6268     		ldr	r2, [r4, #4]
 294 007a 9342     		cmp	r3, r2
 295 007c F4D3     		bcc	.L20
 722:Generated_Source\PSoC4/ADC_1.c **** 
 296              		.loc 1 722 0 is_stmt 1
 297              		@ sp needed
 298              	.LVL21:
 299 007e 10BD     		pop	{r4, pc}
 300              	.L23:
 301              		.align	2
 302              	.L22:
 303 0080 80033A40 		.word	1077543808
 304 0084 00003A40 		.word	1077542912
 305 0088 04003A40 		.word	1077542916
 306 008c 18003A40 		.word	1077542936
 307 0090 1C003A40 		.word	1077542940
 308 0094 10003A40 		.word	1077542928
 309 0098 14003A40 		.word	1077542932
 310 009c 28023A40 		.word	1077543464
 311 00a0 38023A40 		.word	1077543480
 312 00a4 18023A40 		.word	1077543448
 313 00a8 80003A40 		.word	1077543040
 314              		.cfi_endproc
 315              	.LFE4:
 316              		.size	ADC_1_InitConfig, .-ADC_1_InitConfig
 317              		.section	.text.ADC_1_StartConvert,"ax",%progbits
 318              		.align	2
 319              		.global	ADC_1_StartConvert
 320              		.code	16
 321              		.thumb_func
 322              		.type	ADC_1_StartConvert, %function
 323              	ADC_1_StartConvert:
 324              	.LFB7:
 833:Generated_Source\PSoC4/ADC_1.c ****     /* Freerunning mode */
 325              		.loc 1 833 0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 26


 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 0
 328              		@ frame_needed = 0, uses_anonymous_args = 0
 329              		@ link register save eliminated.
 835:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 330              		.loc 1 835 0
 331 0000 074B     		ldr	r3, .L27
 332 0002 1B68     		ldr	r3, [r3]
 333 0004 5B03     		lsls	r3, r3, #13
 334 0006 06D5     		bpl	.L25
 839:Generated_Source\PSoC4/ADC_1.c ****     }
 335              		.loc 1 839 0
 336 0008 054A     		ldr	r2, .L27
 337 000a 1368     		ldr	r3, [r2]
 338 000c 8021     		movs	r1, #128
 339 000e 4902     		lsls	r1, r1, #9
 340 0010 0B43     		orrs	r3, r1
 341 0012 1360     		str	r3, [r2]
 342 0014 02E0     		b	.L24
 343              	.L25:
 843:Generated_Source\PSoC4/ADC_1.c ****     }
 344              		.loc 1 843 0
 345 0016 0122     		movs	r2, #1
 346 0018 024B     		ldr	r3, .L27+4
 347 001a 1A60     		str	r2, [r3]
 348              	.L24:
 847:Generated_Source\PSoC4/ADC_1.c **** 
 349              		.loc 1 847 0
 350              		@ sp needed
 351 001c 7047     		bx	lr
 352              	.L28:
 353 001e C046     		.align	2
 354              	.L27:
 355 0020 04003A40 		.word	1077542916
 356 0024 24003A40 		.word	1077542948
 357              		.cfi_endproc
 358              	.LFE7:
 359              		.size	ADC_1_StartConvert, .-ADC_1_StartConvert
 360              		.section	.text.ADC_1_SetConvertMode,"ax",%progbits
 361              		.align	2
 362              		.global	ADC_1_SetConvertMode
 363              		.code	16
 364              		.thumb_func
 365              		.type	ADC_1_SetConvertMode, %function
 366              	ADC_1_SetConvertMode:
 367              	.LFB9:
 904:Generated_Source\PSoC4/ADC_1.c ****     if(ADC_1_CONTINUOUS == mode)
 368              		.loc 1 904 0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 372              		@ link register save eliminated.
 373              	.LVL22:
 905:Generated_Source\PSoC4/ADC_1.c ****     {
 374              		.loc 1 905 0
 375 0000 0128     		cmp	r0, #1
 376 0002 06D1     		bne	.L30
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 27


 907:Generated_Source\PSoC4/ADC_1.c ****     }
 377              		.loc 1 907 0
 378 0004 064A     		ldr	r2, .L32
 379 0006 1368     		ldr	r3, [r2]
 380 0008 8021     		movs	r1, #128
 381 000a C902     		lsls	r1, r1, #11
 382 000c 0B43     		orrs	r3, r1
 383 000e 1360     		str	r3, [r2]
 384 0010 04E0     		b	.L29
 385              	.L30:
 911:Generated_Source\PSoC4/ADC_1.c ****     }
 386              		.loc 1 911 0
 387 0012 034A     		ldr	r2, .L32
 388 0014 1168     		ldr	r1, [r2]
 389 0016 034B     		ldr	r3, .L32+4
 390 0018 0B40     		ands	r3, r1
 391 001a 1360     		str	r3, [r2]
 392              	.L29:
 913:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
 393              		.loc 1 913 0
 394              		@ sp needed
 395 001c 7047     		bx	lr
 396              	.L33:
 397 001e C046     		.align	2
 398              	.L32:
 399 0020 04003A40 		.word	1077542916
 400 0024 FFFFFBFF 		.word	-262145
 401              		.cfi_endproc
 402              	.LFE9:
 403              		.size	ADC_1_SetConvertMode, .-ADC_1_SetConvertMode
 404              		.section	.text.ADC_1_SetEosMask,"ax",%progbits
 405              		.align	2
 406              		.global	ADC_1_SetEosMask
 407              		.code	16
 408              		.thumb_func
 409              		.type	ADC_1_SetEosMask, %function
 410              	ADC_1_SetEosMask:
 411              	.LFB10:
 959:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_INTR_MASK_REG = mask & ADC_1_EOS_MASK;
 412              		.loc 1 959 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416              		@ link register save eliminated.
 417              	.LVL23:
 960:Generated_Source\PSoC4/ADC_1.c **** 
 418              		.loc 1 960 0
 419 0000 0123     		movs	r3, #1
 420 0002 1840     		ands	r0, r3
 421              	.LVL24:
 422 0004 014B     		ldr	r3, .L35
 423 0006 1860     		str	r0, [r3]
 963:Generated_Source\PSoC4/ADC_1.c **** 
 424              		.loc 1 963 0
 425              		@ sp needed
 426 0008 7047     		bx	lr
 427              	.L36:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 28


 428 000a C046     		.align	2
 429              	.L35:
 430 000c 18023A40 		.word	1077543448
 431              		.cfi_endproc
 432              	.LFE10:
 433              		.size	ADC_1_SetEosMask, .-ADC_1_SetEosMask
 434              		.section	.text.ADC_1_SetChanMask,"ax",%progbits
 435              		.align	2
 436              		.global	ADC_1_SetChanMask
 437              		.code	16
 438              		.thumb_func
 439              		.type	ADC_1_SetChanMask, %function
 440              	ADC_1_SetChanMask:
 441              	.LFB11:
 980:Generated_Source\PSoC4/ADC_1.c ****     uint32 chanCount = ADC_1_allConfigs[ADC_1_currentConfig].numChannels;
 442              		.loc 1 980 0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 0
 445              		@ frame_needed = 0, uses_anonymous_args = 0
 446              		@ link register save eliminated.
 447              	.LVL25:
 981:Generated_Source\PSoC4/ADC_1.c ****     enableMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 448              		.loc 1 981 0
 449 0000 074B     		ldr	r3, .L38
 450 0002 1A68     		ldr	r2, [r3]
 451 0004 D300     		lsls	r3, r2, #3
 452 0006 9A1A     		subs	r2, r3, r2
 453 0008 D300     		lsls	r3, r2, #3
 454 000a 064A     		ldr	r2, .L38+4
 455 000c D318     		adds	r3, r2, r3
 456 000e 5A68     		ldr	r2, [r3, #4]
 457              	.LVL26:
 982:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_CHAN_EN_REG = enableMask;
 458              		.loc 1 982 0
 459 0010 0123     		movs	r3, #1
 460 0012 9340     		lsls	r3, r3, r2
 461 0014 013B     		subs	r3, r3, #1
 462 0016 1840     		ands	r0, r3
 463              	.LVL27:
 983:Generated_Source\PSoC4/ADC_1.c ****     return;
 464              		.loc 1 983 0
 465 0018 034B     		ldr	r3, .L38+8
 466 001a 1860     		str	r0, [r3]
 985:Generated_Source\PSoC4/ADC_1.c **** 
 467              		.loc 1 985 0
 468              		@ sp needed
 469 001c 7047     		bx	lr
 470              	.L39:
 471 001e C046     		.align	2
 472              	.L38:
 473 0020 00000000 		.word	.LANCHOR0
 474 0024 00000000 		.word	ADC_1_allConfigs
 475 0028 20003A40 		.word	1077542944
 476              		.cfi_endproc
 477              	.LFE11:
 478              		.size	ADC_1_SetChanMask, .-ADC_1_SetChanMask
 479              		.section	.text.ADC_1_IsEndConversion,"ax",%progbits
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 29


 480              		.align	2
 481              		.global	ADC_1_IsEndConversion
 482              		.code	16
 483              		.thumb_func
 484              		.type	ADC_1_IsEndConversion, %function
 485              	ADC_1_IsEndConversion:
 486              	.LFB12:
1008:Generated_Source\PSoC4/ADC_1.c ****     uint32 endOfConversion = 0u;
 487              		.loc 1 1008 0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 0
 490              		@ frame_needed = 0, uses_anonymous_args = 0
 491              		@ link register save eliminated.
 492              	.LVL28:
 493 0000 0100     		movs	r1, r0
 494              	.LVL29:
1011:Generated_Source\PSoC4/ADC_1.c ****     {
 495              		.loc 1 1011 0
 496 0002 431E     		subs	r3, r0, #1
 497 0004 012B     		cmp	r3, #1
 498 0006 11D8     		bhi	.L44
 499 0008 094A     		ldr	r2, .L45
 500              	.LVL30:
 501              	.L43:
1015:Generated_Source\PSoC4/ADC_1.c ****             wdt--;
 502              		.loc 1 1015 0 discriminator 1
 503 000a 0A4B     		ldr	r3, .L45+4
 504 000c 1B68     		ldr	r3, [r3]
 505 000e 0120     		movs	r0, #1
 506 0010 1840     		ands	r0, r3
 507              	.LVL31:
1016:Generated_Source\PSoC4/ADC_1.c ****         }while(((0u == endOfConversion)
 508              		.loc 1 1016 0 discriminator 1
 509 0012 013A     		subs	r2, r2, #1
 510              	.LVL32:
1019:Generated_Source\PSoC4/ADC_1.c **** 
 511              		.loc 1 1019 0 discriminator 1
 512 0014 0028     		cmp	r0, #0
 513 0016 03D1     		bne	.L42
1018:Generated_Source\PSoC4/ADC_1.c ****             && (0uL != wdt));
 514              		.loc 1 1018 0
 515 0018 8B07     		lsls	r3, r1, #30
 516 001a 01D5     		bpl	.L42
1019:Generated_Source\PSoC4/ADC_1.c **** 
 517              		.loc 1 1019 0
 518 001c 002A     		cmp	r2, #0
 519 001e F4D1     		bne	.L43
 520              	.L42:
1021:Generated_Source\PSoC4/ADC_1.c ****         {
 521              		.loc 1 1021 0
 522 0020 0028     		cmp	r0, #0
 523 0022 04D0     		beq	.L41
1024:Generated_Source\PSoC4/ADC_1.c ****         }
 524              		.loc 1 1024 0
 525 0024 0122     		movs	r2, #1
 526              	.LVL33:
 527 0026 034B     		ldr	r3, .L45+4
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 30


 528 0028 1A60     		str	r2, [r3]
 529 002a 00E0     		b	.L41
 530              	.LVL34:
 531              	.L44:
1009:Generated_Source\PSoC4/ADC_1.c ****     uint32 wdt = 0x3FFFFFFuL; /* Watchdog timer for blocking while loop */
 532              		.loc 1 1009 0
 533 002c 0020     		movs	r0, #0
 534              	.LVL35:
 535              	.L41:
1029:Generated_Source\PSoC4/ADC_1.c **** 
 536              		.loc 1 1029 0
 537              		@ sp needed
 538 002e 7047     		bx	lr
 539              	.L46:
 540              		.align	2
 541              	.L45:
 542 0030 FFFFFF03 		.word	67108863
 543 0034 10023A40 		.word	1077543440
 544              		.cfi_endproc
 545              	.LFE12:
 546              		.size	ADC_1_IsEndConversion, .-ADC_1_IsEndConversion
 547              		.section	.text.ADC_1_GetResult16,"ax",%progbits
 548              		.align	2
 549              		.global	ADC_1_GetResult16
 550              		.code	16
 551              		.thumb_func
 552              		.type	ADC_1_GetResult16, %function
 553              	ADC_1_GetResult16:
 554              	.LFB14:
1071:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1072:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_GetResult16
1073:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1074:Generated_Source\PSoC4/ADC_1.c **** *
1075:Generated_Source\PSoC4/ADC_1.c **** * \brief Gets the data available in the channel result data register
1076:Generated_Source\PSoC4/ADC_1.c **** *
1077:Generated_Source\PSoC4/ADC_1.c **** * \param chan The ADC_1 channel to read the result from. The first
1078:Generated_Source\PSoC4/ADC_1.c **** * channel is 0 and the injection channel if enabled is the number of valid
1079:Generated_Source\PSoC4/ADC_1.c **** * channels.
1080:Generated_Source\PSoC4/ADC_1.c **** *
1081:Generated_Source\PSoC4/ADC_1.c **** * \return Returns converted data as a signed 16-bit integer.
1082:Generated_Source\PSoC4/ADC_1.c **** *
1083:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1084:Generated_Source\PSoC4/ADC_1.c **** *
1085:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1086:Generated_Source\PSoC4/ADC_1.c **** int16 ADC_1_GetResult16(uint32 chan)
1087:Generated_Source\PSoC4/ADC_1.c **** {
 555              		.loc 1 1087 0
 556              		.cfi_startproc
 557              		@ args = 0, pretend = 0, frame = 0
 558              		@ frame_needed = 0, uses_anonymous_args = 0
 559              	.LVL36:
 560 0000 10B5     		push	{r4, lr}
 561              		.cfi_def_cfa_offset 8
 562              		.cfi_offset 4, -8
 563              		.cfi_offset 14, -4
 564 0002 0400     		movs	r4, r0
1088:Generated_Source\PSoC4/ADC_1.c ****     uint32 adcResult;
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 31


1089:Generated_Source\PSoC4/ADC_1.c **** 
1090:Generated_Source\PSoC4/ADC_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1091:Generated_Source\PSoC4/ADC_1.c ****     CYASSERT(chan < ADC_1_allConfigs[ADC_1_currentConfig].numChannels);
 565              		.loc 1 1091 0
 566 0004 104B     		ldr	r3, .L51
 567 0006 1A68     		ldr	r2, [r3]
 568 0008 D300     		lsls	r3, r2, #3
 569 000a 9A1A     		subs	r2, r3, r2
 570 000c D300     		lsls	r3, r2, #3
 571 000e 0F4A     		ldr	r2, .L51+4
 572 0010 D318     		adds	r3, r2, r3
 573 0012 5B68     		ldr	r3, [r3, #4]
 574 0014 8342     		cmp	r3, r0
 575 0016 02D8     		bhi	.L48
 576              		.loc 1 1091 0 is_stmt 0 discriminator 1
 577 0018 0020     		movs	r0, #0
 578              	.LVL37:
 579 001a FFF7FEFF 		bl	CyHalt
 580              	.LVL38:
 581              	.L48:
1092:Generated_Source\PSoC4/ADC_1.c **** 
1093:Generated_Source\PSoC4/ADC_1.c ****     if(ADC_1_allConfigs[ADC_1_currentConfig].numChannels > chan)
 582              		.loc 1 1093 0 is_stmt 1
 583 001e 0A4B     		ldr	r3, .L51
 584 0020 1A68     		ldr	r2, [r3]
 585 0022 D300     		lsls	r3, r2, #3
 586 0024 9A1A     		subs	r2, r3, r2
 587 0026 D300     		lsls	r3, r2, #3
 588 0028 084A     		ldr	r2, .L51+4
 589 002a D318     		adds	r3, r2, r3
 590 002c 5B68     		ldr	r3, [r3, #4]
 591 002e 9C42     		cmp	r4, r3
 592 0030 07D2     		bcs	.L50
1094:Generated_Source\PSoC4/ADC_1.c ****     {
1095:Generated_Source\PSoC4/ADC_1.c ****         adcResult = CY_GET_REG32((reg32 *)(ADC_1_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 593              		.loc 1 1095 0
 594 0032 A400     		lsls	r4, r4, #2
 595              	.LVL39:
 596 0034 064B     		ldr	r3, .L51+8
 597 0036 9C46     		mov	ip, r3
 598 0038 6444     		add	r4, r4, ip
 599 003a 2068     		ldr	r0, [r4]
 600 003c 0004     		lsls	r0, r0, #16
 601 003e 000C     		lsrs	r0, r0, #16
 602              	.LVL40:
 603 0040 00E0     		b	.L49
 604              	.LVL41:
 605              	.L50:
1096:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_RESULT_MASK;
1097:Generated_Source\PSoC4/ADC_1.c ****     }
1098:Generated_Source\PSoC4/ADC_1.c ****     else
1099:Generated_Source\PSoC4/ADC_1.c ****     {
1100:Generated_Source\PSoC4/ADC_1.c ****         adcResult = 0u;
 606              		.loc 1 1100 0
 607 0042 0020     		movs	r0, #0
 608              	.LVL42:
 609              	.L49:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 32


1101:Generated_Source\PSoC4/ADC_1.c ****     }
1102:Generated_Source\PSoC4/ADC_1.c **** 
1103:Generated_Source\PSoC4/ADC_1.c ****     return (int16) adcResult;
 610              		.loc 1 1103 0
 611 0044 00B2     		sxth	r0, r0
 612              	.LVL43:
1104:Generated_Source\PSoC4/ADC_1.c **** }
 613              		.loc 1 1104 0
 614              		@ sp needed
 615 0046 10BD     		pop	{r4, pc}
 616              	.L52:
 617              		.align	2
 618              	.L51:
 619 0048 00000000 		.word	.LANCHOR0
 620 004c 00000000 		.word	ADC_1_allConfigs
 621 0050 80013A40 		.word	1077543296
 622              		.cfi_endproc
 623              	.LFE14:
 624              		.size	ADC_1_GetResult16, .-ADC_1_GetResult16
 625              		.section	.text.ADC_1_GetResult32,"ax",%progbits
 626              		.align	2
 627              		.global	ADC_1_GetResult32
 628              		.code	16
 629              		.thumb_func
 630              		.type	ADC_1_GetResult32, %function
 631              	ADC_1_GetResult32:
 632              	.LFB15:
1105:Generated_Source\PSoC4/ADC_1.c **** 
1106:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1107:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_GetResult32
1108:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1109:Generated_Source\PSoC4/ADC_1.c **** *
1110:Generated_Source\PSoC4/ADC_1.c **** * \brief Gets the data available in the channel result data register.
1111:Generated_Source\PSoC4/ADC_1.c **** *
1112:Generated_Source\PSoC4/ADC_1.c **** * \param chan The ADC_1 channel to read the result from. The first
1113:Generated_Source\PSoC4/ADC_1.c **** * channel is 0 and the injection channel if enabled is the number of valid
1114:Generated_Source\PSoC4/ADC_1.c **** * channels.
1115:Generated_Source\PSoC4/ADC_1.c **** *
1116:Generated_Source\PSoC4/ADC_1.c **** * \return Returns converted data as a signed 32-bit integer.
1117:Generated_Source\PSoC4/ADC_1.c **** *
1118:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1119:Generated_Source\PSoC4/ADC_1.c **** *
1120:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1121:Generated_Source\PSoC4/ADC_1.c **** int32 ADC_1_GetResult32(uint32 chan)
1122:Generated_Source\PSoC4/ADC_1.c **** {
 633              		.loc 1 1122 0
 634              		.cfi_startproc
 635              		@ args = 0, pretend = 0, frame = 0
 636              		@ frame_needed = 0, uses_anonymous_args = 0
 637              	.LVL44:
 638 0000 70B5     		push	{r4, r5, r6, lr}
 639              		.cfi_def_cfa_offset 16
 640              		.cfi_offset 4, -16
 641              		.cfi_offset 5, -12
 642              		.cfi_offset 6, -8
 643              		.cfi_offset 14, -4
 644 0002 0500     		movs	r5, r0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 33


1123:Generated_Source\PSoC4/ADC_1.c ****     uint32 adcResult;
1124:Generated_Source\PSoC4/ADC_1.c ****     int16 adcResult16;
1125:Generated_Source\PSoC4/ADC_1.c ****     int32 finalResult;
1126:Generated_Source\PSoC4/ADC_1.c **** 
1127:Generated_Source\PSoC4/ADC_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1128:Generated_Source\PSoC4/ADC_1.c ****     CYASSERT(chan < ADC_1_allConfigs[ADC_1_currentConfig].numChannels);
 645              		.loc 1 1128 0
 646 0004 144B     		ldr	r3, .L59
 647 0006 1A68     		ldr	r2, [r3]
 648 0008 D300     		lsls	r3, r2, #3
 649 000a 9A1A     		subs	r2, r3, r2
 650 000c D300     		lsls	r3, r2, #3
 651 000e 134A     		ldr	r2, .L59+4
 652 0010 D318     		adds	r3, r2, r3
 653 0012 5B68     		ldr	r3, [r3, #4]
 654 0014 8342     		cmp	r3, r0
 655 0016 02D8     		bhi	.L54
 656              		.loc 1 1128 0 is_stmt 0 discriminator 1
 657 0018 0020     		movs	r0, #0
 658              	.LVL45:
 659 001a FFF7FEFF 		bl	CyHalt
 660              	.LVL46:
 661              	.L54:
1129:Generated_Source\PSoC4/ADC_1.c **** 
1130:Generated_Source\PSoC4/ADC_1.c ****     if(ADC_1_allConfigs[ADC_1_currentConfig].numChannels > chan)
 662              		.loc 1 1130 0 is_stmt 1
 663 001e 0E4B     		ldr	r3, .L59
 664 0020 1A68     		ldr	r2, [r3]
 665 0022 D300     		lsls	r3, r2, #3
 666 0024 9A1A     		subs	r2, r3, r2
 667 0026 D300     		lsls	r3, r2, #3
 668 0028 0C4A     		ldr	r2, .L59+4
 669 002a D318     		adds	r3, r2, r3
 670 002c 5B68     		ldr	r3, [r3, #4]
 671 002e 9D42     		cmp	r5, r3
 672 0030 07D2     		bcs	.L58
1131:Generated_Source\PSoC4/ADC_1.c ****     {
1132:Generated_Source\PSoC4/ADC_1.c ****         adcResult = CY_GET_REG32((reg32 *)(ADC_1_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 673              		.loc 1 1132 0
 674 0032 AB00     		lsls	r3, r5, #2
 675 0034 0A4A     		ldr	r2, .L59+8
 676 0036 9446     		mov	ip, r2
 677 0038 6344     		add	r3, r3, ip
 678 003a 1C68     		ldr	r4, [r3]
 679 003c 2404     		lsls	r4, r4, #16
 680 003e 240C     		lsrs	r4, r4, #16
 681              	.LVL47:
 682 0040 00E0     		b	.L55
 683              	.LVL48:
 684              	.L58:
1133:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_RESULT_MASK;
1134:Generated_Source\PSoC4/ADC_1.c ****     }
1135:Generated_Source\PSoC4/ADC_1.c ****     else
1136:Generated_Source\PSoC4/ADC_1.c ****     {
1137:Generated_Source\PSoC4/ADC_1.c ****         adcResult = 0u;
 685              		.loc 1 1137 0
 686 0042 0024     		movs	r4, #0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 34


 687              	.L55:
 688              	.LVL49:
1138:Generated_Source\PSoC4/ADC_1.c ****     }
1139:Generated_Source\PSoC4/ADC_1.c ****     /* Sign extend if channel is signed format */
1140:Generated_Source\PSoC4/ADC_1.c ****     if(ADC_1_IsChannelSigned(chan) == 1)
 689              		.loc 1 1140 0
 690 0044 2800     		movs	r0, r5
 691 0046 FFF7FEFF 		bl	ADC_1_IsChannelSigned
 692              	.LVL50:
 693 004a 0128     		cmp	r0, #1
 694 004c 01D1     		bne	.L56
 695              	.LVL51:
1141:Generated_Source\PSoC4/ADC_1.c ****     {
1142:Generated_Source\PSoC4/ADC_1.c ****         adcResult16 = (int16) adcResult;
1143:Generated_Source\PSoC4/ADC_1.c ****         finalResult = (int32) adcResult16;
 696              		.loc 1 1143 0
 697 004e 20B2     		sxth	r0, r4
 698              	.LVL52:
 699 0050 00E0     		b	.L57
 700              	.LVL53:
 701              	.L56:
1144:Generated_Source\PSoC4/ADC_1.c ****     }
1145:Generated_Source\PSoC4/ADC_1.c ****     else
1146:Generated_Source\PSoC4/ADC_1.c ****     {
1147:Generated_Source\PSoC4/ADC_1.c ****         finalResult = (int32) adcResult;
 702              		.loc 1 1147 0
 703 0052 2000     		movs	r0, r4
 704              	.LVL54:
 705              	.L57:
1148:Generated_Source\PSoC4/ADC_1.c ****     }
1149:Generated_Source\PSoC4/ADC_1.c ****     return finalResult;
1150:Generated_Source\PSoC4/ADC_1.c **** }
 706              		.loc 1 1150 0
 707              		@ sp needed
 708              	.LVL55:
 709              	.LVL56:
 710 0054 70BD     		pop	{r4, r5, r6, pc}
 711              	.L60:
 712 0056 C046     		.align	2
 713              	.L59:
 714 0058 00000000 		.word	.LANCHOR0
 715 005c 00000000 		.word	ADC_1_allConfigs
 716 0060 80013A40 		.word	1077543296
 717              		.cfi_endproc
 718              	.LFE15:
 719              		.size	ADC_1_GetResult32, .-ADC_1_GetResult32
 720              		.section	.text.ADC_1_SetLowLimit,"ax",%progbits
 721              		.align	2
 722              		.global	ADC_1_SetLowLimit
 723              		.code	16
 724              		.thumb_func
 725              		.type	ADC_1_SetLowLimit, %function
 726              	ADC_1_SetLowLimit:
 727              	.LFB16:
1151:Generated_Source\PSoC4/ADC_1.c **** 
1152:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1153:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetLowLimit
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 35


1154:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1155:Generated_Source\PSoC4/ADC_1.c **** *
1156:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets the low limit parameter for a limit condition.
1157:Generated_Source\PSoC4/ADC_1.c **** *
1158:Generated_Source\PSoC4/ADC_1.c **** * \param lowLimit The low limit for a limit condition.
1159:Generated_Source\PSoC4/ADC_1.c **** *
1160:Generated_Source\PSoC4/ADC_1.c **** * \return None
1161:Generated_Source\PSoC4/ADC_1.c **** *
1162:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1163:Generated_Source\PSoC4/ADC_1.c **** *
1164:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1165:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetLowLimit(uint32 lowLimit)
1166:Generated_Source\PSoC4/ADC_1.c **** {
 728              		.loc 1 1166 0
 729              		.cfi_startproc
 730              		@ args = 0, pretend = 0, frame = 0
 731              		@ frame_needed = 0, uses_anonymous_args = 0
 732              		@ link register save eliminated.
 733              	.LVL57:
1167:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_THRES_REG &= ~(uint32)(ADC_1_SAR_RANGE_THRES_RANGE_LOW_MSK);
 734              		.loc 1 1167 0
 735 0000 054A     		ldr	r2, .L62
 736 0002 1368     		ldr	r3, [r2]
 737 0004 1B0C     		lsrs	r3, r3, #16
 738 0006 1B04     		lsls	r3, r3, #16
 739 0008 1360     		str	r3, [r2]
1168:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_THRES_REG |= lowLimit & ADC_1_SAR_RANGE_THRES_RANGE_LOW_MSK;
 740              		.loc 1 1168 0
 741 000a 1368     		ldr	r3, [r2]
 742 000c 0004     		lsls	r0, r0, #16
 743              	.LVL58:
 744 000e 000C     		lsrs	r0, r0, #16
 745 0010 1843     		orrs	r0, r3
 746 0012 1060     		str	r0, [r2]
1169:Generated_Source\PSoC4/ADC_1.c ****     return;
1170:Generated_Source\PSoC4/ADC_1.c **** }
 747              		.loc 1 1170 0
 748              		@ sp needed
 749 0014 7047     		bx	lr
 750              	.L63:
 751 0016 C046     		.align	2
 752              	.L62:
 753 0018 18003A40 		.word	1077542936
 754              		.cfi_endproc
 755              	.LFE16:
 756              		.size	ADC_1_SetLowLimit, .-ADC_1_SetLowLimit
 757              		.section	.text.ADC_1_SetHighLimit,"ax",%progbits
 758              		.align	2
 759              		.global	ADC_1_SetHighLimit
 760              		.code	16
 761              		.thumb_func
 762              		.type	ADC_1_SetHighLimit, %function
 763              	ADC_1_SetHighLimit:
 764              	.LFB17:
1171:Generated_Source\PSoC4/ADC_1.c **** 
1172:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1173:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetHighLimit
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 36


1174:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1175:Generated_Source\PSoC4/ADC_1.c **** *
1176:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets the high limit parameter for a limit condition.
1177:Generated_Source\PSoC4/ADC_1.c **** *
1178:Generated_Source\PSoC4/ADC_1.c **** * \param highLimit The high limit for a limit condition.
1179:Generated_Source\PSoC4/ADC_1.c **** *
1180:Generated_Source\PSoC4/ADC_1.c **** * \return None
1181:Generated_Source\PSoC4/ADC_1.c **** *
1182:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1183:Generated_Source\PSoC4/ADC_1.c **** *
1184:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1185:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetHighLimit(uint32 highLimit)
1186:Generated_Source\PSoC4/ADC_1.c **** {
 765              		.loc 1 1186 0
 766              		.cfi_startproc
 767              		@ args = 0, pretend = 0, frame = 0
 768              		@ frame_needed = 0, uses_anonymous_args = 0
 769              		@ link register save eliminated.
 770              	.LVL59:
1187:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_THRES_REG &= ~(uint32)(ADC_1_SAR_RANGE_THRES_RANGE_HIGH_MSK);
 771              		.loc 1 1187 0
 772 0000 044A     		ldr	r2, .L65
 773 0002 1368     		ldr	r3, [r2]
 774 0004 1B04     		lsls	r3, r3, #16
 775 0006 1B0C     		lsrs	r3, r3, #16
 776 0008 1360     		str	r3, [r2]
1188:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_1_SAR_RANGE_THRES_RANGE_HIGH_SHFT);
 777              		.loc 1 1188 0
 778 000a 1368     		ldr	r3, [r2]
 779 000c 0004     		lsls	r0, r0, #16
 780              	.LVL60:
 781 000e 1843     		orrs	r0, r3
 782 0010 1060     		str	r0, [r2]
1189:Generated_Source\PSoC4/ADC_1.c ****     return;
1190:Generated_Source\PSoC4/ADC_1.c **** }
 783              		.loc 1 1190 0
 784              		@ sp needed
 785 0012 7047     		bx	lr
 786              	.L66:
 787              		.align	2
 788              	.L65:
 789 0014 18003A40 		.word	1077542936
 790              		.cfi_endproc
 791              	.LFE17:
 792              		.size	ADC_1_SetHighLimit, .-ADC_1_SetHighLimit
 793              		.section	.text.ADC_1_SetLimitMask,"ax",%progbits
 794              		.align	2
 795              		.global	ADC_1_SetLimitMask
 796              		.code	16
 797              		.thumb_func
 798              		.type	ADC_1_SetLimitMask, %function
 799              	ADC_1_SetLimitMask:
 800              	.LFB18:
1191:Generated_Source\PSoC4/ADC_1.c **** 
1192:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1193:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetLimitMask
1194:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 37


1195:Generated_Source\PSoC4/ADC_1.c **** *
1196:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets the channel limit condition mask.
1197:Generated_Source\PSoC4/ADC_1.c **** *
1198:Generated_Source\PSoC4/ADC_1.c **** * \param limitMask Sets which channels that may cause a limit condition interrupt.
1199:Generated_Source\PSoC4/ADC_1.c **** * Setting bits for channels that do not exist will have no effect. For example,
1200:Generated_Source\PSoC4/ADC_1.c **** * if only 6  channels were enabled, setting a mask of 0x0103 would only enable
1201:Generated_Source\PSoC4/ADC_1.c **** * the last two channels (0 and 1).
1202:Generated_Source\PSoC4/ADC_1.c **** *
1203:Generated_Source\PSoC4/ADC_1.c **** * \return None
1204:Generated_Source\PSoC4/ADC_1.c **** *
1205:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1206:Generated_Source\PSoC4/ADC_1.c **** *
1207:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1208:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetLimitMask(uint32 limitMask)
1209:Generated_Source\PSoC4/ADC_1.c **** {
 801              		.loc 1 1209 0
 802              		.cfi_startproc
 803              		@ args = 0, pretend = 0, frame = 0
 804              		@ frame_needed = 0, uses_anonymous_args = 0
 805              		@ link register save eliminated.
 806              	.LVL61:
1210:Generated_Source\PSoC4/ADC_1.c ****     uint32 chanCount = ADC_1_allConfigs[ADC_1_currentConfig].numChannels;
 807              		.loc 1 1210 0
 808 0000 074B     		ldr	r3, .L68
 809 0002 1A68     		ldr	r2, [r3]
 810 0004 D300     		lsls	r3, r2, #3
 811 0006 9A1A     		subs	r2, r3, r2
 812 0008 D300     		lsls	r3, r2, #3
 813 000a 064A     		ldr	r2, .L68+4
 814 000c D318     		adds	r3, r2, r3
 815 000e 5A68     		ldr	r2, [r3, #4]
 816              	.LVL62:
1211:Generated_Source\PSoC4/ADC_1.c ****     limitMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 817              		.loc 1 1211 0
 818 0010 0123     		movs	r3, #1
 819 0012 9340     		lsls	r3, r3, r2
 820 0014 013B     		subs	r3, r3, #1
 821 0016 1840     		ands	r0, r3
 822              	.LVL63:
1212:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_INTR_MASK_REG = limitMask;
 823              		.loc 1 1212 0
 824 0018 034B     		ldr	r3, .L68+8
 825 001a 1860     		str	r0, [r3]
1213:Generated_Source\PSoC4/ADC_1.c ****     return;
1214:Generated_Source\PSoC4/ADC_1.c **** }
 826              		.loc 1 1214 0
 827              		@ sp needed
 828 001c 7047     		bx	lr
 829              	.L69:
 830 001e C046     		.align	2
 831              	.L68:
 832 0020 00000000 		.word	.LANCHOR0
 833 0024 00000000 		.word	ADC_1_allConfigs
 834 0028 38023A40 		.word	1077543480
 835              		.cfi_endproc
 836              	.LFE18:
 837              		.size	ADC_1_SetLimitMask, .-ADC_1_SetLimitMask
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 38


 838              		.section	.text.ADC_1_SetSatMask,"ax",%progbits
 839              		.align	2
 840              		.global	ADC_1_SetSatMask
 841              		.code	16
 842              		.thumb_func
 843              		.type	ADC_1_SetSatMask, %function
 844              	ADC_1_SetSatMask:
 845              	.LFB19:
1215:Generated_Source\PSoC4/ADC_1.c **** 
1216:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1217:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetSatMask
1218:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1219:Generated_Source\PSoC4/ADC_1.c **** *
1220:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets the channel saturation event mask.
1221:Generated_Source\PSoC4/ADC_1.c **** *
1222:Generated_Source\PSoC4/ADC_1.c **** * \param satMask Sets which channels that may cause a saturation event interrupt.
1223:Generated_Source\PSoC4/ADC_1.c **** * Setting bits for channels that do not exist will have no effect. For example,
1224:Generated_Source\PSoC4/ADC_1.c **** * if only 8 channels were enabled, setting a mask of 0x01C0 would only enable two
1225:Generated_Source\PSoC4/ADC_1.c **** * channels (6 and 7).
1226:Generated_Source\PSoC4/ADC_1.c **** *
1227:Generated_Source\PSoC4/ADC_1.c **** * \return None
1228:Generated_Source\PSoC4/ADC_1.c **** *
1229:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1230:Generated_Source\PSoC4/ADC_1.c **** *
1231:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1232:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetSatMask(uint32 satMask)
1233:Generated_Source\PSoC4/ADC_1.c **** {
 846              		.loc 1 1233 0
 847              		.cfi_startproc
 848              		@ args = 0, pretend = 0, frame = 0
 849              		@ frame_needed = 0, uses_anonymous_args = 0
 850              		@ link register save eliminated.
 851              	.LVL64:
1234:Generated_Source\PSoC4/ADC_1.c ****     uint32 chanCount = ADC_1_allConfigs[ADC_1_currentConfig].numChannels;
 852              		.loc 1 1234 0
 853 0000 074B     		ldr	r3, .L71
 854 0002 1A68     		ldr	r2, [r3]
 855 0004 D300     		lsls	r3, r2, #3
 856 0006 9A1A     		subs	r2, r3, r2
 857 0008 D300     		lsls	r3, r2, #3
 858 000a 064A     		ldr	r2, .L71+4
 859 000c D318     		adds	r3, r2, r3
 860 000e 5A68     		ldr	r2, [r3, #4]
 861              	.LVL65:
1235:Generated_Source\PSoC4/ADC_1.c ****     satMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 862              		.loc 1 1235 0
 863 0010 0123     		movs	r3, #1
 864 0012 9340     		lsls	r3, r3, r2
 865 0014 013B     		subs	r3, r3, #1
 866 0016 1840     		ands	r0, r3
 867              	.LVL66:
1236:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SATURATE_INTR_MASK_REG = satMask;
 868              		.loc 1 1236 0
 869 0018 034B     		ldr	r3, .L71+8
 870 001a 1860     		str	r0, [r3]
1237:Generated_Source\PSoC4/ADC_1.c ****     return;
1238:Generated_Source\PSoC4/ADC_1.c **** }
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 39


 871              		.loc 1 1238 0
 872              		@ sp needed
 873 001c 7047     		bx	lr
 874              	.L72:
 875 001e C046     		.align	2
 876              	.L71:
 877 0020 00000000 		.word	.LANCHOR0
 878 0024 00000000 		.word	ADC_1_allConfigs
 879 0028 28023A40 		.word	1077543464
 880              		.cfi_endproc
 881              	.LFE19:
 882              		.size	ADC_1_SetSatMask, .-ADC_1_SetSatMask
 883              		.section	.text.ADC_1_SetOffset,"ax",%progbits
 884              		.align	2
 885              		.global	ADC_1_SetOffset
 886              		.code	16
 887              		.thumb_func
 888              		.type	ADC_1_SetOffset, %function
 889              	ADC_1_SetOffset:
 890              	.LFB20:
1239:Generated_Source\PSoC4/ADC_1.c **** 
1240:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1241:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetOffset
1242:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1243:Generated_Source\PSoC4/ADC_1.c **** *
1244:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets the ADC offset that is used by the functions ADC_1_CountsTo_uVolts,
1245:Generated_Source\PSoC4/ADC_1.c **** * ADC_1_CountsTo_mVolts, and ADC_1_CountsTo_Volts.
1246:Generated_Source\PSoC4/ADC_1.c **** *
1247:Generated_Source\PSoC4/ADC_1.c **** * Offset is applied to counts before unit scaling and gain.  All CountsTo_[mV, uV, V]olts()
1248:Generated_Source\PSoC4/ADC_1.c **** * functions use the following equation:
1249:Generated_Source\PSoC4/ADC_1.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1250:Generated_Source\PSoC4/ADC_1.c **** * See CountsTo_Volts() for more about this formula.
1251:Generated_Source\PSoC4/ADC_1.c **** *
1252:Generated_Source\PSoC4/ADC_1.c **** * To set channel 0's offset based on known V_offset_mV, use:
1253:Generated_Source\PSoC4/ADC_1.c **** *     ADC_1_SetOffset(0uL, -1 * V_offset_mV * (1uL << (Resolution - 1)) / V_ref_mV);
1254:Generated_Source\PSoC4/ADC_1.c **** *
1255:Generated_Source\PSoC4/ADC_1.c **** * \param chan ADC_1 channel number.
1256:Generated_Source\PSoC4/ADC_1.c **** *
1257:Generated_Source\PSoC4/ADC_1.c **** * \param offset This value is a measured value when the inputs are shorted or
1258:Generated_Source\PSoC4/ADC_1.c **** * connected to the same input voltage.
1259:Generated_Source\PSoC4/ADC_1.c **** *
1260:Generated_Source\PSoC4/ADC_1.c **** * \return None
1261:Generated_Source\PSoC4/ADC_1.c **** *
1262:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1263:Generated_Source\PSoC4/ADC_1.c **** *
1264:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1265:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetOffset(uint32 chan, int16 offset)
1266:Generated_Source\PSoC4/ADC_1.c **** {
 891              		.loc 1 1266 0
 892              		.cfi_startproc
 893              		@ args = 0, pretend = 0, frame = 0
 894              		@ frame_needed = 0, uses_anonymous_args = 0
 895              	.LVL67:
 896 0000 70B5     		push	{r4, r5, r6, lr}
 897              		.cfi_def_cfa_offset 16
 898              		.cfi_offset 4, -16
 899              		.cfi_offset 5, -12
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 40


 900              		.cfi_offset 6, -8
 901              		.cfi_offset 14, -4
 902 0002 0500     		movs	r5, r0
 903 0004 0C00     		movs	r4, r1
1267:Generated_Source\PSoC4/ADC_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1268:Generated_Source\PSoC4/ADC_1.c ****     CYASSERT(chan < ADC_1_allConfigs[ADC_1_currentConfig].numChannels);
 904              		.loc 1 1268 0
 905 0006 0C4B     		ldr	r3, .L75
 906 0008 1A68     		ldr	r2, [r3]
 907 000a D300     		lsls	r3, r2, #3
 908 000c 9A1A     		subs	r2, r3, r2
 909 000e D300     		lsls	r3, r2, #3
 910 0010 0A4A     		ldr	r2, .L75+4
 911 0012 D318     		adds	r3, r2, r3
 912 0014 5B68     		ldr	r3, [r3, #4]
 913 0016 8342     		cmp	r3, r0
 914 0018 02D8     		bhi	.L74
 915              		.loc 1 1268 0 is_stmt 0 discriminator 1
 916 001a 0020     		movs	r0, #0
 917              	.LVL68:
 918 001c FFF7FEFF 		bl	CyHalt
 919              	.LVL69:
 920              	.L74:
1269:Generated_Source\PSoC4/ADC_1.c **** 
1270:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_offset[ADC_1_allConfigs[ADC_1_currentConfig].channelBase + chan] = offset;
 921              		.loc 1 1270 0 is_stmt 1
 922 0020 054B     		ldr	r3, .L75
 923 0022 1A68     		ldr	r2, [r3]
 924 0024 D300     		lsls	r3, r2, #3
 925 0026 9B1A     		subs	r3, r3, r2
 926 0028 DA00     		lsls	r2, r3, #3
 927 002a 044B     		ldr	r3, .L75+4
 928 002c D058     		ldr	r0, [r2, r3]
 929 002e 2818     		adds	r0, r5, r0
 930 0030 4000     		lsls	r0, r0, #1
 931 0032 034B     		ldr	r3, .L75+8
 932 0034 C452     		strh	r4, [r0, r3]
1271:Generated_Source\PSoC4/ADC_1.c ****     return;
1272:Generated_Source\PSoC4/ADC_1.c **** }
 933              		.loc 1 1272 0
 934              		@ sp needed
 935              	.LVL70:
 936 0036 70BD     		pop	{r4, r5, r6, pc}
 937              	.L76:
 938              		.align	2
 939              	.L75:
 940 0038 00000000 		.word	.LANCHOR0
 941 003c 00000000 		.word	ADC_1_allConfigs
 942 0040 00000000 		.word	ADC_1_offset
 943              		.cfi_endproc
 944              	.LFE20:
 945              		.size	ADC_1_SetOffset, .-ADC_1_SetOffset
 946              		.section	.text.ADC_1_SetGain,"ax",%progbits
 947              		.align	2
 948              		.global	ADC_1_SetGain
 949              		.code	16
 950              		.thumb_func
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 41


 951              		.type	ADC_1_SetGain, %function
 952              	ADC_1_SetGain:
 953              	.LFB21:
1273:Generated_Source\PSoC4/ADC_1.c **** 
1274:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1275:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetGain
1276:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1277:Generated_Source\PSoC4/ADC_1.c **** *
1278:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets the ADC_1 gain in counts per 10 volt for the voltage
1279:Generated_Source\PSoC4/ADC_1.c **** * conversion functions. This value is set by default by the reference and
1280:Generated_Source\PSoC4/ADC_1.c **** * input range settings. Gain is applied after offset and unit scaling.  All
1281:Generated_Source\PSoC4/ADC_1.c **** * CountsTo_[mV, uV, V]olts() functions use the following equation:
1282:Generated_Source\PSoC4/ADC_1.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1283:Generated_Source\PSoC4/ADC_1.c **** * See CountsTo_Volts() for more about this formula.
1284:Generated_Source\PSoC4/ADC_1.c **** *
1285:Generated_Source\PSoC4/ADC_1.c **** * To set channel 0's gain based on known V_ref_mV, use:
1286:Generated_Source\PSoC4/ADC_1.c **** *     ADC_1_SetGain(0uL, 10000 * (1uL << (Resolution - 1)) / V_ref_mV);
1287:Generated_Source\PSoC4/ADC_1.c **** *
1288:Generated_Source\PSoC4/ADC_1.c **** * \param chan ADC_1 channel number.
1289:Generated_Source\PSoC4/ADC_1.c **** *
1290:Generated_Source\PSoC4/ADC_1.c **** * \param adcGain ADC_1 gain in counts per 10 volt.
1291:Generated_Source\PSoC4/ADC_1.c **** *
1292:Generated_Source\PSoC4/ADC_1.c **** * \return None
1293:Generated_Source\PSoC4/ADC_1.c **** *
1294:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1295:Generated_Source\PSoC4/ADC_1.c **** *
1296:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1297:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetGain(uint32 chan, int32 adcGain)
1298:Generated_Source\PSoC4/ADC_1.c **** {
 954              		.loc 1 1298 0
 955              		.cfi_startproc
 956              		@ args = 0, pretend = 0, frame = 0
 957              		@ frame_needed = 0, uses_anonymous_args = 0
 958              	.LVL71:
 959 0000 70B5     		push	{r4, r5, r6, lr}
 960              		.cfi_def_cfa_offset 16
 961              		.cfi_offset 4, -16
 962              		.cfi_offset 5, -12
 963              		.cfi_offset 6, -8
 964              		.cfi_offset 14, -4
 965 0002 0500     		movs	r5, r0
 966 0004 0C00     		movs	r4, r1
1299:Generated_Source\PSoC4/ADC_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1300:Generated_Source\PSoC4/ADC_1.c ****     CYASSERT(chan < ADC_1_allConfigs[ADC_1_currentConfig].numChannels);
 967              		.loc 1 1300 0
 968 0006 0C4B     		ldr	r3, .L79
 969 0008 1A68     		ldr	r2, [r3]
 970 000a D300     		lsls	r3, r2, #3
 971 000c 9A1A     		subs	r2, r3, r2
 972 000e D300     		lsls	r3, r2, #3
 973 0010 0A4A     		ldr	r2, .L79+4
 974 0012 D318     		adds	r3, r2, r3
 975 0014 5B68     		ldr	r3, [r3, #4]
 976 0016 8342     		cmp	r3, r0
 977 0018 02D8     		bhi	.L78
 978              		.loc 1 1300 0 is_stmt 0 discriminator 1
 979 001a 0020     		movs	r0, #0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 42


 980              	.LVL72:
 981 001c FFF7FEFF 		bl	CyHalt
 982              	.LVL73:
 983              	.L78:
1301:Generated_Source\PSoC4/ADC_1.c **** 
1302:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_countsPer10Volt[ADC_1_allConfigs[ADC_1_currentConfig].channelBase + chan]
 984              		.loc 1 1302 0 is_stmt 1
 985 0020 054B     		ldr	r3, .L79
 986 0022 1A68     		ldr	r2, [r3]
 987 0024 D300     		lsls	r3, r2, #3
 988 0026 9B1A     		subs	r3, r3, r2
 989 0028 DA00     		lsls	r2, r3, #3
 990 002a 044B     		ldr	r3, .L79+4
 991 002c D058     		ldr	r0, [r2, r3]
 992 002e 2818     		adds	r0, r5, r0
1303:Generated_Source\PSoC4/ADC_1.c ****     = adcGain;
 993              		.loc 1 1303 0
 994 0030 8000     		lsls	r0, r0, #2
 995 0032 034B     		ldr	r3, .L79+8
 996 0034 C450     		str	r4, [r0, r3]
1304:Generated_Source\PSoC4/ADC_1.c ****     return;
1305:Generated_Source\PSoC4/ADC_1.c **** }
 997              		.loc 1 1305 0
 998              		@ sp needed
 999              	.LVL74:
 1000              	.LVL75:
 1001 0036 70BD     		pop	{r4, r5, r6, pc}
 1002              	.L80:
 1003              		.align	2
 1004              	.L79:
 1005 0038 00000000 		.word	.LANCHOR0
 1006 003c 00000000 		.word	ADC_1_allConfigs
 1007 0040 00000000 		.word	ADC_1_countsPer10Volt
 1008              		.cfi_endproc
 1009              	.LFE21:
 1010              		.size	ADC_1_SetGain, .-ADC_1_SetGain
 1011              		.global	__aeabi_uidiv
 1012              		.global	__aeabi_idiv
 1013              		.section	.text.ADC_1_RawCounts2Counts,"ax",%progbits
 1014              		.align	2
 1015              		.global	ADC_1_RawCounts2Counts
 1016              		.code	16
 1017              		.thumb_func
 1018              		.type	ADC_1_RawCounts2Counts, %function
 1019              	ADC_1_RawCounts2Counts:
 1020              	.LFB22:
1306:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1307:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_RawCounts2Counts
1308:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1309:Generated_Source\PSoC4/ADC_1.c **** *
1310:Generated_Source\PSoC4/ADC_1.c **** * \brief Converts the output of the SAR to an idealized count value.
1311:Generated_Source\PSoC4/ADC_1.c **** *
1312:Generated_Source\PSoC4/ADC_1.c **** * Divides by averaging amount, if needed, and subtracts offset.
1313:Generated_Source\PSoC4/ADC_1.c **** *
1314:Generated_Source\PSoC4/ADC_1.c **** * \param chan ADC_1 channel number.
1315:Generated_Source\PSoC4/ADC_1.c **** *
1316:Generated_Source\PSoC4/ADC_1.c **** * \param adcCounts Result from the ADC_1 conversion.
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 43


1317:Generated_Source\PSoC4/ADC_1.c **** *
1318:Generated_Source\PSoC4/ADC_1.c **** * \return Averaged and offset counts.
1319:Generated_Source\PSoC4/ADC_1.c **** *
1320:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1321:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1322:Generated_Source\PSoC4/ADC_1.c **** int16 ADC_1_RawCounts2Counts(uint32 chan, int16 adcCounts)
1323:Generated_Source\PSoC4/ADC_1.c **** {
 1021              		.loc 1 1323 0
 1022              		.cfi_startproc
 1023              		@ args = 0, pretend = 0, frame = 0
 1024              		@ frame_needed = 0, uses_anonymous_args = 0
 1025              	.LVL76:
 1026 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1027              		.cfi_def_cfa_offset 24
 1028              		.cfi_offset 3, -24
 1029              		.cfi_offset 4, -20
 1030              		.cfi_offset 5, -16
 1031              		.cfi_offset 6, -12
 1032              		.cfi_offset 7, -8
 1033              		.cfi_offset 14, -4
 1034 0002 0600     		movs	r6, r0
 1035 0004 0C00     		movs	r4, r1
1324:Generated_Source\PSoC4/ADC_1.c ****     uint32 temp;
1325:Generated_Source\PSoC4/ADC_1.c ****     uint32 averageAdcSamplesDiv;
1326:Generated_Source\PSoC4/ADC_1.c ****     uint32 rawChannel;
1327:Generated_Source\PSoC4/ADC_1.c ****     rawChannel = ADC_1_allConfigs[ADC_1_currentConfig].channelBase + chan;
 1036              		.loc 1 1327 0
 1037 0006 1D4B     		ldr	r3, .L87
 1038 0008 1968     		ldr	r1, [r3]
 1039              	.LVL77:
 1040 000a 1D48     		ldr	r0, .L87+4
 1041              	.LVL78:
 1042 000c CB00     		lsls	r3, r1, #3
 1043 000e 5D1A     		subs	r5, r3, r1
 1044 0010 EA00     		lsls	r2, r5, #3
 1045 0012 1558     		ldr	r5, [r2, r0]
 1046 0014 AD19     		adds	r5, r5, r6
 1047              	.LVL79:
1328:Generated_Source\PSoC4/ADC_1.c **** 
1329:Generated_Source\PSoC4/ADC_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1330:Generated_Source\PSoC4/ADC_1.c ****     CYASSERT(chan < ADC_1_allConfigs[ADC_1_currentConfig].numChannels);
 1048              		.loc 1 1330 0
 1049 0016 8218     		adds	r2, r0, r2
 1050 0018 5368     		ldr	r3, [r2, #4]
 1051 001a 9E42     		cmp	r6, r3
 1052 001c 02D3     		bcc	.L82
 1053              		.loc 1 1330 0 is_stmt 0 discriminator 1
 1054 001e 0020     		movs	r0, #0
 1055 0020 FFF7FEFF 		bl	CyHalt
 1056              	.LVL80:
 1057              	.L82:
1331:Generated_Source\PSoC4/ADC_1.c **** 
1332:Generated_Source\PSoC4/ADC_1.c ****     /* Divide the adcCount when accumulate averaging mode selected */
1333:Generated_Source\PSoC4/ADC_1.c ****     /* If Average mode != fixed */
1334:Generated_Source\PSoC4/ADC_1.c ****     if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
 1058              		.loc 1 1334 0 is_stmt 1
 1059 0024 154B     		ldr	r3, .L87
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 44


 1060 0026 1A68     		ldr	r2, [r3]
 1061 0028 D300     		lsls	r3, r2, #3
 1062 002a 9A1A     		subs	r2, r3, r2
 1063 002c D300     		lsls	r3, r2, #3
 1064 002e 144A     		ldr	r2, .L87+4
 1065 0030 D318     		adds	r3, r2, r3
 1066 0032 DA68     		ldr	r2, [r3, #12]
 1067 0034 1306     		lsls	r3, r2, #24
 1068 0036 1AD4     		bmi	.L83
1335:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_SAR_SAMPLE_CTRL_AVG_SHIFT_MSK)
1336:Generated_Source\PSoC4/ADC_1.c ****         != ADC_1_SAR_SAMPLE_CTRL_AVG_SHIFT_MSK)
1337:Generated_Source\PSoC4/ADC_1.c ****     {
1338:Generated_Source\PSoC4/ADC_1.c ****         /* If Channel uses averaging */
1339:Generated_Source\PSoC4/ADC_1.c ****         if((ADC_1_channelsConfig[rawChannel] & ADC_1_SAR_CHAN_CONFIG_AVG_EN_MSK) != 0u)
1340:Generated_Source\PSoC4/ADC_1.c ****         {
1341:Generated_Source\PSoC4/ADC_1.c ****             /* Divide by 2^(AVG_CNT + 1) */
1342:Generated_Source\PSoC4/ADC_1.c ****             averageAdcSamplesDiv = ((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
1343:Generated_Source\PSoC4/ADC_1.c ****                 & ADC_1_SAR_SAMPLE_CTRL_AVG_CNT_MSK)
1344:Generated_Source\PSoC4/ADC_1.c ****                 >> ADC_1_SAR_SAMPLE_CTRL_AVG_CNT_SHFT);
 1069              		.loc 1 1344 0
 1070 0038 1309     		lsrs	r3, r2, #4
1342:Generated_Source\PSoC4/ADC_1.c ****                 & ADC_1_SAR_SAMPLE_CTRL_AVG_CNT_MSK)
 1071              		.loc 1 1342 0
 1072 003a 0721     		movs	r1, #7
 1073 003c 0B40     		ands	r3, r1
 1074              	.LVL81:
1345:Generated_Source\PSoC4/ADC_1.c ****             averageAdcSamplesDiv = (1uL << (averageAdcSamplesDiv + 1uL));
 1075              		.loc 1 1345 0
 1076 003e 0133     		adds	r3, r3, #1
 1077              	.LVL82:
 1078 0040 0127     		movs	r7, #1
 1079 0042 9F40     		lsls	r7, r7, r3
 1080              	.LVL83:
1346:Generated_Source\PSoC4/ADC_1.c ****                         /* When it's "Sequential, Sum", divider limit is 16 */
1347:Generated_Source\PSoC4/ADC_1.c ****             /* If Mode is ACCUNDUMP */
1348:Generated_Source\PSoC4/ADC_1.c ****             if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
 1081              		.loc 1 1348 0
 1082 0044 D305     		lsls	r3, r2, #23
 1083 0046 02D4     		bmi	.L84
1349:Generated_Source\PSoC4/ADC_1.c ****                 & ADC_1_SAR_SAMPLE_CTRL_AVG_MODE_MSK)
1350:Generated_Source\PSoC4/ADC_1.c ****                 != ADC_1_SAR_SAMPLE_CTRL_AVG_MODE_MSK)
1351:Generated_Source\PSoC4/ADC_1.c ****             {
1352:Generated_Source\PSoC4/ADC_1.c ****                 if (averageAdcSamplesDiv > 16uL)
 1084              		.loc 1 1352 0
 1085 0048 102F     		cmp	r7, #16
 1086 004a 00D9     		bls	.L84
1353:Generated_Source\PSoC4/ADC_1.c ****                 {
1354:Generated_Source\PSoC4/ADC_1.c ****                     averageAdcSamplesDiv = 16uL;
 1087              		.loc 1 1354 0
 1088 004c 1027     		movs	r7, #16
 1089              	.LVL84:
 1090              	.L84:
1355:Generated_Source\PSoC4/ADC_1.c ****                 }
1356:Generated_Source\PSoC4/ADC_1.c ****             }
1357:Generated_Source\PSoC4/ADC_1.c ****             /* If unsigned format, prevent sign extension */
1358:Generated_Source\PSoC4/ADC_1.c ****             if(0 == ADC_1_IsChannelSigned(chan))
 1091              		.loc 1 1358 0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 45


 1092 004e 3000     		movs	r0, r6
 1093 0050 FFF7FEFF 		bl	ADC_1_IsChannelSigned
 1094              	.LVL85:
 1095 0054 0028     		cmp	r0, #0
 1096 0056 05D1     		bne	.L85
1359:Generated_Source\PSoC4/ADC_1.c ****             {
1360:Generated_Source\PSoC4/ADC_1.c ****                 temp = ((uint16) adcCounts / averageAdcSamplesDiv);
 1097              		.loc 1 1360 0
 1098 0058 A0B2     		uxth	r0, r4
 1099 005a 3900     		movs	r1, r7
 1100 005c FFF7FEFF 		bl	__aeabi_uidiv
 1101              	.LVL86:
1361:Generated_Source\PSoC4/ADC_1.c ****                 adcCounts = (int16) temp;
 1102              		.loc 1 1361 0
 1103 0060 04B2     		sxth	r4, r0
 1104              	.LVL87:
 1105 0062 04E0     		b	.L83
 1106              	.LVL88:
 1107              	.L85:
1362:Generated_Source\PSoC4/ADC_1.c ****             }
1363:Generated_Source\PSoC4/ADC_1.c ****             else
1364:Generated_Source\PSoC4/ADC_1.c ****             {
1365:Generated_Source\PSoC4/ADC_1.c ****                 adcCounts /= (int16) averageAdcSamplesDiv;
 1108              		.loc 1 1365 0
 1109 0064 39B2     		sxth	r1, r7
 1110 0066 2000     		movs	r0, r4
 1111 0068 FFF7FEFF 		bl	__aeabi_idiv
 1112              	.LVL89:
 1113 006c 04B2     		sxth	r4, r0
 1114              	.LVL90:
 1115              	.L83:
1366:Generated_Source\PSoC4/ADC_1.c ****             }
1367:Generated_Source\PSoC4/ADC_1.c ****         }
1368:Generated_Source\PSoC4/ADC_1.c ****     }
1369:Generated_Source\PSoC4/ADC_1.c ****     /* Subtract ADC offset */
1370:Generated_Source\PSoC4/ADC_1.c ****     adcCounts -= ADC_1_offset[rawChannel];
 1116              		.loc 1 1370 0
 1117 006e 6D00     		lsls	r5, r5, #1
 1118              	.LVL91:
 1119 0070 044B     		ldr	r3, .L87+8
 1120 0072 E85A     		ldrh	r0, [r5, r3]
 1121 0074 00B2     		sxth	r0, r0
 1122 0076 201A     		subs	r0, r4, r0
 1123 0078 00B2     		sxth	r0, r0
 1124              	.LVL92:
1371:Generated_Source\PSoC4/ADC_1.c ****     return adcCounts;
1372:Generated_Source\PSoC4/ADC_1.c **** }
 1125              		.loc 1 1372 0
 1126              		@ sp needed
 1127              	.LVL93:
 1128 007a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1129              	.L88:
 1130              		.align	2
 1131              	.L87:
 1132 007c 00000000 		.word	.LANCHOR0
 1133 0080 00000000 		.word	ADC_1_allConfigs
 1134 0084 00000000 		.word	ADC_1_offset
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 46


 1135              		.cfi_endproc
 1136              	.LFE22:
 1137              		.size	ADC_1_RawCounts2Counts, .-ADC_1_RawCounts2Counts
 1138              		.global	__aeabi_i2f
 1139              		.global	__aeabi_fmul
 1140              		.global	__aeabi_fdiv
 1141              		.section	.text.ADC_1_CountsTo_Volts,"ax",%progbits
 1142              		.align	2
 1143              		.global	ADC_1_CountsTo_Volts
 1144              		.code	16
 1145              		.thumb_func
 1146              		.type	ADC_1_CountsTo_Volts, %function
 1147              	ADC_1_CountsTo_Volts:
 1148              	.LFB23:
1373:Generated_Source\PSoC4/ADC_1.c **** 
1374:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1375:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_CountsTo_Volts
1376:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1377:Generated_Source\PSoC4/ADC_1.c **** *
1378:Generated_Source\PSoC4/ADC_1.c **** * \brief Converts the ADC output to Volts as a float32. For example, if the ADC
1379:Generated_Source\PSoC4/ADC_1.c **** * measured 0.534 volts, the return value would be 0.534.
1380:Generated_Source\PSoC4/ADC_1.c **** * The calculation of voltage depends on the contents of ADC_1_offset[],
1381:Generated_Source\PSoC4/ADC_1.c **** * ADC_1_countsPer10Volt[], and other parameters.  The equation used is:
1382:Generated_Source\PSoC4/ADC_1.c **** *
1383:Generated_Source\PSoC4/ADC_1.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1384:Generated_Source\PSoC4/ADC_1.c **** * -Counts = Raw Counts from SAR register
1385:Generated_Source\PSoC4/ADC_1.c **** * -AvgDivider = divider based on averaging mode
1386:Generated_Source\PSoC4/ADC_1.c **** *     -Sequential, Sum: AvgDivider = number averaged
1387:Generated_Source\PSoC4/ADC_1.c **** *         Note: The divider should be a maximum of 16. If using more averages,
1388:Generated_Source\PSoC4/ADC_1.c **** *         pre-scale Counts by (number averaged / 16)
1389:Generated_Source\PSoC4/ADC_1.c **** *     -Interleaved, Sum: AvgDivider = number averaged
1390:Generated_Source\PSoC4/ADC_1.c **** *     -Sequential, Fixed: AvgDivider = 1
1391:Generated_Source\PSoC4/ADC_1.c **** * -Offset = ADC_1_offset[]
1392:Generated_Source\PSoC4/ADC_1.c **** * -TEN_VOLT = 10V constant and unit scalar.
1393:Generated_Source\PSoC4/ADC_1.c **** * -Gain = ADC_1_countsPer10Volt[]
1394:Generated_Source\PSoC4/ADC_1.c **** *
1395:Generated_Source\PSoC4/ADC_1.c **** * When the Vref is based on Vdda, the value used for Vdda is set for the project
1396:Generated_Source\PSoC4/ADC_1.c **** * in the System tab of the DWR.
1397:Generated_Source\PSoC4/ADC_1.c **** *
1398:Generated_Source\PSoC4/ADC_1.c **** * \param chan ADC_1 channel number.
1399:Generated_Source\PSoC4/ADC_1.c **** *
1400:Generated_Source\PSoC4/ADC_1.c **** * \param adcCounts Result from the ADC_1 conversion.
1401:Generated_Source\PSoC4/ADC_1.c **** *
1402:Generated_Source\PSoC4/ADC_1.c **** * \return Result in Volts.
1403:Generated_Source\PSoC4/ADC_1.c **** *
1404:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1405:Generated_Source\PSoC4/ADC_1.c **** *
1406:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1407:Generated_Source\PSoC4/ADC_1.c **** float32 ADC_1_CountsTo_Volts(uint32 chan, int16 adcCounts)
1408:Generated_Source\PSoC4/ADC_1.c **** {
 1149              		.loc 1 1408 0
 1150              		.cfi_startproc
 1151              		@ args = 0, pretend = 0, frame = 0
 1152              		@ frame_needed = 0, uses_anonymous_args = 0
 1153              	.LVL94:
 1154 0000 70B5     		push	{r4, r5, r6, lr}
 1155              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 47


 1156              		.cfi_offset 4, -16
 1157              		.cfi_offset 5, -12
 1158              		.cfi_offset 6, -8
 1159              		.cfi_offset 14, -4
 1160              	.LVL95:
1409:Generated_Source\PSoC4/ADC_1.c ****     float32 result_Volts = 0.0f;
1410:Generated_Source\PSoC4/ADC_1.c ****     uint32 rawChannel;
1411:Generated_Source\PSoC4/ADC_1.c ****     rawChannel = ADC_1_allConfigs[ADC_1_currentConfig].channelBase + chan;
 1161              		.loc 1 1411 0
 1162 0002 104B     		ldr	r3, .L92
 1163 0004 1D68     		ldr	r5, [r3]
 1164 0006 104E     		ldr	r6, .L92+4
 1165 0008 EB00     		lsls	r3, r5, #3
 1166 000a 5C1B     		subs	r4, r3, r5
 1167 000c E200     		lsls	r2, r4, #3
 1168 000e 9459     		ldr	r4, [r2, r6]
 1169 0010 2418     		adds	r4, r4, r0
 1170              	.LVL96:
1412:Generated_Source\PSoC4/ADC_1.c **** 
1413:Generated_Source\PSoC4/ADC_1.c ****     if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
 1171              		.loc 1 1413 0
 1172 0012 B218     		adds	r2, r6, r2
 1173 0014 D368     		ldr	r3, [r2, #12]
 1174 0016 9B07     		lsls	r3, r3, #30
 1175 0018 11D4     		bmi	.L91
1414:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1415:Generated_Source\PSoC4/ADC_1.c ****         != ADC_1_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1416:Generated_Source\PSoC4/ADC_1.c ****     {
1417:Generated_Source\PSoC4/ADC_1.c ****         adcCounts = ADC_1_RawCounts2Counts(chan, adcCounts);
 1176              		.loc 1 1417 0
 1177 001a FFF7FEFF 		bl	ADC_1_RawCounts2Counts
 1178              	.LVL97:
1418:Generated_Source\PSoC4/ADC_1.c **** 
1419:Generated_Source\PSoC4/ADC_1.c ****         result_Volts = ((float32)adcCounts * ADC_1_10V_COUNTS)
 1179              		.loc 1 1419 0
 1180 001e FFF7FEFF 		bl	__aeabi_i2f
 1181              	.LVL98:
 1182 0022 0A49     		ldr	r1, .L92+8
 1183 0024 FFF7FEFF 		bl	__aeabi_fmul
 1184              	.LVL99:
 1185 0028 051C     		adds	r5, r0, #0
1420:Generated_Source\PSoC4/ADC_1.c ****             / (float32)ADC_1_countsPer10Volt[rawChannel];
 1186              		.loc 1 1420 0
 1187 002a A400     		lsls	r4, r4, #2
 1188              	.LVL100:
 1189 002c 084B     		ldr	r3, .L92+12
 1190 002e E058     		ldr	r0, [r4, r3]
 1191 0030 FFF7FEFF 		bl	__aeabi_i2f
 1192              	.LVL101:
 1193 0034 011C     		adds	r1, r0, #0
1419:Generated_Source\PSoC4/ADC_1.c ****             / (float32)ADC_1_countsPer10Volt[rawChannel];
 1194              		.loc 1 1419 0
 1195 0036 281C     		adds	r0, r5, #0
 1196 0038 FFF7FEFF 		bl	__aeabi_fdiv
 1197              	.LVL102:
 1198 003c 00E0     		b	.L90
 1199              	.LVL103:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 48


 1200              	.L91:
1409:Generated_Source\PSoC4/ADC_1.c ****     uint32 rawChannel;
 1201              		.loc 1 1409 0
 1202 003e 0020     		movs	r0, #0
 1203              	.LVL104:
 1204              	.L90:
1421:Generated_Source\PSoC4/ADC_1.c ****     }
1422:Generated_Source\PSoC4/ADC_1.c ****     return result_Volts;
1423:Generated_Source\PSoC4/ADC_1.c **** }
 1205              		.loc 1 1423 0
 1206              		@ sp needed
 1207 0040 70BD     		pop	{r4, r5, r6, pc}
 1208              	.L93:
 1209 0042 C046     		.align	2
 1210              	.L92:
 1211 0044 00000000 		.word	.LANCHOR0
 1212 0048 00000000 		.word	ADC_1_allConfigs
 1213 004c 00002041 		.word	1092616192
 1214 0050 00000000 		.word	ADC_1_countsPer10Volt
 1215              		.cfi_endproc
 1216              	.LFE23:
 1217              		.size	ADC_1_CountsTo_Volts, .-ADC_1_CountsTo_Volts
 1218              		.section	.text.ADC_1_CountsTo_mVolts,"ax",%progbits
 1219              		.align	2
 1220              		.global	ADC_1_CountsTo_mVolts
 1221              		.code	16
 1222              		.thumb_func
 1223              		.type	ADC_1_CountsTo_mVolts, %function
 1224              	ADC_1_CountsTo_mVolts:
 1225              	.LFB24:
1424:Generated_Source\PSoC4/ADC_1.c **** 
1425:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1426:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_CountsTo_mVolts
1427:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1428:Generated_Source\PSoC4/ADC_1.c **** *
1429:Generated_Source\PSoC4/ADC_1.c **** * \brief Converts the ADC output to millivolts as an int16. For example, if the ADC
1430:Generated_Source\PSoC4/ADC_1.c **** * measured 0.534 volts, the return value would be 534.
1431:Generated_Source\PSoC4/ADC_1.c **** * The calculation of voltage depends on the contents of ADC_1_offset[],
1432:Generated_Source\PSoC4/ADC_1.c **** * ADC_1_countsPer10Volt[], and other parameters.  The equation used is:
1433:Generated_Source\PSoC4/ADC_1.c **** *
1434:Generated_Source\PSoC4/ADC_1.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1435:Generated_Source\PSoC4/ADC_1.c **** * -Counts = Raw Counts from SAR register
1436:Generated_Source\PSoC4/ADC_1.c **** * -AvgDivider = divider based on averaging mode
1437:Generated_Source\PSoC4/ADC_1.c **** *     -Sequential, Sum: AvgDivider = number averaged
1438:Generated_Source\PSoC4/ADC_1.c **** *         Note: The divider should be a maximum of 16. If using more averages,
1439:Generated_Source\PSoC4/ADC_1.c **** *         pre-scale Counts by (number averaged / 16)
1440:Generated_Source\PSoC4/ADC_1.c **** *     -Interleaved, Sum: AvgDivider = number averaged
1441:Generated_Source\PSoC4/ADC_1.c **** *     -Sequential, Fixed: AvgDivider = 1
1442:Generated_Source\PSoC4/ADC_1.c **** * -Offset = ADC_1_offset[]
1443:Generated_Source\PSoC4/ADC_1.c **** * -TEN_VOLT = 10V constant and unit scalar.
1444:Generated_Source\PSoC4/ADC_1.c **** * -Gain = ADC_1_countsPer10Volt[]
1445:Generated_Source\PSoC4/ADC_1.c **** *
1446:Generated_Source\PSoC4/ADC_1.c **** * When the Vref is based on Vdda, the value used for Vdda is set for the project
1447:Generated_Source\PSoC4/ADC_1.c **** * in the System tab of the DWR.
1448:Generated_Source\PSoC4/ADC_1.c **** *
1449:Generated_Source\PSoC4/ADC_1.c **** * \param chan ADC_1 channel number.
1450:Generated_Source\PSoC4/ADC_1.c **** *
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 49


1451:Generated_Source\PSoC4/ADC_1.c **** * \param adcCounts Result from the ADC_1 conversion.
1452:Generated_Source\PSoC4/ADC_1.c **** *
1453:Generated_Source\PSoC4/ADC_1.c **** * \return Result in mV.
1454:Generated_Source\PSoC4/ADC_1.c **** *
1455:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None.
1456:Generated_Source\PSoC4/ADC_1.c **** *
1457:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1458:Generated_Source\PSoC4/ADC_1.c **** int16 ADC_1_CountsTo_mVolts(uint32 chan, int16 adcCounts)
1459:Generated_Source\PSoC4/ADC_1.c **** {
 1226              		.loc 1 1459 0
 1227              		.cfi_startproc
 1228              		@ args = 0, pretend = 0, frame = 0
 1229              		@ frame_needed = 0, uses_anonymous_args = 0
 1230              	.LVL105:
 1231 0000 70B5     		push	{r4, r5, r6, lr}
 1232              		.cfi_def_cfa_offset 16
 1233              		.cfi_offset 4, -16
 1234              		.cfi_offset 5, -12
 1235              		.cfi_offset 6, -8
 1236              		.cfi_offset 14, -4
 1237              	.LVL106:
1460:Generated_Source\PSoC4/ADC_1.c ****     int16 result_mVolts = 0;
1461:Generated_Source\PSoC4/ADC_1.c ****     uint32 rawChannel;
1462:Generated_Source\PSoC4/ADC_1.c **** 
1463:Generated_Source\PSoC4/ADC_1.c ****     rawChannel = ADC_1_allConfigs[ADC_1_currentConfig].channelBase + chan;
 1238              		.loc 1 1463 0
 1239 0002 154B     		ldr	r3, .L99
 1240 0004 1D68     		ldr	r5, [r3]
 1241 0006 154E     		ldr	r6, .L99+4
 1242 0008 EB00     		lsls	r3, r5, #3
 1243 000a 5C1B     		subs	r4, r3, r5
 1244 000c E200     		lsls	r2, r4, #3
 1245 000e 9459     		ldr	r4, [r2, r6]
 1246 0010 2418     		adds	r4, r4, r0
 1247              	.LVL107:
1464:Generated_Source\PSoC4/ADC_1.c **** 
1465:Generated_Source\PSoC4/ADC_1.c ****     if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
 1248              		.loc 1 1465 0
 1249 0012 B218     		adds	r2, r6, r2
 1250 0014 D368     		ldr	r3, [r2, #12]
 1251 0016 9B07     		lsls	r3, r3, #30
 1252 0018 1BD4     		bmi	.L98
1466:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1467:Generated_Source\PSoC4/ADC_1.c ****         != ADC_1_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1468:Generated_Source\PSoC4/ADC_1.c ****     {
1469:Generated_Source\PSoC4/ADC_1.c ****         adcCounts = ADC_1_RawCounts2Counts(chan, adcCounts);
 1253              		.loc 1 1469 0
 1254 001a FFF7FEFF 		bl	ADC_1_RawCounts2Counts
 1255              	.LVL108:
1470:Generated_Source\PSoC4/ADC_1.c **** 
1471:Generated_Source\PSoC4/ADC_1.c ****         result_mVolts = (int16)((((int32)adcCounts * ADC_1_10MV_COUNTS) + ( (adcCounts > 0) ?
 1256              		.loc 1 1471 0
 1257 001e 1049     		ldr	r1, .L99+8
 1258 0020 4143     		muls	r1, r0
1472:Generated_Source\PSoC4/ADC_1.c ****                  (ADC_1_countsPer10Volt[rawChannel] / 2)
1473:Generated_Source\PSoC4/ADC_1.c ****                 : (-(ADC_1_countsPer10Volt[rawChannel] / 2)) ))
 1259              		.loc 1 1473 0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 50


 1260 0022 0028     		cmp	r0, #0
 1261 0024 06DD     		ble	.L96
1472:Generated_Source\PSoC4/ADC_1.c ****                  (ADC_1_countsPer10Volt[rawChannel] / 2)
 1262              		.loc 1 1472 0 discriminator 1
 1263 0026 A300     		lsls	r3, r4, #2
 1264 0028 0E4A     		ldr	r2, .L99+12
 1265 002a 9B58     		ldr	r3, [r3, r2]
 1266              		.loc 1 1473 0 discriminator 1
 1267 002c D80F     		lsrs	r0, r3, #31
 1268              	.LVL109:
 1269 002e C318     		adds	r3, r0, r3
 1270 0030 5B10     		asrs	r3, r3, #1
 1271 0032 06E0     		b	.L97
 1272              	.LVL110:
 1273              	.L96:
 1274              		.loc 1 1473 0 is_stmt 0 discriminator 2
 1275 0034 A300     		lsls	r3, r4, #2
 1276 0036 0B4A     		ldr	r2, .L99+12
 1277 0038 9A58     		ldr	r2, [r3, r2]
 1278 003a D30F     		lsrs	r3, r2, #31
 1279 003c 9A18     		adds	r2, r3, r2
 1280 003e 5210     		asrs	r2, r2, #1
 1281 0040 5342     		rsbs	r3, r2, #0
 1282              	.LVL111:
 1283              	.L97:
1471:Generated_Source\PSoC4/ADC_1.c ****                  (ADC_1_countsPer10Volt[rawChannel] / 2)
 1284              		.loc 1 1471 0 is_stmt 1
 1285 0042 5818     		adds	r0, r3, r1
1474:Generated_Source\PSoC4/ADC_1.c ****                  / ADC_1_countsPer10Volt[rawChannel]);
 1286              		.loc 1 1474 0
 1287 0044 A400     		lsls	r4, r4, #2
 1288              	.LVL112:
 1289 0046 074B     		ldr	r3, .L99+12
 1290 0048 E158     		ldr	r1, [r4, r3]
 1291 004a FFF7FEFF 		bl	__aeabi_idiv
 1292              	.LVL113:
1471:Generated_Source\PSoC4/ADC_1.c ****                  (ADC_1_countsPer10Volt[rawChannel] / 2)
 1293              		.loc 1 1471 0
 1294 004e 00B2     		sxth	r0, r0
 1295              	.LVL114:
 1296 0050 00E0     		b	.L95
 1297              	.LVL115:
 1298              	.L98:
1460:Generated_Source\PSoC4/ADC_1.c ****     uint32 rawChannel;
 1299              		.loc 1 1460 0
 1300 0052 0020     		movs	r0, #0
 1301              	.LVL116:
 1302              	.L95:
1475:Generated_Source\PSoC4/ADC_1.c ****     }
1476:Generated_Source\PSoC4/ADC_1.c ****     return result_mVolts;
1477:Generated_Source\PSoC4/ADC_1.c **** }
 1303              		.loc 1 1477 0
 1304              		@ sp needed
 1305              	.LVL117:
 1306 0054 70BD     		pop	{r4, r5, r6, pc}
 1307              	.L100:
 1308 0056 C046     		.align	2
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 51


 1309              	.L99:
 1310 0058 00000000 		.word	.LANCHOR0
 1311 005c 00000000 		.word	ADC_1_allConfigs
 1312 0060 10270000 		.word	10000
 1313 0064 00000000 		.word	ADC_1_countsPer10Volt
 1314              		.cfi_endproc
 1315              	.LFE24:
 1316              		.size	ADC_1_CountsTo_mVolts, .-ADC_1_CountsTo_mVolts
 1317              		.global	__aeabi_lmul
 1318              		.global	__aeabi_ldivmod
 1319              		.section	.text.ADC_1_CountsTo_uVolts,"ax",%progbits
 1320              		.align	2
 1321              		.global	ADC_1_CountsTo_uVolts
 1322              		.code	16
 1323              		.thumb_func
 1324              		.type	ADC_1_CountsTo_uVolts, %function
 1325              	ADC_1_CountsTo_uVolts:
 1326              	.LFB25:
1478:Generated_Source\PSoC4/ADC_1.c **** 
1479:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1480:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_CountsTo_uVolts
1481:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1482:Generated_Source\PSoC4/ADC_1.c **** *
1483:Generated_Source\PSoC4/ADC_1.c **** * \brief Converts the ADC output to microvolts as an int32. For example, if the ADC
1484:Generated_Source\PSoC4/ADC_1.c **** * measured 0.534 volts, the return value would be 534000.
1485:Generated_Source\PSoC4/ADC_1.c **** * The calculation of voltage depends on the contents of ADC_1_offset[],
1486:Generated_Source\PSoC4/ADC_1.c **** * ADC_1_countsPer10Volt[], and other parameters.  The equation used is:
1487:Generated_Source\PSoC4/ADC_1.c **** *
1488:Generated_Source\PSoC4/ADC_1.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1489:Generated_Source\PSoC4/ADC_1.c **** * -Counts = Raw Counts from SAR register
1490:Generated_Source\PSoC4/ADC_1.c **** * -AvgDivider = divider based on averaging mode
1491:Generated_Source\PSoC4/ADC_1.c **** *     -Sequential, Sum: AvgDivider = number averaged
1492:Generated_Source\PSoC4/ADC_1.c **** *         Note: The divider should be a maximum of 16. If using more averages,
1493:Generated_Source\PSoC4/ADC_1.c **** *         pre-scale Counts by (number averaged / 16)
1494:Generated_Source\PSoC4/ADC_1.c **** *     -Interleaved, Sum: AvgDivider = number averaged
1495:Generated_Source\PSoC4/ADC_1.c **** *     -Sequential, Fixed: AvgDivider = 1
1496:Generated_Source\PSoC4/ADC_1.c **** * -Offset = ADC_1_offset[]
1497:Generated_Source\PSoC4/ADC_1.c **** * -TEN_VOLT = 10V constant and unit scalar.
1498:Generated_Source\PSoC4/ADC_1.c **** * -Gain = ADC_1_countsPer10Volt[]
1499:Generated_Source\PSoC4/ADC_1.c **** *
1500:Generated_Source\PSoC4/ADC_1.c **** * When the Vref is based on Vdda, the value used for Vdda is set for the project
1501:Generated_Source\PSoC4/ADC_1.c **** * in the System tab of the DWR.
1502:Generated_Source\PSoC4/ADC_1.c **** *
1503:Generated_Source\PSoC4/ADC_1.c **** * \param chan ADC_1 channel number.
1504:Generated_Source\PSoC4/ADC_1.c **** *
1505:Generated_Source\PSoC4/ADC_1.c **** * \param adcCounts Result from the ADC_1 conversion.
1506:Generated_Source\PSoC4/ADC_1.c **** *
1507:Generated_Source\PSoC4/ADC_1.c **** * \return Result in microvolts.
1508:Generated_Source\PSoC4/ADC_1.c **** *
1509:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1510:Generated_Source\PSoC4/ADC_1.c **** *
1511:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1512:Generated_Source\PSoC4/ADC_1.c **** int32 ADC_1_CountsTo_uVolts(uint32 chan, int16 adcCounts)
1513:Generated_Source\PSoC4/ADC_1.c **** {
 1327              		.loc 1 1513 0
 1328              		.cfi_startproc
 1329              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 52


 1330              		@ frame_needed = 0, uses_anonymous_args = 0
 1331              	.LVL118:
 1332 0000 70B5     		push	{r4, r5, r6, lr}
 1333              		.cfi_def_cfa_offset 16
 1334              		.cfi_offset 4, -16
 1335              		.cfi_offset 5, -12
 1336              		.cfi_offset 6, -8
 1337              		.cfi_offset 14, -4
 1338              	.LVL119:
1514:Generated_Source\PSoC4/ADC_1.c ****     int64 result_uVolts = 0;
1515:Generated_Source\PSoC4/ADC_1.c ****     uint32 rawChannel;
1516:Generated_Source\PSoC4/ADC_1.c ****     rawChannel = ADC_1_allConfigs[ADC_1_currentConfig].channelBase + chan;
 1339              		.loc 1 1516 0
 1340 0002 0E4B     		ldr	r3, .L104
 1341 0004 1D68     		ldr	r5, [r3]
 1342 0006 0E4E     		ldr	r6, .L104+4
 1343 0008 EB00     		lsls	r3, r5, #3
 1344 000a 5C1B     		subs	r4, r3, r5
 1345 000c E200     		lsls	r2, r4, #3
 1346 000e 9459     		ldr	r4, [r2, r6]
 1347 0010 2418     		adds	r4, r4, r0
 1348              	.LVL120:
1517:Generated_Source\PSoC4/ADC_1.c **** 
1518:Generated_Source\PSoC4/ADC_1.c ****     if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
 1349              		.loc 1 1518 0
 1350 0012 B218     		adds	r2, r6, r2
 1351 0014 D368     		ldr	r3, [r2, #12]
 1352 0016 9B07     		lsls	r3, r3, #30
 1353 0018 0DD4     		bmi	.L103
1519:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1520:Generated_Source\PSoC4/ADC_1.c ****         != ADC_1_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1521:Generated_Source\PSoC4/ADC_1.c ****     {
1522:Generated_Source\PSoC4/ADC_1.c ****         adcCounts = ADC_1_RawCounts2Counts(chan, adcCounts);
 1354              		.loc 1 1522 0
 1355 001a FFF7FEFF 		bl	ADC_1_RawCounts2Counts
 1356              	.LVL121:
1523:Generated_Source\PSoC4/ADC_1.c **** 
1524:Generated_Source\PSoC4/ADC_1.c ****         result_uVolts = ((int64)adcCounts * ADC_1_10UV_COUNTS)
 1357              		.loc 1 1524 0
 1358 001e C117     		asrs	r1, r0, #31
 1359 0020 084A     		ldr	r2, .L104+8
 1360 0022 0023     		movs	r3, #0
 1361 0024 FFF7FEFF 		bl	__aeabi_lmul
 1362              	.LVL122:
1525:Generated_Source\PSoC4/ADC_1.c ****             / ADC_1_countsPer10Volt[rawChannel];
 1363              		.loc 1 1525 0
 1364 0028 A400     		lsls	r4, r4, #2
 1365              	.LVL123:
 1366 002a 074B     		ldr	r3, .L104+12
 1367 002c E258     		ldr	r2, [r4, r3]
 1368 002e D317     		asrs	r3, r2, #31
1524:Generated_Source\PSoC4/ADC_1.c ****             / ADC_1_countsPer10Volt[rawChannel];
 1369              		.loc 1 1524 0
 1370 0030 FFF7FEFF 		bl	__aeabi_ldivmod
 1371              	.LVL124:
 1372 0034 00E0     		b	.L102
 1373              	.LVL125:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 53


 1374              	.L103:
1514:Generated_Source\PSoC4/ADC_1.c ****     uint32 rawChannel;
 1375              		.loc 1 1514 0
 1376 0036 0020     		movs	r0, #0
 1377              	.LVL126:
 1378              	.L102:
1526:Generated_Source\PSoC4/ADC_1.c ****     }
1527:Generated_Source\PSoC4/ADC_1.c ****     return ( (int32)result_uVolts );
1528:Generated_Source\PSoC4/ADC_1.c **** }
 1379              		.loc 1 1528 0
 1380              		@ sp needed
 1381              	.LVL127:
 1382 0038 70BD     		pop	{r4, r5, r6, pc}
 1383              	.L105:
 1384 003a C046     		.align	2
 1385              	.L104:
 1386 003c 00000000 		.word	.LANCHOR0
 1387 0040 00000000 		.word	ADC_1_allConfigs
 1388 0044 80969800 		.word	10000000
 1389 0048 00000000 		.word	ADC_1_countsPer10Volt
 1390              		.cfi_endproc
 1391              	.LFE25:
 1392              		.size	ADC_1_CountsTo_uVolts, .-ADC_1_CountsTo_uVolts
 1393              		.section	.text.ADC_1_Init,"ax",%progbits
 1394              		.align	2
 1395              		.global	ADC_1_Init
 1396              		.code	16
 1397              		.thumb_func
 1398              		.type	ADC_1_Init, %function
 1399              	ADC_1_Init:
 1400              	.LFB26:
1529:Generated_Source\PSoC4/ADC_1.c **** 
1530:Generated_Source\PSoC4/ADC_1.c **** #if(0u != ADC_1_ANY_CONFIG_USES_FILTER)
1531:Generated_Source\PSoC4/ADC_1.c **** 
1532:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1533:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_TrimFilterVos
1534:Generated_Source\PSoC4/ADC_1.c ****     ****************************************************************************//**
1535:Generated_Source\PSoC4/ADC_1.c ****     *
1536:Generated_Source\PSoC4/ADC_1.c ****     * \brief Run an algorithm to reduce voltage offset using the UAB's opamp and
1537:Generated_Source\PSoC4/ADC_1.c ****     * agnd buffer trim.
1538:Generated_Source\PSoC4/ADC_1.c ****     *
1539:Generated_Source\PSoC4/ADC_1.c ****     * During trimming, the filter inputs are disconnected from the UAB block,
1540:Generated_Source\PSoC4/ADC_1.c ****     * the non-inverting input of both UAB opamps are connected to Agnd,
1541:Generated_Source\PSoC4/ADC_1.c ****     * and SAR is used as a comparator.
1542:Generated_Source\PSoC4/ADC_1.c ****     *
1543:Generated_Source\PSoC4/ADC_1.c ****     * Trimming is done by comparing the filter output with Agnd.
1544:Generated_Source\PSoC4/ADC_1.c ****     * The algorithm steps through the Opamp trim codes first and then the
1545:Generated_Source\PSoC4/ADC_1.c ****     * Agnd trim codes to find where the filter output crosses Agnd.
1546:Generated_Source\PSoC4/ADC_1.c ****     * For each trim code, a blocking delay is used to allow the filter output
1547:Generated_Source\PSoC4/ADC_1.c ****     * to settle before reading the comparator status. This delay is equivalent
1548:Generated_Source\PSoC4/ADC_1.c ****     * to 9 * tau, where tau is the filter time constant:
1549:Generated_Source\PSoC4/ADC_1.c ****     *
1550:Generated_Source\PSoC4/ADC_1.c ****     * tau = 1 / (2 * pi * (Fcorner or Bandwidth))
1551:Generated_Source\PSoC4/ADC_1.c ****     *
1552:Generated_Source\PSoC4/ADC_1.c ****     * The time constant is calculated using the bandwidth for Band pass and
1553:Generated_Source\PSoC4/ADC_1.c ****     * Band stop and the corner frequency for Low pass and High pass.
1554:Generated_Source\PSoC4/ADC_1.c ****     * The algorithm can check up to 40 different trim codes, but it will typically
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 54


1555:Generated_Source\PSoC4/ADC_1.c ****     * complete in much less time.
1556:Generated_Source\PSoC4/ADC_1.c ****     *
1557:Generated_Source\PSoC4/ADC_1.c ****     * Once trimming is complete, the UAB is restored to its original configuration.
1558:Generated_Source\PSoC4/ADC_1.c ****     *
1559:Generated_Source\PSoC4/ADC_1.c ****     * \Note
1560:Generated_Source\PSoC4/ADC_1.c ****     * The ADC conversions must be started and Agnd must be supplied to the
1561:Generated_Source\PSoC4/ADC_1.c ****     * component before calling this function.
1562:Generated_Source\PSoC4/ADC_1.c ****     *
1563:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1564:Generated_Source\PSoC4/ADC_1.c ****     void ADC_1_TrimFilterVos(void)
1565:Generated_Source\PSoC4/ADC_1.c ****     {
1566:Generated_Source\PSoC4/ADC_1.c ****         uint32 opampTrim = 0uL;
1567:Generated_Source\PSoC4/ADC_1.c ****         uint32 agndTrim = 0uL;
1568:Generated_Source\PSoC4/ADC_1.c ****         uint32 compStatus = 0uL;
1569:Generated_Source\PSoC4/ADC_1.c **** 
1570:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SetupComparatorTrim();
1571:Generated_Source\PSoC4/ADC_1.c **** 
1572:Generated_Source\PSoC4/ADC_1.c ****         /* Sweep from center to crossing */
1573:Generated_Source\PSoC4/ADC_1.c ****         compStatus = ADC_1_SetOpampAndAgndTrim(ADC_1_OPAMP_TRIM_POS_BASE, ADC_1_AGND_TRIM_POS_BASE)
1574:Generated_Source\PSoC4/ADC_1.c ****         if (0uL == compStatus)
1575:Generated_Source\PSoC4/ADC_1.c ****         {
1576:Generated_Source\PSoC4/ADC_1.c ****             opampTrim = ADC_1_RaiseOpampTrimToCrossing(ADC_1_OPAMP_TRIM_POS_BASE);
1577:Generated_Source\PSoC4/ADC_1.c ****             agndTrim = ADC_1_RaiseAgndTrimToCrossing(ADC_1_AGND_TRIM_POS_BASE);
1578:Generated_Source\PSoC4/ADC_1.c ****             if ((agndTrim == (ADC_1_AGND_TRIM_POS_LIMIT - 1uL))
1579:Generated_Source\PSoC4/ADC_1.c ****                 && (opampTrim != (ADC_1_OPAMP_TRIM_POS_LIMIT - 1uL)))
1580:Generated_Source\PSoC4/ADC_1.c ****             {
1581:Generated_Source\PSoC4/ADC_1.c ****                 opampTrim = ADC_1_IncOpampTrim(opampTrim);
1582:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_SetOpampAndAgndTrim(opampTrim, ADC_1_AGND_TRIM_POS_BASE);
1583:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_LowerAgndTrimToCrossing(ADC_1_AGND_TRIM_POS_BASE);
1584:Generated_Source\PSoC4/ADC_1.c ****             }
1585:Generated_Source\PSoC4/ADC_1.c ****         }
1586:Generated_Source\PSoC4/ADC_1.c ****         else
1587:Generated_Source\PSoC4/ADC_1.c ****         {
1588:Generated_Source\PSoC4/ADC_1.c ****             opampTrim = ADC_1_LowerOpampTrimToCrossing(ADC_1_OPAMP_TRIM_POS_BASE);
1589:Generated_Source\PSoC4/ADC_1.c ****             agndTrim = ADC_1_LowerAgndTrimToCrossing(ADC_1_AGND_TRIM_POS_BASE);
1590:Generated_Source\PSoC4/ADC_1.c ****             if ((agndTrim == (ADC_1_AGND_TRIM_NEG_LIMIT - 1uL))
1591:Generated_Source\PSoC4/ADC_1.c ****                 && (opampTrim != (ADC_1_OPAMP_TRIM_NEG_LIMIT - 1uL)))
1592:Generated_Source\PSoC4/ADC_1.c ****             {
1593:Generated_Source\PSoC4/ADC_1.c ****                 opampTrim = ADC_1_DecOpampTrim(opampTrim);
1594:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_SetOpampAndAgndTrim(opampTrim, ADC_1_AGND_TRIM_POS_BASE);
1595:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_RaiseAgndTrimToCrossing(ADC_1_AGND_TRIM_POS_BASE);
1596:Generated_Source\PSoC4/ADC_1.c ****             }
1597:Generated_Source\PSoC4/ADC_1.c ****         }
1598:Generated_Source\PSoC4/ADC_1.c **** 
1599:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UndoComparatorTrimSetup();
1600:Generated_Source\PSoC4/ADC_1.c ****     }
1601:Generated_Source\PSoC4/ADC_1.c **** 
1602:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1603:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_SetupComparatorTrim
1604:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1605:Generated_Source\PSoC4/ADC_1.c ****     *
1606:Generated_Source\PSoC4/ADC_1.c ****     * Make proper connections to being trimming the Agnd buffer
1607:Generated_Source\PSoC4/ADC_1.c ****     * and Opamp offset.
1608:Generated_Source\PSoC4/ADC_1.c ****     *
1609:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1610:Generated_Source\PSoC4/ADC_1.c ****     static void ADC_1_SetupComparatorTrim(void)
1611:Generated_Source\PSoC4/ADC_1.c ****     {
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 55


1612:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_filterVinMux_Select(ADC_1_FILTER_AMUX_CHANNEL);
1613:Generated_Source\PSoC4/ADC_1.c ****     }
1614:Generated_Source\PSoC4/ADC_1.c **** 
1615:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1616:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_UndoComparatorTrimSetup
1617:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1618:Generated_Source\PSoC4/ADC_1.c ****     *
1619:Generated_Source\PSoC4/ADC_1.c ****     * Undo all changes made in ADC_1_SetupComparatorTrim()
1620:Generated_Source\PSoC4/ADC_1.c ****     * to bring the Component back to normal operation.
1621:Generated_Source\PSoC4/ADC_1.c ****     *
1622:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1623:Generated_Source\PSoC4/ADC_1.c ****     static void ADC_1_UndoComparatorTrimSetup(void)
1624:Generated_Source\PSoC4/ADC_1.c ****     {
1625:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_filterVinMux_Select((uint8)ADC_1_currentConfig);
1626:Generated_Source\PSoC4/ADC_1.c ****     }
1627:Generated_Source\PSoC4/ADC_1.c **** 
1628:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1629:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_RaiseOpampTrimToCrossing
1630:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1631:Generated_Source\PSoC4/ADC_1.c ****     *
1632:Generated_Source\PSoC4/ADC_1.c ****     * Step through the Opamp trim codes in increasing order
1633:Generated_Source\PSoC4/ADC_1.c ****     * to find the point where the offset crosses Agnd.
1634:Generated_Source\PSoC4/ADC_1.c ****     *
1635:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1636:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_RaiseOpampTrimToCrossing(uint32 startTrim)
1637:Generated_Source\PSoC4/ADC_1.c ****     {
1638:Generated_Source\PSoC4/ADC_1.c ****         uint32 opampTrim;
1639:Generated_Source\PSoC4/ADC_1.c ****         uint32 lastOpampTrim;
1640:Generated_Source\PSoC4/ADC_1.c ****         uint32 compStatus;
1641:Generated_Source\PSoC4/ADC_1.c **** 
1642:Generated_Source\PSoC4/ADC_1.c ****         lastOpampTrim = startTrim;
1643:Generated_Source\PSoC4/ADC_1.c ****         for (opampTrim = startTrim;
1644:Generated_Source\PSoC4/ADC_1.c ****             opampTrim != ADC_1_OPAMP_TRIM_NEG_LIMIT;
1645:Generated_Source\PSoC4/ADC_1.c ****             opampTrim = ADC_1_IncOpampTrim(opampTrim))
1646:Generated_Source\PSoC4/ADC_1.c ****         {
1647:Generated_Source\PSoC4/ADC_1.c ****             compStatus = ADC_1_SetOpampAndAgndTrim(opampTrim, ADC_1_AGND_TRIM_POS_BASE);
1648:Generated_Source\PSoC4/ADC_1.c ****             if (0uL != compStatus)
1649:Generated_Source\PSoC4/ADC_1.c ****             {
1650:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_SetOpampTrim(lastOpampTrim);
1651:Generated_Source\PSoC4/ADC_1.c ****                 break;
1652:Generated_Source\PSoC4/ADC_1.c ****             }
1653:Generated_Source\PSoC4/ADC_1.c ****             lastOpampTrim = opampTrim;
1654:Generated_Source\PSoC4/ADC_1.c ****         }
1655:Generated_Source\PSoC4/ADC_1.c **** 
1656:Generated_Source\PSoC4/ADC_1.c ****         return lastOpampTrim;
1657:Generated_Source\PSoC4/ADC_1.c ****     }
1658:Generated_Source\PSoC4/ADC_1.c **** 
1659:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1660:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_LowerOpampTrimToCrossing
1661:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1662:Generated_Source\PSoC4/ADC_1.c ****     *
1663:Generated_Source\PSoC4/ADC_1.c ****     * Step through the Opamp trim codes in decreasing order
1664:Generated_Source\PSoC4/ADC_1.c ****     * to find the point where the offset crosses Agnd.
1665:Generated_Source\PSoC4/ADC_1.c ****     *
1666:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1667:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_LowerOpampTrimToCrossing(uint32 startTrim)
1668:Generated_Source\PSoC4/ADC_1.c ****     {
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 56


1669:Generated_Source\PSoC4/ADC_1.c ****         uint32 opampTrim;
1670:Generated_Source\PSoC4/ADC_1.c ****         uint32 lastOpampTrim;
1671:Generated_Source\PSoC4/ADC_1.c ****         uint32 compStatus;
1672:Generated_Source\PSoC4/ADC_1.c **** 
1673:Generated_Source\PSoC4/ADC_1.c ****         lastOpampTrim = startTrim;
1674:Generated_Source\PSoC4/ADC_1.c ****         for (opampTrim = startTrim;
1675:Generated_Source\PSoC4/ADC_1.c ****             opampTrim != ADC_1_OPAMP_TRIM_NEG_LIMIT;
1676:Generated_Source\PSoC4/ADC_1.c ****             opampTrim = ADC_1_DecOpampTrim(opampTrim))
1677:Generated_Source\PSoC4/ADC_1.c ****         {
1678:Generated_Source\PSoC4/ADC_1.c ****             compStatus = ADC_1_SetOpampAndAgndTrim(opampTrim, ADC_1_AGND_TRIM_POS_BASE);
1679:Generated_Source\PSoC4/ADC_1.c ****             if (0uL == compStatus)
1680:Generated_Source\PSoC4/ADC_1.c ****             {
1681:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_SetOpampTrim(lastOpampTrim);
1682:Generated_Source\PSoC4/ADC_1.c ****                 break;
1683:Generated_Source\PSoC4/ADC_1.c ****             }
1684:Generated_Source\PSoC4/ADC_1.c ****             lastOpampTrim = opampTrim;
1685:Generated_Source\PSoC4/ADC_1.c ****         }
1686:Generated_Source\PSoC4/ADC_1.c **** 
1687:Generated_Source\PSoC4/ADC_1.c ****         return lastOpampTrim;
1688:Generated_Source\PSoC4/ADC_1.c ****     }
1689:Generated_Source\PSoC4/ADC_1.c **** 
1690:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1691:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_RaiseAgndTrimToCrossing
1692:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1693:Generated_Source\PSoC4/ADC_1.c ****     *
1694:Generated_Source\PSoC4/ADC_1.c ****     * Step through the Agnd trim codes in increasing order
1695:Generated_Source\PSoC4/ADC_1.c ****     * to find the point where the offset crosses Agnd.
1696:Generated_Source\PSoC4/ADC_1.c ****     *
1697:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1698:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_RaiseAgndTrimToCrossing(uint32 startTrim)
1699:Generated_Source\PSoC4/ADC_1.c ****     {
1700:Generated_Source\PSoC4/ADC_1.c ****         uint32 agndTrim;
1701:Generated_Source\PSoC4/ADC_1.c ****         uint32 lastAgndTrim;
1702:Generated_Source\PSoC4/ADC_1.c ****         uint32 compStatus;
1703:Generated_Source\PSoC4/ADC_1.c **** 
1704:Generated_Source\PSoC4/ADC_1.c ****         lastAgndTrim = startTrim;
1705:Generated_Source\PSoC4/ADC_1.c ****         for (agndTrim = startTrim;
1706:Generated_Source\PSoC4/ADC_1.c ****             agndTrim != ADC_1_AGND_TRIM_NEG_LIMIT;
1707:Generated_Source\PSoC4/ADC_1.c ****             agndTrim = ADC_1_IncAgndTrim(agndTrim))
1708:Generated_Source\PSoC4/ADC_1.c ****         {
1709:Generated_Source\PSoC4/ADC_1.c ****             compStatus = ADC_1_SetAgndTrim(agndTrim);
1710:Generated_Source\PSoC4/ADC_1.c ****             if (0uL != compStatus)
1711:Generated_Source\PSoC4/ADC_1.c ****             {
1712:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_SetAgndTrim(lastAgndTrim);
1713:Generated_Source\PSoC4/ADC_1.c ****                 break;
1714:Generated_Source\PSoC4/ADC_1.c ****             }
1715:Generated_Source\PSoC4/ADC_1.c ****             lastAgndTrim = agndTrim;
1716:Generated_Source\PSoC4/ADC_1.c ****         }
1717:Generated_Source\PSoC4/ADC_1.c **** 
1718:Generated_Source\PSoC4/ADC_1.c ****         return lastAgndTrim;
1719:Generated_Source\PSoC4/ADC_1.c ****     }
1720:Generated_Source\PSoC4/ADC_1.c **** 
1721:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1722:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_LowerAgndTrimToCrossing
1723:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1724:Generated_Source\PSoC4/ADC_1.c ****     *
1725:Generated_Source\PSoC4/ADC_1.c ****     * Step through the Agnd trim codes in decreasing order
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 57


1726:Generated_Source\PSoC4/ADC_1.c ****     * to find the point where the offset crosses Agnd.
1727:Generated_Source\PSoC4/ADC_1.c ****     *
1728:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1729:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_LowerAgndTrimToCrossing(uint32 startTrim)
1730:Generated_Source\PSoC4/ADC_1.c ****     {
1731:Generated_Source\PSoC4/ADC_1.c ****         uint32 agndTrim = startTrim;
1732:Generated_Source\PSoC4/ADC_1.c ****         uint32 lastAgndTrim = agndTrim;
1733:Generated_Source\PSoC4/ADC_1.c ****         uint32 compStatus = 1uL;
1734:Generated_Source\PSoC4/ADC_1.c **** 
1735:Generated_Source\PSoC4/ADC_1.c ****         lastAgndTrim = startTrim;
1736:Generated_Source\PSoC4/ADC_1.c ****         for (agndTrim = startTrim;
1737:Generated_Source\PSoC4/ADC_1.c ****             agndTrim != ADC_1_AGND_TRIM_NEG_LIMIT;
1738:Generated_Source\PSoC4/ADC_1.c ****             agndTrim = ADC_1_DecAgndTrim(agndTrim))
1739:Generated_Source\PSoC4/ADC_1.c ****         {
1740:Generated_Source\PSoC4/ADC_1.c ****             compStatus = ADC_1_SetAgndTrim(agndTrim);
1741:Generated_Source\PSoC4/ADC_1.c ****             if (0uL == compStatus)
1742:Generated_Source\PSoC4/ADC_1.c ****             {
1743:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_SetAgndTrim(lastAgndTrim);
1744:Generated_Source\PSoC4/ADC_1.c ****                 break;
1745:Generated_Source\PSoC4/ADC_1.c ****             }
1746:Generated_Source\PSoC4/ADC_1.c ****             lastAgndTrim = agndTrim;
1747:Generated_Source\PSoC4/ADC_1.c ****         }
1748:Generated_Source\PSoC4/ADC_1.c **** 
1749:Generated_Source\PSoC4/ADC_1.c ****         return lastAgndTrim;
1750:Generated_Source\PSoC4/ADC_1.c ****     }
1751:Generated_Source\PSoC4/ADC_1.c **** 
1752:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1753:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_SetOpampAndAgndTrim
1754:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1755:Generated_Source\PSoC4/ADC_1.c ****     *
1756:Generated_Source\PSoC4/ADC_1.c ****     * Write the Agnd and Opamp trim codes and return the comparator status.
1757:Generated_Source\PSoC4/ADC_1.c ****     *
1758:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1759:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_SetOpampAndAgndTrim(uint32 opampTrim, uint32 agndTrim)
1760:Generated_Source\PSoC4/ADC_1.c ****     {
1761:Generated_Source\PSoC4/ADC_1.c ****         uint32 trimRegVal = ADC_1_UABH_A_OA_TRIM_OA_REG;
1762:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal &= ~(ADC_1_OPAMP_TRIM_MASK << CyUAB_OA_OFFSET_SHIFT);
1763:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal |= (opampTrim << CyUAB_OA_OFFSET_SHIFT);
1764:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_A_OA_TRIM_OA_REG = trimRegVal;
1765:Generated_Source\PSoC4/ADC_1.c **** 
1766:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal = ADC_1_UABH_A_OA_TRIM_AGND_REG;
1767:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal &= ~(ADC_1_AGND_TRIM_MASK << CyUAB_AGND_OFFSET_SHIFT);
1768:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal |= (agndTrim << CyUAB_AGND_OFFSET_SHIFT);
1769:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_A_OA_TRIM_AGND_REG = trimRegVal;
1770:Generated_Source\PSoC4/ADC_1.c **** 
1771:Generated_Source\PSoC4/ADC_1.c ****         return ADC_1_GetCompStatus();
1772:Generated_Source\PSoC4/ADC_1.c ****     }
1773:Generated_Source\PSoC4/ADC_1.c **** 
1774:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1775:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_SetOpampTrim
1776:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1777:Generated_Source\PSoC4/ADC_1.c ****     *
1778:Generated_Source\PSoC4/ADC_1.c ****     * Write the Opamp trim code and return the comparator status.
1779:Generated_Source\PSoC4/ADC_1.c ****     *
1780:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1781:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_SetOpampTrim(uint32 opampTrim)
1782:Generated_Source\PSoC4/ADC_1.c ****     {
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 58


1783:Generated_Source\PSoC4/ADC_1.c ****         uint32 trimRegVal = ADC_1_UABH_A_OA_TRIM_OA_REG;
1784:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal &= ~(ADC_1_OPAMP_TRIM_MASK << CyUAB_OA_OFFSET_SHIFT);
1785:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal |= (opampTrim << CyUAB_OA_OFFSET_SHIFT);
1786:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_A_OA_TRIM_OA_REG = trimRegVal;
1787:Generated_Source\PSoC4/ADC_1.c **** 
1788:Generated_Source\PSoC4/ADC_1.c ****         return ADC_1_GetCompStatus();
1789:Generated_Source\PSoC4/ADC_1.c ****     }
1790:Generated_Source\PSoC4/ADC_1.c **** 
1791:Generated_Source\PSoC4/ADC_1.c **** 
1792:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1793:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_SetAgndTrim
1794:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1795:Generated_Source\PSoC4/ADC_1.c ****     *
1796:Generated_Source\PSoC4/ADC_1.c ****     * Write the Agnd trim code and return the comparator status.
1797:Generated_Source\PSoC4/ADC_1.c ****     *
1798:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1799:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_SetAgndTrim(uint32 agndTrim)
1800:Generated_Source\PSoC4/ADC_1.c ****     {
1801:Generated_Source\PSoC4/ADC_1.c ****         uint32 trimRegVal = ADC_1_UABH_A_OA_TRIM_AGND_REG;
1802:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal &= ~(ADC_1_AGND_TRIM_MASK << CyUAB_AGND_OFFSET_SHIFT);
1803:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal |= (agndTrim << CyUAB_AGND_OFFSET_SHIFT);
1804:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_A_OA_TRIM_AGND_REG = trimRegVal;
1805:Generated_Source\PSoC4/ADC_1.c **** 
1806:Generated_Source\PSoC4/ADC_1.c ****         return ADC_1_GetCompStatus();
1807:Generated_Source\PSoC4/ADC_1.c ****     }
1808:Generated_Source\PSoC4/ADC_1.c **** 
1809:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1810:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_GetCompStatus
1811:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1812:Generated_Source\PSoC4/ADC_1.c ****     *
1813:Generated_Source\PSoC4/ADC_1.c ****     * Delays to allow filter to settle before reading the ADC result.
1814:Generated_Source\PSoC4/ADC_1.c ****     * Returns 1 if the filter output is greater than AGND, else 0.
1815:Generated_Source\PSoC4/ADC_1.c ****     *
1816:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1817:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_GetCompStatus(void)
1818:Generated_Source\PSoC4/ADC_1.c ****     {
1819:Generated_Source\PSoC4/ADC_1.c ****         uint32 compStatus = 0UL;
1820:Generated_Source\PSoC4/ADC_1.c ****         int16 zeroCode = 0;
1821:Generated_Source\PSoC4/ADC_1.c **** 
1822:Generated_Source\PSoC4/ADC_1.c ****         CyDelayUs(ADC_1_allConfigs[ADC_1_currentConfig].filterTrimDelay);
1823:Generated_Source\PSoC4/ADC_1.c **** 
1824:Generated_Source\PSoC4/ADC_1.c ****         /*If unsigned differential */
1825:Generated_Source\PSoC4/ADC_1.c ****         if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
1826:Generated_Source\PSoC4/ADC_1.c ****             & ADC_1_SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_MSK) == 0U)
1827:Generated_Source\PSoC4/ADC_1.c ****         {
1828:Generated_Source\PSoC4/ADC_1.c ****             zeroCode = 0x800;
1829:Generated_Source\PSoC4/ADC_1.c ****         }
1830:Generated_Source\PSoC4/ADC_1.c **** 
1831:Generated_Source\PSoC4/ADC_1.c ****         if (ADC_1_GetResult16(ADC_1_FILTER_ADC_CHANNEL) < zeroCode)
1832:Generated_Source\PSoC4/ADC_1.c ****         {
1833:Generated_Source\PSoC4/ADC_1.c ****             compStatus = 1UL;
1834:Generated_Source\PSoC4/ADC_1.c ****         }
1835:Generated_Source\PSoC4/ADC_1.c **** 
1836:Generated_Source\PSoC4/ADC_1.c ****         return compStatus;
1837:Generated_Source\PSoC4/ADC_1.c ****     }
1838:Generated_Source\PSoC4/ADC_1.c **** 
1839:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 59


1840:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_IncOpampTrim
1841:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1842:Generated_Source\PSoC4/ADC_1.c ****     *
1843:Generated_Source\PSoC4/ADC_1.c ****     * Increments the Opamp trim code by one. Note that Opamp trim code is
1844:Generated_Source\PSoC4/ADC_1.c ****     * a 4-bit sign-magnitude value.
1845:Generated_Source\PSoC4/ADC_1.c ****     *
1846:Generated_Source\PSoC4/ADC_1.c ****     * Skips OPAMP_TRIM_NEG_BASE because it is the same as POS_BASE.
1847:Generated_Source\PSoC4/ADC_1.c ****     *
1848:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1849:Generated_Source\PSoC4/ADC_1.c ****     /* Skips OPAMP_TRIM_NEG_BASE because it is the same as POS_BASE. */
1850:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_IncOpampTrim(uint32 trim)
1851:Generated_Source\PSoC4/ADC_1.c ****     {
1852:Generated_Source\PSoC4/ADC_1.c **** 
1853:Generated_Source\PSoC4/ADC_1.c ****         if (trim < (ADC_1_OPAMP_TRIM_POS_LIMIT - 1uL))
1854:Generated_Source\PSoC4/ADC_1.c ****         {
1855:Generated_Source\PSoC4/ADC_1.c ****             trim = trim + 1uL;
1856:Generated_Source\PSoC4/ADC_1.c ****         }
1857:Generated_Source\PSoC4/ADC_1.c ****         else if ((ADC_1_OPAMP_TRIM_POS_LIMIT - 1uL) == trim)
1858:Generated_Source\PSoC4/ADC_1.c ****         {
1859:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_OPAMP_TRIM_NEG_LIMIT;
1860:Generated_Source\PSoC4/ADC_1.c ****         }
1861:Generated_Source\PSoC4/ADC_1.c ****         else if (trim <= (ADC_1_OPAMP_TRIM_NEG_BASE + 1uL))
1862:Generated_Source\PSoC4/ADC_1.c ****         {
1863:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_OPAMP_TRIM_POS_BASE;
1864:Generated_Source\PSoC4/ADC_1.c ****         }
1865:Generated_Source\PSoC4/ADC_1.c ****         else
1866:Generated_Source\PSoC4/ADC_1.c ****         {
1867:Generated_Source\PSoC4/ADC_1.c ****             trim = trim - 1uL;
1868:Generated_Source\PSoC4/ADC_1.c ****         }
1869:Generated_Source\PSoC4/ADC_1.c **** 
1870:Generated_Source\PSoC4/ADC_1.c ****         return trim;
1871:Generated_Source\PSoC4/ADC_1.c ****     }
1872:Generated_Source\PSoC4/ADC_1.c **** 
1873:Generated_Source\PSoC4/ADC_1.c **** 
1874:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1875:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_DecOpampTrim
1876:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1877:Generated_Source\PSoC4/ADC_1.c ****     *
1878:Generated_Source\PSoC4/ADC_1.c ****     * Decrements the Opamp trim code by one. Note that Opamp trim code is
1879:Generated_Source\PSoC4/ADC_1.c ****     * a 4-bit sign-magnitude value.
1880:Generated_Source\PSoC4/ADC_1.c ****     *
1881:Generated_Source\PSoC4/ADC_1.c ****     * Skips OPAMP_TRIM_NEG_BASE because it is the same as POS_BASE.
1882:Generated_Source\PSoC4/ADC_1.c ****     *
1883:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1884:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_DecOpampTrim(uint32 trim)
1885:Generated_Source\PSoC4/ADC_1.c ****     {
1886:Generated_Source\PSoC4/ADC_1.c **** 
1887:Generated_Source\PSoC4/ADC_1.c ****         if (ADC_1_OPAMP_TRIM_POS_BASE == trim)
1888:Generated_Source\PSoC4/ADC_1.c ****         {
1889:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_OPAMP_TRIM_NEG_BASE + 1uL;
1890:Generated_Source\PSoC4/ADC_1.c ****         }
1891:Generated_Source\PSoC4/ADC_1.c ****         else if (trim < ADC_1_OPAMP_TRIM_POS_LIMIT)
1892:Generated_Source\PSoC4/ADC_1.c ****         {
1893:Generated_Source\PSoC4/ADC_1.c ****             trim = trim - 1uL;
1894:Generated_Source\PSoC4/ADC_1.c ****         }
1895:Generated_Source\PSoC4/ADC_1.c ****         else if (trim < ADC_1_OPAMP_TRIM_NEG_LIMIT)
1896:Generated_Source\PSoC4/ADC_1.c ****         {
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 60


1897:Generated_Source\PSoC4/ADC_1.c ****             trim = trim + 1uL;
1898:Generated_Source\PSoC4/ADC_1.c ****         }
1899:Generated_Source\PSoC4/ADC_1.c ****         else
1900:Generated_Source\PSoC4/ADC_1.c ****         {
1901:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_OPAMP_TRIM_POS_LIMIT - 1uL;
1902:Generated_Source\PSoC4/ADC_1.c ****         }
1903:Generated_Source\PSoC4/ADC_1.c **** 
1904:Generated_Source\PSoC4/ADC_1.c ****         return trim;
1905:Generated_Source\PSoC4/ADC_1.c ****     }
1906:Generated_Source\PSoC4/ADC_1.c **** 
1907:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1908:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_IncAgndTrim
1909:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1910:Generated_Source\PSoC4/ADC_1.c ****     *
1911:Generated_Source\PSoC4/ADC_1.c ****     * Increments the Agnd trim code by one. Note that Agnd trim code is
1912:Generated_Source\PSoC4/ADC_1.c ****     * a 5-bit sign-magnitude value.
1913:Generated_Source\PSoC4/ADC_1.c ****     *
1914:Generated_Source\PSoC4/ADC_1.c ****     * Skips AGND_TRIM_NEG_BASE because it is the same as POS_BASE.
1915:Generated_Source\PSoC4/ADC_1.c ****     *
1916:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1917:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_IncAgndTrim(uint32 trim)
1918:Generated_Source\PSoC4/ADC_1.c ****     {
1919:Generated_Source\PSoC4/ADC_1.c **** 
1920:Generated_Source\PSoC4/ADC_1.c ****         if (trim < (ADC_1_AGND_TRIM_POS_LIMIT - 1uL))
1921:Generated_Source\PSoC4/ADC_1.c ****         {
1922:Generated_Source\PSoC4/ADC_1.c ****             trim = trim + 1uL;
1923:Generated_Source\PSoC4/ADC_1.c ****         }
1924:Generated_Source\PSoC4/ADC_1.c ****         else if ((ADC_1_AGND_TRIM_POS_LIMIT - 1uL) == trim)
1925:Generated_Source\PSoC4/ADC_1.c ****         {
1926:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_AGND_TRIM_NEG_LIMIT;
1927:Generated_Source\PSoC4/ADC_1.c ****         }
1928:Generated_Source\PSoC4/ADC_1.c ****         else if (trim <= (ADC_1_AGND_TRIM_NEG_BASE + 1uL))
1929:Generated_Source\PSoC4/ADC_1.c ****         {
1930:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_AGND_TRIM_POS_BASE;
1931:Generated_Source\PSoC4/ADC_1.c ****         }
1932:Generated_Source\PSoC4/ADC_1.c ****         else
1933:Generated_Source\PSoC4/ADC_1.c ****         {
1934:Generated_Source\PSoC4/ADC_1.c ****             trim = trim - 1uL;
1935:Generated_Source\PSoC4/ADC_1.c ****         }
1936:Generated_Source\PSoC4/ADC_1.c **** 
1937:Generated_Source\PSoC4/ADC_1.c ****         return trim;
1938:Generated_Source\PSoC4/ADC_1.c ****     }
1939:Generated_Source\PSoC4/ADC_1.c **** 
1940:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1941:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_DecAgndTrim
1942:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1943:Generated_Source\PSoC4/ADC_1.c ****     *
1944:Generated_Source\PSoC4/ADC_1.c ****     * Decrements the Agnd trim code by one. Note that Agnd trim code is
1945:Generated_Source\PSoC4/ADC_1.c ****     * a 5-bit sign-magnitude value.
1946:Generated_Source\PSoC4/ADC_1.c ****     *
1947:Generated_Source\PSoC4/ADC_1.c ****     * Skips AGND_TRIM_NEG_BASE because it is the same as POS_BASE.
1948:Generated_Source\PSoC4/ADC_1.c ****     *
1949:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1950:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_DecAgndTrim(uint32 trim)
1951:Generated_Source\PSoC4/ADC_1.c ****     {
1952:Generated_Source\PSoC4/ADC_1.c **** 
1953:Generated_Source\PSoC4/ADC_1.c ****         if (trim == ADC_1_AGND_TRIM_POS_BASE)
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 61


1954:Generated_Source\PSoC4/ADC_1.c ****         {
1955:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_AGND_TRIM_NEG_BASE + 1uL;
1956:Generated_Source\PSoC4/ADC_1.c ****         }
1957:Generated_Source\PSoC4/ADC_1.c ****         else if (trim < ADC_1_AGND_TRIM_POS_LIMIT)
1958:Generated_Source\PSoC4/ADC_1.c ****         {
1959:Generated_Source\PSoC4/ADC_1.c ****             trim = trim - 1uL;
1960:Generated_Source\PSoC4/ADC_1.c ****         }
1961:Generated_Source\PSoC4/ADC_1.c ****         else if (trim < ADC_1_AGND_TRIM_NEG_LIMIT)
1962:Generated_Source\PSoC4/ADC_1.c ****         {
1963:Generated_Source\PSoC4/ADC_1.c ****             trim = trim + 1uL;
1964:Generated_Source\PSoC4/ADC_1.c ****         }
1965:Generated_Source\PSoC4/ADC_1.c ****         else
1966:Generated_Source\PSoC4/ADC_1.c ****         {
1967:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_AGND_TRIM_POS_LIMIT - 1uL;
1968:Generated_Source\PSoC4/ADC_1.c ****         }
1969:Generated_Source\PSoC4/ADC_1.c **** 
1970:Generated_Source\PSoC4/ADC_1.c ****         return trim;
1971:Generated_Source\PSoC4/ADC_1.c ****     }
1972:Generated_Source\PSoC4/ADC_1.c **** 
1973:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1974:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_filterInit
1975:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1976:Generated_Source\PSoC4/ADC_1.c ****     *
1977:Generated_Source\PSoC4/ADC_1.c ****     * Initializes the UAB halves and the CTB buffer between the AGND and the SAR.
1978:Generated_Source\PSoC4/ADC_1.c ****     *
1979:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1980:Generated_Source\PSoC4/ADC_1.c ****     void ADC_1_filterInit(uint32 configNum)
1981:Generated_Source\PSoC4/ADC_1.c ****     {
1982:Generated_Source\PSoC4/ADC_1.c ****         /* Configure the common filter settings if any configuration filters */
1983:Generated_Source\PSoC4/ADC_1.c ****         switch (configNum)
1984:Generated_Source\PSoC4/ADC_1.c ****         {
1985:Generated_Source\PSoC4/ADC_1.c ****             #if (0u != ADC_1_CFG0_FILTER_PRESENT)
1986:Generated_Source\PSoC4/ADC_1.c ****             case 0u:
1987:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_A_Init(&ADC_1_CFG0_UABH_A_FILTER_config);
1988:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_B_Init(&ADC_1_CFG0_UABH_B_FILTER_config);
1989:Generated_Source\PSoC4/ADC_1.c ****             break;
1990:Generated_Source\PSoC4/ADC_1.c ****             #endif
1991:Generated_Source\PSoC4/ADC_1.c ****             #if (0u != ADC_1_CFG1_FILTER_PRESENT)
1992:Generated_Source\PSoC4/ADC_1.c ****             case 1u:
1993:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_A_Init(&ADC_1_CFG1_UABH_A_FILTER_config);
1994:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_B_Init(&ADC_1_CFG1_UABH_B_FILTER_config);
1995:Generated_Source\PSoC4/ADC_1.c ****             break;
1996:Generated_Source\PSoC4/ADC_1.c ****             #endif
1997:Generated_Source\PSoC4/ADC_1.c ****             #if (0u != ADC_1_CFG2_FILTER_PRESENT)
1998:Generated_Source\PSoC4/ADC_1.c ****             case 2u:
1999:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_A_Init(&ADC_1_CFG2_UABH_A_FILTER_config);
2000:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_B_Init(&ADC_1_CFG2_UABH_B_FILTER_config);
2001:Generated_Source\PSoC4/ADC_1.c ****             break;
2002:Generated_Source\PSoC4/ADC_1.c ****             #endif
2003:Generated_Source\PSoC4/ADC_1.c ****             #if (0u != ADC_1_CFG3_FILTER_PRESENT)
2004:Generated_Source\PSoC4/ADC_1.c ****             case 3u:
2005:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_A_Init(&ADC_1_CFG3_UABH_A_FILTER_config);
2006:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_B_Init(&ADC_1_CFG3_UABH_B_FILTER_config);
2007:Generated_Source\PSoC4/ADC_1.c ****             break;
2008:Generated_Source\PSoC4/ADC_1.c ****             #endif
2009:Generated_Source\PSoC4/ADC_1.c ****             default:
2010:Generated_Source\PSoC4/ADC_1.c ****             break;
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 62


2011:Generated_Source\PSoC4/ADC_1.c ****         }
2012:Generated_Source\PSoC4/ADC_1.c **** 
2013:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_FILTERAGND2SAR_BUFFER_Init();
2014:Generated_Source\PSoC4/ADC_1.c ****     }
2015:Generated_Source\PSoC4/ADC_1.c **** #endif /* ADC_1_ANY_CONFIG_USES_FILTER != 0u */
2016:Generated_Source\PSoC4/ADC_1.c **** 
2017:Generated_Source\PSoC4/ADC_1.c **** 
2018:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
2019:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_Init
2020:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
2021:Generated_Source\PSoC4/ADC_1.c **** *
2022:Generated_Source\PSoC4/ADC_1.c **** * \brief Initialize the component according to parameters defined in the
2023:Generated_Source\PSoC4/ADC_1.c **** * customizer.
2024:Generated_Source\PSoC4/ADC_1.c **** *
2025:Generated_Source\PSoC4/ADC_1.c **** * \param None
2026:Generated_Source\PSoC4/ADC_1.c **** *
2027:Generated_Source\PSoC4/ADC_1.c **** * \return None
2028:Generated_Source\PSoC4/ADC_1.c **** *
2029:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
2030:Generated_Source\PSoC4/ADC_1.c **** *
2031:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
2032:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_Init(void)
2033:Generated_Source\PSoC4/ADC_1.c **** {
 1401              		.loc 1 2033 0
 1402              		.cfi_startproc
 1403              		@ args = 0, pretend = 0, frame = 0
 1404              		@ frame_needed = 0, uses_anonymous_args = 0
 1405 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1406              		.cfi_def_cfa_offset 20
 1407              		.cfi_offset 4, -20
 1408              		.cfi_offset 5, -16
 1409              		.cfi_offset 6, -12
 1410              		.cfi_offset 7, -8
 1411              		.cfi_offset 14, -4
 1412 0002 4746     		mov	r7, r8
 1413 0004 80B4     		push	{r7}
 1414              		.cfi_def_cfa_offset 24
 1415              		.cfi_offset 8, -24
 1416              	.LVL128:
2034:Generated_Source\PSoC4/ADC_1.c ****     uint32 chNum = 0ul;
2035:Generated_Source\PSoC4/ADC_1.c ****     uint32 configNum = 0u;
2036:Generated_Source\PSoC4/ADC_1.c ****     int32 counts;
2037:Generated_Source\PSoC4/ADC_1.c **** 
2038:Generated_Source\PSoC4/ADC_1.c ****     if(0u == ADC_1_initVar)
 1417              		.loc 1 2038 0
 1418 0006 2D4B     		ldr	r3, .L114
 1419 0008 1B79     		ldrb	r3, [r3, #4]
 1420 000a 002B     		cmp	r3, #0
 1421 000c 38D0     		beq	.L113
 1422 000e 51E0     		b	.L106
 1423              	.LVL129:
 1424              	.L112:
2039:Generated_Source\PSoC4/ADC_1.c ****     {
2040:Generated_Source\PSoC4/ADC_1.c ****         /* Set offset and countsPer10Volt for all channels */
2041:Generated_Source\PSoC4/ADC_1.c ****         for(chNum = 0ul; chNum < ADC_1_TOTAL_CHANNELS_NUM; chNum++)
2042:Generated_Source\PSoC4/ADC_1.c ****         {
2043:Generated_Source\PSoC4/ADC_1.c ****             if((ADC_1_channelsConfig[chNum] & ADC_1_SAR_CHAN_CONFIG_RESOLUTION_MSK) != 0u)
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 63


2044:Generated_Source\PSoC4/ADC_1.c ****             {
2045:Generated_Source\PSoC4/ADC_1.c ****                 if((ADC_1_allConfigs[configNum].sampleCtrl
2046:Generated_Source\PSoC4/ADC_1.c ****                     & ADC_1_SAR_SAMPLE_CTRL_SUB_RESOLUTION_MSK)
2047:Generated_Source\PSoC4/ADC_1.c ****                     == ADC_1_SUB_RESOLUTION_10B)
2048:Generated_Source\PSoC4/ADC_1.c ****                 {
2049:Generated_Source\PSoC4/ADC_1.c ****                     counts = (int32) ADC_1_SAR_WRK_MAX_10BIT;
2050:Generated_Source\PSoC4/ADC_1.c ****                 }
2051:Generated_Source\PSoC4/ADC_1.c ****                 else
2052:Generated_Source\PSoC4/ADC_1.c ****                 {
2053:Generated_Source\PSoC4/ADC_1.c ****                     counts = (int32) ADC_1_SAR_WRK_MAX_8BIT;
2054:Generated_Source\PSoC4/ADC_1.c ****                 }
2055:Generated_Source\PSoC4/ADC_1.c ****             }
2056:Generated_Source\PSoC4/ADC_1.c ****             else
2057:Generated_Source\PSoC4/ADC_1.c ****             {
2058:Generated_Source\PSoC4/ADC_1.c ****                counts = (int32)ADC_1_SAR_WRK_MAX_12BIT;
2059:Generated_Source\PSoC4/ADC_1.c ****             }
2060:Generated_Source\PSoC4/ADC_1.c **** 
2061:Generated_Source\PSoC4/ADC_1.c ****             /* Single Ended Channel */
2062:Generated_Source\PSoC4/ADC_1.c ****             if((ADC_1_channelsConfig[chNum] & ADC_1_SAR_CHAN_CONFIG_DIFFERENTIAL_EN_MSK) == 0u)
2063:Generated_Source\PSoC4/ADC_1.c ****             {
2064:Generated_Source\PSoC4/ADC_1.c ****                 if(((ADC_1_allConfigs[configNum].sampleCtrl
 1425              		.loc 1 2064 0
 1426 0010 EA00     		lsls	r2, r5, #3
 1427 0012 521B     		subs	r2, r2, r5
 1428 0014 D300     		lsls	r3, r2, #3
 1429 0016 2A4A     		ldr	r2, .L114+4
 1430 0018 D318     		adds	r3, r2, r3
 1431 001a DB68     		ldr	r3, [r3, #12]
 1432 001c 5B07     		lsls	r3, r3, #29
 1433 001e 0FD5     		bpl	.L109
2065:Generated_Source\PSoC4/ADC_1.c ****                     & ADC_1_SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_MSK)
2066:Generated_Source\PSoC4/ADC_1.c ****                     == ADC_1_SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_MSK) &&
2067:Generated_Source\PSoC4/ADC_1.c ****                     ((ADC_1_allConfigs[configNum].ctrl & ADC_1_SAR_CTRL_NEG_SEL_MSK)
 1434              		.loc 1 2067 0
 1435 0020 EA00     		lsls	r2, r5, #3
 1436 0022 521B     		subs	r2, r2, r5
 1437 0024 D300     		lsls	r3, r2, #3
 1438 0026 264A     		ldr	r2, .L114+4
 1439 0028 D318     		adds	r3, r2, r3
 1440 002a 9B68     		ldr	r3, [r3, #8]
 1441 002c E022     		movs	r2, #224
 1442 002e 1201     		lsls	r2, r2, #4
 1443 0030 1340     		ands	r3, r2
2066:Generated_Source\PSoC4/ADC_1.c ****                     ((ADC_1_allConfigs[configNum].ctrl & ADC_1_SAR_CTRL_NEG_SEL_MSK)
 1444              		.loc 1 2066 0
 1445 0032 9342     		cmp	r3, r2
 1446 0034 04D1     		bne	.L109
2068:Generated_Source\PSoC4/ADC_1.c ****                     == ADC_1_NEG_VREF_SHIFTED))
2069:Generated_Source\PSoC4/ADC_1.c ****                 {
2070:Generated_Source\PSoC4/ADC_1.c ****                     /* Set offset to the minus half scale to convert results to unsigned format */
2071:Generated_Source\PSoC4/ADC_1.c ****                     ADC_1_offset[chNum] = (int16)(counts / -2);
 1447              		.loc 1 2071 0
 1448 0036 6300     		lsls	r3, r4, #1
 1449 0038 2249     		ldr	r1, .L114+8
 1450 003a 234A     		ldr	r2, .L114+12
 1451 003c 9952     		strh	r1, [r3, r2]
 1452 003e 03E0     		b	.L110
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 64


 1453              	.L109:
2072:Generated_Source\PSoC4/ADC_1.c ****                 }
2073:Generated_Source\PSoC4/ADC_1.c ****                 else
2074:Generated_Source\PSoC4/ADC_1.c ****                 {
2075:Generated_Source\PSoC4/ADC_1.c ****                     ADC_1_offset[chNum] = 0;
 1454              		.loc 1 2075 0
 1455 0040 6300     		lsls	r3, r4, #1
 1456 0042 0021     		movs	r1, #0
 1457 0044 204A     		ldr	r2, .L114+12
 1458 0046 9952     		strh	r1, [r3, r2]
 1459              	.L110:
2076:Generated_Source\PSoC4/ADC_1.c ****                 }
2077:Generated_Source\PSoC4/ADC_1.c **** 
2078:Generated_Source\PSoC4/ADC_1.c ****             }
2079:Generated_Source\PSoC4/ADC_1.c ****             else    /* Differential channel */
2080:Generated_Source\PSoC4/ADC_1.c ****             {
2081:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_offset[chNum] = 0;
2082:Generated_Source\PSoC4/ADC_1.c ****             }
2083:Generated_Source\PSoC4/ADC_1.c **** 
2084:Generated_Source\PSoC4/ADC_1.c ****             /* Calculate gain in counts per 10 volts with rounding */
2085:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_countsPer10Volt[chNum] = (int16)(((counts * ADC_1_10MV_COUNTS) \
2086:Generated_Source\PSoC4/ADC_1.c ****                             + ADC_1_allConfigs[configNum].vrefMvValue) \
 1460              		.loc 1 2086 0
 1461 0048 1D4B     		ldr	r3, .L114+4
 1462 004a 9846     		mov	r8, r3
 1463 004c EF00     		lsls	r7, r5, #3
 1464 004e 7B1B     		subs	r3, r7, r5
 1465 0050 DE00     		lsls	r6, r3, #3
 1466 0052 4644     		add	r6, r6, r8
 1467 0054 F16A     		ldr	r1, [r6, #44]
 1468 0056 1D4B     		ldr	r3, .L114+16
 1469 0058 C818     		adds	r0, r1, r3
2087:Generated_Source\PSoC4/ADC_1.c ****                             / (ADC_1_allConfigs[configNum].vrefMvValue * 2));
 1470              		.loc 1 2087 0
 1471 005a 4900     		lsls	r1, r1, #1
 1472 005c FFF7FEFF 		bl	__aeabi_idiv
 1473              	.LVL130:
2085:Generated_Source\PSoC4/ADC_1.c ****                             + ADC_1_allConfigs[configNum].vrefMvValue) \
 1474              		.loc 1 2085 0
 1475 0060 00B2     		sxth	r0, r0
 1476 0062 A300     		lsls	r3, r4, #2
 1477 0064 1A4A     		ldr	r2, .L114+20
 1478 0066 9850     		str	r0, [r3, r2]
2088:Generated_Source\PSoC4/ADC_1.c **** 
2089:Generated_Source\PSoC4/ADC_1.c ****             /* Increment configuration number after rolling over to the next configuration*/
2090:Generated_Source\PSoC4/ADC_1.c ****             if((ADC_1_allConfigs[configNum].channelBase
 1479              		.loc 1 2090 0
 1480 0068 7F1B     		subs	r7, r7, r5
 1481 006a FB00     		lsls	r3, r7, #3
 1482 006c 4246     		mov	r2, r8
 1483 006e 9A58     		ldr	r2, [r3, r2]
2091:Generated_Source\PSoC4/ADC_1.c ****                 + (ADC_1_allConfigs[configNum].numChannels - 1uL)) == chNum)
 1484              		.loc 1 2091 0
 1485 0070 7368     		ldr	r3, [r6, #4]
 1486 0072 D318     		adds	r3, r2, r3
 1487 0074 013B     		subs	r3, r3, #1
2090:Generated_Source\PSoC4/ADC_1.c ****                 + (ADC_1_allConfigs[configNum].numChannels - 1uL)) == chNum)
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 65


 1488              		.loc 1 2090 0
 1489 0076 9C42     		cmp	r4, r3
 1490 0078 00D1     		bne	.L111
2092:Generated_Source\PSoC4/ADC_1.c ****             {
2093:Generated_Source\PSoC4/ADC_1.c ****                 configNum++;
 1491              		.loc 1 2093 0
 1492 007a 0135     		adds	r5, r5, #1
 1493              	.LVL131:
 1494              	.L111:
2041:Generated_Source\PSoC4/ADC_1.c ****         {
 1495              		.loc 1 2041 0 discriminator 2
 1496 007c 0134     		adds	r4, r4, #1
 1497              	.LVL132:
 1498 007e 01E0     		b	.L107
 1499              	.LVL133:
 1500              	.L113:
 1501 0080 0025     		movs	r5, #0
 1502 0082 0024     		movs	r4, #0
 1503              	.LVL134:
 1504              	.L107:
2041:Generated_Source\PSoC4/ADC_1.c ****         {
 1505              		.loc 1 2041 0 is_stmt 0 discriminator 1
 1506 0084 002C     		cmp	r4, #0
 1507 0086 C3D0     		beq	.L112
2094:Generated_Source\PSoC4/ADC_1.c ****             }
2095:Generated_Source\PSoC4/ADC_1.c ****         } /* for(chNum = 0ul; chNum < ADC_1_TOTAL_CHANNELS_NUM; chNum++) */
2096:Generated_Source\PSoC4/ADC_1.c **** 
2097:Generated_Source\PSoC4/ADC_1.c ****         /* Start and set interrupt vector */
2098:Generated_Source\PSoC4/ADC_1.c ****         CyIntSetPriority(ADC_1_INTC_NUMBER, ADC_1_INTC_PRIOR_NUMBER);
 1508              		.loc 1 2098 0 is_stmt 1
 1509 0088 0321     		movs	r1, #3
 1510 008a 0F20     		movs	r0, #15
 1511 008c FFF7FEFF 		bl	CyIntSetPriority
 1512              	.LVL135:
2099:Generated_Source\PSoC4/ADC_1.c ****         (void)CyIntSetVector(ADC_1_INTC_NUMBER, &ADC_1_ISR);
 1513              		.loc 1 2099 0
 1514 0090 1049     		ldr	r1, .L114+24
 1515 0092 0F20     		movs	r0, #15
 1516 0094 FFF7FEFF 		bl	CyIntSetVector
 1517              	.LVL136:
2100:Generated_Source\PSoC4/ADC_1.c **** 
2101:Generated_Source\PSoC4/ADC_1.c ****         /* Initialize configuration zero if SelectConfig has not been called */
2102:Generated_Source\PSoC4/ADC_1.c ****         if(0u == ADC_1_selected)
 1518              		.loc 1 2102 0
 1519 0098 084B     		ldr	r3, .L114
 1520 009a 5B79     		ldrb	r3, [r3, #5]
 1521 009c 002B     		cmp	r3, #0
 1522 009e 09D1     		bne	.L106
2103:Generated_Source\PSoC4/ADC_1.c ****         {
2104:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_selected = 1u;
 1523              		.loc 1 2104 0
 1524 00a0 0122     		movs	r2, #1
 1525 00a2 064B     		ldr	r3, .L114
 1526 00a4 5A71     		strb	r2, [r3, #5]
 1527              	.LVL137:
2105:Generated_Source\PSoC4/ADC_1.c ****             configNum = 0u;
2106:Generated_Source\PSoC4/ADC_1.c ****             /* Change Vref selection if is was routed by Creator. Break. */
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 66


2107:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_VREF_ROUTED)
2108:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_vrefAMux_DisconnectAll();
2109:Generated_Source\PSoC4/ADC_1.c ****             #endif
2110:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_InitConfig(&ADC_1_allConfigs[configNum]);
 1528              		.loc 1 2110 0
 1529 00a6 064C     		ldr	r4, .L114+4
 1530              	.LVL138:
 1531 00a8 2000     		movs	r0, r4
 1532 00aa FFF7FEFF 		bl	ADC_1_InitConfig
 1533              	.LVL139:
2111:Generated_Source\PSoC4/ADC_1.c ****             /* Change Vref selection if is was routed by Creator. Make. */
2112:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_VREF_ROUTED)
2113:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_vrefAMux_Select((uint8)configNum);
2114:Generated_Source\PSoC4/ADC_1.c ****             #endif
2115:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_SAR_CHAN_EN_REG = ADC_1_allConfigs[configNum].chanEn;
 1534              		.loc 1 2115 0
 1535 00ae 226A     		ldr	r2, [r4, #32]
 1536 00b0 094B     		ldr	r3, .L114+28
 1537 00b2 1A60     		str	r2, [r3]
 1538              	.LVL140:
 1539              	.L106:
2116:Generated_Source\PSoC4/ADC_1.c ****             #if(0u != ADC_1_ANY_CONFIG_USES_FILTER)
2117:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_filterVinMux_Select((uint8)configNum);
2118:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_filterInit(configNum);
2119:Generated_Source\PSoC4/ADC_1.c ****             #endif
2120:Generated_Source\PSoC4/ADC_1.c ****         }
2121:Generated_Source\PSoC4/ADC_1.c ****     }
2122:Generated_Source\PSoC4/ADC_1.c ****     return;
2123:Generated_Source\PSoC4/ADC_1.c **** }
 1540              		.loc 1 2123 0
 1541              		@ sp needed
 1542 00b4 04BC     		pop	{r2}
 1543 00b6 9046     		mov	r8, r2
 1544 00b8 F0BD     		pop	{r4, r5, r6, r7, pc}
 1545              	.L115:
 1546 00ba C046     		.align	2
 1547              	.L114:
 1548 00bc 00000000 		.word	.LANCHOR0
 1549 00c0 00000000 		.word	ADC_1_allConfigs
 1550 00c4 00F8FFFF 		.word	-2048
 1551 00c8 00000000 		.word	ADC_1_offset
 1552 00cc 00007102 		.word	40960000
 1553 00d0 00000000 		.word	ADC_1_countsPer10Volt
 1554 00d4 00000000 		.word	ADC_1_ISR
 1555 00d8 20003A40 		.word	1077542944
 1556              		.cfi_endproc
 1557              	.LFE26:
 1558              		.size	ADC_1_Init, .-ADC_1_Init
 1559              		.section	.text.ADC_1_Enable,"ax",%progbits
 1560              		.align	2
 1561              		.global	ADC_1_Enable
 1562              		.code	16
 1563              		.thumb_func
 1564              		.type	ADC_1_Enable, %function
 1565              	ADC_1_Enable:
 1566              	.LFB27:
2124:Generated_Source\PSoC4/ADC_1.c **** 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 67


2125:Generated_Source\PSoC4/ADC_1.c **** 
2126:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
2127:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_Enable
2128:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
2129:Generated_Source\PSoC4/ADC_1.c **** *
2130:Generated_Source\PSoC4/ADC_1.c **** * \brief Enables the component.
2131:Generated_Source\PSoC4/ADC_1.c **** *
2132:Generated_Source\PSoC4/ADC_1.c **** * \param None
2133:Generated_Source\PSoC4/ADC_1.c **** *
2134:Generated_Source\PSoC4/ADC_1.c **** * \return None
2135:Generated_Source\PSoC4/ADC_1.c **** *
2136:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect
2137:Generated_Source\PSoC4/ADC_1.c **** *  None
2138:Generated_Source\PSoC4/ADC_1.c **** *
2139:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
2140:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_Enable(void)
2141:Generated_Source\PSoC4/ADC_1.c **** {
 1567              		.loc 1 2141 0
 1568              		.cfi_startproc
 1569              		@ args = 0, pretend = 0, frame = 0
 1570              		@ frame_needed = 0, uses_anonymous_args = 0
 1571 0000 10B5     		push	{r4, lr}
 1572              		.cfi_def_cfa_offset 8
 1573              		.cfi_offset 4, -8
 1574              		.cfi_offset 14, -4
2142:Generated_Source\PSoC4/ADC_1.c **** 
2143:Generated_Source\PSoC4/ADC_1.c ****     #if(0u != ADC_1_ANY_CONFIG_USES_FILTER)
2144:Generated_Source\PSoC4/ADC_1.c ****         if((ADC_1_allConfigs[ADC_1_currentConfig].miscConfig
2145:Generated_Source\PSoC4/ADC_1.c ****             & ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
2146:Generated_Source\PSoC4/ADC_1.c ****             == ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
2147:Generated_Source\PSoC4/ADC_1.c ****         {
2148:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_FILTERAGND2SAR_BUFFER_Enable();
2149:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_Enable();
2150:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_B_Enable();
2151:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_B_Run(1u);
2152:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_Run(1u);
2153:Generated_Source\PSoC4/ADC_1.c ****         }
2154:Generated_Source\PSoC4/ADC_1.c ****     #endif /* ADC_1_ANY_CONFIG_USES_FILTER != 0u */
2155:Generated_Source\PSoC4/ADC_1.c **** 
2156:Generated_Source\PSoC4/ADC_1.c ****     if (0u == (ADC_1_SAR_CTRL_REG & ADC_1_SAR_CTRL_ENABLED_MSK))
 1575              		.loc 1 2156 0
 1576 0002 0D4B     		ldr	r3, .L119
 1577 0004 1B68     		ldr	r3, [r3]
 1578 0006 002B     		cmp	r3, #0
 1579 0008 0CDB     		blt	.L117
 1580              	.L118:
2157:Generated_Source\PSoC4/ADC_1.c ****     {
2158:Generated_Source\PSoC4/ADC_1.c ****         while (0u != (ADC_1_SAR_STATUS_REG & ADC_1_BUSY_MSK))
 1581              		.loc 1 2158 0 discriminator 1
 1582 000a 0C4B     		ldr	r3, .L119+4
 1583 000c 1B68     		ldr	r3, [r3]
 1584 000e 002B     		cmp	r3, #0
 1585 0010 FBDB     		blt	.L118
2159:Generated_Source\PSoC4/ADC_1.c ****         {
2160:Generated_Source\PSoC4/ADC_1.c ****             /* wait for SAR to go idle to avoid deadlock */
2161:Generated_Source\PSoC4/ADC_1.c ****         }
2162:Generated_Source\PSoC4/ADC_1.c **** 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 68


2163:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_CTRL_REG |= ADC_1_SAR_CTRL_ENABLED_MSK;
 1586              		.loc 1 2163 0
 1587 0012 094A     		ldr	r2, .L119
 1588 0014 1368     		ldr	r3, [r2]
 1589 0016 8021     		movs	r1, #128
 1590 0018 0906     		lsls	r1, r1, #24
 1591 001a 0B43     		orrs	r3, r1
 1592 001c 1360     		str	r3, [r2]
2164:Generated_Source\PSoC4/ADC_1.c **** 
2165:Generated_Source\PSoC4/ADC_1.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
2166:Generated_Source\PSoC4/ADC_1.c ****         CyDelayUs(ADC_1_10US_DELAY);
 1593              		.loc 1 2166 0
 1594 001e 0A20     		movs	r0, #10
 1595 0020 FFF7FEFF 		bl	CyDelayUs
 1596              	.LVL141:
 1597              	.L117:
2167:Generated_Source\PSoC4/ADC_1.c ****     }
2168:Generated_Source\PSoC4/ADC_1.c **** 
2169:Generated_Source\PSoC4/ADC_1.c ****     /* Must set the DFT_CTRL register after enabling the SAR as it is a non-retention register. */
2170:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SetDFTControl(&ADC_1_allConfigs[ADC_1_currentConfig]);
 1598              		.loc 1 2170 0
 1599 0024 064B     		ldr	r3, .L119+8
 1600 0026 1A68     		ldr	r2, [r3]
 1601 0028 D300     		lsls	r3, r2, #3
 1602 002a 9B1A     		subs	r3, r3, r2
 1603 002c D800     		lsls	r0, r3, #3
 1604 002e 054B     		ldr	r3, .L119+12
 1605 0030 C018     		adds	r0, r0, r3
 1606 0032 FFF7FEFF 		bl	ADC_1_SetDFTControl
 1607              	.LVL142:
2171:Generated_Source\PSoC4/ADC_1.c **** 
2172:Generated_Source\PSoC4/ADC_1.c ****     return;
2173:Generated_Source\PSoC4/ADC_1.c **** }
 1608              		.loc 1 2173 0
 1609              		@ sp needed
 1610 0036 10BD     		pop	{r4, pc}
 1611              	.L120:
 1612              		.align	2
 1613              	.L119:
 1614 0038 00003A40 		.word	1077542912
 1615 003c A0023A40 		.word	1077543584
 1616 0040 00000000 		.word	.LANCHOR0
 1617 0044 00000000 		.word	ADC_1_allConfigs
 1618              		.cfi_endproc
 1619              	.LFE27:
 1620              		.size	ADC_1_Enable, .-ADC_1_Enable
 1621              		.section	.text.ADC_1_Start,"ax",%progbits
 1622              		.align	2
 1623              		.global	ADC_1_Start
 1624              		.code	16
 1625              		.thumb_func
 1626              		.type	ADC_1_Start, %function
 1627              	ADC_1_Start:
 1628              	.LFB1:
 556:Generated_Source\PSoC4/ADC_1.c ****     if (ADC_1_INIT_VAR_INIT_FLAG != (ADC_1_INIT_VAR_INIT_FLAG & ADC_1_initVar))
 1629              		.loc 1 556 0
 1630              		.cfi_startproc
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 69


 1631              		@ args = 0, pretend = 0, frame = 0
 1632              		@ frame_needed = 0, uses_anonymous_args = 0
 1633 0000 10B5     		push	{r4, lr}
 1634              		.cfi_def_cfa_offset 8
 1635              		.cfi_offset 4, -8
 1636              		.cfi_offset 14, -4
 557:Generated_Source\PSoC4/ADC_1.c ****     {
 1637              		.loc 1 557 0
 1638 0002 074B     		ldr	r3, .L123
 1639 0004 1B79     		ldrb	r3, [r3, #4]
 1640 0006 DB07     		lsls	r3, r3, #31
 1641 0008 06D4     		bmi	.L122
 559:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_initVar |= ADC_1_INIT_VAR_INIT_FLAG;
 1642              		.loc 1 559 0
 1643 000a FFF7FEFF 		bl	ADC_1_Init
 1644              	.LVL143:
 560:Generated_Source\PSoC4/ADC_1.c ****     }
 1645              		.loc 1 560 0
 1646 000e 044A     		ldr	r2, .L123
 1647 0010 1179     		ldrb	r1, [r2, #4]
 1648 0012 0123     		movs	r3, #1
 1649 0014 0B43     		orrs	r3, r1
 1650 0016 1371     		strb	r3, [r2, #4]
 1651              	.L122:
 563:Generated_Source\PSoC4/ADC_1.c **** 
 1652              		.loc 1 563 0
 1653 0018 FFF7FEFF 		bl	ADC_1_Enable
 1654              	.LVL144:
 566:Generated_Source\PSoC4/ADC_1.c **** 
 1655              		.loc 1 566 0
 1656              		@ sp needed
 1657 001c 10BD     		pop	{r4, pc}
 1658              	.L124:
 1659 001e C046     		.align	2
 1660              	.L123:
 1661 0020 00000000 		.word	.LANCHOR0
 1662              		.cfi_endproc
 1663              	.LFE1:
 1664              		.size	ADC_1_Start, .-ADC_1_Start
 1665              		.section	.text.ADC_1_StartEx,"ax",%progbits
 1666              		.align	2
 1667              		.global	ADC_1_StartEx
 1668              		.code	16
 1669              		.thumb_func
 1670              		.type	ADC_1_StartEx, %function
 1671              	ADC_1_StartEx:
 1672              	.LFB2:
 585:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_Start();
 1673              		.loc 1 585 0
 1674              		.cfi_startproc
 1675              		@ args = 0, pretend = 0, frame = 0
 1676              		@ frame_needed = 0, uses_anonymous_args = 0
 1677              	.LVL145:
 1678 0000 10B5     		push	{r4, lr}
 1679              		.cfi_def_cfa_offset 8
 1680              		.cfi_offset 4, -8
 1681              		.cfi_offset 14, -4
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 70


 1682 0002 0400     		movs	r4, r0
 586:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_IRQ_StartEx(address);
 1683              		.loc 1 586 0
 1684 0004 FFF7FEFF 		bl	ADC_1_Start
 1685              	.LVL146:
 587:Generated_Source\PSoC4/ADC_1.c ****     return;
 1686              		.loc 1 587 0
 1687 0008 2000     		movs	r0, r4
 1688 000a FFF7FEFF 		bl	ADC_1_IRQ_StartEx
 1689              	.LVL147:
 589:Generated_Source\PSoC4/ADC_1.c **** 
 1690              		.loc 1 589 0
 1691              		@ sp needed
 1692              	.LVL148:
 1693 000e 10BD     		pop	{r4, pc}
 1694              		.cfi_endproc
 1695              	.LFE2:
 1696              		.size	ADC_1_StartEx, .-ADC_1_StartEx
 1697              		.section	.text.ADC_1_SelectConfig,"ax",%progbits
 1698              		.align	2
 1699              		.global	ADC_1_SelectConfig
 1700              		.code	16
 1701              		.thumb_func
 1702              		.type	ADC_1_SelectConfig, %function
 1703              	ADC_1_SelectConfig:
 1704              	.LFB6:
 772:Generated_Source\PSoC4/ADC_1.c ****     /* Check whether the configuration number is valid or not */
 1705              		.loc 1 772 0
 1706              		.cfi_startproc
 1707              		@ args = 0, pretend = 0, frame = 0
 1708              		@ frame_needed = 0, uses_anonymous_args = 0
 1709              	.LVL149:
 1710 0000 70B5     		push	{r4, r5, r6, lr}
 1711              		.cfi_def_cfa_offset 16
 1712              		.cfi_offset 4, -16
 1713              		.cfi_offset 5, -12
 1714              		.cfi_offset 6, -8
 1715              		.cfi_offset 14, -4
 1716 0002 0400     		movs	r4, r0
 1717 0004 0E00     		movs	r6, r1
 774:Generated_Source\PSoC4/ADC_1.c ****     {
 1718              		.loc 1 774 0
 1719 0006 0028     		cmp	r0, #0
 1720 0008 27D1     		bne	.L126
 777:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_selected = 1u;
 1721              		.loc 1 777 0
 1722 000a FFF7FEFF 		bl	ADC_1_Stop
 1723              	.LVL150:
 778:Generated_Source\PSoC4/ADC_1.c **** 
 1724              		.loc 1 778 0
 1725 000e 134B     		ldr	r3, .L129
 1726 0010 0122     		movs	r2, #1
 1727 0012 5A71     		strb	r2, [r3, #5]
 780:Generated_Source\PSoC4/ADC_1.c ****         {
 1728              		.loc 1 780 0
 1729 0014 1B79     		ldrb	r3, [r3, #4]
 1730 0016 002B     		cmp	r3, #0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 71


 1731 0018 06D1     		bne	.L128
 782:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_initVar |= ADC_1_INIT_VAR_INIT_FLAG;
 1732              		.loc 1 782 0
 1733 001a FFF7FEFF 		bl	ADC_1_Init
 1734              	.LVL151:
 783:Generated_Source\PSoC4/ADC_1.c ****         }
 1735              		.loc 1 783 0
 1736 001e 0F4A     		ldr	r2, .L129
 1737 0020 1179     		ldrb	r1, [r2, #4]
 1738 0022 0123     		movs	r3, #1
 1739 0024 0B43     		orrs	r3, r1
 1740 0026 1371     		strb	r3, [r2, #4]
 1741              	.L128:
 788:Generated_Source\PSoC4/ADC_1.c ****         #if (ADC_1_VREF_ROUTED)
 1742              		.loc 1 788 0
 1743 0028 E300     		lsls	r3, r4, #3
 1744 002a 1B1B     		subs	r3, r3, r4
 1745 002c DD00     		lsls	r5, r3, #3
 1746 002e 0C4B     		ldr	r3, .L129+4
 1747 0030 ED18     		adds	r5, r5, r3
 1748 0032 2800     		movs	r0, r5
 1749 0034 FFF7FEFF 		bl	ADC_1_InitConfig
 1750              	.LVL152:
 796:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_RANGE_INTR_MASK_REG = ADC_1_allConfigs[config].rangeIntMask;
 1751              		.loc 1 796 0
 1752 0038 0A4B     		ldr	r3, .L129+8
 1753 003a 2A6A     		ldr	r2, [r5, #32]
 1754 003c 1A60     		str	r2, [r3]
 797:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_SATURATE_INTR_MASK_REG = ADC_1_allConfigs[config].satIntMask;
 1755              		.loc 1 797 0
 1756 003e 0A4B     		ldr	r3, .L129+12
 1757 0040 6A6A     		ldr	r2, [r5, #36]
 1758 0042 1A60     		str	r2, [r3]
 798:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_currentConfig = config;
 1759              		.loc 1 798 0
 1760 0044 AA6A     		ldr	r2, [r5, #40]
 1761 0046 094B     		ldr	r3, .L129+16
 1762 0048 1A60     		str	r2, [r3]
 799:Generated_Source\PSoC4/ADC_1.c **** 
 1763              		.loc 1 799 0
 1764 004a 044B     		ldr	r3, .L129
 1765 004c 1C60     		str	r4, [r3]
 801:Generated_Source\PSoC4/ADC_1.c ****         {
 1766              		.loc 1 801 0
 1767 004e 012E     		cmp	r6, #1
 1768 0050 03D1     		bne	.L126
 804:Generated_Source\PSoC4/ADC_1.c **** 
 1769              		.loc 1 804 0
 1770 0052 FFF7FEFF 		bl	ADC_1_Start
 1771              	.LVL153:
 807:Generated_Source\PSoC4/ADC_1.c ****         }
 1772              		.loc 1 807 0
 1773 0056 FFF7FEFF 		bl	ADC_1_StartConvert
 1774              	.LVL154:
 1775              	.L126:
 811:Generated_Source\PSoC4/ADC_1.c **** 
 1776              		.loc 1 811 0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 72


 1777              		@ sp needed
 1778              	.LVL155:
 1779              	.LVL156:
 1780 005a 70BD     		pop	{r4, r5, r6, pc}
 1781              	.L130:
 1782              		.align	2
 1783              	.L129:
 1784 005c 00000000 		.word	.LANCHOR0
 1785 0060 00000000 		.word	ADC_1_allConfigs
 1786 0064 20003A40 		.word	1077542944
 1787 0068 38023A40 		.word	1077543480
 1788 006c 28023A40 		.word	1077543464
 1789              		.cfi_endproc
 1790              	.LFE6:
 1791              		.size	ADC_1_SelectConfig, .-ADC_1_SelectConfig
 1792              		.section	.text.ADC_1_StopConvert,"ax",%progbits
 1793              		.align	2
 1794              		.global	ADC_1_StopConvert
 1795              		.code	16
 1796              		.thumb_func
 1797              		.type	ADC_1_StopConvert, %function
 1798              	ADC_1_StopConvert:
 1799              	.LFB8:
 865:Generated_Source\PSoC4/ADC_1.c ****     if((ADC_1_SAR_SAMPLE_CTRL_REG
 1800              		.loc 1 865 0
 1801              		.cfi_startproc
 1802              		@ args = 0, pretend = 0, frame = 0
 1803              		@ frame_needed = 0, uses_anonymous_args = 0
 1804 0000 10B5     		push	{r4, lr}
 1805              		.cfi_def_cfa_offset 8
 1806              		.cfi_offset 4, -8
 1807              		.cfi_offset 14, -4
 866:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 1808              		.loc 1 866 0
 1809 0002 0C4B     		ldr	r3, .L133
 1810 0004 1B68     		ldr	r3, [r3]
 1811 0006 5B03     		lsls	r3, r3, #13
 1812 0008 12D5     		bpl	.L131
 870:Generated_Source\PSoC4/ADC_1.c **** 
 1813              		.loc 1 870 0
 1814 000a 0A4A     		ldr	r2, .L133
 1815 000c 1168     		ldr	r1, [r2]
 1816 000e 0A4B     		ldr	r3, .L133+4
 1817 0010 0B40     		ands	r3, r1
 1818 0012 1360     		str	r3, [r2]
 872:Generated_Source\PSoC4/ADC_1.c ****             & ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
 1819              		.loc 1 872 0
 1820 0014 094B     		ldr	r3, .L133+8
 1821 0016 1A68     		ldr	r2, [r3]
 1822 0018 D300     		lsls	r3, r2, #3
 1823 001a 9A1A     		subs	r2, r3, r2
 1824 001c D300     		lsls	r3, r2, #3
 1825 001e 084A     		ldr	r2, .L133+12
 1826 0020 D318     		adds	r3, r2, r3
 1827 0022 1B6B     		ldr	r3, [r3, #48]
 1828 0024 9B07     		lsls	r3, r3, #30
 1829 0026 03D5     		bpl	.L131
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 73


 877:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_Start();
 1830              		.loc 1 877 0
 1831 0028 FFF7FEFF 		bl	ADC_1_Stop
 1832              	.LVL157:
 878:Generated_Source\PSoC4/ADC_1.c ****         }
 1833              		.loc 1 878 0
 1834 002c FFF7FEFF 		bl	ADC_1_Start
 1835              	.LVL158:
 1836              	.L131:
 883:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 1837              		.loc 1 883 0
 1838              		@ sp needed
 1839 0030 10BD     		pop	{r4, pc}
 1840              	.L134:
 1841 0032 C046     		.align	2
 1842              	.L133:
 1843 0034 04003A40 		.word	1077542916
 1844 0038 FFFFFEFF 		.word	-65537
 1845 003c 00000000 		.word	.LANCHOR0
 1846 0040 00000000 		.word	ADC_1_allConfigs
 1847              		.cfi_endproc
 1848              	.LFE8:
 1849              		.size	ADC_1_StopConvert, .-ADC_1_StopConvert
 1850              		.comm	ADC_1_countsPer10Volt,4,4
 1851              		.comm	ADC_1_offset,2,4
 1852              		.global	ADC_1_selected
 1853              		.global	ADC_1_initVar
 1854              		.bss
 1855              		.align	2
 1856              		.set	.LANCHOR0,. + 0
 1857              		.type	ADC_1_currentConfig, %object
 1858              		.size	ADC_1_currentConfig, 4
 1859              	ADC_1_currentConfig:
 1860 0000 00000000 		.space	4
 1861              		.type	ADC_1_initVar, %object
 1862              		.size	ADC_1_initVar, 1
 1863              	ADC_1_initVar:
 1864 0004 00       		.space	1
 1865              		.type	ADC_1_selected, %object
 1866              		.size	ADC_1_selected, 1
 1867              	ADC_1_selected:
 1868 0005 00       		.space	1
 1869              		.text
 1870              	.Letext0:
 1871              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1872              		.file 3 "Generated_Source\\PSoC4\\ADC_1.h"
 1873              		.file 4 "Generated_Source\\PSoC4\\ADC_1_intSarClock.h"
 1874              		.file 5 "Generated_Source\\PSoC4\\CyLib.h"
 1875              		.file 6 "Generated_Source\\PSoC4\\ADC_1_IRQ.h"
 1876              		.section	.debug_info,"",%progbits
 1877              	.Ldebug_info0:
 1878 0000 6D0A0000 		.4byte	0xa6d
 1879 0004 0400     		.2byte	0x4
 1880 0006 00000000 		.4byte	.Ldebug_abbrev0
 1881 000a 04       		.byte	0x4
 1882 000b 01       		.uleb128 0x1
 1883 000c B7040000 		.4byte	.LASF110
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 74


 1884 0010 0C       		.byte	0xc
 1885 0011 08040000 		.4byte	.LASF111
 1886 0015 57000000 		.4byte	.LASF112
 1887 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1888 001d 00000000 		.4byte	0
 1889 0021 00000000 		.4byte	.Ldebug_line0
 1890 0025 02       		.uleb128 0x2
 1891 0026 01       		.byte	0x1
 1892 0027 06       		.byte	0x6
 1893 0028 CD000000 		.4byte	.LASF0
 1894 002c 02       		.uleb128 0x2
 1895 002d 01       		.byte	0x1
 1896 002e 08       		.byte	0x8
 1897 002f 38040000 		.4byte	.LASF1
 1898 0033 02       		.uleb128 0x2
 1899 0034 02       		.byte	0x2
 1900 0035 05       		.byte	0x5
 1901 0036 6E040000 		.4byte	.LASF2
 1902 003a 02       		.uleb128 0x2
 1903 003b 02       		.byte	0x2
 1904 003c 07       		.byte	0x7
 1905 003d 8B020000 		.4byte	.LASF3
 1906 0041 02       		.uleb128 0x2
 1907 0042 04       		.byte	0x4
 1908 0043 05       		.byte	0x5
 1909 0044 11010000 		.4byte	.LASF4
 1910 0048 02       		.uleb128 0x2
 1911 0049 04       		.byte	0x4
 1912 004a 07       		.byte	0x7
 1913 004b 10020000 		.4byte	.LASF5
 1914 004f 02       		.uleb128 0x2
 1915 0050 08       		.byte	0x8
 1916 0051 05       		.byte	0x5
 1917 0052 BF000000 		.4byte	.LASF6
 1918 0056 02       		.uleb128 0x2
 1919 0057 08       		.byte	0x8
 1920 0058 07       		.byte	0x7
 1921 0059 40000000 		.4byte	.LASF7
 1922 005d 03       		.uleb128 0x3
 1923 005e 04       		.byte	0x4
 1924 005f 05       		.byte	0x5
 1925 0060 696E7400 		.ascii	"int\000"
 1926 0064 02       		.uleb128 0x2
 1927 0065 04       		.byte	0x4
 1928 0066 07       		.byte	0x7
 1929 0067 D9010000 		.4byte	.LASF8
 1930 006b 04       		.uleb128 0x4
 1931 006c 31010000 		.4byte	.LASF9
 1932 0070 02       		.byte	0x2
 1933 0071 FC01     		.2byte	0x1fc
 1934 0073 2C000000 		.4byte	0x2c
 1935 0077 04       		.uleb128 0x4
 1936 0078 00000000 		.4byte	.LASF10
 1937 007c 02       		.byte	0x2
 1938 007d FD01     		.2byte	0x1fd
 1939 007f 3A000000 		.4byte	0x3a
 1940 0083 04       		.uleb128 0x4
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 75


 1941 0084 8B010000 		.4byte	.LASF11
 1942 0088 02       		.byte	0x2
 1943 0089 FE01     		.2byte	0x1fe
 1944 008b 48000000 		.4byte	0x48
 1945 008f 04       		.uleb128 0x4
 1946 0090 6D060000 		.4byte	.LASF12
 1947 0094 02       		.byte	0x2
 1948 0095 0002     		.2byte	0x200
 1949 0097 33000000 		.4byte	0x33
 1950 009b 04       		.uleb128 0x4
 1951 009c FA000000 		.4byte	.LASF13
 1952 00a0 02       		.byte	0x2
 1953 00a1 0102     		.2byte	0x201
 1954 00a3 41000000 		.4byte	0x41
 1955 00a7 04       		.uleb128 0x4
 1956 00a8 45030000 		.4byte	.LASF14
 1957 00ac 02       		.byte	0x2
 1958 00ad 0202     		.2byte	0x202
 1959 00af B3000000 		.4byte	0xb3
 1960 00b3 02       		.uleb128 0x2
 1961 00b4 04       		.byte	0x4
 1962 00b5 04       		.byte	0x4
 1963 00b6 D2030000 		.4byte	.LASF15
 1964 00ba 02       		.uleb128 0x2
 1965 00bb 08       		.byte	0x8
 1966 00bc 04       		.byte	0x4
 1967 00bd 41010000 		.4byte	.LASF16
 1968 00c1 04       		.uleb128 0x4
 1969 00c2 BB030000 		.4byte	.LASF17
 1970 00c6 02       		.byte	0x2
 1971 00c7 0702     		.2byte	0x207
 1972 00c9 4F000000 		.4byte	0x4f
 1973 00cd 02       		.uleb128 0x2
 1974 00ce 01       		.byte	0x1
 1975 00cf 08       		.byte	0x8
 1976 00d0 4E050000 		.4byte	.LASF18
 1977 00d4 04       		.uleb128 0x4
 1978 00d5 2C030000 		.4byte	.LASF19
 1979 00d9 02       		.byte	0x2
 1980 00da A802     		.2byte	0x2a8
 1981 00dc E0000000 		.4byte	0xe0
 1982 00e0 05       		.uleb128 0x5
 1983 00e1 83000000 		.4byte	0x83
 1984 00e5 04       		.uleb128 0x4
 1985 00e6 58050000 		.4byte	.LASF20
 1986 00ea 02       		.byte	0x2
 1987 00eb B802     		.2byte	0x2b8
 1988 00ed F1000000 		.4byte	0xf1
 1989 00f1 06       		.uleb128 0x6
 1990 00f2 04       		.byte	0x4
 1991 00f3 F7000000 		.4byte	0xf7
 1992 00f7 07       		.uleb128 0x7
 1993 00f8 02       		.uleb128 0x2
 1994 00f9 08       		.byte	0x8
 1995 00fa 04       		.byte	0x4
 1996 00fb 79030000 		.4byte	.LASF21
 1997 00ff 02       		.uleb128 0x2
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 76


 1998 0100 04       		.byte	0x4
 1999 0101 07       		.byte	0x7
 2000 0102 4D030000 		.4byte	.LASF22
 2001 0106 08       		.uleb128 0x8
 2002 0107 38       		.byte	0x38
 2003 0108 03       		.byte	0x3
 2004 0109 5D       		.byte	0x5d
 2005 010a B7010000 		.4byte	0x1b7
 2006 010e 09       		.uleb128 0x9
 2007 010f 93060000 		.4byte	.LASF23
 2008 0113 03       		.byte	0x3
 2009 0114 5F       		.byte	0x5f
 2010 0115 83000000 		.4byte	0x83
 2011 0119 00       		.byte	0
 2012 011a 09       		.uleb128 0x9
 2013 011b 15030000 		.4byte	.LASF24
 2014 011f 03       		.byte	0x3
 2015 0120 60       		.byte	0x60
 2016 0121 83000000 		.4byte	0x83
 2017 0125 04       		.byte	0x4
 2018 0126 09       		.uleb128 0x9
 2019 0127 E3050000 		.4byte	.LASF25
 2020 012b 03       		.byte	0x3
 2021 012c 61       		.byte	0x61
 2022 012d 83000000 		.4byte	0x83
 2023 0131 08       		.byte	0x8
 2024 0132 09       		.uleb128 0x9
 2025 0133 2C060000 		.4byte	.LASF26
 2026 0137 03       		.byte	0x3
 2027 0138 64       		.byte	0x64
 2028 0139 83000000 		.4byte	0x83
 2029 013d 0C       		.byte	0xc
 2030 013e 09       		.uleb128 0x9
 2031 013f 7E010000 		.4byte	.LASF27
 2032 0143 03       		.byte	0x3
 2033 0144 65       		.byte	0x65
 2034 0145 83000000 		.4byte	0x83
 2035 0149 10       		.byte	0x10
 2036 014a 09       		.uleb128 0x9
 2037 014b 8D030000 		.4byte	.LASF28
 2038 014f 03       		.byte	0x3
 2039 0150 66       		.byte	0x66
 2040 0151 83000000 		.4byte	0x83
 2041 0155 14       		.byte	0x14
 2042 0156 09       		.uleb128 0x9
 2043 0157 AF020000 		.4byte	.LASF29
 2044 015b 03       		.byte	0x3
 2045 015c 67       		.byte	0x67
 2046 015d 83000000 		.4byte	0x83
 2047 0161 18       		.byte	0x18
 2048 0162 09       		.uleb128 0x9
 2049 0163 0C060000 		.4byte	.LASF30
 2050 0167 03       		.byte	0x3
 2051 0168 68       		.byte	0x68
 2052 0169 83000000 		.4byte	0x83
 2053 016d 1C       		.byte	0x1c
 2054 016e 09       		.uleb128 0x9
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 77


 2055 016f 01040000 		.4byte	.LASF31
 2056 0173 03       		.byte	0x3
 2057 0174 69       		.byte	0x69
 2058 0175 83000000 		.4byte	0x83
 2059 0179 20       		.byte	0x20
 2060 017a 09       		.uleb128 0x9
 2061 017b E6010000 		.4byte	.LASF32
 2062 017f 03       		.byte	0x3
 2063 0180 6A       		.byte	0x6a
 2064 0181 83000000 		.4byte	0x83
 2065 0185 24       		.byte	0x24
 2066 0186 09       		.uleb128 0x9
 2067 0187 9A030000 		.4byte	.LASF33
 2068 018b 03       		.byte	0x3
 2069 018c 6B       		.byte	0x6b
 2070 018d 83000000 		.4byte	0x83
 2071 0191 28       		.byte	0x28
 2072 0192 09       		.uleb128 0x9
 2073 0193 AB040000 		.4byte	.LASF34
 2074 0197 03       		.byte	0x3
 2075 0198 6C       		.byte	0x6c
 2076 0199 9B000000 		.4byte	0x9b
 2077 019d 2C       		.byte	0x2c
 2078 019e 09       		.uleb128 0x9
 2079 019f E8050000 		.4byte	.LASF35
 2080 01a3 03       		.byte	0x3
 2081 01a4 6E       		.byte	0x6e
 2082 01a5 83000000 		.4byte	0x83
 2083 01a9 30       		.byte	0x30
 2084 01aa 09       		.uleb128 0x9
 2085 01ab E4000000 		.4byte	.LASF36
 2086 01af 03       		.byte	0x3
 2087 01b0 75       		.byte	0x75
 2088 01b1 77000000 		.4byte	0x77
 2089 01b5 34       		.byte	0x34
 2090 01b6 00       		.byte	0
 2091 01b7 0A       		.uleb128 0xa
 2092 01b8 37060000 		.4byte	.LASF37
 2093 01bc 03       		.byte	0x3
 2094 01bd 7C       		.byte	0x7c
 2095 01be 06010000 		.4byte	0x106
 2096 01c2 0B       		.uleb128 0xb
 2097 01c3 B8010000 		.4byte	.LASF113
 2098 01c7 01       		.byte	0x1
 2099 01c8 E102     		.2byte	0x2e1
 2100 01ca 00000000 		.4byte	.LFB5
 2101 01ce 34000000 		.4byte	.LFE5-.LFB5
 2102 01d2 01       		.uleb128 0x1
 2103 01d3 9C       		.byte	0x9c
 2104 01d4 F7010000 		.4byte	0x1f7
 2105 01d8 0C       		.uleb128 0xc
 2106 01d9 65050000 		.4byte	.LASF38
 2107 01dd 01       		.byte	0x1
 2108 01de E102     		.2byte	0x2e1
 2109 01e0 F7010000 		.4byte	0x1f7
 2110 01e4 01       		.uleb128 0x1
 2111 01e5 50       		.byte	0x50
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 78


 2112 01e6 0D       		.uleb128 0xd
 2113 01e7 4E020000 		.4byte	.LASF40
 2114 01eb 01       		.byte	0x1
 2115 01ec E502     		.2byte	0x2e5
 2116 01ee 83000000 		.4byte	0x83
 2117 01f2 00000000 		.4byte	.LLST0
 2118 01f6 00       		.byte	0
 2119 01f7 06       		.uleb128 0x6
 2120 01f8 04       		.byte	0x4
 2121 01f9 FD010000 		.4byte	0x1fd
 2122 01fd 0E       		.uleb128 0xe
 2123 01fe B7010000 		.4byte	0x1b7
 2124 0202 0F       		.uleb128 0xf
 2125 0203 B0050000 		.4byte	.LASF114
 2126 0207 01       		.byte	0x1
 2127 0208 1504     		.2byte	0x415
 2128 020a 9B000000 		.4byte	0x9b
 2129 020e 00000000 		.4byte	.LFB13
 2130 0212 58000000 		.4byte	.LFE13-.LFB13
 2131 0216 01       		.uleb128 0x1
 2132 0217 9C       		.byte	0x9c
 2133 0218 4D020000 		.4byte	0x24d
 2134 021c 10       		.uleb128 0x10
 2135 021d 49050000 		.4byte	.LASF39
 2136 0221 01       		.byte	0x1
 2137 0222 1504     		.2byte	0x415
 2138 0224 83000000 		.4byte	0x83
 2139 0228 2F000000 		.4byte	.LLST1
 2140 022c 0D       		.uleb128 0xd
 2141 022d 32030000 		.4byte	.LASF41
 2142 0231 01       		.byte	0x1
 2143 0232 1704     		.2byte	0x417
 2144 0234 9B000000 		.4byte	0x9b
 2145 0238 50000000 		.4byte	.LLST2
 2146 023c 0D       		.uleb128 0xd
 2147 023d 21030000 		.4byte	.LASF42
 2148 0241 01       		.byte	0x1
 2149 0242 1804     		.2byte	0x418
 2150 0244 83000000 		.4byte	0x83
 2151 0248 6F000000 		.4byte	.LLST3
 2152 024c 00       		.byte	0
 2153 024d 11       		.uleb128 0x11
 2154 024e EF000000 		.4byte	.LASF44
 2155 0252 01       		.byte	0x1
 2156 0253 6602     		.2byte	0x266
 2157 0255 00000000 		.4byte	.LFB3
 2158 0259 10000000 		.4byte	.LFE3-.LFB3
 2159 025d 01       		.uleb128 0x1
 2160 025e 9C       		.byte	0x9c
 2161 025f 12       		.uleb128 0x12
 2162 0260 00010000 		.4byte	.LASF46
 2163 0264 01       		.byte	0x1
 2164 0265 8402     		.2byte	0x284
 2165 0267 00000000 		.4byte	.LFB4
 2166 026b AC000000 		.4byte	.LFE4-.LFB4
 2167 026f 01       		.uleb128 0x1
 2168 0270 9C       		.byte	0x9c
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 79


 2169 0271 D2020000 		.4byte	0x2d2
 2170 0275 10       		.uleb128 0x10
 2171 0276 65050000 		.4byte	.LASF38
 2172 027a 01       		.byte	0x1
 2173 027b 8402     		.2byte	0x284
 2174 027d F7010000 		.4byte	0x1f7
 2175 0281 8D000000 		.4byte	.LLST4
 2176 0285 0D       		.uleb128 0xd
 2177 0286 91040000 		.4byte	.LASF43
 2178 028a 01       		.byte	0x1
 2179 028b 8602     		.2byte	0x286
 2180 028d 83000000 		.4byte	0x83
 2181 0291 B9000000 		.4byte	.LLST5
 2182 0295 0D       		.uleb128 0xd
 2183 0296 4E020000 		.4byte	.LASF40
 2184 029a 01       		.byte	0x1
 2185 029b 8702     		.2byte	0x287
 2186 029d 83000000 		.4byte	0x83
 2187 02a1 D8000000 		.4byte	.LLST6
 2188 02a5 13       		.uleb128 0x13
 2189 02a6 08000000 		.4byte	.LVL15
 2190 02aa 180A0000 		.4byte	0xa18
 2191 02ae 14       		.uleb128 0x14
 2192 02af 10000000 		.4byte	.LVL16
 2193 02b3 230A0000 		.4byte	0xa23
 2194 02b7 C1020000 		.4byte	0x2c1
 2195 02bb 15       		.uleb128 0x15
 2196 02bc 01       		.uleb128 0x1
 2197 02bd 51       		.byte	0x51
 2198 02be 01       		.uleb128 0x1
 2199 02bf 30       		.byte	0x30
 2200 02c0 00       		.byte	0
 2201 02c1 16       		.uleb128 0x16
 2202 02c2 16000000 		.4byte	.LVL17
 2203 02c6 2E0A0000 		.4byte	0xa2e
 2204 02ca 15       		.uleb128 0x15
 2205 02cb 01       		.uleb128 0x1
 2206 02cc 50       		.byte	0x50
 2207 02cd 02       		.uleb128 0x2
 2208 02ce 08       		.byte	0x8
 2209 02cf FF       		.byte	0xff
 2210 02d0 00       		.byte	0
 2211 02d1 00       		.byte	0
 2212 02d2 11       		.uleb128 0x11
 2213 02d3 FD010000 		.4byte	.LASF45
 2214 02d7 01       		.byte	0x1
 2215 02d8 4003     		.2byte	0x340
 2216 02da 00000000 		.4byte	.LFB7
 2217 02de 28000000 		.4byte	.LFE7-.LFB7
 2218 02e2 01       		.uleb128 0x1
 2219 02e3 9C       		.byte	0x9c
 2220 02e4 12       		.uleb128 0x12
 2221 02e5 48010000 		.4byte	.LASF47
 2222 02e9 01       		.byte	0x1
 2223 02ea 8703     		.2byte	0x387
 2224 02ec 00000000 		.4byte	.LFB9
 2225 02f0 28000000 		.4byte	.LFE9-.LFB9
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 80


 2226 02f4 01       		.uleb128 0x1
 2227 02f5 9C       		.byte	0x9c
 2228 02f6 09030000 		.4byte	0x309
 2229 02fa 0C       		.uleb128 0xc
 2230 02fb 53050000 		.4byte	.LASF48
 2231 02ff 01       		.byte	0x1
 2232 0300 8703     		.2byte	0x387
 2233 0302 83000000 		.4byte	0x83
 2234 0306 01       		.uleb128 0x1
 2235 0307 50       		.byte	0x50
 2236 0308 00       		.byte	0
 2237 0309 12       		.uleb128 0x12
 2238 030a EF020000 		.4byte	.LASF49
 2239 030e 01       		.byte	0x1
 2240 030f BE03     		.2byte	0x3be
 2241 0311 00000000 		.4byte	.LFB10
 2242 0315 10000000 		.4byte	.LFE10-.LFB10
 2243 0319 01       		.uleb128 0x1
 2244 031a 9C       		.byte	0x9c
 2245 031b 30030000 		.4byte	0x330
 2246 031f 10       		.uleb128 0x10
 2247 0320 A1010000 		.4byte	.LASF50
 2248 0324 01       		.byte	0x1
 2249 0325 BE03     		.2byte	0x3be
 2250 0327 83000000 		.4byte	0x83
 2251 032b EE000000 		.4byte	.LLST7
 2252 032f 00       		.byte	0
 2253 0330 12       		.uleb128 0x12
 2254 0331 73060000 		.4byte	.LASF51
 2255 0335 01       		.byte	0x1
 2256 0336 D303     		.2byte	0x3d3
 2257 0338 00000000 		.4byte	.LFB11
 2258 033c 2C000000 		.4byte	.LFE11-.LFB11
 2259 0340 01       		.uleb128 0x1
 2260 0341 9C       		.byte	0x9c
 2261 0342 65030000 		.4byte	0x365
 2262 0346 10       		.uleb128 0x10
 2263 0347 58020000 		.4byte	.LASF52
 2264 034b 01       		.byte	0x1
 2265 034c D303     		.2byte	0x3d3
 2266 034e 83000000 		.4byte	0x83
 2267 0352 0F010000 		.4byte	.LLST8
 2268 0356 17       		.uleb128 0x17
 2269 0357 07000000 		.4byte	.LASF53
 2270 035b 01       		.byte	0x1
 2271 035c D503     		.2byte	0x3d5
 2272 035e 83000000 		.4byte	0x83
 2273 0362 01       		.uleb128 0x1
 2274 0363 52       		.byte	0x52
 2275 0364 00       		.byte	0
 2276 0365 18       		.uleb128 0x18
 2277 0366 16060000 		.4byte	.LASF56
 2278 036a 01       		.byte	0x1
 2279 036b EF03     		.2byte	0x3ef
 2280 036d 83000000 		.4byte	0x83
 2281 0371 00000000 		.4byte	.LFB12
 2282 0375 38000000 		.4byte	.LFE12-.LFB12
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 81


 2283 0379 01       		.uleb128 0x1
 2284 037a 9C       		.byte	0x9c
 2285 037b B0030000 		.4byte	0x3b0
 2286 037f 10       		.uleb128 0x10
 2287 0380 D1010000 		.4byte	.LASF54
 2288 0384 01       		.byte	0x1
 2289 0385 EF03     		.2byte	0x3ef
 2290 0387 83000000 		.4byte	0x83
 2291 038b 2D010000 		.4byte	.LLST9
 2292 038f 0D       		.uleb128 0xd
 2293 0390 9F060000 		.4byte	.LASF55
 2294 0394 01       		.byte	0x1
 2295 0395 F103     		.2byte	0x3f1
 2296 0397 83000000 		.4byte	0x83
 2297 039b 61010000 		.4byte	.LLST10
 2298 039f 19       		.uleb128 0x19
 2299 03a0 77647400 		.ascii	"wdt\000"
 2300 03a4 01       		.byte	0x1
 2301 03a5 F203     		.2byte	0x3f2
 2302 03a7 83000000 		.4byte	0x83
 2303 03ab 97010000 		.4byte	.LLST11
 2304 03af 00       		.byte	0
 2305 03b0 18       		.uleb128 0x18
 2306 03b1 46040000 		.4byte	.LASF57
 2307 03b5 01       		.byte	0x1
 2308 03b6 3E04     		.2byte	0x43e
 2309 03b8 8F000000 		.4byte	0x8f
 2310 03bc 00000000 		.4byte	.LFB14
 2311 03c0 54000000 		.4byte	.LFE14-.LFB14
 2312 03c4 01       		.uleb128 0x1
 2313 03c5 9C       		.byte	0x9c
 2314 03c6 FA030000 		.4byte	0x3fa
 2315 03ca 10       		.uleb128 0x10
 2316 03cb 49050000 		.4byte	.LASF39
 2317 03cf 01       		.byte	0x1
 2318 03d0 3E04     		.2byte	0x43e
 2319 03d2 83000000 		.4byte	0x83
 2320 03d6 CA010000 		.4byte	.LLST12
 2321 03da 0D       		.uleb128 0xd
 2322 03db 3B030000 		.4byte	.LASF58
 2323 03df 01       		.byte	0x1
 2324 03e0 4004     		.2byte	0x440
 2325 03e2 83000000 		.4byte	0x83
 2326 03e6 0F020000 		.4byte	.LLST13
 2327 03ea 16       		.uleb128 0x16
 2328 03eb 1E000000 		.4byte	.LVL38
 2329 03ef 390A0000 		.4byte	0xa39
 2330 03f3 15       		.uleb128 0x15
 2331 03f4 01       		.uleb128 0x1
 2332 03f5 50       		.byte	0x50
 2333 03f6 01       		.uleb128 0x1
 2334 03f7 30       		.byte	0x30
 2335 03f8 00       		.byte	0
 2336 03f9 00       		.byte	0
 2337 03fa 18       		.uleb128 0x18
 2338 03fb 4B060000 		.4byte	.LASF59
 2339 03ff 01       		.byte	0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 82


 2340 0400 6104     		.2byte	0x461
 2341 0402 9B000000 		.4byte	0x9b
 2342 0406 00000000 		.4byte	.LFB15
 2343 040a 64000000 		.4byte	.LFE15-.LFB15
 2344 040e 01       		.uleb128 0x1
 2345 040f 9C       		.byte	0x9c
 2346 0410 78040000 		.4byte	0x478
 2347 0414 10       		.uleb128 0x10
 2348 0415 49050000 		.4byte	.LASF39
 2349 0419 01       		.byte	0x1
 2350 041a 6104     		.2byte	0x461
 2351 041c 83000000 		.4byte	0x83
 2352 0420 2D020000 		.4byte	.LLST14
 2353 0424 0D       		.uleb128 0xd
 2354 0425 3B030000 		.4byte	.LASF58
 2355 0429 01       		.byte	0x1
 2356 042a 6304     		.2byte	0x463
 2357 042c 83000000 		.4byte	0x83
 2358 0430 59020000 		.4byte	.LLST15
 2359 0434 0D       		.uleb128 0xd
 2360 0435 85040000 		.4byte	.LASF60
 2361 0439 01       		.byte	0x1
 2362 043a 6404     		.2byte	0x464
 2363 043c 8F000000 		.4byte	0x8f
 2364 0440 77020000 		.4byte	.LLST16
 2365 0444 0D       		.uleb128 0xd
 2366 0445 D0020000 		.4byte	.LASF61
 2367 0449 01       		.byte	0x1
 2368 044a 6504     		.2byte	0x465
 2369 044c 9B000000 		.4byte	0x9b
 2370 0450 8A020000 		.4byte	.LLST17
 2371 0454 14       		.uleb128 0x14
 2372 0455 1E000000 		.4byte	.LVL46
 2373 0459 390A0000 		.4byte	0xa39
 2374 045d 67040000 		.4byte	0x467
 2375 0461 15       		.uleb128 0x15
 2376 0462 01       		.uleb128 0x1
 2377 0463 50       		.byte	0x50
 2378 0464 01       		.uleb128 0x1
 2379 0465 30       		.byte	0x30
 2380 0466 00       		.byte	0
 2381 0467 16       		.uleb128 0x16
 2382 0468 4A000000 		.4byte	.LVL50
 2383 046c 02020000 		.4byte	0x202
 2384 0470 15       		.uleb128 0x15
 2385 0471 01       		.uleb128 0x1
 2386 0472 50       		.byte	0x50
 2387 0473 02       		.uleb128 0x2
 2388 0474 75       		.byte	0x75
 2389 0475 00       		.sleb128 0
 2390 0476 00       		.byte	0
 2391 0477 00       		.byte	0
 2392 0478 12       		.uleb128 0x12
 2393 0479 A6010000 		.4byte	.LASF62
 2394 047d 01       		.byte	0x1
 2395 047e 8D04     		.2byte	0x48d
 2396 0480 00000000 		.4byte	.LFB16
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 83


 2397 0484 1C000000 		.4byte	.LFE16-.LFB16
 2398 0488 01       		.uleb128 0x1
 2399 0489 9C       		.byte	0x9c
 2400 048a 9F040000 		.4byte	0x49f
 2401 048e 10       		.uleb128 0x10
 2402 048f 70030000 		.4byte	.LASF63
 2403 0493 01       		.byte	0x1
 2404 0494 8D04     		.2byte	0x48d
 2405 0496 83000000 		.4byte	0x83
 2406 049a A8020000 		.4byte	.LLST18
 2407 049e 00       		.byte	0
 2408 049f 12       		.uleb128 0x12
 2409 04a0 63020000 		.4byte	.LASF64
 2410 04a4 01       		.byte	0x1
 2411 04a5 A104     		.2byte	0x4a1
 2412 04a7 00000000 		.4byte	.LFB17
 2413 04ab 18000000 		.4byte	.LFE17-.LFB17
 2414 04af 01       		.uleb128 0x1
 2415 04b0 9C       		.byte	0x9c
 2416 04b1 C6040000 		.4byte	0x4c6
 2417 04b5 10       		.uleb128 0x10
 2418 04b6 EA030000 		.4byte	.LASF65
 2419 04ba 01       		.byte	0x1
 2420 04bb A104     		.2byte	0x4a1
 2421 04bd 83000000 		.4byte	0x83
 2422 04c1 C9020000 		.4byte	.LLST19
 2423 04c5 00       		.byte	0
 2424 04c6 12       		.uleb128 0x12
 2425 04c7 5D010000 		.4byte	.LASF66
 2426 04cb 01       		.byte	0x1
 2427 04cc B804     		.2byte	0x4b8
 2428 04ce 00000000 		.4byte	.LFB18
 2429 04d2 2C000000 		.4byte	.LFE18-.LFB18
 2430 04d6 01       		.uleb128 0x1
 2431 04d7 9C       		.byte	0x9c
 2432 04d8 FB040000 		.4byte	0x4fb
 2433 04dc 10       		.uleb128 0x10
 2434 04dd 00030000 		.4byte	.LASF67
 2435 04e1 01       		.byte	0x1
 2436 04e2 B804     		.2byte	0x4b8
 2437 04e4 83000000 		.4byte	0x83
 2438 04e8 EA020000 		.4byte	.LLST20
 2439 04ec 17       		.uleb128 0x17
 2440 04ed 07000000 		.4byte	.LASF53
 2441 04f1 01       		.byte	0x1
 2442 04f2 BA04     		.2byte	0x4ba
 2443 04f4 83000000 		.4byte	0x83
 2444 04f8 01       		.uleb128 0x1
 2445 04f9 52       		.byte	0x52
 2446 04fa 00       		.byte	0
 2447 04fb 12       		.uleb128 0x12
 2448 04fc 27040000 		.4byte	.LASF68
 2449 0500 01       		.byte	0x1
 2450 0501 D004     		.2byte	0x4d0
 2451 0503 00000000 		.4byte	.LFB19
 2452 0507 2C000000 		.4byte	.LFE19-.LFB19
 2453 050b 01       		.uleb128 0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 84


 2454 050c 9C       		.byte	0x9c
 2455 050d 30050000 		.4byte	0x530
 2456 0511 10       		.uleb128 0x10
 2457 0512 B3030000 		.4byte	.LASF69
 2458 0516 01       		.byte	0x1
 2459 0517 D004     		.2byte	0x4d0
 2460 0519 83000000 		.4byte	0x83
 2461 051d 08030000 		.4byte	.LLST21
 2462 0521 17       		.uleb128 0x17
 2463 0522 07000000 		.4byte	.LASF53
 2464 0526 01       		.byte	0x1
 2465 0527 D204     		.2byte	0x4d2
 2466 0529 83000000 		.4byte	0x83
 2467 052d 01       		.uleb128 0x1
 2468 052e 52       		.byte	0x52
 2469 052f 00       		.byte	0
 2470 0530 12       		.uleb128 0x12
 2471 0531 5D060000 		.4byte	.LASF70
 2472 0535 01       		.byte	0x1
 2473 0536 F104     		.2byte	0x4f1
 2474 0538 00000000 		.4byte	.LFB20
 2475 053c 44000000 		.4byte	.LFE20-.LFB20
 2476 0540 01       		.uleb128 0x1
 2477 0541 9C       		.byte	0x9c
 2478 0542 76050000 		.4byte	0x576
 2479 0546 10       		.uleb128 0x10
 2480 0547 49050000 		.4byte	.LASF39
 2481 054b 01       		.byte	0x1
 2482 054c F104     		.2byte	0x4f1
 2483 054e 83000000 		.4byte	0x83
 2484 0552 26030000 		.4byte	.LLST22
 2485 0556 10       		.uleb128 0x10
 2486 0557 DC050000 		.4byte	.LASF71
 2487 055b 01       		.byte	0x1
 2488 055c F104     		.2byte	0x4f1
 2489 055e 8F000000 		.4byte	0x8f
 2490 0562 52030000 		.4byte	.LLST23
 2491 0566 16       		.uleb128 0x16
 2492 0567 20000000 		.4byte	.LVL69
 2493 056b 390A0000 		.4byte	0xa39
 2494 056f 15       		.uleb128 0x15
 2495 0570 01       		.uleb128 0x1
 2496 0571 50       		.byte	0x50
 2497 0572 01       		.uleb128 0x1
 2498 0573 30       		.byte	0x30
 2499 0574 00       		.byte	0
 2500 0575 00       		.byte	0
 2501 0576 12       		.uleb128 0x12
 2502 0577 A5030000 		.4byte	.LASF72
 2503 057b 01       		.byte	0x1
 2504 057c 1105     		.2byte	0x511
 2505 057e 00000000 		.4byte	.LFB21
 2506 0582 44000000 		.4byte	.LFE21-.LFB21
 2507 0586 01       		.uleb128 0x1
 2508 0587 9C       		.byte	0x9c
 2509 0588 BC050000 		.4byte	0x5bc
 2510 058c 10       		.uleb128 0x10
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 85


 2511 058d 49050000 		.4byte	.LASF39
 2512 0591 01       		.byte	0x1
 2513 0592 1105     		.2byte	0x511
 2514 0594 83000000 		.4byte	0x83
 2515 0598 73030000 		.4byte	.LLST24
 2516 059c 10       		.uleb128 0x10
 2517 059d 11000000 		.4byte	.LASF73
 2518 05a1 01       		.byte	0x1
 2519 05a2 1105     		.2byte	0x511
 2520 05a4 9B000000 		.4byte	0x9b
 2521 05a8 9F030000 		.4byte	.LLST25
 2522 05ac 16       		.uleb128 0x16
 2523 05ad 20000000 		.4byte	.LVL73
 2524 05b1 390A0000 		.4byte	0xa39
 2525 05b5 15       		.uleb128 0x15
 2526 05b6 01       		.uleb128 0x1
 2527 05b7 50       		.byte	0x50
 2528 05b8 01       		.uleb128 0x1
 2529 05b9 30       		.byte	0x30
 2530 05ba 00       		.byte	0
 2531 05bb 00       		.byte	0
 2532 05bc 1A       		.uleb128 0x1a
 2533 05bd 1A010000 		.4byte	.LASF74
 2534 05c1 01       		.byte	0x1
 2535 05c2 2A05     		.2byte	0x52a
 2536 05c4 8F000000 		.4byte	0x8f
 2537 05c8 00000000 		.4byte	.LFB22
 2538 05cc 88000000 		.4byte	.LFE22-.LFB22
 2539 05d0 01       		.uleb128 0x1
 2540 05d1 9C       		.byte	0x9c
 2541 05d2 4A060000 		.4byte	0x64a
 2542 05d6 10       		.uleb128 0x10
 2543 05d7 49050000 		.4byte	.LASF39
 2544 05db 01       		.byte	0x1
 2545 05dc 2A05     		.2byte	0x52a
 2546 05de 83000000 		.4byte	0x83
 2547 05e2 CC030000 		.4byte	.LLST26
 2548 05e6 10       		.uleb128 0x10
 2549 05e7 F3050000 		.4byte	.LASF75
 2550 05eb 01       		.byte	0x1
 2551 05ec 2A05     		.2byte	0x52a
 2552 05ee 8F000000 		.4byte	0x8f
 2553 05f2 F8030000 		.4byte	.LLST27
 2554 05f6 0D       		.uleb128 0xd
 2555 05f7 CC010000 		.4byte	.LASF76
 2556 05fb 01       		.byte	0x1
 2557 05fc 2C05     		.2byte	0x52c
 2558 05fe 83000000 		.4byte	0x83
 2559 0602 48040000 		.4byte	.LLST28
 2560 0606 0D       		.uleb128 0xd
 2561 0607 76020000 		.4byte	.LASF77
 2562 060b 01       		.byte	0x1
 2563 060c 2D05     		.2byte	0x52d
 2564 060e 83000000 		.4byte	0x83
 2565 0612 5B040000 		.4byte	.LLST29
 2566 0616 0D       		.uleb128 0xd
 2567 0617 0A030000 		.4byte	.LASF78
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 86


 2568 061b 01       		.byte	0x1
 2569 061c 2E05     		.2byte	0x52e
 2570 061e 83000000 		.4byte	0x83
 2571 0622 86040000 		.4byte	.LLST30
 2572 0626 14       		.uleb128 0x14
 2573 0627 24000000 		.4byte	.LVL80
 2574 062b 390A0000 		.4byte	0xa39
 2575 062f 39060000 		.4byte	0x639
 2576 0633 15       		.uleb128 0x15
 2577 0634 01       		.uleb128 0x1
 2578 0635 50       		.byte	0x50
 2579 0636 01       		.uleb128 0x1
 2580 0637 30       		.byte	0x30
 2581 0638 00       		.byte	0
 2582 0639 16       		.uleb128 0x16
 2583 063a 54000000 		.4byte	.LVL85
 2584 063e 02020000 		.4byte	0x202
 2585 0642 15       		.uleb128 0x15
 2586 0643 01       		.uleb128 0x1
 2587 0644 50       		.byte	0x50
 2588 0645 02       		.uleb128 0x2
 2589 0646 76       		.byte	0x76
 2590 0647 00       		.sleb128 0
 2591 0648 00       		.byte	0
 2592 0649 00       		.byte	0
 2593 064a 1A       		.uleb128 0x1a
 2594 064b 6C050000 		.4byte	.LASF79
 2595 064f 01       		.byte	0x1
 2596 0650 7F05     		.2byte	0x57f
 2597 0652 A7000000 		.4byte	0xa7
 2598 0656 00000000 		.4byte	.LFB23
 2599 065a 54000000 		.4byte	.LFE23-.LFB23
 2600 065e 01       		.uleb128 0x1
 2601 065f 9C       		.byte	0x9c
 2602 0660 B6060000 		.4byte	0x6b6
 2603 0664 10       		.uleb128 0x10
 2604 0665 49050000 		.4byte	.LASF39
 2605 0669 01       		.byte	0x1
 2606 066a 7F05     		.2byte	0x57f
 2607 066c 83000000 		.4byte	0x83
 2608 0670 99040000 		.4byte	.LLST31
 2609 0674 10       		.uleb128 0x10
 2610 0675 F3050000 		.4byte	.LASF75
 2611 0679 01       		.byte	0x1
 2612 067a 7F05     		.2byte	0x57f
 2613 067c 8F000000 		.4byte	0x8f
 2614 0680 D3040000 		.4byte	.LLST32
 2615 0684 0D       		.uleb128 0xd
 2616 0685 78040000 		.4byte	.LASF80
 2617 0689 01       		.byte	0x1
 2618 068a 8105     		.2byte	0x581
 2619 068c A7000000 		.4byte	0xa7
 2620 0690 0A050000 		.4byte	.LLST33
 2621 0694 0D       		.uleb128 0xd
 2622 0695 0A030000 		.4byte	.LASF78
 2623 0699 01       		.byte	0x1
 2624 069a 8205     		.2byte	0x582
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 87


 2625 069c 83000000 		.4byte	0x83
 2626 06a0 48050000 		.4byte	.LLST34
 2627 06a4 16       		.uleb128 0x16
 2628 06a5 1E000000 		.4byte	.LVL97
 2629 06a9 BC050000 		.4byte	0x5bc
 2630 06ad 15       		.uleb128 0x15
 2631 06ae 01       		.uleb128 0x1
 2632 06af 50       		.byte	0x50
 2633 06b0 03       		.uleb128 0x3
 2634 06b1 F3       		.byte	0xf3
 2635 06b2 01       		.uleb128 0x1
 2636 06b3 50       		.byte	0x50
 2637 06b4 00       		.byte	0
 2638 06b5 00       		.byte	0
 2639 06b6 1A       		.uleb128 0x1a
 2640 06b7 BA020000 		.4byte	.LASF81
 2641 06bb 01       		.byte	0x1
 2642 06bc B205     		.2byte	0x5b2
 2643 06be 8F000000 		.4byte	0x8f
 2644 06c2 00000000 		.4byte	.LFB24
 2645 06c6 68000000 		.4byte	.LFE24-.LFB24
 2646 06ca 01       		.uleb128 0x1
 2647 06cb 9C       		.byte	0x9c
 2648 06cc 22070000 		.4byte	0x722
 2649 06d0 10       		.uleb128 0x10
 2650 06d1 49050000 		.4byte	.LASF39
 2651 06d5 01       		.byte	0x1
 2652 06d6 B205     		.2byte	0x5b2
 2653 06d8 83000000 		.4byte	0x83
 2654 06dc 66050000 		.4byte	.LLST35
 2655 06e0 10       		.uleb128 0x10
 2656 06e1 F3050000 		.4byte	.LASF75
 2657 06e5 01       		.byte	0x1
 2658 06e6 B205     		.2byte	0x5b2
 2659 06e8 8F000000 		.4byte	0x8f
 2660 06ec A0050000 		.4byte	.LLST36
 2661 06f0 0D       		.uleb128 0xd
 2662 06f1 85060000 		.4byte	.LASF82
 2663 06f5 01       		.byte	0x1
 2664 06f6 B405     		.2byte	0x5b4
 2665 06f8 8F000000 		.4byte	0x8f
 2666 06fc E2050000 		.4byte	.LLST37
 2667 0700 0D       		.uleb128 0xd
 2668 0701 0A030000 		.4byte	.LASF78
 2669 0705 01       		.byte	0x1
 2670 0706 B505     		.2byte	0x5b5
 2671 0708 83000000 		.4byte	0x83
 2672 070c 18060000 		.4byte	.LLST38
 2673 0710 16       		.uleb128 0x16
 2674 0711 1E000000 		.4byte	.LVL108
 2675 0715 BC050000 		.4byte	0x5bc
 2676 0719 15       		.uleb128 0x15
 2677 071a 01       		.uleb128 0x1
 2678 071b 50       		.byte	0x50
 2679 071c 03       		.uleb128 0x3
 2680 071d F3       		.byte	0xf3
 2681 071e 01       		.uleb128 0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 88


 2682 071f 50       		.byte	0x50
 2683 0720 00       		.byte	0
 2684 0721 00       		.byte	0
 2685 0722 1A       		.uleb128 0x1a
 2686 0723 C2060000 		.4byte	.LASF83
 2687 0727 01       		.byte	0x1
 2688 0728 E805     		.2byte	0x5e8
 2689 072a 9B000000 		.4byte	0x9b
 2690 072e 00000000 		.4byte	.LFB25
 2691 0732 4C000000 		.4byte	.LFE25-.LFB25
 2692 0736 01       		.uleb128 0x1
 2693 0737 9C       		.byte	0x9c
 2694 0738 8E070000 		.4byte	0x78e
 2695 073c 10       		.uleb128 0x10
 2696 073d 49050000 		.4byte	.LASF39
 2697 0741 01       		.byte	0x1
 2698 0742 E805     		.2byte	0x5e8
 2699 0744 83000000 		.4byte	0x83
 2700 0748 6E060000 		.4byte	.LLST39
 2701 074c 10       		.uleb128 0x10
 2702 074d F3050000 		.4byte	.LASF75
 2703 0751 01       		.byte	0x1
 2704 0752 E805     		.2byte	0x5e8
 2705 0754 8F000000 		.4byte	0x8f
 2706 0758 A8060000 		.4byte	.LLST40
 2707 075c 0D       		.uleb128 0xd
 2708 075d C6050000 		.4byte	.LASF84
 2709 0761 01       		.byte	0x1
 2710 0762 EA05     		.2byte	0x5ea
 2711 0764 C1000000 		.4byte	0xc1
 2712 0768 DF060000 		.4byte	.LLST41
 2713 076c 0D       		.uleb128 0xd
 2714 076d 0A030000 		.4byte	.LASF78
 2715 0771 01       		.byte	0x1
 2716 0772 EB05     		.2byte	0x5eb
 2717 0774 83000000 		.4byte	0x83
 2718 0778 0F070000 		.4byte	.LLST42
 2719 077c 16       		.uleb128 0x16
 2720 077d 1E000000 		.4byte	.LVL121
 2721 0781 BC050000 		.4byte	0x5bc
 2722 0785 15       		.uleb128 0x15
 2723 0786 01       		.uleb128 0x1
 2724 0787 50       		.byte	0x50
 2725 0788 03       		.uleb128 0x3
 2726 0789 F3       		.byte	0xf3
 2727 078a 01       		.uleb128 0x1
 2728 078b 50       		.byte	0x50
 2729 078c 00       		.byte	0
 2730 078d 00       		.byte	0
 2731 078e 1B       		.uleb128 0x1b
 2732 078f D9000000 		.4byte	.LASF85
 2733 0793 01       		.byte	0x1
 2734 0794 F007     		.2byte	0x7f0
 2735 0796 00000000 		.4byte	.LFB26
 2736 079a DC000000 		.4byte	.LFE26-.LFB26
 2737 079e 01       		.uleb128 0x1
 2738 079f 9C       		.byte	0x9c
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 89


 2739 07a0 10080000 		.4byte	0x810
 2740 07a4 0D       		.uleb128 0xd
 2741 07a5 91040000 		.4byte	.LASF43
 2742 07a9 01       		.byte	0x1
 2743 07aa F207     		.2byte	0x7f2
 2744 07ac 83000000 		.4byte	0x83
 2745 07b0 65070000 		.4byte	.LLST43
 2746 07b4 0D       		.uleb128 0xd
 2747 07b5 F3010000 		.4byte	.LASF86
 2748 07b9 01       		.byte	0x1
 2749 07ba F307     		.2byte	0x7f3
 2750 07bc 83000000 		.4byte	0x83
 2751 07c0 9B070000 		.4byte	.LLST44
 2752 07c4 0D       		.uleb128 0xd
 2753 07c5 19000000 		.4byte	.LASF87
 2754 07c9 01       		.byte	0x1
 2755 07ca F407     		.2byte	0x7f4
 2756 07cc 9B000000 		.4byte	0x9b
 2757 07d0 DD070000 		.4byte	.LLST45
 2758 07d4 14       		.uleb128 0x14
 2759 07d5 90000000 		.4byte	.LVL135
 2760 07d9 440A0000 		.4byte	0xa44
 2761 07dd EC070000 		.4byte	0x7ec
 2762 07e1 15       		.uleb128 0x15
 2763 07e2 01       		.uleb128 0x1
 2764 07e3 50       		.byte	0x50
 2765 07e4 01       		.uleb128 0x1
 2766 07e5 3F       		.byte	0x3f
 2767 07e6 15       		.uleb128 0x15
 2768 07e7 01       		.uleb128 0x1
 2769 07e8 51       		.byte	0x51
 2770 07e9 01       		.uleb128 0x1
 2771 07ea 33       		.byte	0x33
 2772 07eb 00       		.byte	0
 2773 07ec 14       		.uleb128 0x14
 2774 07ed 98000000 		.4byte	.LVL136
 2775 07f1 4F0A0000 		.4byte	0xa4f
 2776 07f5 FF070000 		.4byte	0x7ff
 2777 07f9 15       		.uleb128 0x15
 2778 07fa 01       		.uleb128 0x1
 2779 07fb 50       		.byte	0x50
 2780 07fc 01       		.uleb128 0x1
 2781 07fd 3F       		.byte	0x3f
 2782 07fe 00       		.byte	0
 2783 07ff 16       		.uleb128 0x16
 2784 0800 AE000000 		.4byte	.LVL139
 2785 0804 5F020000 		.4byte	0x25f
 2786 0808 15       		.uleb128 0x15
 2787 0809 01       		.uleb128 0x1
 2788 080a 50       		.byte	0x50
 2789 080b 02       		.uleb128 0x2
 2790 080c 74       		.byte	0x74
 2791 080d 00       		.sleb128 0
 2792 080e 00       		.byte	0
 2793 080f 00       		.byte	0
 2794 0810 12       		.uleb128 0x12
 2795 0811 B2000000 		.4byte	.LASF88
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 90


 2796 0815 01       		.byte	0x1
 2797 0816 5C08     		.2byte	0x85c
 2798 0818 00000000 		.4byte	.LFB27
 2799 081c 48000000 		.4byte	.LFE27-.LFB27
 2800 0820 01       		.uleb128 0x1
 2801 0821 9C       		.byte	0x9c
 2802 0822 43080000 		.4byte	0x843
 2803 0826 14       		.uleb128 0x14
 2804 0827 24000000 		.4byte	.LVL141
 2805 082b 5A0A0000 		.4byte	0xa5a
 2806 082f 39080000 		.4byte	0x839
 2807 0833 15       		.uleb128 0x15
 2808 0834 01       		.uleb128 0x1
 2809 0835 50       		.byte	0x50
 2810 0836 01       		.uleb128 0x1
 2811 0837 3A       		.byte	0x3a
 2812 0838 00       		.byte	0
 2813 0839 13       		.uleb128 0x13
 2814 083a 36000000 		.4byte	.LVL142
 2815 083e C2010000 		.4byte	0x1c2
 2816 0842 00       		.byte	0
 2817 0843 12       		.uleb128 0x12
 2818 0844 AF060000 		.4byte	.LASF89
 2819 0848 01       		.byte	0x1
 2820 0849 2B02     		.2byte	0x22b
 2821 084b 00000000 		.4byte	.LFB1
 2822 084f 24000000 		.4byte	.LFE1-.LFB1
 2823 0853 01       		.uleb128 0x1
 2824 0854 9C       		.byte	0x9c
 2825 0855 6C080000 		.4byte	0x86c
 2826 0859 13       		.uleb128 0x13
 2827 085a 0E000000 		.4byte	.LVL143
 2828 085e 8E070000 		.4byte	0x78e
 2829 0862 13       		.uleb128 0x13
 2830 0863 1C000000 		.4byte	.LVL144
 2831 0867 10080000 		.4byte	0x810
 2832 086b 00       		.byte	0
 2833 086c 12       		.uleb128 0x12
 2834 086d 20000000 		.4byte	.LASF90
 2835 0871 01       		.byte	0x1
 2836 0872 4802     		.2byte	0x248
 2837 0874 00000000 		.4byte	.LFB2
 2838 0878 10000000 		.4byte	.LFE2-.LFB2
 2839 087c 01       		.uleb128 0x1
 2840 087d 9C       		.byte	0x9c
 2841 087e AC080000 		.4byte	0x8ac
 2842 0882 10       		.uleb128 0x10
 2843 0883 85030000 		.4byte	.LASF91
 2844 0887 01       		.byte	0x1
 2845 0888 4802     		.2byte	0x248
 2846 088a E5000000 		.4byte	0xe5
 2847 088e F3070000 		.4byte	.LLST46
 2848 0892 13       		.uleb128 0x13
 2849 0893 08000000 		.4byte	.LVL146
 2850 0897 43080000 		.4byte	0x843
 2851 089b 16       		.uleb128 0x16
 2852 089c 0E000000 		.4byte	.LVL147
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 91


 2853 08a0 650A0000 		.4byte	0xa65
 2854 08a4 15       		.uleb128 0x15
 2855 08a5 01       		.uleb128 0x1
 2856 08a6 50       		.byte	0x50
 2857 08a7 02       		.uleb128 0x2
 2858 08a8 74       		.byte	0x74
 2859 08a9 00       		.sleb128 0
 2860 08aa 00       		.byte	0
 2861 08ab 00       		.byte	0
 2862 08ac 12       		.uleb128 0x12
 2863 08ad DC020000 		.4byte	.LASF92
 2864 08b1 01       		.byte	0x1
 2865 08b2 0303     		.2byte	0x303
 2866 08b4 00000000 		.4byte	.LFB6
 2867 08b8 70000000 		.4byte	.LFE6-.LFB6
 2868 08bc 01       		.uleb128 0x1
 2869 08bd 9C       		.byte	0x9c
 2870 08be 1B090000 		.4byte	0x91b
 2871 08c2 10       		.uleb128 0x10
 2872 08c3 65050000 		.4byte	.LASF38
 2873 08c7 01       		.byte	0x1
 2874 08c8 0303     		.2byte	0x303
 2875 08ca 83000000 		.4byte	0x83
 2876 08ce 1F080000 		.4byte	.LLST47
 2877 08d2 10       		.uleb128 0x10
 2878 08d3 D4050000 		.4byte	.LASF93
 2879 08d7 01       		.byte	0x1
 2880 08d8 0303     		.2byte	0x303
 2881 08da 83000000 		.4byte	0x83
 2882 08de 4B080000 		.4byte	.LLST48
 2883 08e2 13       		.uleb128 0x13
 2884 08e3 0E000000 		.4byte	.LVL150
 2885 08e7 4D020000 		.4byte	0x24d
 2886 08eb 13       		.uleb128 0x13
 2887 08ec 1E000000 		.4byte	.LVL151
 2888 08f0 8E070000 		.4byte	0x78e
 2889 08f4 14       		.uleb128 0x14
 2890 08f5 38000000 		.4byte	.LVL152
 2891 08f9 5F020000 		.4byte	0x25f
 2892 08fd 08090000 		.4byte	0x908
 2893 0901 15       		.uleb128 0x15
 2894 0902 01       		.uleb128 0x1
 2895 0903 50       		.byte	0x50
 2896 0904 02       		.uleb128 0x2
 2897 0905 75       		.byte	0x75
 2898 0906 00       		.sleb128 0
 2899 0907 00       		.byte	0
 2900 0908 13       		.uleb128 0x13
 2901 0909 56000000 		.4byte	.LVL153
 2902 090d 43080000 		.4byte	0x843
 2903 0911 13       		.uleb128 0x13
 2904 0912 5A000000 		.4byte	.LVL154
 2905 0916 D2020000 		.4byte	0x2d2
 2906 091a 00       		.byte	0
 2907 091b 12       		.uleb128 0x12
 2908 091c 2E000000 		.4byte	.LASF94
 2909 0920 01       		.byte	0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 92


 2910 0921 6003     		.2byte	0x360
 2911 0923 00000000 		.4byte	.LFB8
 2912 0927 44000000 		.4byte	.LFE8-.LFB8
 2913 092b 01       		.uleb128 0x1
 2914 092c 9C       		.byte	0x9c
 2915 092d 44090000 		.4byte	0x944
 2916 0931 13       		.uleb128 0x13
 2917 0932 2C000000 		.4byte	.LVL157
 2918 0936 4D020000 		.4byte	0x24d
 2919 093a 13       		.uleb128 0x13
 2920 093b 30000000 		.4byte	.LVL158
 2921 093f 43080000 		.4byte	0x843
 2922 0943 00       		.byte	0
 2923 0944 1C       		.uleb128 0x1c
 2924 0945 97040000 		.4byte	.LASF95
 2925 0949 01       		.byte	0x1
 2926 094a 43       		.byte	0x43
 2927 094b 83000000 		.4byte	0x83
 2928 094f 05       		.uleb128 0x5
 2929 0950 03       		.byte	0x3
 2930 0951 00000000 		.4byte	ADC_1_currentConfig
 2931 0955 1D       		.uleb128 0x1d
 2932 0956 65090000 		.4byte	0x965
 2933 095a 65090000 		.4byte	0x965
 2934 095e 1E       		.uleb128 0x1e
 2935 095f FF000000 		.4byte	0xff
 2936 0963 00       		.byte	0
 2937 0964 00       		.byte	0
 2938 0965 0E       		.uleb128 0xe
 2939 0966 83000000 		.4byte	0x83
 2940 096a 1F       		.uleb128 0x1f
 2941 096b 22020000 		.4byte	.LASF96
 2942 096f 01       		.byte	0x1
 2943 0970 49       		.byte	0x49
 2944 0971 7A090000 		.4byte	0x97a
 2945 0975 04       		.byte	0x4
 2946 0976 00       		.byte	0
 2947 0977 04       		.byte	0x4
 2948 0978 00       		.byte	0
 2949 0979 00       		.byte	0
 2950 097a 0E       		.uleb128 0xe
 2951 097b 55090000 		.4byte	0x955
 2952 097f 20       		.uleb128 0x20
 2953 0980 70010000 		.4byte	.LASF97
 2954 0984 01       		.byte	0x1
 2955 0985 3D       		.byte	0x3d
 2956 0986 6B000000 		.4byte	0x6b
 2957 098a 05       		.uleb128 0x5
 2958 098b 03       		.byte	0x3
 2959 098c 00000000 		.4byte	ADC_1_initVar
 2960 0990 20       		.uleb128 0x20
 2961 0991 FD050000 		.4byte	.LASF98
 2962 0995 01       		.byte	0x1
 2963 0996 3F       		.byte	0x3f
 2964 0997 6B000000 		.4byte	0x6b
 2965 099b 05       		.uleb128 0x5
 2966 099c 03       		.byte	0x3
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 93


 2967 099d 00000000 		.4byte	ADC_1_selected
 2968 09a1 1D       		.uleb128 0x1d
 2969 09a2 B1090000 		.4byte	0x9b1
 2970 09a6 B1090000 		.4byte	0x9b1
 2971 09aa 1E       		.uleb128 0x1e
 2972 09ab FF000000 		.4byte	0xff
 2973 09af 00       		.byte	0
 2974 09b0 00       		.byte	0
 2975 09b1 05       		.uleb128 0x5
 2976 09b2 8F000000 		.4byte	0x8f
 2977 09b6 20       		.uleb128 0x20
 2978 09b7 F4030000 		.4byte	.LASF99
 2979 09bb 01       		.byte	0x1
 2980 09bc 40       		.byte	0x40
 2981 09bd C7090000 		.4byte	0x9c7
 2982 09c1 05       		.uleb128 0x5
 2983 09c2 03       		.byte	0x3
 2984 09c3 00000000 		.4byte	ADC_1_offset
 2985 09c7 05       		.uleb128 0x5
 2986 09c8 A1090000 		.4byte	0x9a1
 2987 09cc 1D       		.uleb128 0x1d
 2988 09cd DC090000 		.4byte	0x9dc
 2989 09d1 DC090000 		.4byte	0x9dc
 2990 09d5 1E       		.uleb128 0x1e
 2991 09d6 FF000000 		.4byte	0xff
 2992 09da 00       		.byte	0
 2993 09db 00       		.byte	0
 2994 09dc 05       		.uleb128 0x5
 2995 09dd 9B000000 		.4byte	0x9b
 2996 09e1 20       		.uleb128 0x20
 2997 09e2 58040000 		.4byte	.LASF100
 2998 09e6 01       		.byte	0x1
 2999 09e7 41       		.byte	0x41
 3000 09e8 F2090000 		.4byte	0x9f2
 3001 09ec 05       		.uleb128 0x5
 3002 09ed 03       		.byte	0x3
 3003 09ee 00000000 		.4byte	ADC_1_countsPer10Volt
 3004 09f2 05       		.uleb128 0x5
 3005 09f3 CC090000 		.4byte	0x9cc
 3006 09f7 1D       		.uleb128 0x1d
 3007 09f8 FD010000 		.4byte	0x1fd
 3008 09fc 070A0000 		.4byte	0xa07
 3009 0a00 1E       		.uleb128 0x1e
 3010 0a01 FF000000 		.4byte	0xff
 3011 0a05 00       		.byte	0
 3012 0a06 00       		.byte	0
 3013 0a07 21       		.uleb128 0x21
 3014 0a08 9E020000 		.4byte	.LASF101
 3015 0a0c 03       		.byte	0x3
 3016 0a0d EC01     		.2byte	0x1ec
 3017 0a0f 130A0000 		.4byte	0xa13
 3018 0a13 0E       		.uleb128 0xe
 3019 0a14 F7090000 		.4byte	0x9f7
 3020 0a18 22       		.uleb128 0x22
 3021 0a19 37020000 		.4byte	.LASF102
 3022 0a1d 37020000 		.4byte	.LASF102
 3023 0a21 04       		.byte	0x4
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 94


 3024 0a22 27       		.byte	0x27
 3025 0a23 22       		.uleb128 0x22
 3026 0a24 81050000 		.4byte	.LASF103
 3027 0a28 81050000 		.4byte	.LASF103
 3028 0a2c 04       		.byte	0x4
 3029 0a2d 29       		.byte	0x29
 3030 0a2e 22       		.uleb128 0x22
 3031 0a2f 56030000 		.4byte	.LASF104
 3032 0a33 56030000 		.4byte	.LASF104
 3033 0a37 04       		.byte	0x4
 3034 0a38 1D       		.byte	0x1d
 3035 0a39 22       		.uleb128 0x22
 3036 0a3a BB060000 		.4byte	.LASF105
 3037 0a3e BB060000 		.4byte	.LASF105
 3038 0a42 05       		.byte	0x5
 3039 0a43 FA       		.byte	0xfa
 3040 0a44 22       		.uleb128 0x22
 3041 0a45 C1030000 		.4byte	.LASF106
 3042 0a49 C1030000 		.4byte	.LASF106
 3043 0a4d 05       		.byte	0x5
 3044 0a4e D3       		.byte	0xd3
 3045 0a4f 22       		.uleb128 0x22
 3046 0a50 92010000 		.4byte	.LASF107
 3047 0a54 92010000 		.4byte	.LASF107
 3048 0a58 05       		.byte	0x5
 3049 0a59 D0       		.byte	0xd0
 3050 0a5a 22       		.uleb128 0x22
 3051 0a5b 37010000 		.4byte	.LASF108
 3052 0a5f 37010000 		.4byte	.LASF108
 3053 0a63 05       		.byte	0x5
 3054 0a64 ED       		.byte	0xed
 3055 0a65 22       		.uleb128 0x22
 3056 0a66 D8030000 		.4byte	.LASF109
 3057 0a6a D8030000 		.4byte	.LASF109
 3058 0a6e 06       		.byte	0x6
 3059 0a6f 18       		.byte	0x18
 3060 0a70 00       		.byte	0
 3061              		.section	.debug_abbrev,"",%progbits
 3062              	.Ldebug_abbrev0:
 3063 0000 01       		.uleb128 0x1
 3064 0001 11       		.uleb128 0x11
 3065 0002 01       		.byte	0x1
 3066 0003 25       		.uleb128 0x25
 3067 0004 0E       		.uleb128 0xe
 3068 0005 13       		.uleb128 0x13
 3069 0006 0B       		.uleb128 0xb
 3070 0007 03       		.uleb128 0x3
 3071 0008 0E       		.uleb128 0xe
 3072 0009 1B       		.uleb128 0x1b
 3073 000a 0E       		.uleb128 0xe
 3074 000b 55       		.uleb128 0x55
 3075 000c 17       		.uleb128 0x17
 3076 000d 11       		.uleb128 0x11
 3077 000e 01       		.uleb128 0x1
 3078 000f 10       		.uleb128 0x10
 3079 0010 17       		.uleb128 0x17
 3080 0011 00       		.byte	0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 95


 3081 0012 00       		.byte	0
 3082 0013 02       		.uleb128 0x2
 3083 0014 24       		.uleb128 0x24
 3084 0015 00       		.byte	0
 3085 0016 0B       		.uleb128 0xb
 3086 0017 0B       		.uleb128 0xb
 3087 0018 3E       		.uleb128 0x3e
 3088 0019 0B       		.uleb128 0xb
 3089 001a 03       		.uleb128 0x3
 3090 001b 0E       		.uleb128 0xe
 3091 001c 00       		.byte	0
 3092 001d 00       		.byte	0
 3093 001e 03       		.uleb128 0x3
 3094 001f 24       		.uleb128 0x24
 3095 0020 00       		.byte	0
 3096 0021 0B       		.uleb128 0xb
 3097 0022 0B       		.uleb128 0xb
 3098 0023 3E       		.uleb128 0x3e
 3099 0024 0B       		.uleb128 0xb
 3100 0025 03       		.uleb128 0x3
 3101 0026 08       		.uleb128 0x8
 3102 0027 00       		.byte	0
 3103 0028 00       		.byte	0
 3104 0029 04       		.uleb128 0x4
 3105 002a 16       		.uleb128 0x16
 3106 002b 00       		.byte	0
 3107 002c 03       		.uleb128 0x3
 3108 002d 0E       		.uleb128 0xe
 3109 002e 3A       		.uleb128 0x3a
 3110 002f 0B       		.uleb128 0xb
 3111 0030 3B       		.uleb128 0x3b
 3112 0031 05       		.uleb128 0x5
 3113 0032 49       		.uleb128 0x49
 3114 0033 13       		.uleb128 0x13
 3115 0034 00       		.byte	0
 3116 0035 00       		.byte	0
 3117 0036 05       		.uleb128 0x5
 3118 0037 35       		.uleb128 0x35
 3119 0038 00       		.byte	0
 3120 0039 49       		.uleb128 0x49
 3121 003a 13       		.uleb128 0x13
 3122 003b 00       		.byte	0
 3123 003c 00       		.byte	0
 3124 003d 06       		.uleb128 0x6
 3125 003e 0F       		.uleb128 0xf
 3126 003f 00       		.byte	0
 3127 0040 0B       		.uleb128 0xb
 3128 0041 0B       		.uleb128 0xb
 3129 0042 49       		.uleb128 0x49
 3130 0043 13       		.uleb128 0x13
 3131 0044 00       		.byte	0
 3132 0045 00       		.byte	0
 3133 0046 07       		.uleb128 0x7
 3134 0047 15       		.uleb128 0x15
 3135 0048 00       		.byte	0
 3136 0049 27       		.uleb128 0x27
 3137 004a 19       		.uleb128 0x19
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 96


 3138 004b 00       		.byte	0
 3139 004c 00       		.byte	0
 3140 004d 08       		.uleb128 0x8
 3141 004e 13       		.uleb128 0x13
 3142 004f 01       		.byte	0x1
 3143 0050 0B       		.uleb128 0xb
 3144 0051 0B       		.uleb128 0xb
 3145 0052 3A       		.uleb128 0x3a
 3146 0053 0B       		.uleb128 0xb
 3147 0054 3B       		.uleb128 0x3b
 3148 0055 0B       		.uleb128 0xb
 3149 0056 01       		.uleb128 0x1
 3150 0057 13       		.uleb128 0x13
 3151 0058 00       		.byte	0
 3152 0059 00       		.byte	0
 3153 005a 09       		.uleb128 0x9
 3154 005b 0D       		.uleb128 0xd
 3155 005c 00       		.byte	0
 3156 005d 03       		.uleb128 0x3
 3157 005e 0E       		.uleb128 0xe
 3158 005f 3A       		.uleb128 0x3a
 3159 0060 0B       		.uleb128 0xb
 3160 0061 3B       		.uleb128 0x3b
 3161 0062 0B       		.uleb128 0xb
 3162 0063 49       		.uleb128 0x49
 3163 0064 13       		.uleb128 0x13
 3164 0065 38       		.uleb128 0x38
 3165 0066 0B       		.uleb128 0xb
 3166 0067 00       		.byte	0
 3167 0068 00       		.byte	0
 3168 0069 0A       		.uleb128 0xa
 3169 006a 16       		.uleb128 0x16
 3170 006b 00       		.byte	0
 3171 006c 03       		.uleb128 0x3
 3172 006d 0E       		.uleb128 0xe
 3173 006e 3A       		.uleb128 0x3a
 3174 006f 0B       		.uleb128 0xb
 3175 0070 3B       		.uleb128 0x3b
 3176 0071 0B       		.uleb128 0xb
 3177 0072 49       		.uleb128 0x49
 3178 0073 13       		.uleb128 0x13
 3179 0074 00       		.byte	0
 3180 0075 00       		.byte	0
 3181 0076 0B       		.uleb128 0xb
 3182 0077 2E       		.uleb128 0x2e
 3183 0078 01       		.byte	0x1
 3184 0079 03       		.uleb128 0x3
 3185 007a 0E       		.uleb128 0xe
 3186 007b 3A       		.uleb128 0x3a
 3187 007c 0B       		.uleb128 0xb
 3188 007d 3B       		.uleb128 0x3b
 3189 007e 05       		.uleb128 0x5
 3190 007f 27       		.uleb128 0x27
 3191 0080 19       		.uleb128 0x19
 3192 0081 11       		.uleb128 0x11
 3193 0082 01       		.uleb128 0x1
 3194 0083 12       		.uleb128 0x12
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 97


 3195 0084 06       		.uleb128 0x6
 3196 0085 40       		.uleb128 0x40
 3197 0086 18       		.uleb128 0x18
 3198 0087 9742     		.uleb128 0x2117
 3199 0089 19       		.uleb128 0x19
 3200 008a 01       		.uleb128 0x1
 3201 008b 13       		.uleb128 0x13
 3202 008c 00       		.byte	0
 3203 008d 00       		.byte	0
 3204 008e 0C       		.uleb128 0xc
 3205 008f 05       		.uleb128 0x5
 3206 0090 00       		.byte	0
 3207 0091 03       		.uleb128 0x3
 3208 0092 0E       		.uleb128 0xe
 3209 0093 3A       		.uleb128 0x3a
 3210 0094 0B       		.uleb128 0xb
 3211 0095 3B       		.uleb128 0x3b
 3212 0096 05       		.uleb128 0x5
 3213 0097 49       		.uleb128 0x49
 3214 0098 13       		.uleb128 0x13
 3215 0099 02       		.uleb128 0x2
 3216 009a 18       		.uleb128 0x18
 3217 009b 00       		.byte	0
 3218 009c 00       		.byte	0
 3219 009d 0D       		.uleb128 0xd
 3220 009e 34       		.uleb128 0x34
 3221 009f 00       		.byte	0
 3222 00a0 03       		.uleb128 0x3
 3223 00a1 0E       		.uleb128 0xe
 3224 00a2 3A       		.uleb128 0x3a
 3225 00a3 0B       		.uleb128 0xb
 3226 00a4 3B       		.uleb128 0x3b
 3227 00a5 05       		.uleb128 0x5
 3228 00a6 49       		.uleb128 0x49
 3229 00a7 13       		.uleb128 0x13
 3230 00a8 02       		.uleb128 0x2
 3231 00a9 17       		.uleb128 0x17
 3232 00aa 00       		.byte	0
 3233 00ab 00       		.byte	0
 3234 00ac 0E       		.uleb128 0xe
 3235 00ad 26       		.uleb128 0x26
 3236 00ae 00       		.byte	0
 3237 00af 49       		.uleb128 0x49
 3238 00b0 13       		.uleb128 0x13
 3239 00b1 00       		.byte	0
 3240 00b2 00       		.byte	0
 3241 00b3 0F       		.uleb128 0xf
 3242 00b4 2E       		.uleb128 0x2e
 3243 00b5 01       		.byte	0x1
 3244 00b6 03       		.uleb128 0x3
 3245 00b7 0E       		.uleb128 0xe
 3246 00b8 3A       		.uleb128 0x3a
 3247 00b9 0B       		.uleb128 0xb
 3248 00ba 3B       		.uleb128 0x3b
 3249 00bb 05       		.uleb128 0x5
 3250 00bc 27       		.uleb128 0x27
 3251 00bd 19       		.uleb128 0x19
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 98


 3252 00be 49       		.uleb128 0x49
 3253 00bf 13       		.uleb128 0x13
 3254 00c0 11       		.uleb128 0x11
 3255 00c1 01       		.uleb128 0x1
 3256 00c2 12       		.uleb128 0x12
 3257 00c3 06       		.uleb128 0x6
 3258 00c4 40       		.uleb128 0x40
 3259 00c5 18       		.uleb128 0x18
 3260 00c6 9742     		.uleb128 0x2117
 3261 00c8 19       		.uleb128 0x19
 3262 00c9 01       		.uleb128 0x1
 3263 00ca 13       		.uleb128 0x13
 3264 00cb 00       		.byte	0
 3265 00cc 00       		.byte	0
 3266 00cd 10       		.uleb128 0x10
 3267 00ce 05       		.uleb128 0x5
 3268 00cf 00       		.byte	0
 3269 00d0 03       		.uleb128 0x3
 3270 00d1 0E       		.uleb128 0xe
 3271 00d2 3A       		.uleb128 0x3a
 3272 00d3 0B       		.uleb128 0xb
 3273 00d4 3B       		.uleb128 0x3b
 3274 00d5 05       		.uleb128 0x5
 3275 00d6 49       		.uleb128 0x49
 3276 00d7 13       		.uleb128 0x13
 3277 00d8 02       		.uleb128 0x2
 3278 00d9 17       		.uleb128 0x17
 3279 00da 00       		.byte	0
 3280 00db 00       		.byte	0
 3281 00dc 11       		.uleb128 0x11
 3282 00dd 2E       		.uleb128 0x2e
 3283 00de 00       		.byte	0
 3284 00df 3F       		.uleb128 0x3f
 3285 00e0 19       		.uleb128 0x19
 3286 00e1 03       		.uleb128 0x3
 3287 00e2 0E       		.uleb128 0xe
 3288 00e3 3A       		.uleb128 0x3a
 3289 00e4 0B       		.uleb128 0xb
 3290 00e5 3B       		.uleb128 0x3b
 3291 00e6 05       		.uleb128 0x5
 3292 00e7 27       		.uleb128 0x27
 3293 00e8 19       		.uleb128 0x19
 3294 00e9 11       		.uleb128 0x11
 3295 00ea 01       		.uleb128 0x1
 3296 00eb 12       		.uleb128 0x12
 3297 00ec 06       		.uleb128 0x6
 3298 00ed 40       		.uleb128 0x40
 3299 00ee 18       		.uleb128 0x18
 3300 00ef 9742     		.uleb128 0x2117
 3301 00f1 19       		.uleb128 0x19
 3302 00f2 00       		.byte	0
 3303 00f3 00       		.byte	0
 3304 00f4 12       		.uleb128 0x12
 3305 00f5 2E       		.uleb128 0x2e
 3306 00f6 01       		.byte	0x1
 3307 00f7 3F       		.uleb128 0x3f
 3308 00f8 19       		.uleb128 0x19
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 99


 3309 00f9 03       		.uleb128 0x3
 3310 00fa 0E       		.uleb128 0xe
 3311 00fb 3A       		.uleb128 0x3a
 3312 00fc 0B       		.uleb128 0xb
 3313 00fd 3B       		.uleb128 0x3b
 3314 00fe 05       		.uleb128 0x5
 3315 00ff 27       		.uleb128 0x27
 3316 0100 19       		.uleb128 0x19
 3317 0101 11       		.uleb128 0x11
 3318 0102 01       		.uleb128 0x1
 3319 0103 12       		.uleb128 0x12
 3320 0104 06       		.uleb128 0x6
 3321 0105 40       		.uleb128 0x40
 3322 0106 18       		.uleb128 0x18
 3323 0107 9742     		.uleb128 0x2117
 3324 0109 19       		.uleb128 0x19
 3325 010a 01       		.uleb128 0x1
 3326 010b 13       		.uleb128 0x13
 3327 010c 00       		.byte	0
 3328 010d 00       		.byte	0
 3329 010e 13       		.uleb128 0x13
 3330 010f 898201   		.uleb128 0x4109
 3331 0112 00       		.byte	0
 3332 0113 11       		.uleb128 0x11
 3333 0114 01       		.uleb128 0x1
 3334 0115 31       		.uleb128 0x31
 3335 0116 13       		.uleb128 0x13
 3336 0117 00       		.byte	0
 3337 0118 00       		.byte	0
 3338 0119 14       		.uleb128 0x14
 3339 011a 898201   		.uleb128 0x4109
 3340 011d 01       		.byte	0x1
 3341 011e 11       		.uleb128 0x11
 3342 011f 01       		.uleb128 0x1
 3343 0120 31       		.uleb128 0x31
 3344 0121 13       		.uleb128 0x13
 3345 0122 01       		.uleb128 0x1
 3346 0123 13       		.uleb128 0x13
 3347 0124 00       		.byte	0
 3348 0125 00       		.byte	0
 3349 0126 15       		.uleb128 0x15
 3350 0127 8A8201   		.uleb128 0x410a
 3351 012a 00       		.byte	0
 3352 012b 02       		.uleb128 0x2
 3353 012c 18       		.uleb128 0x18
 3354 012d 9142     		.uleb128 0x2111
 3355 012f 18       		.uleb128 0x18
 3356 0130 00       		.byte	0
 3357 0131 00       		.byte	0
 3358 0132 16       		.uleb128 0x16
 3359 0133 898201   		.uleb128 0x4109
 3360 0136 01       		.byte	0x1
 3361 0137 11       		.uleb128 0x11
 3362 0138 01       		.uleb128 0x1
 3363 0139 31       		.uleb128 0x31
 3364 013a 13       		.uleb128 0x13
 3365 013b 00       		.byte	0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 100


 3366 013c 00       		.byte	0
 3367 013d 17       		.uleb128 0x17
 3368 013e 34       		.uleb128 0x34
 3369 013f 00       		.byte	0
 3370 0140 03       		.uleb128 0x3
 3371 0141 0E       		.uleb128 0xe
 3372 0142 3A       		.uleb128 0x3a
 3373 0143 0B       		.uleb128 0xb
 3374 0144 3B       		.uleb128 0x3b
 3375 0145 05       		.uleb128 0x5
 3376 0146 49       		.uleb128 0x49
 3377 0147 13       		.uleb128 0x13
 3378 0148 02       		.uleb128 0x2
 3379 0149 18       		.uleb128 0x18
 3380 014a 00       		.byte	0
 3381 014b 00       		.byte	0
 3382 014c 18       		.uleb128 0x18
 3383 014d 2E       		.uleb128 0x2e
 3384 014e 01       		.byte	0x1
 3385 014f 3F       		.uleb128 0x3f
 3386 0150 19       		.uleb128 0x19
 3387 0151 03       		.uleb128 0x3
 3388 0152 0E       		.uleb128 0xe
 3389 0153 3A       		.uleb128 0x3a
 3390 0154 0B       		.uleb128 0xb
 3391 0155 3B       		.uleb128 0x3b
 3392 0156 05       		.uleb128 0x5
 3393 0157 27       		.uleb128 0x27
 3394 0158 19       		.uleb128 0x19
 3395 0159 49       		.uleb128 0x49
 3396 015a 13       		.uleb128 0x13
 3397 015b 11       		.uleb128 0x11
 3398 015c 01       		.uleb128 0x1
 3399 015d 12       		.uleb128 0x12
 3400 015e 06       		.uleb128 0x6
 3401 015f 40       		.uleb128 0x40
 3402 0160 18       		.uleb128 0x18
 3403 0161 9742     		.uleb128 0x2117
 3404 0163 19       		.uleb128 0x19
 3405 0164 01       		.uleb128 0x1
 3406 0165 13       		.uleb128 0x13
 3407 0166 00       		.byte	0
 3408 0167 00       		.byte	0
 3409 0168 19       		.uleb128 0x19
 3410 0169 34       		.uleb128 0x34
 3411 016a 00       		.byte	0
 3412 016b 03       		.uleb128 0x3
 3413 016c 08       		.uleb128 0x8
 3414 016d 3A       		.uleb128 0x3a
 3415 016e 0B       		.uleb128 0xb
 3416 016f 3B       		.uleb128 0x3b
 3417 0170 05       		.uleb128 0x5
 3418 0171 49       		.uleb128 0x49
 3419 0172 13       		.uleb128 0x13
 3420 0173 02       		.uleb128 0x2
 3421 0174 17       		.uleb128 0x17
 3422 0175 00       		.byte	0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 101


 3423 0176 00       		.byte	0
 3424 0177 1A       		.uleb128 0x1a
 3425 0178 2E       		.uleb128 0x2e
 3426 0179 01       		.byte	0x1
 3427 017a 3F       		.uleb128 0x3f
 3428 017b 19       		.uleb128 0x19
 3429 017c 03       		.uleb128 0x3
 3430 017d 0E       		.uleb128 0xe
 3431 017e 3A       		.uleb128 0x3a
 3432 017f 0B       		.uleb128 0xb
 3433 0180 3B       		.uleb128 0x3b
 3434 0181 05       		.uleb128 0x5
 3435 0182 27       		.uleb128 0x27
 3436 0183 19       		.uleb128 0x19
 3437 0184 49       		.uleb128 0x49
 3438 0185 13       		.uleb128 0x13
 3439 0186 11       		.uleb128 0x11
 3440 0187 01       		.uleb128 0x1
 3441 0188 12       		.uleb128 0x12
 3442 0189 06       		.uleb128 0x6
 3443 018a 40       		.uleb128 0x40
 3444 018b 18       		.uleb128 0x18
 3445 018c 9642     		.uleb128 0x2116
 3446 018e 19       		.uleb128 0x19
 3447 018f 01       		.uleb128 0x1
 3448 0190 13       		.uleb128 0x13
 3449 0191 00       		.byte	0
 3450 0192 00       		.byte	0
 3451 0193 1B       		.uleb128 0x1b
 3452 0194 2E       		.uleb128 0x2e
 3453 0195 01       		.byte	0x1
 3454 0196 3F       		.uleb128 0x3f
 3455 0197 19       		.uleb128 0x19
 3456 0198 03       		.uleb128 0x3
 3457 0199 0E       		.uleb128 0xe
 3458 019a 3A       		.uleb128 0x3a
 3459 019b 0B       		.uleb128 0xb
 3460 019c 3B       		.uleb128 0x3b
 3461 019d 05       		.uleb128 0x5
 3462 019e 27       		.uleb128 0x27
 3463 019f 19       		.uleb128 0x19
 3464 01a0 11       		.uleb128 0x11
 3465 01a1 01       		.uleb128 0x1
 3466 01a2 12       		.uleb128 0x12
 3467 01a3 06       		.uleb128 0x6
 3468 01a4 40       		.uleb128 0x40
 3469 01a5 18       		.uleb128 0x18
 3470 01a6 9642     		.uleb128 0x2116
 3471 01a8 19       		.uleb128 0x19
 3472 01a9 01       		.uleb128 0x1
 3473 01aa 13       		.uleb128 0x13
 3474 01ab 00       		.byte	0
 3475 01ac 00       		.byte	0
 3476 01ad 1C       		.uleb128 0x1c
 3477 01ae 34       		.uleb128 0x34
 3478 01af 00       		.byte	0
 3479 01b0 03       		.uleb128 0x3
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 102


 3480 01b1 0E       		.uleb128 0xe
 3481 01b2 3A       		.uleb128 0x3a
 3482 01b3 0B       		.uleb128 0xb
 3483 01b4 3B       		.uleb128 0x3b
 3484 01b5 0B       		.uleb128 0xb
 3485 01b6 49       		.uleb128 0x49
 3486 01b7 13       		.uleb128 0x13
 3487 01b8 02       		.uleb128 0x2
 3488 01b9 18       		.uleb128 0x18
 3489 01ba 00       		.byte	0
 3490 01bb 00       		.byte	0
 3491 01bc 1D       		.uleb128 0x1d
 3492 01bd 01       		.uleb128 0x1
 3493 01be 01       		.byte	0x1
 3494 01bf 49       		.uleb128 0x49
 3495 01c0 13       		.uleb128 0x13
 3496 01c1 01       		.uleb128 0x1
 3497 01c2 13       		.uleb128 0x13
 3498 01c3 00       		.byte	0
 3499 01c4 00       		.byte	0
 3500 01c5 1E       		.uleb128 0x1e
 3501 01c6 21       		.uleb128 0x21
 3502 01c7 00       		.byte	0
 3503 01c8 49       		.uleb128 0x49
 3504 01c9 13       		.uleb128 0x13
 3505 01ca 2F       		.uleb128 0x2f
 3506 01cb 0B       		.uleb128 0xb
 3507 01cc 00       		.byte	0
 3508 01cd 00       		.byte	0
 3509 01ce 1F       		.uleb128 0x1f
 3510 01cf 34       		.uleb128 0x34
 3511 01d0 00       		.byte	0
 3512 01d1 03       		.uleb128 0x3
 3513 01d2 0E       		.uleb128 0xe
 3514 01d3 3A       		.uleb128 0x3a
 3515 01d4 0B       		.uleb128 0xb
 3516 01d5 3B       		.uleb128 0x3b
 3517 01d6 0B       		.uleb128 0xb
 3518 01d7 49       		.uleb128 0x49
 3519 01d8 13       		.uleb128 0x13
 3520 01d9 1C       		.uleb128 0x1c
 3521 01da 0A       		.uleb128 0xa
 3522 01db 00       		.byte	0
 3523 01dc 00       		.byte	0
 3524 01dd 20       		.uleb128 0x20
 3525 01de 34       		.uleb128 0x34
 3526 01df 00       		.byte	0
 3527 01e0 03       		.uleb128 0x3
 3528 01e1 0E       		.uleb128 0xe
 3529 01e2 3A       		.uleb128 0x3a
 3530 01e3 0B       		.uleb128 0xb
 3531 01e4 3B       		.uleb128 0x3b
 3532 01e5 0B       		.uleb128 0xb
 3533 01e6 49       		.uleb128 0x49
 3534 01e7 13       		.uleb128 0x13
 3535 01e8 3F       		.uleb128 0x3f
 3536 01e9 19       		.uleb128 0x19
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 103


 3537 01ea 02       		.uleb128 0x2
 3538 01eb 18       		.uleb128 0x18
 3539 01ec 00       		.byte	0
 3540 01ed 00       		.byte	0
 3541 01ee 21       		.uleb128 0x21
 3542 01ef 34       		.uleb128 0x34
 3543 01f0 00       		.byte	0
 3544 01f1 03       		.uleb128 0x3
 3545 01f2 0E       		.uleb128 0xe
 3546 01f3 3A       		.uleb128 0x3a
 3547 01f4 0B       		.uleb128 0xb
 3548 01f5 3B       		.uleb128 0x3b
 3549 01f6 05       		.uleb128 0x5
 3550 01f7 49       		.uleb128 0x49
 3551 01f8 13       		.uleb128 0x13
 3552 01f9 3F       		.uleb128 0x3f
 3553 01fa 19       		.uleb128 0x19
 3554 01fb 3C       		.uleb128 0x3c
 3555 01fc 19       		.uleb128 0x19
 3556 01fd 00       		.byte	0
 3557 01fe 00       		.byte	0
 3558 01ff 22       		.uleb128 0x22
 3559 0200 2E       		.uleb128 0x2e
 3560 0201 00       		.byte	0
 3561 0202 3F       		.uleb128 0x3f
 3562 0203 19       		.uleb128 0x19
 3563 0204 3C       		.uleb128 0x3c
 3564 0205 19       		.uleb128 0x19
 3565 0206 6E       		.uleb128 0x6e
 3566 0207 0E       		.uleb128 0xe
 3567 0208 03       		.uleb128 0x3
 3568 0209 0E       		.uleb128 0xe
 3569 020a 3A       		.uleb128 0x3a
 3570 020b 0B       		.uleb128 0xb
 3571 020c 3B       		.uleb128 0x3b
 3572 020d 0B       		.uleb128 0xb
 3573 020e 00       		.byte	0
 3574 020f 00       		.byte	0
 3575 0210 00       		.byte	0
 3576              		.section	.debug_loc,"",%progbits
 3577              	.Ldebug_loc0:
 3578              	.LLST0:
 3579 0000 04000000 		.4byte	.LVL1
 3580 0004 1C000000 		.4byte	.LVL4
 3581 0008 0100     		.2byte	0x1
 3582 000a 53       		.byte	0x53
 3583 000b 1C000000 		.4byte	.LVL4
 3584 000f 20000000 		.4byte	.LVL5
 3585 0013 0700     		.2byte	0x7
 3586 0015 73       		.byte	0x73
 3587 0016 00       		.sleb128 0
 3588 0017 40       		.byte	0x40
 3589 0018 49       		.byte	0x49
 3590 0019 24       		.byte	0x24
 3591 001a 21       		.byte	0x21
 3592 001b 9F       		.byte	0x9f
 3593 001c 26000000 		.4byte	.LVL6
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 104


 3594 0020 34000000 		.4byte	.LFE5
 3595 0024 0100     		.2byte	0x1
 3596 0026 53       		.byte	0x53
 3597 0027 00000000 		.4byte	0
 3598 002b 00000000 		.4byte	0
 3599              	.LLST1:
 3600 002f 00000000 		.4byte	.LVL7
 3601 0033 02000000 		.4byte	.LVL8
 3602 0037 0100     		.2byte	0x1
 3603 0039 50       		.byte	0x50
 3604 003a 02000000 		.4byte	.LVL8
 3605 003e 58000000 		.4byte	.LFE13
 3606 0042 0400     		.2byte	0x4
 3607 0044 F3       		.byte	0xf3
 3608 0045 01       		.uleb128 0x1
 3609 0046 50       		.byte	0x50
 3610 0047 9F       		.byte	0x9f
 3611 0048 00000000 		.4byte	0
 3612 004c 00000000 		.4byte	0
 3613              	.LLST2:
 3614 0050 00000000 		.4byte	.LVL7
 3615 0054 46000000 		.4byte	.LVL13
 3616 0058 0200     		.2byte	0x2
 3617 005a 30       		.byte	0x30
 3618 005b 9F       		.byte	0x9f
 3619 005c 46000000 		.4byte	.LVL13
 3620 0060 58000000 		.4byte	.LFE13
 3621 0064 0100     		.2byte	0x1
 3622 0066 50       		.byte	0x50
 3623 0067 00000000 		.4byte	0
 3624 006b 00000000 		.4byte	0
 3625              	.LLST3:
 3626 006f 0A000000 		.4byte	.LVL9
 3627 0073 14000000 		.4byte	.LVL10
 3628 0077 0100     		.2byte	0x1
 3629 0079 52       		.byte	0x52
 3630 007a 28000000 		.4byte	.LVL11
 3631 007e 2C000000 		.4byte	.LVL12
 3632 0082 0100     		.2byte	0x1
 3633 0084 52       		.byte	0x52
 3634 0085 00000000 		.4byte	0
 3635 0089 00000000 		.4byte	0
 3636              	.LLST4:
 3637 008d 00000000 		.4byte	.LVL14
 3638 0091 07000000 		.4byte	.LVL15-1
 3639 0095 0100     		.2byte	0x1
 3640 0097 50       		.byte	0x50
 3641 0098 07000000 		.4byte	.LVL15-1
 3642 009c 7E000000 		.4byte	.LVL21
 3643 00a0 0100     		.2byte	0x1
 3644 00a2 54       		.byte	0x54
 3645 00a3 7E000000 		.4byte	.LVL21
 3646 00a7 AC000000 		.4byte	.LFE4
 3647 00ab 0400     		.2byte	0x4
 3648 00ad F3       		.byte	0xf3
 3649 00ae 01       		.uleb128 0x1
 3650 00af 50       		.byte	0x50
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 105


 3651 00b0 9F       		.byte	0x9f
 3652 00b1 00000000 		.4byte	0
 3653 00b5 00000000 		.4byte	0
 3654              	.LLST5:
 3655 00b9 64000000 		.4byte	.LVL18
 3656 00bd 68000000 		.4byte	.LVL19
 3657 00c1 0200     		.2byte	0x2
 3658 00c3 30       		.byte	0x30
 3659 00c4 9F       		.byte	0x9f
 3660 00c5 68000000 		.4byte	.LVL19
 3661 00c9 AC000000 		.4byte	.LFE4
 3662 00cd 0100     		.2byte	0x1
 3663 00cf 53       		.byte	0x53
 3664 00d0 00000000 		.4byte	0
 3665 00d4 00000000 		.4byte	0
 3666              	.LLST6:
 3667 00d8 68000000 		.4byte	.LVL19
 3668 00dc 78000000 		.4byte	.LVL20
 3669 00e0 0400     		.2byte	0x4
 3670 00e2 0A       		.byte	0xa
 3671 00e3 0004     		.2byte	0x400
 3672 00e5 9F       		.byte	0x9f
 3673 00e6 00000000 		.4byte	0
 3674 00ea 00000000 		.4byte	0
 3675              	.LLST7:
 3676 00ee 00000000 		.4byte	.LVL23
 3677 00f2 04000000 		.4byte	.LVL24
 3678 00f6 0100     		.2byte	0x1
 3679 00f8 50       		.byte	0x50
 3680 00f9 04000000 		.4byte	.LVL24
 3681 00fd 10000000 		.4byte	.LFE10
 3682 0101 0400     		.2byte	0x4
 3683 0103 F3       		.byte	0xf3
 3684 0104 01       		.uleb128 0x1
 3685 0105 50       		.byte	0x50
 3686 0106 9F       		.byte	0x9f
 3687 0107 00000000 		.4byte	0
 3688 010b 00000000 		.4byte	0
 3689              	.LLST8:
 3690 010f 00000000 		.4byte	.LVL25
 3691 0113 18000000 		.4byte	.LVL27
 3692 0117 0100     		.2byte	0x1
 3693 0119 50       		.byte	0x50
 3694 011a 18000000 		.4byte	.LVL27
 3695 011e 2C000000 		.4byte	.LFE11
 3696 0122 0100     		.2byte	0x1
 3697 0124 50       		.byte	0x50
 3698 0125 00000000 		.4byte	0
 3699 0129 00000000 		.4byte	0
 3700              	.LLST9:
 3701 012d 00000000 		.4byte	.LVL28
 3702 0131 0A000000 		.4byte	.LVL30
 3703 0135 0100     		.2byte	0x1
 3704 0137 50       		.byte	0x50
 3705 0138 0A000000 		.4byte	.LVL30
 3706 013c 2C000000 		.4byte	.LVL34
 3707 0140 0100     		.2byte	0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 106


 3708 0142 51       		.byte	0x51
 3709 0143 2C000000 		.4byte	.LVL34
 3710 0147 2E000000 		.4byte	.LVL35
 3711 014b 0100     		.2byte	0x1
 3712 014d 50       		.byte	0x50
 3713 014e 2E000000 		.4byte	.LVL35
 3714 0152 38000000 		.4byte	.LFE12
 3715 0156 0100     		.2byte	0x1
 3716 0158 51       		.byte	0x51
 3717 0159 00000000 		.4byte	0
 3718 015d 00000000 		.4byte	0
 3719              	.LLST10:
 3720 0161 02000000 		.4byte	.LVL29
 3721 0165 0A000000 		.4byte	.LVL30
 3722 0169 0200     		.2byte	0x2
 3723 016b 30       		.byte	0x30
 3724 016c 9F       		.byte	0x9f
 3725 016d 12000000 		.4byte	.LVL31
 3726 0171 2C000000 		.4byte	.LVL34
 3727 0175 0100     		.2byte	0x1
 3728 0177 50       		.byte	0x50
 3729 0178 2C000000 		.4byte	.LVL34
 3730 017c 2E000000 		.4byte	.LVL35
 3731 0180 0200     		.2byte	0x2
 3732 0182 30       		.byte	0x30
 3733 0183 9F       		.byte	0x9f
 3734 0184 2E000000 		.4byte	.LVL35
 3735 0188 38000000 		.4byte	.LFE12
 3736 018c 0100     		.2byte	0x1
 3737 018e 50       		.byte	0x50
 3738 018f 00000000 		.4byte	0
 3739 0193 00000000 		.4byte	0
 3740              	.LLST11:
 3741 0197 02000000 		.4byte	.LVL29
 3742 019b 0A000000 		.4byte	.LVL30
 3743 019f 0600     		.2byte	0x6
 3744 01a1 0C       		.byte	0xc
 3745 01a2 FFFFFF03 		.4byte	0x3ffffff
 3746 01a6 9F       		.byte	0x9f
 3747 01a7 0A000000 		.4byte	.LVL30
 3748 01ab 26000000 		.4byte	.LVL33
 3749 01af 0100     		.2byte	0x1
 3750 01b1 52       		.byte	0x52
 3751 01b2 2C000000 		.4byte	.LVL34
 3752 01b6 2E000000 		.4byte	.LVL35
 3753 01ba 0600     		.2byte	0x6
 3754 01bc 0C       		.byte	0xc
 3755 01bd FFFFFF03 		.4byte	0x3ffffff
 3756 01c1 9F       		.byte	0x9f
 3757 01c2 00000000 		.4byte	0
 3758 01c6 00000000 		.4byte	0
 3759              	.LLST12:
 3760 01ca 00000000 		.4byte	.LVL36
 3761 01ce 1A000000 		.4byte	.LVL37
 3762 01d2 0100     		.2byte	0x1
 3763 01d4 50       		.byte	0x50
 3764 01d5 1A000000 		.4byte	.LVL37
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 107


 3765 01d9 34000000 		.4byte	.LVL39
 3766 01dd 0100     		.2byte	0x1
 3767 01df 54       		.byte	0x54
 3768 01e0 34000000 		.4byte	.LVL39
 3769 01e4 42000000 		.4byte	.LVL41
 3770 01e8 0400     		.2byte	0x4
 3771 01ea F3       		.byte	0xf3
 3772 01eb 01       		.uleb128 0x1
 3773 01ec 50       		.byte	0x50
 3774 01ed 9F       		.byte	0x9f
 3775 01ee 42000000 		.4byte	.LVL41
 3776 01f2 44000000 		.4byte	.LVL42
 3777 01f6 0100     		.2byte	0x1
 3778 01f8 54       		.byte	0x54
 3779 01f9 44000000 		.4byte	.LVL42
 3780 01fd 54000000 		.4byte	.LFE14
 3781 0201 0400     		.2byte	0x4
 3782 0203 F3       		.byte	0xf3
 3783 0204 01       		.uleb128 0x1
 3784 0205 50       		.byte	0x50
 3785 0206 9F       		.byte	0x9f
 3786 0207 00000000 		.4byte	0
 3787 020b 00000000 		.4byte	0
 3788              	.LLST13:
 3789 020f 40000000 		.4byte	.LVL40
 3790 0213 42000000 		.4byte	.LVL41
 3791 0217 0100     		.2byte	0x1
 3792 0219 50       		.byte	0x50
 3793 021a 44000000 		.4byte	.LVL42
 3794 021e 46000000 		.4byte	.LVL43
 3795 0222 0100     		.2byte	0x1
 3796 0224 50       		.byte	0x50
 3797 0225 00000000 		.4byte	0
 3798 0229 00000000 		.4byte	0
 3799              	.LLST14:
 3800 022d 00000000 		.4byte	.LVL44
 3801 0231 1A000000 		.4byte	.LVL45
 3802 0235 0100     		.2byte	0x1
 3803 0237 50       		.byte	0x50
 3804 0238 1A000000 		.4byte	.LVL45
 3805 023c 54000000 		.4byte	.LVL56
 3806 0240 0100     		.2byte	0x1
 3807 0242 55       		.byte	0x55
 3808 0243 54000000 		.4byte	.LVL56
 3809 0247 64000000 		.4byte	.LFE15
 3810 024b 0400     		.2byte	0x4
 3811 024d F3       		.byte	0xf3
 3812 024e 01       		.uleb128 0x1
 3813 024f 50       		.byte	0x50
 3814 0250 9F       		.byte	0x9f
 3815 0251 00000000 		.4byte	0
 3816 0255 00000000 		.4byte	0
 3817              	.LLST15:
 3818 0259 40000000 		.4byte	.LVL47
 3819 025d 42000000 		.4byte	.LVL48
 3820 0261 0100     		.2byte	0x1
 3821 0263 54       		.byte	0x54
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 108


 3822 0264 44000000 		.4byte	.LVL49
 3823 0268 54000000 		.4byte	.LVL55
 3824 026c 0100     		.2byte	0x1
 3825 026e 54       		.byte	0x54
 3826 026f 00000000 		.4byte	0
 3827 0273 00000000 		.4byte	0
 3828              	.LLST16:
 3829 0277 4E000000 		.4byte	.LVL51
 3830 027b 52000000 		.4byte	.LVL53
 3831 027f 0100     		.2byte	0x1
 3832 0281 54       		.byte	0x54
 3833 0282 00000000 		.4byte	0
 3834 0286 00000000 		.4byte	0
 3835              	.LLST17:
 3836 028a 50000000 		.4byte	.LVL52
 3837 028e 52000000 		.4byte	.LVL53
 3838 0292 0100     		.2byte	0x1
 3839 0294 50       		.byte	0x50
 3840 0295 54000000 		.4byte	.LVL54
 3841 0299 64000000 		.4byte	.LFE15
 3842 029d 0100     		.2byte	0x1
 3843 029f 50       		.byte	0x50
 3844 02a0 00000000 		.4byte	0
 3845 02a4 00000000 		.4byte	0
 3846              	.LLST18:
 3847 02a8 00000000 		.4byte	.LVL57
 3848 02ac 0E000000 		.4byte	.LVL58
 3849 02b0 0100     		.2byte	0x1
 3850 02b2 50       		.byte	0x50
 3851 02b3 0E000000 		.4byte	.LVL58
 3852 02b7 1C000000 		.4byte	.LFE16
 3853 02bb 0400     		.2byte	0x4
 3854 02bd F3       		.byte	0xf3
 3855 02be 01       		.uleb128 0x1
 3856 02bf 50       		.byte	0x50
 3857 02c0 9F       		.byte	0x9f
 3858 02c1 00000000 		.4byte	0
 3859 02c5 00000000 		.4byte	0
 3860              	.LLST19:
 3861 02c9 00000000 		.4byte	.LVL59
 3862 02cd 0E000000 		.4byte	.LVL60
 3863 02d1 0100     		.2byte	0x1
 3864 02d3 50       		.byte	0x50
 3865 02d4 0E000000 		.4byte	.LVL60
 3866 02d8 18000000 		.4byte	.LFE17
 3867 02dc 0400     		.2byte	0x4
 3868 02de F3       		.byte	0xf3
 3869 02df 01       		.uleb128 0x1
 3870 02e0 50       		.byte	0x50
 3871 02e1 9F       		.byte	0x9f
 3872 02e2 00000000 		.4byte	0
 3873 02e6 00000000 		.4byte	0
 3874              	.LLST20:
 3875 02ea 00000000 		.4byte	.LVL61
 3876 02ee 18000000 		.4byte	.LVL63
 3877 02f2 0100     		.2byte	0x1
 3878 02f4 50       		.byte	0x50
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 109


 3879 02f5 18000000 		.4byte	.LVL63
 3880 02f9 2C000000 		.4byte	.LFE18
 3881 02fd 0100     		.2byte	0x1
 3882 02ff 50       		.byte	0x50
 3883 0300 00000000 		.4byte	0
 3884 0304 00000000 		.4byte	0
 3885              	.LLST21:
 3886 0308 00000000 		.4byte	.LVL64
 3887 030c 18000000 		.4byte	.LVL66
 3888 0310 0100     		.2byte	0x1
 3889 0312 50       		.byte	0x50
 3890 0313 18000000 		.4byte	.LVL66
 3891 0317 2C000000 		.4byte	.LFE19
 3892 031b 0100     		.2byte	0x1
 3893 031d 50       		.byte	0x50
 3894 031e 00000000 		.4byte	0
 3895 0322 00000000 		.4byte	0
 3896              	.LLST22:
 3897 0326 00000000 		.4byte	.LVL67
 3898 032a 1C000000 		.4byte	.LVL68
 3899 032e 0100     		.2byte	0x1
 3900 0330 50       		.byte	0x50
 3901 0331 1C000000 		.4byte	.LVL68
 3902 0335 36000000 		.4byte	.LVL70
 3903 0339 0100     		.2byte	0x1
 3904 033b 55       		.byte	0x55
 3905 033c 36000000 		.4byte	.LVL70
 3906 0340 44000000 		.4byte	.LFE20
 3907 0344 0400     		.2byte	0x4
 3908 0346 F3       		.byte	0xf3
 3909 0347 01       		.uleb128 0x1
 3910 0348 50       		.byte	0x50
 3911 0349 9F       		.byte	0x9f
 3912 034a 00000000 		.4byte	0
 3913 034e 00000000 		.4byte	0
 3914              	.LLST23:
 3915 0352 00000000 		.4byte	.LVL67
 3916 0356 1F000000 		.4byte	.LVL69-1
 3917 035a 0100     		.2byte	0x1
 3918 035c 51       		.byte	0x51
 3919 035d 1F000000 		.4byte	.LVL69-1
 3920 0361 44000000 		.4byte	.LFE20
 3921 0365 0400     		.2byte	0x4
 3922 0367 F3       		.byte	0xf3
 3923 0368 01       		.uleb128 0x1
 3924 0369 51       		.byte	0x51
 3925 036a 9F       		.byte	0x9f
 3926 036b 00000000 		.4byte	0
 3927 036f 00000000 		.4byte	0
 3928              	.LLST24:
 3929 0373 00000000 		.4byte	.LVL71
 3930 0377 1C000000 		.4byte	.LVL72
 3931 037b 0100     		.2byte	0x1
 3932 037d 50       		.byte	0x50
 3933 037e 1C000000 		.4byte	.LVL72
 3934 0382 36000000 		.4byte	.LVL75
 3935 0386 0100     		.2byte	0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 110


 3936 0388 55       		.byte	0x55
 3937 0389 36000000 		.4byte	.LVL75
 3938 038d 44000000 		.4byte	.LFE21
 3939 0391 0400     		.2byte	0x4
 3940 0393 F3       		.byte	0xf3
 3941 0394 01       		.uleb128 0x1
 3942 0395 50       		.byte	0x50
 3943 0396 9F       		.byte	0x9f
 3944 0397 00000000 		.4byte	0
 3945 039b 00000000 		.4byte	0
 3946              	.LLST25:
 3947 039f 00000000 		.4byte	.LVL71
 3948 03a3 1F000000 		.4byte	.LVL73-1
 3949 03a7 0100     		.2byte	0x1
 3950 03a9 51       		.byte	0x51
 3951 03aa 1F000000 		.4byte	.LVL73-1
 3952 03ae 36000000 		.4byte	.LVL74
 3953 03b2 0100     		.2byte	0x1
 3954 03b4 54       		.byte	0x54
 3955 03b5 36000000 		.4byte	.LVL74
 3956 03b9 44000000 		.4byte	.LFE21
 3957 03bd 0500     		.2byte	0x5
 3958 03bf 73       		.byte	0x73
 3959 03c0 00       		.sleb128 0
 3960 03c1 70       		.byte	0x70
 3961 03c2 00       		.sleb128 0
 3962 03c3 22       		.byte	0x22
 3963 03c4 00000000 		.4byte	0
 3964 03c8 00000000 		.4byte	0
 3965              	.LLST26:
 3966 03cc 00000000 		.4byte	.LVL76
 3967 03d0 0C000000 		.4byte	.LVL78
 3968 03d4 0100     		.2byte	0x1
 3969 03d6 50       		.byte	0x50
 3970 03d7 0C000000 		.4byte	.LVL78
 3971 03db 7A000000 		.4byte	.LVL93
 3972 03df 0100     		.2byte	0x1
 3973 03e1 56       		.byte	0x56
 3974 03e2 7A000000 		.4byte	.LVL93
 3975 03e6 88000000 		.4byte	.LFE22
 3976 03ea 0400     		.2byte	0x4
 3977 03ec F3       		.byte	0xf3
 3978 03ed 01       		.uleb128 0x1
 3979 03ee 50       		.byte	0x50
 3980 03ef 9F       		.byte	0x9f
 3981 03f0 00000000 		.4byte	0
 3982 03f4 00000000 		.4byte	0
 3983              	.LLST27:
 3984 03f8 00000000 		.4byte	.LVL76
 3985 03fc 0A000000 		.4byte	.LVL77
 3986 0400 0100     		.2byte	0x1
 3987 0402 51       		.byte	0x51
 3988 0403 0A000000 		.4byte	.LVL77
 3989 0407 62000000 		.4byte	.LVL87
 3990 040b 0400     		.2byte	0x4
 3991 040d F3       		.byte	0xf3
 3992 040e 01       		.uleb128 0x1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 111


 3993 040f 51       		.byte	0x51
 3994 0410 9F       		.byte	0x9f
 3995 0411 62000000 		.4byte	.LVL87
 3996 0415 64000000 		.4byte	.LVL88
 3997 0419 0100     		.2byte	0x1
 3998 041b 54       		.byte	0x54
 3999 041c 64000000 		.4byte	.LVL88
 4000 0420 6E000000 		.4byte	.LVL90
 4001 0424 0400     		.2byte	0x4
 4002 0426 F3       		.byte	0xf3
 4003 0427 01       		.uleb128 0x1
 4004 0428 51       		.byte	0x51
 4005 0429 9F       		.byte	0x9f
 4006 042a 6E000000 		.4byte	.LVL90
 4007 042e 7A000000 		.4byte	.LVL92
 4008 0432 0100     		.2byte	0x1
 4009 0434 54       		.byte	0x54
 4010 0435 7A000000 		.4byte	.LVL92
 4011 0439 88000000 		.4byte	.LFE22
 4012 043d 0100     		.2byte	0x1
 4013 043f 50       		.byte	0x50
 4014 0440 00000000 		.4byte	0
 4015 0444 00000000 		.4byte	0
 4016              	.LLST28:
 4017 0448 60000000 		.4byte	.LVL86
 4018 044c 64000000 		.4byte	.LVL88
 4019 0450 0100     		.2byte	0x1
 4020 0452 50       		.byte	0x50
 4021 0453 00000000 		.4byte	0
 4022 0457 00000000 		.4byte	0
 4023              	.LLST29:
 4024 045b 3E000000 		.4byte	.LVL81
 4025 045f 40000000 		.4byte	.LVL82
 4026 0463 0100     		.2byte	0x1
 4027 0465 53       		.byte	0x53
 4028 0466 40000000 		.4byte	.LVL82
 4029 046a 44000000 		.4byte	.LVL83
 4030 046e 0300     		.2byte	0x3
 4031 0470 73       		.byte	0x73
 4032 0471 7F       		.sleb128 -1
 4033 0472 9F       		.byte	0x9f
 4034 0473 44000000 		.4byte	.LVL83
 4035 0477 6E000000 		.4byte	.LVL90
 4036 047b 0100     		.2byte	0x1
 4037 047d 57       		.byte	0x57
 4038 047e 00000000 		.4byte	0
 4039 0482 00000000 		.4byte	0
 4040              	.LLST30:
 4041 0486 16000000 		.4byte	.LVL79
 4042 048a 70000000 		.4byte	.LVL91
 4043 048e 0100     		.2byte	0x1
 4044 0490 55       		.byte	0x55
 4045 0491 00000000 		.4byte	0
 4046 0495 00000000 		.4byte	0
 4047              	.LLST31:
 4048 0499 00000000 		.4byte	.LVL94
 4049 049d 1D000000 		.4byte	.LVL97-1
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 112


 4050 04a1 0100     		.2byte	0x1
 4051 04a3 50       		.byte	0x50
 4052 04a4 1D000000 		.4byte	.LVL97-1
 4053 04a8 3E000000 		.4byte	.LVL103
 4054 04ac 0400     		.2byte	0x4
 4055 04ae F3       		.byte	0xf3
 4056 04af 01       		.uleb128 0x1
 4057 04b0 50       		.byte	0x50
 4058 04b1 9F       		.byte	0x9f
 4059 04b2 3E000000 		.4byte	.LVL103
 4060 04b6 40000000 		.4byte	.LVL104
 4061 04ba 0100     		.2byte	0x1
 4062 04bc 50       		.byte	0x50
 4063 04bd 40000000 		.4byte	.LVL104
 4064 04c1 54000000 		.4byte	.LFE23
 4065 04c5 0400     		.2byte	0x4
 4066 04c7 F3       		.byte	0xf3
 4067 04c8 01       		.uleb128 0x1
 4068 04c9 50       		.byte	0x50
 4069 04ca 9F       		.byte	0x9f
 4070 04cb 00000000 		.4byte	0
 4071 04cf 00000000 		.4byte	0
 4072              	.LLST32:
 4073 04d3 00000000 		.4byte	.LVL94
 4074 04d7 1D000000 		.4byte	.LVL97-1
 4075 04db 0100     		.2byte	0x1
 4076 04dd 51       		.byte	0x51
 4077 04de 1D000000 		.4byte	.LVL97-1
 4078 04e2 1E000000 		.4byte	.LVL97
 4079 04e6 0400     		.2byte	0x4
 4080 04e8 F3       		.byte	0xf3
 4081 04e9 01       		.uleb128 0x1
 4082 04ea 51       		.byte	0x51
 4083 04eb 9F       		.byte	0x9f
 4084 04ec 1E000000 		.4byte	.LVL97
 4085 04f0 21000000 		.4byte	.LVL98-1
 4086 04f4 0100     		.2byte	0x1
 4087 04f6 50       		.byte	0x50
 4088 04f7 3E000000 		.4byte	.LVL103
 4089 04fb 40000000 		.4byte	.LVL104
 4090 04ff 0100     		.2byte	0x1
 4091 0501 51       		.byte	0x51
 4092 0502 00000000 		.4byte	0
 4093 0506 00000000 		.4byte	0
 4094              	.LLST33:
 4095 050a 02000000 		.4byte	.LVL95
 4096 050e 3C000000 		.4byte	.LVL102
 4097 0512 0600     		.2byte	0x6
 4098 0514 9E       		.byte	0x9e
 4099 0515 04       		.uleb128 0x4
 4100 0516 00000000 		.4byte	0
 4101 051a 3C000000 		.4byte	.LVL102
 4102 051e 3E000000 		.4byte	.LVL103
 4103 0522 0100     		.2byte	0x1
 4104 0524 50       		.byte	0x50
 4105 0525 3E000000 		.4byte	.LVL103
 4106 0529 40000000 		.4byte	.LVL104
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 113


 4107 052d 0600     		.2byte	0x6
 4108 052f 9E       		.byte	0x9e
 4109 0530 04       		.uleb128 0x4
 4110 0531 00000000 		.4byte	0
 4111 0535 40000000 		.4byte	.LVL104
 4112 0539 54000000 		.4byte	.LFE23
 4113 053d 0100     		.2byte	0x1
 4114 053f 50       		.byte	0x50
 4115 0540 00000000 		.4byte	0
 4116 0544 00000000 		.4byte	0
 4117              	.LLST34:
 4118 0548 12000000 		.4byte	.LVL96
 4119 054c 2C000000 		.4byte	.LVL100
 4120 0550 0100     		.2byte	0x1
 4121 0552 54       		.byte	0x54
 4122 0553 3E000000 		.4byte	.LVL103
 4123 0557 40000000 		.4byte	.LVL104
 4124 055b 0100     		.2byte	0x1
 4125 055d 54       		.byte	0x54
 4126 055e 00000000 		.4byte	0
 4127 0562 00000000 		.4byte	0
 4128              	.LLST35:
 4129 0566 00000000 		.4byte	.LVL105
 4130 056a 1D000000 		.4byte	.LVL108-1
 4131 056e 0100     		.2byte	0x1
 4132 0570 50       		.byte	0x50
 4133 0571 1D000000 		.4byte	.LVL108-1
 4134 0575 52000000 		.4byte	.LVL115
 4135 0579 0400     		.2byte	0x4
 4136 057b F3       		.byte	0xf3
 4137 057c 01       		.uleb128 0x1
 4138 057d 50       		.byte	0x50
 4139 057e 9F       		.byte	0x9f
 4140 057f 52000000 		.4byte	.LVL115
 4141 0583 54000000 		.4byte	.LVL116
 4142 0587 0100     		.2byte	0x1
 4143 0589 50       		.byte	0x50
 4144 058a 54000000 		.4byte	.LVL116
 4145 058e 68000000 		.4byte	.LFE24
 4146 0592 0400     		.2byte	0x4
 4147 0594 F3       		.byte	0xf3
 4148 0595 01       		.uleb128 0x1
 4149 0596 50       		.byte	0x50
 4150 0597 9F       		.byte	0x9f
 4151 0598 00000000 		.4byte	0
 4152 059c 00000000 		.4byte	0
 4153              	.LLST36:
 4154 05a0 00000000 		.4byte	.LVL105
 4155 05a4 1D000000 		.4byte	.LVL108-1
 4156 05a8 0100     		.2byte	0x1
 4157 05aa 51       		.byte	0x51
 4158 05ab 1D000000 		.4byte	.LVL108-1
 4159 05af 1E000000 		.4byte	.LVL108
 4160 05b3 0400     		.2byte	0x4
 4161 05b5 F3       		.byte	0xf3
 4162 05b6 01       		.uleb128 0x1
 4163 05b7 51       		.byte	0x51
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 114


 4164 05b8 9F       		.byte	0x9f
 4165 05b9 1E000000 		.4byte	.LVL108
 4166 05bd 2E000000 		.4byte	.LVL109
 4167 05c1 0100     		.2byte	0x1
 4168 05c3 50       		.byte	0x50
 4169 05c4 34000000 		.4byte	.LVL110
 4170 05c8 42000000 		.4byte	.LVL111
 4171 05cc 0100     		.2byte	0x1
 4172 05ce 50       		.byte	0x50
 4173 05cf 52000000 		.4byte	.LVL115
 4174 05d3 54000000 		.4byte	.LVL116
 4175 05d7 0100     		.2byte	0x1
 4176 05d9 51       		.byte	0x51
 4177 05da 00000000 		.4byte	0
 4178 05de 00000000 		.4byte	0
 4179              	.LLST37:
 4180 05e2 02000000 		.4byte	.LVL106
 4181 05e6 50000000 		.4byte	.LVL114
 4182 05ea 0200     		.2byte	0x2
 4183 05ec 30       		.byte	0x30
 4184 05ed 9F       		.byte	0x9f
 4185 05ee 50000000 		.4byte	.LVL114
 4186 05f2 52000000 		.4byte	.LVL115
 4187 05f6 0100     		.2byte	0x1
 4188 05f8 50       		.byte	0x50
 4189 05f9 52000000 		.4byte	.LVL115
 4190 05fd 54000000 		.4byte	.LVL116
 4191 0601 0200     		.2byte	0x2
 4192 0603 30       		.byte	0x30
 4193 0604 9F       		.byte	0x9f
 4194 0605 54000000 		.4byte	.LVL116
 4195 0609 68000000 		.4byte	.LFE24
 4196 060d 0100     		.2byte	0x1
 4197 060f 50       		.byte	0x50
 4198 0610 00000000 		.4byte	0
 4199 0614 00000000 		.4byte	0
 4200              	.LLST38:
 4201 0618 12000000 		.4byte	.LVL107
 4202 061c 46000000 		.4byte	.LVL112
 4203 0620 0100     		.2byte	0x1
 4204 0622 54       		.byte	0x54
 4205 0623 46000000 		.4byte	.LVL112
 4206 0627 52000000 		.4byte	.LVL115
 4207 062b 1200     		.2byte	0x12
 4208 062d 75       		.byte	0x75
 4209 062e 00       		.sleb128 0
 4210 062f 33       		.byte	0x33
 4211 0630 24       		.byte	0x24
 4212 0631 75       		.byte	0x75
 4213 0632 00       		.sleb128 0
 4214 0633 1C       		.byte	0x1c
 4215 0634 33       		.byte	0x33
 4216 0635 24       		.byte	0x24
 4217 0636 76       		.byte	0x76
 4218 0637 00       		.sleb128 0
 4219 0638 22       		.byte	0x22
 4220 0639 06       		.byte	0x6
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 115


 4221 063a F3       		.byte	0xf3
 4222 063b 01       		.uleb128 0x1
 4223 063c 50       		.byte	0x50
 4224 063d 22       		.byte	0x22
 4225 063e 9F       		.byte	0x9f
 4226 063f 52000000 		.4byte	.LVL115
 4227 0643 54000000 		.4byte	.LVL116
 4228 0647 0100     		.2byte	0x1
 4229 0649 54       		.byte	0x54
 4230 064a 54000000 		.4byte	.LVL116
 4231 064e 54000000 		.4byte	.LVL117
 4232 0652 1200     		.2byte	0x12
 4233 0654 75       		.byte	0x75
 4234 0655 00       		.sleb128 0
 4235 0656 33       		.byte	0x33
 4236 0657 24       		.byte	0x24
 4237 0658 75       		.byte	0x75
 4238 0659 00       		.sleb128 0
 4239 065a 1C       		.byte	0x1c
 4240 065b 33       		.byte	0x33
 4241 065c 24       		.byte	0x24
 4242 065d 76       		.byte	0x76
 4243 065e 00       		.sleb128 0
 4244 065f 22       		.byte	0x22
 4245 0660 06       		.byte	0x6
 4246 0661 F3       		.byte	0xf3
 4247 0662 01       		.uleb128 0x1
 4248 0663 50       		.byte	0x50
 4249 0664 22       		.byte	0x22
 4250 0665 9F       		.byte	0x9f
 4251 0666 00000000 		.4byte	0
 4252 066a 00000000 		.4byte	0
 4253              	.LLST39:
 4254 066e 00000000 		.4byte	.LVL118
 4255 0672 1D000000 		.4byte	.LVL121-1
 4256 0676 0100     		.2byte	0x1
 4257 0678 50       		.byte	0x50
 4258 0679 1D000000 		.4byte	.LVL121-1
 4259 067d 36000000 		.4byte	.LVL125
 4260 0681 0400     		.2byte	0x4
 4261 0683 F3       		.byte	0xf3
 4262 0684 01       		.uleb128 0x1
 4263 0685 50       		.byte	0x50
 4264 0686 9F       		.byte	0x9f
 4265 0687 36000000 		.4byte	.LVL125
 4266 068b 38000000 		.4byte	.LVL126
 4267 068f 0100     		.2byte	0x1
 4268 0691 50       		.byte	0x50
 4269 0692 38000000 		.4byte	.LVL126
 4270 0696 4C000000 		.4byte	.LFE25
 4271 069a 0400     		.2byte	0x4
 4272 069c F3       		.byte	0xf3
 4273 069d 01       		.uleb128 0x1
 4274 069e 50       		.byte	0x50
 4275 069f 9F       		.byte	0x9f
 4276 06a0 00000000 		.4byte	0
 4277 06a4 00000000 		.4byte	0
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 116


 4278              	.LLST40:
 4279 06a8 00000000 		.4byte	.LVL118
 4280 06ac 1D000000 		.4byte	.LVL121-1
 4281 06b0 0100     		.2byte	0x1
 4282 06b2 51       		.byte	0x51
 4283 06b3 1D000000 		.4byte	.LVL121-1
 4284 06b7 1E000000 		.4byte	.LVL121
 4285 06bb 0400     		.2byte	0x4
 4286 06bd F3       		.byte	0xf3
 4287 06be 01       		.uleb128 0x1
 4288 06bf 51       		.byte	0x51
 4289 06c0 9F       		.byte	0x9f
 4290 06c1 1E000000 		.4byte	.LVL121
 4291 06c5 27000000 		.4byte	.LVL122-1
 4292 06c9 0100     		.2byte	0x1
 4293 06cb 50       		.byte	0x50
 4294 06cc 36000000 		.4byte	.LVL125
 4295 06d0 38000000 		.4byte	.LVL126
 4296 06d4 0100     		.2byte	0x1
 4297 06d6 51       		.byte	0x51
 4298 06d7 00000000 		.4byte	0
 4299 06db 00000000 		.4byte	0
 4300              	.LLST41:
 4301 06df 02000000 		.4byte	.LVL119
 4302 06e3 34000000 		.4byte	.LVL124
 4303 06e7 0A00     		.2byte	0xa
 4304 06e9 9E       		.byte	0x9e
 4305 06ea 08       		.uleb128 0x8
 4306 06eb 00000000 		.8byte	0
 4306      00000000 
 4307 06f3 36000000 		.4byte	.LVL125
 4308 06f7 38000000 		.4byte	.LVL126
 4309 06fb 0A00     		.2byte	0xa
 4310 06fd 9E       		.byte	0x9e
 4311 06fe 08       		.uleb128 0x8
 4312 06ff 00000000 		.8byte	0
 4312      00000000 
 4313 0707 00000000 		.4byte	0
 4314 070b 00000000 		.4byte	0
 4315              	.LLST42:
 4316 070f 12000000 		.4byte	.LVL120
 4317 0713 2A000000 		.4byte	.LVL123
 4318 0717 0100     		.2byte	0x1
 4319 0719 54       		.byte	0x54
 4320 071a 2A000000 		.4byte	.LVL123
 4321 071e 36000000 		.4byte	.LVL125
 4322 0722 1200     		.2byte	0x12
 4323 0724 75       		.byte	0x75
 4324 0725 00       		.sleb128 0
 4325 0726 33       		.byte	0x33
 4326 0727 24       		.byte	0x24
 4327 0728 75       		.byte	0x75
 4328 0729 00       		.sleb128 0
 4329 072a 1C       		.byte	0x1c
 4330 072b 33       		.byte	0x33
 4331 072c 24       		.byte	0x24
 4332 072d 76       		.byte	0x76
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 117


 4333 072e 00       		.sleb128 0
 4334 072f 22       		.byte	0x22
 4335 0730 06       		.byte	0x6
 4336 0731 F3       		.byte	0xf3
 4337 0732 01       		.uleb128 0x1
 4338 0733 50       		.byte	0x50
 4339 0734 22       		.byte	0x22
 4340 0735 9F       		.byte	0x9f
 4341 0736 36000000 		.4byte	.LVL125
 4342 073a 38000000 		.4byte	.LVL126
 4343 073e 0100     		.2byte	0x1
 4344 0740 54       		.byte	0x54
 4345 0741 38000000 		.4byte	.LVL126
 4346 0745 38000000 		.4byte	.LVL127
 4347 0749 1200     		.2byte	0x12
 4348 074b 75       		.byte	0x75
 4349 074c 00       		.sleb128 0
 4350 074d 33       		.byte	0x33
 4351 074e 24       		.byte	0x24
 4352 074f 75       		.byte	0x75
 4353 0750 00       		.sleb128 0
 4354 0751 1C       		.byte	0x1c
 4355 0752 33       		.byte	0x33
 4356 0753 24       		.byte	0x24
 4357 0754 76       		.byte	0x76
 4358 0755 00       		.sleb128 0
 4359 0756 22       		.byte	0x22
 4360 0757 06       		.byte	0x6
 4361 0758 F3       		.byte	0xf3
 4362 0759 01       		.uleb128 0x1
 4363 075a 50       		.byte	0x50
 4364 075b 22       		.byte	0x22
 4365 075c 9F       		.byte	0x9f
 4366 075d 00000000 		.4byte	0
 4367 0761 00000000 		.4byte	0
 4368              	.LLST43:
 4369 0765 06000000 		.4byte	.LVL128
 4370 0769 10000000 		.4byte	.LVL129
 4371 076d 0200     		.2byte	0x2
 4372 076f 30       		.byte	0x30
 4373 0770 9F       		.byte	0x9f
 4374 0771 10000000 		.4byte	.LVL129
 4375 0775 80000000 		.4byte	.LVL133
 4376 0779 0100     		.2byte	0x1
 4377 077b 54       		.byte	0x54
 4378 077c 80000000 		.4byte	.LVL133
 4379 0780 84000000 		.4byte	.LVL134
 4380 0784 0200     		.2byte	0x2
 4381 0786 30       		.byte	0x30
 4382 0787 9F       		.byte	0x9f
 4383 0788 84000000 		.4byte	.LVL134
 4384 078c A8000000 		.4byte	.LVL138
 4385 0790 0100     		.2byte	0x1
 4386 0792 54       		.byte	0x54
 4387 0793 00000000 		.4byte	0
 4388 0797 00000000 		.4byte	0
 4389              	.LLST44:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 118


 4390 079b 06000000 		.4byte	.LVL128
 4391 079f 10000000 		.4byte	.LVL129
 4392 07a3 0200     		.2byte	0x2
 4393 07a5 30       		.byte	0x30
 4394 07a6 9F       		.byte	0x9f
 4395 07a7 10000000 		.4byte	.LVL129
 4396 07ab 80000000 		.4byte	.LVL133
 4397 07af 0100     		.2byte	0x1
 4398 07b1 55       		.byte	0x55
 4399 07b2 80000000 		.4byte	.LVL133
 4400 07b6 84000000 		.4byte	.LVL134
 4401 07ba 0200     		.2byte	0x2
 4402 07bc 30       		.byte	0x30
 4403 07bd 9F       		.byte	0x9f
 4404 07be 84000000 		.4byte	.LVL134
 4405 07c2 A6000000 		.4byte	.LVL137
 4406 07c6 0100     		.2byte	0x1
 4407 07c8 55       		.byte	0x55
 4408 07c9 A6000000 		.4byte	.LVL137
 4409 07cd B4000000 		.4byte	.LVL140
 4410 07d1 0200     		.2byte	0x2
 4411 07d3 30       		.byte	0x30
 4412 07d4 9F       		.byte	0x9f
 4413 07d5 00000000 		.4byte	0
 4414 07d9 00000000 		.4byte	0
 4415              	.LLST45:
 4416 07dd 10000000 		.4byte	.LVL129
 4417 07e1 80000000 		.4byte	.LVL133
 4418 07e5 0400     		.2byte	0x4
 4419 07e7 0A       		.byte	0xa
 4420 07e8 0010     		.2byte	0x1000
 4421 07ea 9F       		.byte	0x9f
 4422 07eb 00000000 		.4byte	0
 4423 07ef 00000000 		.4byte	0
 4424              	.LLST46:
 4425 07f3 00000000 		.4byte	.LVL145
 4426 07f7 07000000 		.4byte	.LVL146-1
 4427 07fb 0100     		.2byte	0x1
 4428 07fd 50       		.byte	0x50
 4429 07fe 07000000 		.4byte	.LVL146-1
 4430 0802 0E000000 		.4byte	.LVL148
 4431 0806 0100     		.2byte	0x1
 4432 0808 54       		.byte	0x54
 4433 0809 0E000000 		.4byte	.LVL148
 4434 080d 10000000 		.4byte	.LFE2
 4435 0811 0400     		.2byte	0x4
 4436 0813 F3       		.byte	0xf3
 4437 0814 01       		.uleb128 0x1
 4438 0815 50       		.byte	0x50
 4439 0816 9F       		.byte	0x9f
 4440 0817 00000000 		.4byte	0
 4441 081b 00000000 		.4byte	0
 4442              	.LLST47:
 4443 081f 00000000 		.4byte	.LVL149
 4444 0823 0D000000 		.4byte	.LVL150-1
 4445 0827 0100     		.2byte	0x1
 4446 0829 50       		.byte	0x50
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 119


 4447 082a 0D000000 		.4byte	.LVL150-1
 4448 082e 5A000000 		.4byte	.LVL155
 4449 0832 0100     		.2byte	0x1
 4450 0834 54       		.byte	0x54
 4451 0835 5A000000 		.4byte	.LVL155
 4452 0839 70000000 		.4byte	.LFE6
 4453 083d 0400     		.2byte	0x4
 4454 083f F3       		.byte	0xf3
 4455 0840 01       		.uleb128 0x1
 4456 0841 50       		.byte	0x50
 4457 0842 9F       		.byte	0x9f
 4458 0843 00000000 		.4byte	0
 4459 0847 00000000 		.4byte	0
 4460              	.LLST48:
 4461 084b 00000000 		.4byte	.LVL149
 4462 084f 0D000000 		.4byte	.LVL150-1
 4463 0853 0100     		.2byte	0x1
 4464 0855 51       		.byte	0x51
 4465 0856 0D000000 		.4byte	.LVL150-1
 4466 085a 5A000000 		.4byte	.LVL156
 4467 085e 0100     		.2byte	0x1
 4468 0860 56       		.byte	0x56
 4469 0861 5A000000 		.4byte	.LVL156
 4470 0865 70000000 		.4byte	.LFE6
 4471 0869 0400     		.2byte	0x4
 4472 086b F3       		.byte	0xf3
 4473 086c 01       		.uleb128 0x1
 4474 086d 51       		.byte	0x51
 4475 086e 9F       		.byte	0x9f
 4476 086f 00000000 		.4byte	0
 4477 0873 00000000 		.4byte	0
 4478              		.section	.debug_aranges,"",%progbits
 4479 0000 EC000000 		.4byte	0xec
 4480 0004 0200     		.2byte	0x2
 4481 0006 00000000 		.4byte	.Ldebug_info0
 4482 000a 04       		.byte	0x4
 4483 000b 00       		.byte	0
 4484 000c 0000     		.2byte	0
 4485 000e 0000     		.2byte	0
 4486 0010 00000000 		.4byte	.LFB5
 4487 0014 34000000 		.4byte	.LFE5-.LFB5
 4488 0018 00000000 		.4byte	.LFB13
 4489 001c 58000000 		.4byte	.LFE13-.LFB13
 4490 0020 00000000 		.4byte	.LFB3
 4491 0024 10000000 		.4byte	.LFE3-.LFB3
 4492 0028 00000000 		.4byte	.LFB4
 4493 002c AC000000 		.4byte	.LFE4-.LFB4
 4494 0030 00000000 		.4byte	.LFB7
 4495 0034 28000000 		.4byte	.LFE7-.LFB7
 4496 0038 00000000 		.4byte	.LFB9
 4497 003c 28000000 		.4byte	.LFE9-.LFB9
 4498 0040 00000000 		.4byte	.LFB10
 4499 0044 10000000 		.4byte	.LFE10-.LFB10
 4500 0048 00000000 		.4byte	.LFB11
 4501 004c 2C000000 		.4byte	.LFE11-.LFB11
 4502 0050 00000000 		.4byte	.LFB12
 4503 0054 38000000 		.4byte	.LFE12-.LFB12
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 120


 4504 0058 00000000 		.4byte	.LFB14
 4505 005c 54000000 		.4byte	.LFE14-.LFB14
 4506 0060 00000000 		.4byte	.LFB15
 4507 0064 64000000 		.4byte	.LFE15-.LFB15
 4508 0068 00000000 		.4byte	.LFB16
 4509 006c 1C000000 		.4byte	.LFE16-.LFB16
 4510 0070 00000000 		.4byte	.LFB17
 4511 0074 18000000 		.4byte	.LFE17-.LFB17
 4512 0078 00000000 		.4byte	.LFB18
 4513 007c 2C000000 		.4byte	.LFE18-.LFB18
 4514 0080 00000000 		.4byte	.LFB19
 4515 0084 2C000000 		.4byte	.LFE19-.LFB19
 4516 0088 00000000 		.4byte	.LFB20
 4517 008c 44000000 		.4byte	.LFE20-.LFB20
 4518 0090 00000000 		.4byte	.LFB21
 4519 0094 44000000 		.4byte	.LFE21-.LFB21
 4520 0098 00000000 		.4byte	.LFB22
 4521 009c 88000000 		.4byte	.LFE22-.LFB22
 4522 00a0 00000000 		.4byte	.LFB23
 4523 00a4 54000000 		.4byte	.LFE23-.LFB23
 4524 00a8 00000000 		.4byte	.LFB24
 4525 00ac 68000000 		.4byte	.LFE24-.LFB24
 4526 00b0 00000000 		.4byte	.LFB25
 4527 00b4 4C000000 		.4byte	.LFE25-.LFB25
 4528 00b8 00000000 		.4byte	.LFB26
 4529 00bc DC000000 		.4byte	.LFE26-.LFB26
 4530 00c0 00000000 		.4byte	.LFB27
 4531 00c4 48000000 		.4byte	.LFE27-.LFB27
 4532 00c8 00000000 		.4byte	.LFB1
 4533 00cc 24000000 		.4byte	.LFE1-.LFB1
 4534 00d0 00000000 		.4byte	.LFB2
 4535 00d4 10000000 		.4byte	.LFE2-.LFB2
 4536 00d8 00000000 		.4byte	.LFB6
 4537 00dc 70000000 		.4byte	.LFE6-.LFB6
 4538 00e0 00000000 		.4byte	.LFB8
 4539 00e4 44000000 		.4byte	.LFE8-.LFB8
 4540 00e8 00000000 		.4byte	0
 4541 00ec 00000000 		.4byte	0
 4542              		.section	.debug_ranges,"",%progbits
 4543              	.Ldebug_ranges0:
 4544 0000 00000000 		.4byte	.LFB5
 4545 0004 34000000 		.4byte	.LFE5
 4546 0008 00000000 		.4byte	.LFB13
 4547 000c 58000000 		.4byte	.LFE13
 4548 0010 00000000 		.4byte	.LFB3
 4549 0014 10000000 		.4byte	.LFE3
 4550 0018 00000000 		.4byte	.LFB4
 4551 001c AC000000 		.4byte	.LFE4
 4552 0020 00000000 		.4byte	.LFB7
 4553 0024 28000000 		.4byte	.LFE7
 4554 0028 00000000 		.4byte	.LFB9
 4555 002c 28000000 		.4byte	.LFE9
 4556 0030 00000000 		.4byte	.LFB10
 4557 0034 10000000 		.4byte	.LFE10
 4558 0038 00000000 		.4byte	.LFB11
 4559 003c 2C000000 		.4byte	.LFE11
 4560 0040 00000000 		.4byte	.LFB12
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 121


 4561 0044 38000000 		.4byte	.LFE12
 4562 0048 00000000 		.4byte	.LFB14
 4563 004c 54000000 		.4byte	.LFE14
 4564 0050 00000000 		.4byte	.LFB15
 4565 0054 64000000 		.4byte	.LFE15
 4566 0058 00000000 		.4byte	.LFB16
 4567 005c 1C000000 		.4byte	.LFE16
 4568 0060 00000000 		.4byte	.LFB17
 4569 0064 18000000 		.4byte	.LFE17
 4570 0068 00000000 		.4byte	.LFB18
 4571 006c 2C000000 		.4byte	.LFE18
 4572 0070 00000000 		.4byte	.LFB19
 4573 0074 2C000000 		.4byte	.LFE19
 4574 0078 00000000 		.4byte	.LFB20
 4575 007c 44000000 		.4byte	.LFE20
 4576 0080 00000000 		.4byte	.LFB21
 4577 0084 44000000 		.4byte	.LFE21
 4578 0088 00000000 		.4byte	.LFB22
 4579 008c 88000000 		.4byte	.LFE22
 4580 0090 00000000 		.4byte	.LFB23
 4581 0094 54000000 		.4byte	.LFE23
 4582 0098 00000000 		.4byte	.LFB24
 4583 009c 68000000 		.4byte	.LFE24
 4584 00a0 00000000 		.4byte	.LFB25
 4585 00a4 4C000000 		.4byte	.LFE25
 4586 00a8 00000000 		.4byte	.LFB26
 4587 00ac DC000000 		.4byte	.LFE26
 4588 00b0 00000000 		.4byte	.LFB27
 4589 00b4 48000000 		.4byte	.LFE27
 4590 00b8 00000000 		.4byte	.LFB1
 4591 00bc 24000000 		.4byte	.LFE1
 4592 00c0 00000000 		.4byte	.LFB2
 4593 00c4 10000000 		.4byte	.LFE2
 4594 00c8 00000000 		.4byte	.LFB6
 4595 00cc 70000000 		.4byte	.LFE6
 4596 00d0 00000000 		.4byte	.LFB8
 4597 00d4 44000000 		.4byte	.LFE8
 4598 00d8 00000000 		.4byte	0
 4599 00dc 00000000 		.4byte	0
 4600              		.section	.debug_line,"",%progbits
 4601              	.Ldebug_line0:
 4602 0000 BC030000 		.section	.debug_str,"MS",%progbits,1
 4602      02007E00 
 4602      00000201 
 4602      FB0E0D00 
 4602      01010101 
 4603              	.LASF10:
 4604 0000 75696E74 		.ascii	"uint16\000"
 4604      313600
 4605              	.LASF53:
 4606 0007 6368616E 		.ascii	"chanCount\000"
 4606      436F756E 
 4606      7400
 4607              	.LASF73:
 4608 0011 61646347 		.ascii	"adcGain\000"
 4608      61696E00 
 4609              	.LASF87:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 122


 4610 0019 636F756E 		.ascii	"counts\000"
 4610      747300
 4611              	.LASF90:
 4612 0020 4144435F 		.ascii	"ADC_1_StartEx\000"
 4612      315F5374 
 4612      61727445 
 4612      7800
 4613              	.LASF94:
 4614 002e 4144435F 		.ascii	"ADC_1_StopConvert\000"
 4614      315F5374 
 4614      6F70436F 
 4614      6E766572 
 4614      7400
 4615              	.LASF7:
 4616 0040 6C6F6E67 		.ascii	"long long unsigned int\000"
 4616      206C6F6E 
 4616      6720756E 
 4616      7369676E 
 4616      65642069 
 4617              	.LASF112:
 4618 0057 433A5C55 		.ascii	"C:\\Users\\samue\\OneDrive\\Documents\\GitHub\\Li-C"
 4618      73657273 
 4618      5C73616D 
 4618      75655C4F 
 4618      6E654472 
 4619 0084 656C6C54 		.ascii	"ellTesting_Script\\PSOC4_Main\\PSOC4_Main.cydsn\000"
 4619      65737469 
 4619      6E675F53 
 4619      63726970 
 4619      745C5053 
 4620              	.LASF88:
 4621 00b2 4144435F 		.ascii	"ADC_1_Enable\000"
 4621      315F456E 
 4621      61626C65 
 4621      00
 4622              	.LASF6:
 4623 00bf 6C6F6E67 		.ascii	"long long int\000"
 4623      206C6F6E 
 4623      6720696E 
 4623      7400
 4624              	.LASF0:
 4625 00cd 7369676E 		.ascii	"signed char\000"
 4625      65642063 
 4625      68617200 
 4626              	.LASF85:
 4627 00d9 4144435F 		.ascii	"ADC_1_Init\000"
 4627      315F496E 
 4627      697400
 4628              	.LASF36:
 4629 00e4 636C6B44 		.ascii	"clkDivider\000"
 4629      69766964 
 4629      657200
 4630              	.LASF44:
 4631 00ef 4144435F 		.ascii	"ADC_1_Stop\000"
 4631      315F5374 
 4631      6F7000
 4632              	.LASF13:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 123


 4633 00fa 696E7433 		.ascii	"int32\000"
 4633      3200
 4634              	.LASF46:
 4635 0100 4144435F 		.ascii	"ADC_1_InitConfig\000"
 4635      315F496E 
 4635      6974436F 
 4635      6E666967 
 4635      00
 4636              	.LASF4:
 4637 0111 6C6F6E67 		.ascii	"long int\000"
 4637      20696E74 
 4637      00
 4638              	.LASF74:
 4639 011a 4144435F 		.ascii	"ADC_1_RawCounts2Counts\000"
 4639      315F5261 
 4639      77436F75 
 4639      6E747332 
 4639      436F756E 
 4640              	.LASF9:
 4641 0131 75696E74 		.ascii	"uint8\000"
 4641      3800
 4642              	.LASF108:
 4643 0137 43794465 		.ascii	"CyDelayUs\000"
 4643      6C617955 
 4643      7300
 4644              	.LASF16:
 4645 0141 646F7562 		.ascii	"double\000"
 4645      6C6500
 4646              	.LASF47:
 4647 0148 4144435F 		.ascii	"ADC_1_SetConvertMode\000"
 4647      315F5365 
 4647      74436F6E 
 4647      76657274 
 4647      4D6F6465 
 4648              	.LASF66:
 4649 015d 4144435F 		.ascii	"ADC_1_SetLimitMask\000"
 4649      315F5365 
 4649      744C696D 
 4649      69744D61 
 4649      736B00
 4650              	.LASF97:
 4651 0170 4144435F 		.ascii	"ADC_1_initVar\000"
 4651      315F696E 
 4651      69745661 
 4651      7200
 4652              	.LASF27:
 4653 017e 73616D70 		.ascii	"sampleTime01\000"
 4653      6C655469 
 4653      6D653031 
 4653      00
 4654              	.LASF11:
 4655 018b 75696E74 		.ascii	"uint32\000"
 4655      333200
 4656              	.LASF107:
 4657 0192 4379496E 		.ascii	"CyIntSetVector\000"
 4657      74536574 
 4657      56656374 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 124


 4657      6F7200
 4658              	.LASF50:
 4659 01a1 6D61736B 		.ascii	"mask\000"
 4659      00
 4660              	.LASF62:
 4661 01a6 4144435F 		.ascii	"ADC_1_SetLowLimit\000"
 4661      315F5365 
 4661      744C6F77 
 4661      4C696D69 
 4661      7400
 4662              	.LASF113:
 4663 01b8 4144435F 		.ascii	"ADC_1_SetDFTControl\000"
 4663      315F5365 
 4663      74444654 
 4663      436F6E74 
 4663      726F6C00 
 4664              	.LASF76:
 4665 01cc 74656D70 		.ascii	"temp\000"
 4665      00
 4666              	.LASF54:
 4667 01d1 7265744D 		.ascii	"retMode\000"
 4667      6F646500 
 4668              	.LASF8:
 4669 01d9 756E7369 		.ascii	"unsigned int\000"
 4669      676E6564 
 4669      20696E74 
 4669      00
 4670              	.LASF32:
 4671 01e6 72616E67 		.ascii	"rangeIntMask\000"
 4671      65496E74 
 4671      4D61736B 
 4671      00
 4672              	.LASF86:
 4673 01f3 636F6E66 		.ascii	"configNum\000"
 4673      69674E75 
 4673      6D00
 4674              	.LASF45:
 4675 01fd 4144435F 		.ascii	"ADC_1_StartConvert\000"
 4675      315F5374 
 4675      61727443 
 4675      6F6E7665 
 4675      727400
 4676              	.LASF5:
 4677 0210 6C6F6E67 		.ascii	"long unsigned int\000"
 4677      20756E73 
 4677      69676E65 
 4677      6420696E 
 4677      7400
 4678              	.LASF96:
 4679 0222 4144435F 		.ascii	"ADC_1_channelsConfig\000"
 4679      315F6368 
 4679      616E6E65 
 4679      6C73436F 
 4679      6E666967 
 4680              	.LASF102:
 4681 0237 4144435F 		.ascii	"ADC_1_intSarClock_Stop\000"
 4681      315F696E 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 125


 4681      74536172 
 4681      436C6F63 
 4681      6B5F5374 
 4682              	.LASF40:
 4683 024e 746D7052 		.ascii	"tmpRegVal\000"
 4683      65675661 
 4683      6C00
 4684              	.LASF52:
 4685 0258 656E6162 		.ascii	"enableMask\000"
 4685      6C654D61 
 4685      736B00
 4686              	.LASF64:
 4687 0263 4144435F 		.ascii	"ADC_1_SetHighLimit\000"
 4687      315F5365 
 4687      74486967 
 4687      684C696D 
 4687      697400
 4688              	.LASF77:
 4689 0276 61766572 		.ascii	"averageAdcSamplesDiv\000"
 4689      61676541 
 4689      64635361 
 4689      6D706C65 
 4689      73446976 
 4690              	.LASF3:
 4691 028b 73686F72 		.ascii	"short unsigned int\000"
 4691      7420756E 
 4691      7369676E 
 4691      65642069 
 4691      6E7400
 4692              	.LASF101:
 4693 029e 4144435F 		.ascii	"ADC_1_allConfigs\000"
 4693      315F616C 
 4693      6C436F6E 
 4693      66696773 
 4693      00
 4694              	.LASF29:
 4695 02af 72616E67 		.ascii	"rangeThres\000"
 4695      65546872 
 4695      657300
 4696              	.LASF81:
 4697 02ba 4144435F 		.ascii	"ADC_1_CountsTo_mVolts\000"
 4697      315F436F 
 4697      756E7473 
 4697      546F5F6D 
 4697      566F6C74 
 4698              	.LASF61:
 4699 02d0 66696E61 		.ascii	"finalResult\000"
 4699      6C526573 
 4699      756C7400 
 4700              	.LASF92:
 4701 02dc 4144435F 		.ascii	"ADC_1_SelectConfig\000"
 4701      315F5365 
 4701      6C656374 
 4701      436F6E66 
 4701      696700
 4702              	.LASF49:
 4703 02ef 4144435F 		.ascii	"ADC_1_SetEosMask\000"
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 126


 4703      315F5365 
 4703      74456F73 
 4703      4D61736B 
 4703      00
 4704              	.LASF67:
 4705 0300 6C696D69 		.ascii	"limitMask\000"
 4705      744D6173 
 4705      6B00
 4706              	.LASF78:
 4707 030a 72617743 		.ascii	"rawChannel\000"
 4707      68616E6E 
 4707      656C00
 4708              	.LASF24:
 4709 0315 6E756D43 		.ascii	"numChannels\000"
 4709      68616E6E 
 4709      656C7300 
 4710              	.LASF42:
 4711 0321 6368616E 		.ascii	"chanConfig\000"
 4711      436F6E66 
 4711      696700
 4712              	.LASF19:
 4713 032c 72656733 		.ascii	"reg32\000"
 4713      3200
 4714              	.LASF41:
 4715 0332 69735369 		.ascii	"isSigned\000"
 4715      676E6564 
 4715      00
 4716              	.LASF58:
 4717 033b 61646352 		.ascii	"adcResult\000"
 4717      6573756C 
 4717      7400
 4718              	.LASF14:
 4719 0345 666C6F61 		.ascii	"float32\000"
 4719      74333200 
 4720              	.LASF22:
 4721 034d 73697A65 		.ascii	"sizetype\000"
 4721      74797065 
 4721      00
 4722              	.LASF104:
 4723 0356 4144435F 		.ascii	"ADC_1_intSarClock_StartEx\000"
 4723      315F696E 
 4723      74536172 
 4723      436C6F63 
 4723      6B5F5374 
 4724              	.LASF63:
 4725 0370 6C6F774C 		.ascii	"lowLimit\000"
 4725      696D6974 
 4725      00
 4726              	.LASF21:
 4727 0379 6C6F6E67 		.ascii	"long double\000"
 4727      20646F75 
 4727      626C6500 
 4728              	.LASF91:
 4729 0385 61646472 		.ascii	"address\000"
 4729      65737300 
 4730              	.LASF28:
 4731 038d 73616D70 		.ascii	"sampleTime23\000"
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 127


 4731      6C655469 
 4731      6D653233 
 4731      00
 4732              	.LASF33:
 4733 039a 73617449 		.ascii	"satIntMask\000"
 4733      6E744D61 
 4733      736B00
 4734              	.LASF72:
 4735 03a5 4144435F 		.ascii	"ADC_1_SetGain\000"
 4735      315F5365 
 4735      74476169 
 4735      6E00
 4736              	.LASF69:
 4737 03b3 7361744D 		.ascii	"satMask\000"
 4737      61736B00 
 4738              	.LASF17:
 4739 03bb 696E7436 		.ascii	"int64\000"
 4739      3400
 4740              	.LASF106:
 4741 03c1 4379496E 		.ascii	"CyIntSetPriority\000"
 4741      74536574 
 4741      5072696F 
 4741      72697479 
 4741      00
 4742              	.LASF15:
 4743 03d2 666C6F61 		.ascii	"float\000"
 4743      7400
 4744              	.LASF109:
 4745 03d8 4144435F 		.ascii	"ADC_1_IRQ_StartEx\000"
 4745      315F4952 
 4745      515F5374 
 4745      61727445 
 4745      7800
 4746              	.LASF65:
 4747 03ea 68696768 		.ascii	"highLimit\000"
 4747      4C696D69 
 4747      7400
 4748              	.LASF99:
 4749 03f4 4144435F 		.ascii	"ADC_1_offset\000"
 4749      315F6F66 
 4749      66736574 
 4749      00
 4750              	.LASF31:
 4751 0401 6368616E 		.ascii	"chanEn\000"
 4751      456E00
 4752              	.LASF111:
 4753 0408 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC_1.c\000"
 4753      72617465 
 4753      645F536F 
 4753      75726365 
 4753      5C50536F 
 4754              	.LASF68:
 4755 0427 4144435F 		.ascii	"ADC_1_SetSatMask\000"
 4755      315F5365 
 4755      74536174 
 4755      4D61736B 
 4755      00
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 128


 4756              	.LASF1:
 4757 0438 756E7369 		.ascii	"unsigned char\000"
 4757      676E6564 
 4757      20636861 
 4757      7200
 4758              	.LASF57:
 4759 0446 4144435F 		.ascii	"ADC_1_GetResult16\000"
 4759      315F4765 
 4759      74526573 
 4759      756C7431 
 4759      3600
 4760              	.LASF100:
 4761 0458 4144435F 		.ascii	"ADC_1_countsPer10Volt\000"
 4761      315F636F 
 4761      756E7473 
 4761      50657231 
 4761      30566F6C 
 4762              	.LASF2:
 4763 046e 73686F72 		.ascii	"short int\000"
 4763      7420696E 
 4763      7400
 4764              	.LASF80:
 4765 0478 72657375 		.ascii	"result_Volts\000"
 4765      6C745F56 
 4765      6F6C7473 
 4765      00
 4766              	.LASF60:
 4767 0485 61646352 		.ascii	"adcResult16\000"
 4767      6573756C 
 4767      74313600 
 4768              	.LASF43:
 4769 0491 63684E75 		.ascii	"chNum\000"
 4769      6D00
 4770              	.LASF95:
 4771 0497 4144435F 		.ascii	"ADC_1_currentConfig\000"
 4771      315F6375 
 4771      7272656E 
 4771      74436F6E 
 4771      66696700 
 4772              	.LASF34:
 4773 04ab 76726566 		.ascii	"vrefMvValue\000"
 4773      4D765661 
 4773      6C756500 
 4774              	.LASF110:
 4775 04b7 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4775      43313120 
 4775      352E342E 
 4775      31203230 
 4775      31363036 
 4776 04ea 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 4776      20726576 
 4776      6973696F 
 4776      6E203233 
 4776      37373135 
 4777 051d 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 4777      67202D66 
 4777      66756E63 
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 129


 4777      74696F6E 
 4777      2D736563 
 4778              	.LASF39:
 4779 0549 6368616E 		.ascii	"chan\000"
 4779      00
 4780              	.LASF18:
 4781 054e 63686172 		.ascii	"char\000"
 4781      00
 4782              	.LASF48:
 4783 0553 6D6F6465 		.ascii	"mode\000"
 4783      00
 4784              	.LASF20:
 4785 0558 63796973 		.ascii	"cyisraddress\000"
 4785      72616464 
 4785      72657373 
 4785      00
 4786              	.LASF38:
 4787 0565 636F6E66 		.ascii	"config\000"
 4787      696700
 4788              	.LASF79:
 4789 056c 4144435F 		.ascii	"ADC_1_CountsTo_Volts\000"
 4789      315F436F 
 4789      756E7473 
 4789      546F5F56 
 4789      6F6C7473 
 4790              	.LASF103:
 4791 0581 4144435F 		.ascii	"ADC_1_intSarClock_SetFractionalDividerRegister\000"
 4791      315F696E 
 4791      74536172 
 4791      436C6F63 
 4791      6B5F5365 
 4792              	.LASF114:
 4793 05b0 4144435F 		.ascii	"ADC_1_IsChannelSigned\000"
 4793      315F4973 
 4793      4368616E 
 4793      6E656C53 
 4793      69676E65 
 4794              	.LASF84:
 4795 05c6 72657375 		.ascii	"result_uVolts\000"
 4795      6C745F75 
 4795      566F6C74 
 4795      7300
 4796              	.LASF93:
 4797 05d4 72657374 		.ascii	"restart\000"
 4797      61727400 
 4798              	.LASF71:
 4799 05dc 6F666673 		.ascii	"offset\000"
 4799      657400
 4800              	.LASF25:
 4801 05e3 6374726C 		.ascii	"ctrl\000"
 4801      00
 4802              	.LASF35:
 4803 05e8 6D697363 		.ascii	"miscConfig\000"
 4803      436F6E66 
 4803      696700
 4804              	.LASF75:
 4805 05f3 61646343 		.ascii	"adcCounts\000"
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 130


 4805      6F756E74 
 4805      7300
 4806              	.LASF98:
 4807 05fd 4144435F 		.ascii	"ADC_1_selected\000"
 4807      315F7365 
 4807      6C656374 
 4807      656400
 4808              	.LASF30:
 4809 060c 72616E67 		.ascii	"rangeCond\000"
 4809      65436F6E 
 4809      6400
 4810              	.LASF56:
 4811 0616 4144435F 		.ascii	"ADC_1_IsEndConversion\000"
 4811      315F4973 
 4811      456E6443 
 4811      6F6E7665 
 4811      7273696F 
 4812              	.LASF26:
 4813 062c 73616D70 		.ascii	"sampleCtrl\000"
 4813      6C654374 
 4813      726C00
 4814              	.LASF37:
 4815 0637 4144435F 		.ascii	"ADC_1_CONFIG_STRUCT\000"
 4815      315F434F 
 4815      4E464947 
 4815      5F535452 
 4815      55435400 
 4816              	.LASF59:
 4817 064b 4144435F 		.ascii	"ADC_1_GetResult32\000"
 4817      315F4765 
 4817      74526573 
 4817      756C7433 
 4817      3200
 4818              	.LASF70:
 4819 065d 4144435F 		.ascii	"ADC_1_SetOffset\000"
 4819      315F5365 
 4819      744F6666 
 4819      73657400 
 4820              	.LASF12:
 4821 066d 696E7431 		.ascii	"int16\000"
 4821      3600
 4822              	.LASF51:
 4823 0673 4144435F 		.ascii	"ADC_1_SetChanMask\000"
 4823      315F5365 
 4823      74436861 
 4823      6E4D6173 
 4823      6B00
 4824              	.LASF82:
 4825 0685 72657375 		.ascii	"result_mVolts\000"
 4825      6C745F6D 
 4825      566F6C74 
 4825      7300
 4826              	.LASF23:
 4827 0693 6368616E 		.ascii	"channelBase\000"
 4827      6E656C42 
 4827      61736500 
 4828              	.LASF55:
ARM GAS  C:\Users\samue\AppData\Local\Temp\ccb22yZ5.s 			page 131


 4829 069f 656E644F 		.ascii	"endOfConversion\000"
 4829      66436F6E 
 4829      76657273 
 4829      696F6E00 
 4830              	.LASF89:
 4831 06af 4144435F 		.ascii	"ADC_1_Start\000"
 4831      315F5374 
 4831      61727400 
 4832              	.LASF105:
 4833 06bb 43794861 		.ascii	"CyHalt\000"
 4833      6C7400
 4834              	.LASF83:
 4835 06c2 4144435F 		.ascii	"ADC_1_CountsTo_uVolts\000"
 4835      315F436F 
 4835      756E7473 
 4835      546F5F75 
 4835      566F6C74 
 4836              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
