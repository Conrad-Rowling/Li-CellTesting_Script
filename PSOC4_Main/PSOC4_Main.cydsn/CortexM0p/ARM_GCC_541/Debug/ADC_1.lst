ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADC_1_SetDFTControl,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	ADC_1_SetDFTControl, %function
  24              	ADC_1_SetDFTControl:
  25              	.LFB5:
  26              		.file 1 "Generated_Source\\PSoC4\\ADC_1.c"
   1:Generated_Source\PSoC4/ADC_1.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/ADC_1.c **** * \file     ADC_1.c
   3:Generated_Source\PSoC4/ADC_1.c **** * \version  3.10
   4:Generated_Source\PSoC4/ADC_1.c **** *
   5:Generated_Source\PSoC4/ADC_1.c **** * \brief
   6:Generated_Source\PSoC4/ADC_1.c **** * Provides the source code to the API for the ADC_1 Component.
   7:Generated_Source\PSoC4/ADC_1.c **** *
   8:Generated_Source\PSoC4/ADC_1.c **** ********************************************************************************
   9:Generated_Source\PSoC4/ADC_1.c **** * \copyright
  10:Generated_Source\PSoC4/ADC_1.c **** * (c) 2015-2018, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC4/ADC_1.c **** * This software, including source code, documentation and related
  12:Generated_Source\PSoC4/ADC_1.c **** * materials ("Software"), is owned by Cypress Semiconductor
  13:Generated_Source\PSoC4/ADC_1.c **** * Corporation ("Cypress") and is protected by and subject to worldwide
  14:Generated_Source\PSoC4/ADC_1.c **** * patent protection (United States and foreign), United States copyright
  15:Generated_Source\PSoC4/ADC_1.c **** * laws and international treaty provisions. Therefore, you may use this
  16:Generated_Source\PSoC4/ADC_1.c **** * Software only as provided in the license agreement accompanying the
  17:Generated_Source\PSoC4/ADC_1.c **** * software package from which you obtained this Software ("EULA").
  18:Generated_Source\PSoC4/ADC_1.c **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  19:Generated_Source\PSoC4/ADC_1.c **** * non-transferable license to copy, modify, and compile the
  20:Generated_Source\PSoC4/ADC_1.c **** * Software source code solely for use in connection with Cypress's
  21:Generated_Source\PSoC4/ADC_1.c **** * integrated circuit products. Any reproduction, modification, translation,
  22:Generated_Source\PSoC4/ADC_1.c **** * compilation, or representation of this Software except as specified
  23:Generated_Source\PSoC4/ADC_1.c **** * above is prohibited without the express written permission of Cypress.
  24:Generated_Source\PSoC4/ADC_1.c **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO
  25:Generated_Source\PSoC4/ADC_1.c **** * WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
  26:Generated_Source\PSoC4/ADC_1.c **** * BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
  27:Generated_Source\PSoC4/ADC_1.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  28:Generated_Source\PSoC4/ADC_1.c **** * PARTICULAR PURPOSE. Cypress reserves the right to make
  29:Generated_Source\PSoC4/ADC_1.c **** * changes to the Software without notice. Cypress does not assume any
  30:Generated_Source\PSoC4/ADC_1.c **** * liability arising out of the application or use of the Software or any
  31:Generated_Source\PSoC4/ADC_1.c **** * product or circuit described in the Software. Cypress does not
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 2


  32:Generated_Source\PSoC4/ADC_1.c **** * authorize its products for use in any products where a malfunction or
  33:Generated_Source\PSoC4/ADC_1.c **** * failure of the Cypress product may reasonably be expected to result in
  34:Generated_Source\PSoC4/ADC_1.c **** * significant property damage, injury or death ("High Risk Product"). By
  35:Generated_Source\PSoC4/ADC_1.c **** * including Cypress's product in a High Risk Product, the manufacturer
  36:Generated_Source\PSoC4/ADC_1.c **** * of such system or application assumes all risk of such use and in doing
  37:Generated_Source\PSoC4/ADC_1.c **** * so agrees to indemnify Cypress against all liability.
  38:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/ADC_1.c **** #include "ADC_1.h"
  40:Generated_Source\PSoC4/ADC_1.c **** 
  41:Generated_Source\PSoC4/ADC_1.c **** static void ADC_1_SetDFTControl(const ADC_1_CONFIG_STRUCT *config);
  42:Generated_Source\PSoC4/ADC_1.c **** static int32 ADC_1_IsChannelSigned(uint32 chan);
  43:Generated_Source\PSoC4/ADC_1.c **** #if(ADC_1_ANY_CONFIG_USES_FILTER != 0u)
  44:Generated_Source\PSoC4/ADC_1.c **** static void ADC_1_SetupComparatorTrim(void);
  45:Generated_Source\PSoC4/ADC_1.c **** static void ADC_1_UndoComparatorTrimSetup(void);
  46:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_RaiseOpampTrimToCrossing(uint32 startTrim);
  47:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_LowerOpampTrimToCrossing(uint32 startTrim);
  48:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_RaiseAgndTrimToCrossing(uint32 startTrim);
  49:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_LowerAgndTrimToCrossing(uint32 startTrim);
  50:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_SetOpampAndAgndTrim(uint32 opampTrim, uint32 agndTrim);
  51:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_SetOpampTrim(uint32 opampTrim);
  52:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_SetAgndTrim(uint32 agndTrim);
  53:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_IncOpampTrim(uint32 trim);
  54:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_DecOpampTrim(uint32 trim);
  55:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_IncAgndTrim(uint32 trim);
  56:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_DecAgndTrim(uint32 trim);
  57:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_GetCompStatus(void);
  58:Generated_Source\PSoC4/ADC_1.c **** #define OFFSET_SAMPLES (30)
  59:Generated_Source\PSoC4/ADC_1.c **** #endif
  60:Generated_Source\PSoC4/ADC_1.c **** 
  61:Generated_Source\PSoC4/ADC_1.c **** uint8 ADC_1_initVar = 0u;
  62:Generated_Source\PSoC4/ADC_1.c **** 
  63:Generated_Source\PSoC4/ADC_1.c **** uint8 ADC_1_selected = 0u; /* 0 if no configuration selected. 1 otherwise. */
  64:Generated_Source\PSoC4/ADC_1.c **** volatile int16 ADC_1_offset[ADC_1_TOTAL_CHANNELS_NUM];
  65:Generated_Source\PSoC4/ADC_1.c **** volatile int32 ADC_1_countsPer10Volt[ADC_1_TOTAL_CHANNELS_NUM];
  66:Generated_Source\PSoC4/ADC_1.c **** 
  67:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_currentConfig = 0u; /* Currently active configuration */
  68:Generated_Source\PSoC4/ADC_1.c **** 
  69:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
  70:Generated_Source\PSoC4/ADC_1.c **** * Local data allocation
  71:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
  72:Generated_Source\PSoC4/ADC_1.c **** /* Channels configuration generated by customiser */
  73:Generated_Source\PSoC4/ADC_1.c **** static const uint32 CYCODE ADC_1_channelsConfig[] = { 0x00000500UL,  };
  74:Generated_Source\PSoC4/ADC_1.c **** 
  75:Generated_Source\PSoC4/ADC_1.c **** /* Filter init */
  76:Generated_Source\PSoC4/ADC_1.c **** #if(ADC_1_ANY_CONFIG_USES_FILTER != 0u)
  77:Generated_Source\PSoC4/ADC_1.c ****     #if (0u != ADC_1_CFG0_FILTER_PRESENT)
  78:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG0_UABH_A_FILTER_INITPAIRSSIZE (19u)
  79:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG0_UABH_A_FILTER_initPairs[ADC_1_CFG0_UABH_A_FILTER_INI
  80:Generated_Source\PSoC4/ADC_1.c ****         {
  81:Generated_Source\PSoC4/ADC_1.c ****             /*OA_CTRL default always first element in initPairs*/
  82:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
  83:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_A_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_A_DEFAULT_OA_CTRL)}
  84:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_A_DEFAULT_SW_STATIC)}
  85:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_MODBIT_SRC_PTR  , ((uint32)ADC_1_UABH_A_INVAR_SW_MODBIT_SRC)}
  86:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_A_INVAR_SRAM_CTRL)}
  87:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG0_UABH_A_STARTUP_DELAY)}
  88:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_A_DEFAULT_SW_BOOST_CTRL)}
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 3


  89:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_A_DEFAULT_SW_CA_IN1)}
  90:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_OTHER_PTR       , ((uint32)ADC_1_UABH_A_DEFAULT_SW_OTHER)}
  91:Generated_Source\PSoC4/ADC_1.c **** 
  92:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG0_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
  93:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
  94:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_IN0)}
  95:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_TOP)}
  96:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN0)}
  97:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN1)}
  98:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CF_BOT)}
  99:Generated_Source\PSoC4/ADC_1.c **** 
 100:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 101:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG0_UABH_A_LOWQDYN_CAP_CTRL)}
 102:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_CFG0_UABH_A_LOWQDYN_SW_CB_IN0)}
 103:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_CFG0_UABH_A_LOWQDYN_SW_CB_IN1)}
 104:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG0_UABH_A_LOWQDYN_SW_CB_TOP)}
 105:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG0_UABH_A_LOWQDYN_SW_CC_TOP)}
 106:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG0_UABH_A_LOWQDYN_CAP_ABCF_VAL
 107:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG0_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 108:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 109:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_IN0)}
 110:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_TOP)}
 111:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN0)}
 112:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN1)}
 113:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN0)}
 114:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN1)}
 115:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_TOP)}
 116:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CF_BOT)}
 117:Generated_Source\PSoC4/ADC_1.c **** 
 118:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 119:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG0_UABH_A_HIGHQDYN_CAP_CTRL)}
 120:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG0_UABH_A_HIGHQDYN_SW_CB_TOP)}
 121:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG0_UABH_A_HIGHQDYN_CAP_ABCF_VA
 122:Generated_Source\PSoC4/ADC_1.c ****             #endif /* (ADC_1_CFG0_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 123:Generated_Source\PSoC4/ADC_1.c ****         };
 124:Generated_Source\PSoC4/ADC_1.c **** 
 125:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG0_UABH_B_FILTER_INITPAIRSSIZE (19u)
 126:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG0_UABH_B_FILTER_initPairs[ADC_1_CFG0_UABH_B_FILTER_INI
 127:Generated_Source\PSoC4/ADC_1.c ****         {
 128:Generated_Source\PSoC4/ADC_1.c ****             /*OA_CTRL default always first element in initPairs*/
 129:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
 130:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_B_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_B_DEFAULT_OA_CTRL)}
 131:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_B_DEFAULT_SW_STATIC)}
 132:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_MODBIT_SRC_PTR  , ((uint32)ADC_1_UABH_B_INVAR_SW_MODBIT_SRC)}
 133:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_B_INVAR_SRAM_CTRL)}
 134:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG0_UABH_B_STARTUP_DELAY)}
 135:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_B_DEFAULT_SW_BOOST_CTRL)}
 136:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_OTHER_PTR  , ((uint32)ADC_1_UABH_B_DEFAULT_SW_OTHER)}
 137:Generated_Source\PSoC4/ADC_1.c **** 
 138:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG0_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
 139:Generated_Source\PSoC4/ADC_1.c ****                         /* Filter-invariant registers */
 140:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN0)}
 141:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN1)}
 142:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_TOP)}
 143:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN0)}
 144:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN1)}
 145:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_TOP)}
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 4


 146:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN0)}
 147:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN1)}
 148:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CF_BOT)}
 149:Generated_Source\PSoC4/ADC_1.c **** 
 150:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 151:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG0_UABH_B_LOWQDYN_CAP_CTRL)}
 152:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG0_UABH_B_LOWQDYN_SW_CC_TOP)}
 153:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG0_UABH_B_LOWQDYN_CAP_ABCF_VAL
 154:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG0_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 155:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 156:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN0)}
 157:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN1)}
 158:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_TOP)}
 159:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN0)}
 160:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN1)}
 161:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN0)}
 162:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN1)}
 163:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CF_BOT)}
 164:Generated_Source\PSoC4/ADC_1.c **** 
 165:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 166:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG0_UABH_B_HIGHQDYN_CAP_CTRL)}
 167:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG0_UABH_B_HIGHQDYN_SW_CB_TOP)}
 168:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG0_UABH_B_HIGHQDYN_SW_CC_TOP)}
 169:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG0_UABH_B_HIGHQDYN_CAP_ABCF_VA
 170:Generated_Source\PSoC4/ADC_1.c ****             #endif /* #if (ADC_1_CFG0_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 171:Generated_Source\PSoC4/ADC_1.c ****         };
 172:Generated_Source\PSoC4/ADC_1.c **** 
 173:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG0_UABH_A_FILTER_config = {
 174:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_waveConfig,
 175:Generated_Source\PSoC4/ADC_1.c ****             (CyUAB_reg_pair*) ADC_1_CFG0_UABH_A_FILTER_initPairs,
 176:Generated_Source\PSoC4/ADC_1.c ****             CyUAB_SHARED_SW_CFG(ADC_1_UABH_A_PARAM_REF_TIED,ADC_1_UABH_A_PARAM_AGND_TIED,
 177:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_A_PARAM_SW_CC,ADC_1_UABH_A_PARAM_SW_BB,ADC_1_UABH_A_PARAM_SW_AA),
 178:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_NUM_STEPS,
 179:Generated_Source\PSoC4/ADC_1.c ****             (uint8)(ADC_1_UABH_A_ELEMENT_COUNT(ADC_1_CFG0_UABH_A_FILTER_initPairs))
 180:Generated_Source\PSoC4/ADC_1.c ****         };
 181:Generated_Source\PSoC4/ADC_1.c **** 
 182:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG0_UABH_B_FILTER_config = {
 183:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_waveConfig,
 184:Generated_Source\PSoC4/ADC_1.c ****         (CyUAB_reg_pair*) ADC_1_CFG0_UABH_B_FILTER_initPairs,
 185:Generated_Source\PSoC4/ADC_1.c ****         CyUAB_SHARED_SW_CFG(ADC_1_UABH_B_PARAM_REF_TIED,ADC_1_UABH_B_PARAM_AGND_TIED,
 186:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_B_PARAM_SW_CC,ADC_1_UABH_B_PARAM_SW_BB,ADC_1_UABH_B_PARAM_SW_AA),
 187:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_NUM_STEPS,
 188:Generated_Source\PSoC4/ADC_1.c ****         (uint8)(ADC_1_UABH_B_ELEMENT_COUNT(ADC_1_CFG0_UABH_B_FILTER_initPairs))
 189:Generated_Source\PSoC4/ADC_1.c ****     };
 190:Generated_Source\PSoC4/ADC_1.c ****     #endif /* (0u != ADC_1_CFG0_FILTER_PRESENT) */
 191:Generated_Source\PSoC4/ADC_1.c ****     #if (0u != ADC_1_CFG1_FILTER_PRESENT)
 192:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG1_UABH_A_FILTER_INITPAIRSSIZE (19u)
 193:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG1_UABH_A_FILTER_initPairs[ADC_1_CFG1_UABH_A_FILTER_INI
 194:Generated_Source\PSoC4/ADC_1.c ****         {
 195:Generated_Source\PSoC4/ADC_1.c ****             /*OA_CTRL default always first element in initPairs*/
 196:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
 197:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_A_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_A_DEFAULT_OA_CTRL)}
 198:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_A_DEFAULT_SW_STATIC)}
 199:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_MODBIT_SRC_PTR  , ((uint32)ADC_1_UABH_A_INVAR_SW_MODBIT_SRC)}
 200:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_A_INVAR_SRAM_CTRL)}
 201:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG1_UABH_A_STARTUP_DELAY)}
 202:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_A_DEFAULT_SW_BOOST_CTRL)}
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 5


 203:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_A_DEFAULT_SW_CA_IN1)}
 204:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_OTHER_PTR       , ((uint32)ADC_1_UABH_A_DEFAULT_SW_OTHER)}
 205:Generated_Source\PSoC4/ADC_1.c **** 
 206:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG1_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
 207:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 208:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_IN0)}
 209:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_TOP)}
 210:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN0)}
 211:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN1)}
 212:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CF_BOT)}
 213:Generated_Source\PSoC4/ADC_1.c **** 
 214:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 215:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG1_UABH_A_LOWQDYN_CAP_CTRL)}
 216:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_CFG1_UABH_A_LOWQDYN_SW_CB_IN0)}
 217:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_CFG1_UABH_A_LOWQDYN_SW_CB_IN1)}
 218:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG1_UABH_A_LOWQDYN_SW_CB_TOP)}
 219:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG1_UABH_A_LOWQDYN_SW_CC_TOP)}
 220:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG1_UABH_A_LOWQDYN_CAP_ABCF_VAL
 221:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG1_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 222:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 223:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_IN0)}
 224:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_TOP)}
 225:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN0)}
 226:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN1)}
 227:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN0)}
 228:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN1)}
 229:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_TOP)}
 230:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CF_BOT)}
 231:Generated_Source\PSoC4/ADC_1.c **** 
 232:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 233:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG1_UABH_A_HIGHQDYN_CAP_CTRL)}
 234:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG1_UABH_A_HIGHQDYN_SW_CB_TOP)}
 235:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG1_UABH_A_HIGHQDYN_CAP_ABCF_VA
 236:Generated_Source\PSoC4/ADC_1.c ****             #endif /* (ADC_1_CFG1_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 237:Generated_Source\PSoC4/ADC_1.c ****         };
 238:Generated_Source\PSoC4/ADC_1.c **** 
 239:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG1_UABH_B_FILTER_INITPAIRSSIZE (19u)
 240:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG1_UABH_B_FILTER_initPairs[ADC_1_CFG1_UABH_B_FILTER_INI
 241:Generated_Source\PSoC4/ADC_1.c ****         {
 242:Generated_Source\PSoC4/ADC_1.c ****             /*OA_CTRL default always first element in initPairs*/
 243:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
 244:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_B_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_B_DEFAULT_OA_CTRL)}
 245:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_B_DEFAULT_SW_STATIC)}
 246:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_MODBIT_SRC_PTR  , ((uint32)ADC_1_UABH_B_INVAR_SW_MODBIT_SRC)}
 247:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_B_INVAR_SRAM_CTRL)}
 248:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG1_UABH_B_STARTUP_DELAY)}
 249:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_B_DEFAULT_SW_BOOST_CTRL)}
 250:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_OTHER_PTR       , ((uint32)ADC_1_UABH_B_DEFAULT_SW_OTHER)}
 251:Generated_Source\PSoC4/ADC_1.c **** 
 252:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG1_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
 253:Generated_Source\PSoC4/ADC_1.c ****                         /* Filter-invariant registers */
 254:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN0)}
 255:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN1)}
 256:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_TOP)}
 257:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN0)}
 258:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN1)}
 259:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_TOP)}
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 6


 260:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN0)}
 261:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN1)}
 262:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CF_BOT)}
 263:Generated_Source\PSoC4/ADC_1.c **** 
 264:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 265:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG1_UABH_B_LOWQDYN_CAP_CTRL)}
 266:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG1_UABH_B_LOWQDYN_SW_CC_TOP)}
 267:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG1_UABH_B_LOWQDYN_CAP_ABCF_VAL
 268:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG1_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 269:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 270:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN0)}
 271:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN1)}
 272:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_TOP)}
 273:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN0)}
 274:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN1)}
 275:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN0)}
 276:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN1)}
 277:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CF_BOT)}
 278:Generated_Source\PSoC4/ADC_1.c **** 
 279:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 280:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG1_UABH_B_HIGHQDYN_CAP_CTRL)}
 281:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG1_UABH_B_HIGHQDYN_SW_CB_TOP)}
 282:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG1_UABH_B_HIGHQDYN_SW_CC_TOP)}
 283:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG1_UABH_B_HIGHQDYN_CAP_ABCF_VA
 284:Generated_Source\PSoC4/ADC_1.c ****             #endif /* #if (ADC_1_CFG1_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 285:Generated_Source\PSoC4/ADC_1.c ****         };
 286:Generated_Source\PSoC4/ADC_1.c **** 
 287:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG1_UABH_A_FILTER_config = {
 288:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_waveConfig,
 289:Generated_Source\PSoC4/ADC_1.c ****             (CyUAB_reg_pair*) ADC_1_CFG1_UABH_A_FILTER_initPairs,
 290:Generated_Source\PSoC4/ADC_1.c ****             CyUAB_SHARED_SW_CFG(ADC_1_UABH_A_PARAM_REF_TIED,ADC_1_UABH_A_PARAM_AGND_TIED,
 291:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_A_PARAM_SW_CC,ADC_1_UABH_A_PARAM_SW_BB,ADC_1_UABH_A_PARAM_SW_AA),
 292:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_NUM_STEPS,
 293:Generated_Source\PSoC4/ADC_1.c ****             (uint8)(ADC_1_UABH_A_ELEMENT_COUNT(ADC_1_CFG1_UABH_A_FILTER_initPairs))
 294:Generated_Source\PSoC4/ADC_1.c ****         };
 295:Generated_Source\PSoC4/ADC_1.c **** 
 296:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG1_UABH_B_FILTER_config = {
 297:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_waveConfig,
 298:Generated_Source\PSoC4/ADC_1.c ****         (CyUAB_reg_pair*) ADC_1_CFG1_UABH_B_FILTER_initPairs,
 299:Generated_Source\PSoC4/ADC_1.c ****         CyUAB_SHARED_SW_CFG(ADC_1_UABH_B_PARAM_REF_TIED,ADC_1_UABH_B_PARAM_AGND_TIED,
 300:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_B_PARAM_SW_CC,ADC_1_UABH_B_PARAM_SW_BB,ADC_1_UABH_B_PARAM_SW_AA),
 301:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_NUM_STEPS,
 302:Generated_Source\PSoC4/ADC_1.c ****         (uint8)(ADC_1_UABH_B_ELEMENT_COUNT(ADC_1_CFG1_UABH_B_FILTER_initPairs))
 303:Generated_Source\PSoC4/ADC_1.c ****     };
 304:Generated_Source\PSoC4/ADC_1.c ****     #endif /* (0u != ADC_1_CFG1_FILTER_PRESENT) */
 305:Generated_Source\PSoC4/ADC_1.c ****     #if (0u != ADC_1_CFG2_FILTER_PRESENT)
 306:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG2_UABH_A_FILTER_INITPAIRSSIZE (19u)
 307:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG2_UABH_A_FILTER_initPairs[ADC_1_CFG2_UABH_A_FILTER_INI
 308:Generated_Source\PSoC4/ADC_1.c ****         {
 309:Generated_Source\PSoC4/ADC_1.c ****             /*OA_CTRL default always first element in initPairs*/
 310:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
 311:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_A_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_A_DEFAULT_OA_CTRL)}
 312:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_A_DEFAULT_SW_STATIC)}
 313:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_MODBIT_SRC_PTR  , ((uint32)ADC_1_UABH_A_INVAR_SW_MODBIT_SRC)}
 314:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_A_INVAR_SRAM_CTRL)}
 315:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG2_UABH_A_STARTUP_DELAY)}
 316:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_A_DEFAULT_SW_BOOST_CTRL)}
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 7


 317:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_A_DEFAULT_SW_CA_IN1)}
 318:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_OTHER_PTR       , ((uint32)ADC_1_UABH_A_DEFAULT_SW_OTHER)}
 319:Generated_Source\PSoC4/ADC_1.c **** 
 320:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG2_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
 321:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 322:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_IN0)}
 323:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_TOP)}
 324:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN0)}
 325:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN1)}
 326:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CF_BOT)}
 327:Generated_Source\PSoC4/ADC_1.c **** 
 328:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 329:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG2_UABH_A_LOWQDYN_CAP_CTRL)}
 330:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_CFG2_UABH_A_LOWQDYN_SW_CB_IN0)}
 331:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_CFG2_UABH_A_LOWQDYN_SW_CB_IN1)}
 332:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG2_UABH_A_LOWQDYN_SW_CB_TOP)}
 333:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG2_UABH_A_LOWQDYN_SW_CC_TOP)}
 334:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG2_UABH_A_LOWQDYN_CAP_ABCF_VAL
 335:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG2_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 336:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 337:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_IN0)}
 338:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_TOP)}
 339:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN0)}
 340:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN1)}
 341:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN0)}
 342:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN1)}
 343:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_TOP)}
 344:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CF_BOT)}
 345:Generated_Source\PSoC4/ADC_1.c **** 
 346:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 347:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG2_UABH_A_HIGHQDYN_CAP_CTRL)}
 348:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG2_UABH_A_HIGHQDYN_SW_CB_TOP)}
 349:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG2_UABH_A_HIGHQDYN_CAP_ABCF_VA
 350:Generated_Source\PSoC4/ADC_1.c ****             #endif /* (ADC_1_CFG2_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 351:Generated_Source\PSoC4/ADC_1.c ****         };
 352:Generated_Source\PSoC4/ADC_1.c **** 
 353:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG2_UABH_B_FILTER_INITPAIRSSIZE (19u)
 354:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG2_UABH_B_FILTER_initPairs[ADC_1_CFG2_UABH_B_FILTER_INI
 355:Generated_Source\PSoC4/ADC_1.c ****         {
 356:Generated_Source\PSoC4/ADC_1.c ****             /*OA_CTRL default always first element in initPairs*/
 357:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
 358:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_B_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_B_DEFAULT_OA_CTRL)}
 359:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_B_DEFAULT_SW_STATIC)}
 360:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_MODBIT_SRC_PTR  , ((uint32)ADC_1_UABH_B_INVAR_SW_MODBIT_SRC)}
 361:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_B_INVAR_SRAM_CTRL)}
 362:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG2_UABH_B_STARTUP_DELAY)}
 363:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_B_DEFAULT_SW_BOOST_CTRL)}
 364:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_OTHER_PTR       , ((uint32)ADC_1_UABH_B_DEFAULT_SW_OTHER)}
 365:Generated_Source\PSoC4/ADC_1.c **** 
 366:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG2_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
 367:Generated_Source\PSoC4/ADC_1.c ****                         /* Filter-invariant registers */
 368:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN0)}
 369:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN1)}
 370:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_TOP)}
 371:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN0)}
 372:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN1)}
 373:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_TOP)}
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 8


 374:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN0)}
 375:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN1)}
 376:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CF_BOT)}
 377:Generated_Source\PSoC4/ADC_1.c **** 
 378:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 379:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG2_UABH_B_LOWQDYN_CAP_CTRL)}
 380:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG2_UABH_B_LOWQDYN_SW_CC_TOP)}
 381:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG2_UABH_B_LOWQDYN_CAP_ABCF_VAL
 382:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG2_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 383:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 384:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN0)}
 385:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN1)}
 386:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_TOP)}
 387:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN0)}
 388:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN1)}
 389:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN0)}
 390:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN1)}
 391:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CF_BOT)}
 392:Generated_Source\PSoC4/ADC_1.c **** 
 393:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 394:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG2_UABH_B_HIGHQDYN_CAP_CTRL)}
 395:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG2_UABH_B_HIGHQDYN_SW_CB_TOP)}
 396:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG2_UABH_B_HIGHQDYN_SW_CC_TOP)}
 397:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG2_UABH_B_HIGHQDYN_CAP_ABCF_VA
 398:Generated_Source\PSoC4/ADC_1.c ****             #endif /* #if (ADC_1_CFG2_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 399:Generated_Source\PSoC4/ADC_1.c ****         };
 400:Generated_Source\PSoC4/ADC_1.c **** 
 401:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG2_UABH_A_FILTER_config = {
 402:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_waveConfig,
 403:Generated_Source\PSoC4/ADC_1.c ****             (CyUAB_reg_pair*) ADC_1_CFG2_UABH_A_FILTER_initPairs,
 404:Generated_Source\PSoC4/ADC_1.c ****             CyUAB_SHARED_SW_CFG(ADC_1_UABH_A_PARAM_REF_TIED,ADC_1_UABH_A_PARAM_AGND_TIED,
 405:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_A_PARAM_SW_CC,ADC_1_UABH_A_PARAM_SW_BB,ADC_1_UABH_A_PARAM_SW_AA),
 406:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_NUM_STEPS,
 407:Generated_Source\PSoC4/ADC_1.c ****             (uint8)(ADC_1_UABH_A_ELEMENT_COUNT(ADC_1_CFG2_UABH_A_FILTER_initPairs))
 408:Generated_Source\PSoC4/ADC_1.c ****         };
 409:Generated_Source\PSoC4/ADC_1.c **** 
 410:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG2_UABH_B_FILTER_config = {
 411:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_waveConfig,
 412:Generated_Source\PSoC4/ADC_1.c ****         (CyUAB_reg_pair*) ADC_1_CFG2_UABH_B_FILTER_initPairs,
 413:Generated_Source\PSoC4/ADC_1.c ****         CyUAB_SHARED_SW_CFG(ADC_1_UABH_B_PARAM_REF_TIED,ADC_1_UABH_B_PARAM_AGND_TIED,
 414:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_B_PARAM_SW_CC,ADC_1_UABH_B_PARAM_SW_BB,ADC_1_UABH_B_PARAM_SW_AA),
 415:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_NUM_STEPS,
 416:Generated_Source\PSoC4/ADC_1.c ****         (uint8)(ADC_1_UABH_B_ELEMENT_COUNT(ADC_1_CFG2_UABH_B_FILTER_initPairs))
 417:Generated_Source\PSoC4/ADC_1.c ****     };
 418:Generated_Source\PSoC4/ADC_1.c ****     #endif /* (0u != ADC_1_CFG2_FILTER_PRESENT) */
 419:Generated_Source\PSoC4/ADC_1.c ****     #if (0u != ADC_1_CFG3_FILTER_PRESENT)
 420:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG3_UABH_A_FILTER_INITPAIRSSIZE (19u)
 421:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG3_UABH_A_FILTER_initPairs[ADC_1_CFG3_UABH_A_FILTER_INI
 422:Generated_Source\PSoC4/ADC_1.c ****         {
 423:Generated_Source\PSoC4/ADC_1.c ****             /*OA_CTRL default always first element in initPairs*/
 424:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
 425:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_A_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_A_DEFAULT_OA_CTRL)}
 426:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_A_DEFAULT_SW_STATIC)}
 427:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_MODBIT_SRC_PTR  , ((uint32)ADC_1_UABH_A_INVAR_SW_MODBIT_SRC)}
 428:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_A_INVAR_SRAM_CTRL)}
 429:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG3_UABH_A_STARTUP_DELAY)}
 430:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_A_DEFAULT_SW_BOOST_CTRL)}
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 9


 431:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_A_DEFAULT_SW_CA_IN1)}
 432:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_OTHER_PTR       , ((uint32)ADC_1_UABH_A_DEFAULT_SW_OTHER)}
 433:Generated_Source\PSoC4/ADC_1.c **** 
 434:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG3_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
 435:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 436:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_IN0)}
 437:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_TOP)}
 438:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN0)}
 439:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN1)}
 440:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CF_BOT)}
 441:Generated_Source\PSoC4/ADC_1.c **** 
 442:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 443:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG3_UABH_A_LOWQDYN_CAP_CTRL)}
 444:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_CFG3_UABH_A_LOWQDYN_SW_CB_IN0)}
 445:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_CFG3_UABH_A_LOWQDYN_SW_CB_IN1)}
 446:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG3_UABH_A_LOWQDYN_SW_CB_TOP)}
 447:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG3_UABH_A_LOWQDYN_SW_CC_TOP)}
 448:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG3_UABH_A_LOWQDYN_CAP_ABCF_VAL
 449:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG3_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 450:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 451:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_IN0)}
 452:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_TOP)}
 453:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN0)}
 454:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN1)}
 455:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN0)}
 456:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN1)}
 457:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_TOP)}
 458:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CF_BOT)}
 459:Generated_Source\PSoC4/ADC_1.c **** 
 460:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 461:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG3_UABH_A_HIGHQDYN_CAP_CTRL)}
 462:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG3_UABH_A_HIGHQDYN_SW_CB_TOP)}
 463:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG3_UABH_A_HIGHQDYN_CAP_ABCF_VA
 464:Generated_Source\PSoC4/ADC_1.c ****             #endif /* (ADC_1_CFG3_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 465:Generated_Source\PSoC4/ADC_1.c ****         };
 466:Generated_Source\PSoC4/ADC_1.c **** 
 467:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG3_UABH_B_FILTER_INITPAIRSSIZE (19u)
 468:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG3_UABH_B_FILTER_initPairs[ADC_1_CFG3_UABH_B_FILTER_INI
 469:Generated_Source\PSoC4/ADC_1.c ****         {
 470:Generated_Source\PSoC4/ADC_1.c ****             /*OA_CTRL default always first element in initPairs*/
 471:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
 472:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_B_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_B_DEFAULT_OA_CTRL)}
 473:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_B_DEFAULT_SW_STATIC)}
 474:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_MODBIT_SRC_PTR  , ((uint32)ADC_1_UABH_B_INVAR_SW_MODBIT_SRC)}
 475:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_B_INVAR_SRAM_CTRL)}
 476:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG3_UABH_B_STARTUP_DELAY)}
 477:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_B_DEFAULT_SW_BOOST_CTRL)}
 478:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_OTHER_PTR       , ((uint32)ADC_1_UABH_B_DEFAULT_SW_OTHER)}
 479:Generated_Source\PSoC4/ADC_1.c **** 
 480:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG3_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
 481:Generated_Source\PSoC4/ADC_1.c ****                         /* Filter-invariant registers */
 482:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN0)}
 483:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN1)}
 484:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_TOP)}
 485:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN0)}
 486:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN1)}
 487:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_TOP)}
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 10


 488:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN0)}
 489:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN1)}
 490:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CF_BOT)}
 491:Generated_Source\PSoC4/ADC_1.c **** 
 492:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 493:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG3_UABH_B_LOWQDYN_CAP_CTRL)}
 494:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG3_UABH_B_LOWQDYN_SW_CC_TOP)}
 495:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG3_UABH_B_LOWQDYN_CAP_ABCF_VAL
 496:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG3_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 497:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 498:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN0)}
 499:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN1)}
 500:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_TOP)}
 501:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN0)}
 502:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN1)}
 503:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN0)}
 504:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN1)}
 505:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CF_BOT)}
 506:Generated_Source\PSoC4/ADC_1.c **** 
 507:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 508:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG3_UABH_B_HIGHQDYN_CAP_CTRL)}
 509:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG3_UABH_B_HIGHQDYN_SW_CB_TOP)}
 510:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG3_UABH_B_HIGHQDYN_SW_CC_TOP)}
 511:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG3_UABH_B_HIGHQDYN_CAP_ABCF_VA
 512:Generated_Source\PSoC4/ADC_1.c ****             #endif /* #if (ADC_1_CFG3_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 513:Generated_Source\PSoC4/ADC_1.c ****         };
 514:Generated_Source\PSoC4/ADC_1.c **** 
 515:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG3_UABH_A_FILTER_config = {
 516:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_waveConfig,
 517:Generated_Source\PSoC4/ADC_1.c ****             (CyUAB_reg_pair*) ADC_1_CFG3_UABH_A_FILTER_initPairs,
 518:Generated_Source\PSoC4/ADC_1.c ****             CyUAB_SHARED_SW_CFG(ADC_1_UABH_A_PARAM_REF_TIED,ADC_1_UABH_A_PARAM_AGND_TIED,
 519:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_A_PARAM_SW_CC,ADC_1_UABH_A_PARAM_SW_BB,ADC_1_UABH_A_PARAM_SW_AA),
 520:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_NUM_STEPS,
 521:Generated_Source\PSoC4/ADC_1.c ****             (uint8)(ADC_1_UABH_A_ELEMENT_COUNT(ADC_1_CFG3_UABH_A_FILTER_initPairs))
 522:Generated_Source\PSoC4/ADC_1.c ****         };
 523:Generated_Source\PSoC4/ADC_1.c **** 
 524:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG3_UABH_B_FILTER_config = {
 525:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_waveConfig,
 526:Generated_Source\PSoC4/ADC_1.c ****         (CyUAB_reg_pair*) ADC_1_CFG3_UABH_B_FILTER_initPairs,
 527:Generated_Source\PSoC4/ADC_1.c ****         CyUAB_SHARED_SW_CFG(ADC_1_UABH_B_PARAM_REF_TIED,ADC_1_UABH_B_PARAM_AGND_TIED,
 528:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_B_PARAM_SW_CC,ADC_1_UABH_B_PARAM_SW_BB,ADC_1_UABH_B_PARAM_SW_AA),
 529:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_NUM_STEPS,
 530:Generated_Source\PSoC4/ADC_1.c ****         (uint8)(ADC_1_UABH_B_ELEMENT_COUNT(ADC_1_CFG3_UABH_B_FILTER_initPairs))
 531:Generated_Source\PSoC4/ADC_1.c ****     };
 532:Generated_Source\PSoC4/ADC_1.c ****     #endif /* (0u != ADC_1_CFG3_FILTER_PRESENT) */
 533:Generated_Source\PSoC4/ADC_1.c **** 
 534:Generated_Source\PSoC4/ADC_1.c **** 
 535:Generated_Source\PSoC4/ADC_1.c **** #endif /* (ADC_1_ANY_CONFIG_USES_FILTER  != 0u)  */
 536:Generated_Source\PSoC4/ADC_1.c **** 
 537:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 538:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_Start
 539:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 540:Generated_Source\PSoC4/ADC_1.c **** *
 541:Generated_Source\PSoC4/ADC_1.c **** * \brief Performs all required initialization for this component and enables the
 542:Generated_Source\PSoC4/ADC_1.c **** *  power. The power will be set to the appropriate power based on the clock
 543:Generated_Source\PSoC4/ADC_1.c **** *  frequency.
 544:Generated_Source\PSoC4/ADC_1.c **** *
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 11


 545:Generated_Source\PSoC4/ADC_1.c **** * \param None
 546:Generated_Source\PSoC4/ADC_1.c **** *
 547:Generated_Source\PSoC4/ADC_1.c **** * \return None
 548:Generated_Source\PSoC4/ADC_1.c **** *
 549:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 550:Generated_Source\PSoC4/ADC_1.c **** *
 551:Generated_Source\PSoC4/ADC_1.c **** * \globalvars
 552:Generated_Source\PSoC4/ADC_1.c **** *  \ref ADC_1_initVar (RW)
 553:Generated_Source\PSoC4/ADC_1.c **** *
 554:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 555:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_Start(void)
 556:Generated_Source\PSoC4/ADC_1.c **** {
 557:Generated_Source\PSoC4/ADC_1.c ****     if (ADC_1_INIT_VAR_INIT_FLAG != (ADC_1_INIT_VAR_INIT_FLAG & ADC_1_initVar))
 558:Generated_Source\PSoC4/ADC_1.c ****     {
 559:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_Init();
 560:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_initVar |= ADC_1_INIT_VAR_INIT_FLAG;
 561:Generated_Source\PSoC4/ADC_1.c ****     }
 562:Generated_Source\PSoC4/ADC_1.c **** 
 563:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_Enable();
 564:Generated_Source\PSoC4/ADC_1.c **** 
 565:Generated_Source\PSoC4/ADC_1.c ****     return;
 566:Generated_Source\PSoC4/ADC_1.c **** }
 567:Generated_Source\PSoC4/ADC_1.c **** 
 568:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 569:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_StartEx
 570:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 571:Generated_Source\PSoC4/ADC_1.c **** *
 572:Generated_Source\PSoC4/ADC_1.c **** * \brief This function starts the ADC_1 and sets the Interrupt
 573:Generated_Source\PSoC4/ADC_1.c **** * Service Routine to the provided address using the
 574:Generated_Source\PSoC4/ADC_1.c **** * ADC_1_IRQ_StartEx() function. Refer to the Interrupt component
 575:Generated_Source\PSoC4/ADC_1.c **** * datasheet for more information on the ADC_1_IRQ_StartEx() function.
 576:Generated_Source\PSoC4/ADC_1.c **** *
 577:Generated_Source\PSoC4/ADC_1.c **** * \param address This is the address of a user defined function for the ISR.
 578:Generated_Source\PSoC4/ADC_1.c **** *
 579:Generated_Source\PSoC4/ADC_1.c **** * \return None
 580:Generated_Source\PSoC4/ADC_1.c **** *
 581:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 582:Generated_Source\PSoC4/ADC_1.c **** *
 583:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 584:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_StartEx(cyisraddress address)
 585:Generated_Source\PSoC4/ADC_1.c **** {
 586:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_Start();
 587:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_IRQ_StartEx(address);
 588:Generated_Source\PSoC4/ADC_1.c ****     return;
 589:Generated_Source\PSoC4/ADC_1.c **** }
 590:Generated_Source\PSoC4/ADC_1.c **** 
 591:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 592:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_Stop
 593:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 594:Generated_Source\PSoC4/ADC_1.c **** *
 595:Generated_Source\PSoC4/ADC_1.c **** * \brief This function stops ADC conversions and puts the ADC into its lowest
 596:Generated_Source\PSoC4/ADC_1.c **** * power mode.
 597:Generated_Source\PSoC4/ADC_1.c **** *
 598:Generated_Source\PSoC4/ADC_1.c **** * \param None
 599:Generated_Source\PSoC4/ADC_1.c **** *
 600:Generated_Source\PSoC4/ADC_1.c **** * \return None
 601:Generated_Source\PSoC4/ADC_1.c **** *
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 12


 602:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect
 603:Generated_Source\PSoC4/ADC_1.c **** * Do not use the ADC_1_Stop() API to halt conversions. Instead use the
 604:Generated_Source\PSoC4/ADC_1.c **** * ADC_1_StopConvert() API. If you use the ADC_1_Stop() API
 605:Generated_Source\PSoC4/ADC_1.c **** * to halt conversions then later use the ADC_1_Start() and
 606:Generated_Source\PSoC4/ADC_1.c **** * ADC_1_StartConvert() APIs to resume conversions, the first channel
 607:Generated_Source\PSoC4/ADC_1.c **** * of the scan may be corrupt. The ADC_1_StopConvert() API will enable
 608:Generated_Source\PSoC4/ADC_1.c **** * the ADC_1 to complete the current scan of channels. After the
 609:Generated_Source\PSoC4/ADC_1.c **** * channel scan is complete, the ADC_1 will stop all conversions, which
 610:Generated_Source\PSoC4/ADC_1.c **** * can be detected by the use of an ISR or the ADC_1_IsEndConversion()
 611:Generated_Source\PSoC4/ADC_1.c **** * flag.
 612:Generated_Source\PSoC4/ADC_1.c **** *
 613:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 614:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_Stop(void)
 615:Generated_Source\PSoC4/ADC_1.c **** {
 616:Generated_Source\PSoC4/ADC_1.c ****     #if(0u != ADC_1_ANY_CONFIG_USES_FILTER)
 617:Generated_Source\PSoC4/ADC_1.c ****         if((ADC_1_allConfigs[ADC_1_currentConfig].miscConfig
 618:Generated_Source\PSoC4/ADC_1.c ****            & ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
 619:Generated_Source\PSoC4/ADC_1.c ****            == ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
 620:Generated_Source\PSoC4/ADC_1.c ****         {
 621:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_Stop();
 622:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_B_Stop();
 623:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_FILTERAGND2SAR_BUFFER_Stop();
 624:Generated_Source\PSoC4/ADC_1.c ****         }
 625:Generated_Source\PSoC4/ADC_1.c ****     #endif /* ADC_1_ANY_CONFIG_USES_FILTER != 0u */
 626:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_CTRL_REG &= (uint32)~ADC_1_SAR_CTRL_ENABLED_MSK;
 627:Generated_Source\PSoC4/ADC_1.c ****     return;
 628:Generated_Source\PSoC4/ADC_1.c **** }
 629:Generated_Source\PSoC4/ADC_1.c **** 
 630:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
 631:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_InitConfig
 632:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
 633:Generated_Source\PSoC4/ADC_1.c **** *
 634:Generated_Source\PSoC4/ADC_1.c **** * \brief Configures all of the registers for a given configuration for scanning.
 635:Generated_Source\PSoC4/ADC_1.c **** *
 636:Generated_Source\PSoC4/ADC_1.c **** * \param
 637:Generated_Source\PSoC4/ADC_1.c **** * config: Pointer to the configuration structure
 638:Generated_Source\PSoC4/ADC_1.c **** *
 639:Generated_Source\PSoC4/ADC_1.c **** * \return None
 640:Generated_Source\PSoC4/ADC_1.c **** *
 641:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 642:Generated_Source\PSoC4/ADC_1.c **** *
 643:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 644:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_InitConfig(const ADC_1_CONFIG_STRUCT *config)
 645:Generated_Source\PSoC4/ADC_1.c **** {
 646:Generated_Source\PSoC4/ADC_1.c ****     uint32 chNum;
 647:Generated_Source\PSoC4/ADC_1.c ****     uint32 tmpRegVal;
 648:Generated_Source\PSoC4/ADC_1.c **** 
 649:Generated_Source\PSoC4/ADC_1.c ****     /* If there is an internal SAR clock, set up its divider values. */
 650:Generated_Source\PSoC4/ADC_1.c ****     #if (ADC_1_CLOCK_INTERNAL)
 651:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_intSarClock_Stop();
 652:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_intSarClock_SetFractionalDividerRegister(config->clkDivider, 0u);
 653:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_intSarClock_Start();
 654:Generated_Source\PSoC4/ADC_1.c ****     #endif /* ADC_1_CLOCK_INTERNAL */
 655:Generated_Source\PSoC4/ADC_1.c **** 
 656:Generated_Source\PSoC4/ADC_1.c ****     /* If the current configuration has a filter, set up the UAB clock divider values. */
 657:Generated_Source\PSoC4/ADC_1.c ****     #if(0u != ADC_1_ANY_CONFIG_USES_FILTER)
 658:Generated_Source\PSoC4/ADC_1.c ****         if((config->miscConfig & ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 13


 659:Generated_Source\PSoC4/ADC_1.c ****             == ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
 660:Generated_Source\PSoC4/ADC_1.c ****         {
 661:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_intUabClock_Stop();
 662:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_intUabClock_SetFractionalDividerRegister(config->filterClkDivider, 0u);
 663:Generated_Source\PSoC4/ADC_1.c ****             #if defined(ADC_1_cy_psoc4_sar_1__CLOCK_DIV_ID)
 664:Generated_Source\PSoC4/ADC_1.c ****                 /* If the SAR clock divider ID is known,
 665:Generated_Source\PSoC4/ADC_1.c ****                  * start the internal UAB divider aligned to the SAR divider. */
 666:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_intUabClock_StartEx(ADC_1_cy_psoc4_sar_1__CLOCK_DIV_ID);
 667:Generated_Source\PSoC4/ADC_1.c ****             #else
 668:Generated_Source\PSoC4/ADC_1.c ****                 /* Otherwise start it unaligned. */
 669:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_intUabClock_Start();
 670:Generated_Source\PSoC4/ADC_1.c ****             #endif
 671:Generated_Source\PSoC4/ADC_1.c ****         }
 672:Generated_Source\PSoC4/ADC_1.c ****     #endif /* ADC_1_ANY_CONFIG_USES_FILTER != 0u */
 673:Generated_Source\PSoC4/ADC_1.c **** 
 674:Generated_Source\PSoC4/ADC_1.c ****     /* Init SAR and MUX registers */
 675:Generated_Source\PSoC4/ADC_1.c ****     /* Enable the SAR internal pump when global pump is enabled */
 676:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_CTRL_REG = config->ctrl
 677:Generated_Source\PSoC4/ADC_1.c ****         | (((ADC_1_PUMP_CTRL_REG & ADC_1_PUMP_CTRL_ENABLED) != 0u)
 678:Generated_Source\PSoC4/ADC_1.c ****             ? ADC_1_SAR_CTRL_BOOSTPUMP_EN_MSK : 0u);
 679:Generated_Source\PSoC4/ADC_1.c **** 
 680:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SAMPLE_CTRL_REG = config->sampleCtrl;
 681:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_THRES_REG = config->rangeThres;
 682:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_COND_REG = config->rangeCond;
 683:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SAMPLE_TIME01_REG = config->sampleTime01;
 684:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SAMPLE_TIME23_REG = config->sampleTime23;
 685:Generated_Source\PSoC4/ADC_1.c **** 
 686:Generated_Source\PSoC4/ADC_1.c ****     /* Connect Vminus to VSSA when even one channel is single-ended or multiple channels configured
 687:Generated_Source\PSoC4/ADC_1.c ****     if(1u == ADC_1_MUX_SWITCH0_INIT)
 688:Generated_Source\PSoC4/ADC_1.c ****     {
 689:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_MUX_SWITCH0_REG |= ADC_1_MUX_FW_VSSA_VMINUS;
 690:Generated_Source\PSoC4/ADC_1.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 691:Generated_Source\PSoC4/ADC_1.c ****         if(1ul < config->numChannels)
 692:Generated_Source\PSoC4/ADC_1.c ****         {
 693:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_MUX_SWITCH_HW_CTRL_REG |= ADC_1_MUX_FW_VSSA_VMINUS;
 694:Generated_Source\PSoC4/ADC_1.c ****         }
 695:Generated_Source\PSoC4/ADC_1.c ****     }
 696:Generated_Source\PSoC4/ADC_1.c **** 
 697:Generated_Source\PSoC4/ADC_1.c ****     /* Clear and set interrupt masks */
 698:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SATURATE_INTR_MASK_REG = 0u;
 699:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_INTR_MASK_REG = 0u;
 700:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SATURATE_INTR_MASK_REG = config->satIntMask;
 701:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_INTR_MASK_REG = config->rangeIntMask;
 702:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_INTR_MASK_REG = ADC_1_EOS_MASK;
 703:Generated_Source\PSoC4/ADC_1.c **** 
 704:Generated_Source\PSoC4/ADC_1.c ****     for(chNum = 0u; chNum < config->numChannels; chNum++)
 705:Generated_Source\PSoC4/ADC_1.c ****     {
 706:Generated_Source\PSoC4/ADC_1.c ****         tmpRegVal = (ADC_1_channelsConfig[config->channelBase + chNum]
 707:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_CHANNEL_CONFIG_MASK);
 708:Generated_Source\PSoC4/ADC_1.c **** 
 709:Generated_Source\PSoC4/ADC_1.c ****         #if(ADC_1_TOTAL_CHANNELS_NUM > 1)
 710:Generated_Source\PSoC4/ADC_1.c ****             tmpRegVal |= ADC_1_InputsPlacement[config->channelBase + chNum];
 711:Generated_Source\PSoC4/ADC_1.c ****             /*Non-paired differential channels set NEG_ADDR_EN and clear DIFFERENTIAL_EN */
 712:Generated_Source\PSoC4/ADC_1.c ****             if(0u != (ADC_1_InputsPlacement[config->channelBase + chNum] & ADC_1_CHANNEL_CONFIG_NEG
 713:Generated_Source\PSoC4/ADC_1.c ****             {
 714:Generated_Source\PSoC4/ADC_1.c ****                 tmpRegVal &= ~ADC_1_SAR_CHAN_CONFIG_DIFFERENTIAL_EN_MSK;
 715:Generated_Source\PSoC4/ADC_1.c ****             }
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 14


 716:Generated_Source\PSoC4/ADC_1.c ****         #endif
 717:Generated_Source\PSoC4/ADC_1.c **** 
 718:Generated_Source\PSoC4/ADC_1.c ****         CY_SET_REG32((reg32 *)(ADC_1_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 719:Generated_Source\PSoC4/ADC_1.c ****     }
 720:Generated_Source\PSoC4/ADC_1.c **** 
 721:Generated_Source\PSoC4/ADC_1.c ****     return;
 722:Generated_Source\PSoC4/ADC_1.c **** }
 723:Generated_Source\PSoC4/ADC_1.c **** 
 724:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
 725:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetDFTControl
 726:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
 727:Generated_Source\PSoC4/ADC_1.c **** *
 728:Generated_Source\PSoC4/ADC_1.c **** * \brief Internal function to configure the DFT_CTRL register.
 729:Generated_Source\PSoC4/ADC_1.c **** * This register is a non-retention register therefore it resets
 730:Generated_Source\PSoC4/ADC_1.c **** * when the SAR block is powered down.
 731:Generated_Source\PSoC4/ADC_1.c **** * The register must be configured every time the SAR block is enabled.
 732:Generated_Source\PSoC4/ADC_1.c **** *
 733:Generated_Source\PSoC4/ADC_1.c **** * \param
 734:Generated_Source\PSoC4/ADC_1.c **** * config: Pointer to the configuration structure
 735:Generated_Source\PSoC4/ADC_1.c **** *
 736:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 737:Generated_Source\PSoC4/ADC_1.c **** static void ADC_1_SetDFTControl(const ADC_1_CONFIG_STRUCT *config)
 738:Generated_Source\PSoC4/ADC_1.c **** {
  27              		.loc 1 738 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 739:Generated_Source\PSoC4/ADC_1.c ****     /* Double the non-overlap delay and latch enable time when using */
 740:Generated_Source\PSoC4/ADC_1.c ****     /* internal reference without bypass cap */
 741:Generated_Source\PSoC4/ADC_1.c ****     uint32 tmpRegVal = ADC_1_SAR_DFT_CTRL_REG;
  33              		.loc 1 741 0
  34 0000 0A4B     		ldr	r3, .L5
  35 0002 1B68     		ldr	r3, [r3]
  36              	.LVL1:
 742:Generated_Source\PSoC4/ADC_1.c ****     if(((config->ctrl & ADC_1__SAR_CTRL_VREF_BYP_AND_SEL_MSK)
  37              		.loc 1 742 0
  38 0004 8268     		ldr	r2, [r0, #8]
  39 0006 F021     		movs	r1, #240
  40 0008 0A40     		ands	r2, r1
  41 000a 402A     		cmp	r2, #64
  42 000c 01D0     		beq	.L2
 743:Generated_Source\PSoC4/ADC_1.c ****         == ADC_1__INTERNAL1024)
 744:Generated_Source\PSoC4/ADC_1.c ****         || ((config->ctrl & ADC_1__SAR_CTRL_VREF_BYP_AND_SEL_MSK)
  43              		.loc 1 744 0
  44 000e 002A     		cmp	r2, #0
  45 0010 04D1     		bne	.L3
  46              	.L2:
 745:Generated_Source\PSoC4/ADC_1.c ****         == ADC_1__INTERNALVREF))
 746:Generated_Source\PSoC4/ADC_1.c ****     {
 747:Generated_Source\PSoC4/ADC_1.c ****         tmpRegVal &= ~ADC_1_SAR_DFT_CTRL_DCEN_MSK;
  47              		.loc 1 747 0
  48 0012 074A     		ldr	r2, .L5+4
  49 0014 1340     		ands	r3, r2
  50              	.LVL2:
 748:Generated_Source\PSoC4/ADC_1.c ****         tmpRegVal |= ADC_1_SAR_DFT_CTRL_DLY_INC_MSK;
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 15


  51              		.loc 1 748 0
  52 0016 0122     		movs	r2, #1
  53 0018 1343     		orrs	r3, r2
  54              	.LVL3:
  55 001a 04E0     		b	.L4
  56              	.L3:
  57              	.LVL4:
  58 001c 0122     		movs	r2, #1
  59 001e 9343     		bics	r3, r2
  60              	.LVL5:
 749:Generated_Source\PSoC4/ADC_1.c ****     }
 750:Generated_Source\PSoC4/ADC_1.c ****     else
 751:Generated_Source\PSoC4/ADC_1.c ****     {
 752:Generated_Source\PSoC4/ADC_1.c ****         tmpRegVal |= ADC_1_SAR_DFT_CTRL_DCEN_MSK;
 753:Generated_Source\PSoC4/ADC_1.c ****         tmpRegVal &= (uint32)~ADC_1_SAR_DFT_CTRL_DLY_INC_MSK;
  61              		.loc 1 753 0
  62 0020 8022     		movs	r2, #128
  63 0022 9205     		lsls	r2, r2, #22
  64 0024 1343     		orrs	r3, r2
  65              	.LVL6:
  66              	.L4:
 754:Generated_Source\PSoC4/ADC_1.c ****     }
 755:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_DFT_CTRL_REG = tmpRegVal;
  67              		.loc 1 755 0
  68 0026 014A     		ldr	r2, .L5
  69 0028 1360     		str	r3, [r2]
 756:Generated_Source\PSoC4/ADC_1.c **** }
  70              		.loc 1 756 0
  71              		@ sp needed
  72 002a 7047     		bx	lr
  73              	.L6:
  74              		.align	2
  75              	.L5:
  76 002c 30003A40 		.word	1077542960
  77 0030 FFFFFFDF 		.word	-536870913
  78              		.cfi_endproc
  79              	.LFE5:
  80              		.size	ADC_1_SetDFTControl, .-ADC_1_SetDFTControl
  81              		.section	.text.ADC_1_IsChannelSigned,"ax",%progbits
  82              		.align	2
  83              		.code	16
  84              		.thumb_func
  85              		.type	ADC_1_IsChannelSigned, %function
  86              	ADC_1_IsChannelSigned:
  87              	.LFB13:
 757:Generated_Source\PSoC4/ADC_1.c **** 
 758:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
 759:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SelectConfig
 760:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
 761:Generated_Source\PSoC4/ADC_1.c **** *
 762:Generated_Source\PSoC4/ADC_1.c **** * \brief Selects the predefined configuration for scanning. Disables
 763:Generated_Source\PSoC4/ADC_1.c **** * and re-enables the SAR and filter (if filter used).
 764:Generated_Source\PSoC4/ADC_1.c **** *
 765:Generated_Source\PSoC4/ADC_1.c **** * \param config Number of configuration  in the ADC_1.
 766:Generated_Source\PSoC4/ADC_1.c **** *
 767:Generated_Source\PSoC4/ADC_1.c **** * \param restart Set to 1u to restart the ADC_1 after
 768:Generated_Source\PSoC4/ADC_1.c **** * selecting the configuration.
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 16


 769:Generated_Source\PSoC4/ADC_1.c **** *
 770:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 771:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SelectConfig(uint32 config, uint32 restart)
 772:Generated_Source\PSoC4/ADC_1.c **** {
 773:Generated_Source\PSoC4/ADC_1.c ****     /* Check whether the configuration number is valid or not */
 774:Generated_Source\PSoC4/ADC_1.c ****     if(ADC_1_TOTAL_CONFIGS > config)
 775:Generated_Source\PSoC4/ADC_1.c ****     {
 776:Generated_Source\PSoC4/ADC_1.c ****         /* Stop the ADC before changing configurations */
 777:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_Stop();
 778:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_selected = 1u;
 779:Generated_Source\PSoC4/ADC_1.c **** 
 780:Generated_Source\PSoC4/ADC_1.c ****         if(0u == ADC_1_initVar)
 781:Generated_Source\PSoC4/ADC_1.c ****         {
 782:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_Init();
 783:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_initVar |= ADC_1_INIT_VAR_INIT_FLAG;
 784:Generated_Source\PSoC4/ADC_1.c ****         }
 785:Generated_Source\PSoC4/ADC_1.c ****         #if (ADC_1_VREF_ROUTED)
 786:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_vrefAMux_DisconnectAll();
 787:Generated_Source\PSoC4/ADC_1.c ****         #endif
 788:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_InitConfig(&ADC_1_allConfigs[config]);
 789:Generated_Source\PSoC4/ADC_1.c ****         #if (ADC_1_VREF_ROUTED)
 790:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_vrefAMux_Select((uint8)config);
 791:Generated_Source\PSoC4/ADC_1.c ****         #endif
 792:Generated_Source\PSoC4/ADC_1.c ****         #if(0u != ADC_1_ANY_CONFIG_USES_FILTER)
 793:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_filterVinMux_Select((uint8)config);
 794:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_filterInit(config);
 795:Generated_Source\PSoC4/ADC_1.c ****         #endif
 796:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_CHAN_EN_REG = ADC_1_allConfigs[config].chanEn;
 797:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_RANGE_INTR_MASK_REG = ADC_1_allConfigs[config].rangeIntMask;
 798:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_SATURATE_INTR_MASK_REG = ADC_1_allConfigs[config].satIntMask;
 799:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_currentConfig = config;
 800:Generated_Source\PSoC4/ADC_1.c **** 
 801:Generated_Source\PSoC4/ADC_1.c ****         if(1u == restart)
 802:Generated_Source\PSoC4/ADC_1.c ****         {
 803:Generated_Source\PSoC4/ADC_1.c ****             /* Restart the ADC */
 804:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_Start();
 805:Generated_Source\PSoC4/ADC_1.c **** 
 806:Generated_Source\PSoC4/ADC_1.c ****             /* Restart the scan */
 807:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_StartConvert();
 808:Generated_Source\PSoC4/ADC_1.c ****         }
 809:Generated_Source\PSoC4/ADC_1.c ****     }
 810:Generated_Source\PSoC4/ADC_1.c ****     return;
 811:Generated_Source\PSoC4/ADC_1.c **** }
 812:Generated_Source\PSoC4/ADC_1.c **** 
 813:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 814:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_StartConvert
 815:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 816:Generated_Source\PSoC4/ADC_1.c **** *
 817:Generated_Source\PSoC4/ADC_1.c **** * \brief In continuous mode, this API starts the conversion process and it runs
 818:Generated_Source\PSoC4/ADC_1.c **** * continuously.
 819:Generated_Source\PSoC4/ADC_1.c **** 
 820:Generated_Source\PSoC4/ADC_1.c **** * In Single Shot mode, the function triggers a single scan and
 821:Generated_Source\PSoC4/ADC_1.c **** * every scan requires a call of this function. The mode is set with the
 822:Generated_Source\PSoC4/ADC_1.c **** * Sample Mode parameter in the customizer. The customizer setting can be
 823:Generated_Source\PSoC4/ADC_1.c **** * overridden at run time with the ADC_1_SetConvertMode() function.
 824:Generated_Source\PSoC4/ADC_1.c **** *
 825:Generated_Source\PSoC4/ADC_1.c **** * \param None
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 17


 826:Generated_Source\PSoC4/ADC_1.c **** *
 827:Generated_Source\PSoC4/ADC_1.c **** * \return None
 828:Generated_Source\PSoC4/ADC_1.c **** *
 829:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 830:Generated_Source\PSoC4/ADC_1.c **** *
 831:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 832:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_StartConvert(void)
 833:Generated_Source\PSoC4/ADC_1.c **** {
 834:Generated_Source\PSoC4/ADC_1.c ****     /* Freerunning mode */
 835:Generated_Source\PSoC4/ADC_1.c ****     if((ADC_1_SAR_SAMPLE_CTRL_REG
 836:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 837:Generated_Source\PSoC4/ADC_1.c ****         == ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 838:Generated_Source\PSoC4/ADC_1.c ****     {
 839:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_SAMPLE_CTRL_REG |= ADC_1_SAR_SAMPLE_CTRL_CONTINUOUS_MSK ;
 840:Generated_Source\PSoC4/ADC_1.c ****     }
 841:Generated_Source\PSoC4/ADC_1.c ****     else /* Firmware trigger */
 842:Generated_Source\PSoC4/ADC_1.c ****     {
 843:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_START_CTRL_REG = ADC_1_SAR_START_CTRL_FW_TRIGGER_MSK;
 844:Generated_Source\PSoC4/ADC_1.c ****     }
 845:Generated_Source\PSoC4/ADC_1.c **** 
 846:Generated_Source\PSoC4/ADC_1.c ****     return;
 847:Generated_Source\PSoC4/ADC_1.c **** }
 848:Generated_Source\PSoC4/ADC_1.c **** 
 849:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 850:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_StopConvert
 851:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 852:Generated_Source\PSoC4/ADC_1.c **** *
 853:Generated_Source\PSoC4/ADC_1.c **** * \brief Forces the ADC_1 to stop conversions. If a conversion is
 854:Generated_Source\PSoC4/ADC_1.c **** * currently executing, that conversion will complete, but no further conversions
 855:Generated_Source\PSoC4/ADC_1.c **** * will occur.
 856:Generated_Source\PSoC4/ADC_1.c **** *
 857:Generated_Source\PSoC4/ADC_1.c **** * \param None
 858:Generated_Source\PSoC4/ADC_1.c **** *
 859:Generated_Source\PSoC4/ADC_1.c **** * \return None
 860:Generated_Source\PSoC4/ADC_1.c **** *
 861:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 862:Generated_Source\PSoC4/ADC_1.c **** *
 863:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 864:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_StopConvert(void)
 865:Generated_Source\PSoC4/ADC_1.c **** {
 866:Generated_Source\PSoC4/ADC_1.c ****     if((ADC_1_SAR_SAMPLE_CTRL_REG
 867:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 868:Generated_Source\PSoC4/ADC_1.c ****         == ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 869:Generated_Source\PSoC4/ADC_1.c ****     {
 870:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_SAMPLE_CTRL_REG &= ~ADC_1_SAR_SAMPLE_CTRL_CONTINUOUS_MSK;
 871:Generated_Source\PSoC4/ADC_1.c **** 
 872:Generated_Source\PSoC4/ADC_1.c ****         if((ADC_1_allConfigs[ADC_1_currentConfig].miscConfig
 873:Generated_Source\PSoC4/ADC_1.c ****             & ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
 874:Generated_Source\PSoC4/ADC_1.c ****             == ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
 875:Generated_Source\PSoC4/ADC_1.c ****         {
 876:Generated_Source\PSoC4/ADC_1.c ****             /* Re-synchronize the Filter if a filter is present */
 877:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_Stop();
 878:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_Start();
 879:Generated_Source\PSoC4/ADC_1.c ****         }
 880:Generated_Source\PSoC4/ADC_1.c ****     }
 881:Generated_Source\PSoC4/ADC_1.c **** 
 882:Generated_Source\PSoC4/ADC_1.c ****     return;
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 18


 883:Generated_Source\PSoC4/ADC_1.c **** }
 884:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 885:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetConvertMode
 886:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 887:Generated_Source\PSoC4/ADC_1.c **** *
 888:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets the conversion mode to either Single-Shot or continuous. This
 889:Generated_Source\PSoC4/ADC_1.c **** * function overrides the settings applied in the customizer. Changing
 890:Generated_Source\PSoC4/ADC_1.c **** * configurations will restore the values set in the customizer.
 891:Generated_Source\PSoC4/ADC_1.c **** *
 892:Generated_Source\PSoC4/ADC_1.c **** * \param mode Sets the conversion mode. See table below for details.
 893:Generated_Source\PSoC4/ADC_1.c **** * | Options                          | Description                             |
 894:Generated_Source\PSoC4/ADC_1.c **** * | :------------------------------- | :-------------------------------------- |
 895:Generated_Source\PSoC4/ADC_1.c **** * | ADC_1_SINGLE_SHOT     | Calling the ADC_1_StartConvert() function after setting mode this will 
 896:Generated_Source\PSoC4/ADC_1.c **** * | ADC_1_CONTINUOUS      | Calling the ADC_1_StartConvert() function after setting this mode trigg
 897:Generated_Source\PSoC4/ADC_1.c **** *
 898:Generated_Source\PSoC4/ADC_1.c **** * \return None
 899:Generated_Source\PSoC4/ADC_1.c **** *
 900:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 901:Generated_Source\PSoC4/ADC_1.c **** *
 902:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 903:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetConvertMode(uint32 mode)
 904:Generated_Source\PSoC4/ADC_1.c **** {
 905:Generated_Source\PSoC4/ADC_1.c ****     if(ADC_1_CONTINUOUS == mode)
 906:Generated_Source\PSoC4/ADC_1.c ****     {
 907:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_SAMPLE_CTRL_REG |= ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK;
 908:Generated_Source\PSoC4/ADC_1.c ****     }
 909:Generated_Source\PSoC4/ADC_1.c ****     else
 910:Generated_Source\PSoC4/ADC_1.c ****     {
 911:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_SAMPLE_CTRL_REG &= ~ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK;
 912:Generated_Source\PSoC4/ADC_1.c ****     }
 913:Generated_Source\PSoC4/ADC_1.c **** }
 914:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
 915:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_IRQ_Enable
 916:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
 917:Generated_Source\PSoC4/ADC_1.c **** *
 918:Generated_Source\PSoC4/ADC_1.c **** * \brief Enables interrupts to occur at the end of a conversion. Global
 919:Generated_Source\PSoC4/ADC_1.c **** * interrupts must also be enabled for the ADC_1 interrupts to occur.
 920:Generated_Source\PSoC4/ADC_1.c **** *
 921:Generated_Source\PSoC4/ADC_1.c **** * \param None
 922:Generated_Source\PSoC4/ADC_1.c **** *
 923:Generated_Source\PSoC4/ADC_1.c **** * \return None
 924:Generated_Source\PSoC4/ADC_1.c **** *
 925:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 926:Generated_Source\PSoC4/ADC_1.c **** *
 927:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 928:Generated_Source\PSoC4/ADC_1.c **** 
 929:Generated_Source\PSoC4/ADC_1.c **** 
 930:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
 931:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_IRQ_Disable
 932:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
 933:Generated_Source\PSoC4/ADC_1.c **** *
 934:Generated_Source\PSoC4/ADC_1.c **** * \brief Disables end of conversion interrupts.
 935:Generated_Source\PSoC4/ADC_1.c **** *
 936:Generated_Source\PSoC4/ADC_1.c **** * \param None
 937:Generated_Source\PSoC4/ADC_1.c **** *
 938:Generated_Source\PSoC4/ADC_1.c **** * \return None
 939:Generated_Source\PSoC4/ADC_1.c **** *
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 19


 940:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 941:Generated_Source\PSoC4/ADC_1.c **** *
 942:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 943:Generated_Source\PSoC4/ADC_1.c **** 
 944:Generated_Source\PSoC4/ADC_1.c **** 
 945:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 946:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetEosMask
 947:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 948:Generated_Source\PSoC4/ADC_1.c **** *
 949:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets of clears the End of Scan (EOS) interrupt mask.
 950:Generated_Source\PSoC4/ADC_1.c **** *
 951:Generated_Source\PSoC4/ADC_1.c **** * \param mask 1 to set the mask, 0 to clear the mask.
 952:Generated_Source\PSoC4/ADC_1.c **** *
 953:Generated_Source\PSoC4/ADC_1.c **** * \return None
 954:Generated_Source\PSoC4/ADC_1.c **** *
 955:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect All other bits in the INTR register are cleared by this function.
 956:Generated_Source\PSoC4/ADC_1.c **** *
 957:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 958:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetEosMask(uint32 mask)
 959:Generated_Source\PSoC4/ADC_1.c **** {
 960:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_INTR_MASK_REG = mask & ADC_1_EOS_MASK;
 961:Generated_Source\PSoC4/ADC_1.c **** 
 962:Generated_Source\PSoC4/ADC_1.c ****     return;
 963:Generated_Source\PSoC4/ADC_1.c **** }
 964:Generated_Source\PSoC4/ADC_1.c **** 
 965:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
 966:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetChanMask
 967:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
 968:Generated_Source\PSoC4/ADC_1.c **** *
 969:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets enable/disable mask for all channels in current configuration.
 970:Generated_Source\PSoC4/ADC_1.c **** *
 971:Generated_Source\PSoC4/ADC_1.c **** *
 972:Generated_Source\PSoC4/ADC_1.c **** * \param enableMask
 973:Generated_Source\PSoC4/ADC_1.c **** *  Channel enable/disable mask.
 974:Generated_Source\PSoC4/ADC_1.c **** *
 975:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect
 976:Generated_Source\PSoC4/ADC_1.c **** *  None.
 977:Generated_Source\PSoC4/ADC_1.c **** *
 978:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 979:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetChanMask(uint32 enableMask)
 980:Generated_Source\PSoC4/ADC_1.c **** {
 981:Generated_Source\PSoC4/ADC_1.c ****     uint32 chanCount = ADC_1_allConfigs[ADC_1_currentConfig].numChannels;
 982:Generated_Source\PSoC4/ADC_1.c ****     enableMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 983:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_CHAN_EN_REG = enableMask;
 984:Generated_Source\PSoC4/ADC_1.c ****     return;
 985:Generated_Source\PSoC4/ADC_1.c **** }
 986:Generated_Source\PSoC4/ADC_1.c **** 
 987:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 988:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_IsEndConversion
 989:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 990:Generated_Source\PSoC4/ADC_1.c **** *
 991:Generated_Source\PSoC4/ADC_1.c **** * \brief Immediately returns the status of the conversion or does not return
 992:Generated_Source\PSoC4/ADC_1.c **** * (blocking) until the conversion completes, depending on the retMode parameter.
 993:Generated_Source\PSoC4/ADC_1.c **** *
 994:Generated_Source\PSoC4/ADC_1.c **** * \param retMode Check conversion return mode. See the following table for
 995:Generated_Source\PSoC4/ADC_1.c **** * options.
 996:Generated_Source\PSoC4/ADC_1.c **** * | Options                              | Description                             |
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 20


 997:Generated_Source\PSoC4/ADC_1.c **** * | :-------------------------------     | :-------------------------------------- |
 998:Generated_Source\PSoC4/ADC_1.c **** * | ADC_1_RETURN_STATUS       | Immediately returns the conversion status for sequential channels. 
 999:Generated_Source\PSoC4/ADC_1.c **** * | ADC_1_WAIT_FOR_RESULT     | Does not return a result until the ADC_1 conversion of all sequenti
1000:Generated_Source\PSoC4/ADC_1.c **** *
1001:Generated_Source\PSoC4/ADC_1.c **** * \return uint8: If a nonzero value is returned, the last conversion is complete.
1002:Generated_Source\PSoC4/ADC_1.c **** * If the returned value is zero, the ADC_1 is still calculating the last result.
1003:Generated_Source\PSoC4/ADC_1.c **** *
1004:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect This function reads the end of conversion status, and clears it afterward.
1005:Generated_Source\PSoC4/ADC_1.c **** *
1006:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1007:Generated_Source\PSoC4/ADC_1.c **** uint32 ADC_1_IsEndConversion(uint32 retMode)
1008:Generated_Source\PSoC4/ADC_1.c **** {
1009:Generated_Source\PSoC4/ADC_1.c ****     uint32 endOfConversion = 0u;
1010:Generated_Source\PSoC4/ADC_1.c ****     uint32 wdt = 0x3FFFFFFuL; /* Watchdog timer for blocking while loop */
1011:Generated_Source\PSoC4/ADC_1.c ****     if((ADC_1_RETURN_STATUS == retMode) || (ADC_1_WAIT_FOR_RESULT == retMode))
1012:Generated_Source\PSoC4/ADC_1.c ****     {
1013:Generated_Source\PSoC4/ADC_1.c ****         do
1014:Generated_Source\PSoC4/ADC_1.c ****         {
1015:Generated_Source\PSoC4/ADC_1.c ****             endOfConversion = ADC_1_SAR_INTR_REG & ADC_1_EOS_MASK;
1016:Generated_Source\PSoC4/ADC_1.c ****             wdt--;
1017:Generated_Source\PSoC4/ADC_1.c ****         }while(((0u == endOfConversion)
1018:Generated_Source\PSoC4/ADC_1.c ****             && (((uint32) retMode & ADC_1_WAIT_FOR_RESULT) != 0u))
1019:Generated_Source\PSoC4/ADC_1.c ****             && (0uL != wdt));
1020:Generated_Source\PSoC4/ADC_1.c **** 
1021:Generated_Source\PSoC4/ADC_1.c ****         if(0u != endOfConversion)
1022:Generated_Source\PSoC4/ADC_1.c ****         {
1023:Generated_Source\PSoC4/ADC_1.c ****             /* Clear EOS bit */
1024:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_SAR_INTR_REG = ADC_1_EOS_MASK;
1025:Generated_Source\PSoC4/ADC_1.c ****         }
1026:Generated_Source\PSoC4/ADC_1.c ****     }
1027:Generated_Source\PSoC4/ADC_1.c **** 
1028:Generated_Source\PSoC4/ADC_1.c ****     return endOfConversion;
1029:Generated_Source\PSoC4/ADC_1.c **** }
1030:Generated_Source\PSoC4/ADC_1.c **** 
1031:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
1032:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_IsChannelSigned(uint32 chan)
1033:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
1034:Generated_Source\PSoC4/ADC_1.c **** *
1035:Generated_Source\PSoC4/ADC_1.c **** * Determines if the provided channel is in signed format.
1036:Generated_Source\PSoC4/ADC_1.c **** *
1037:Generated_Source\PSoC4/ADC_1.c **** * \param chan The ADC_1 channel to check.
1038:Generated_Source\PSoC4/ADC_1.c **** *
1039:Generated_Source\PSoC4/ADC_1.c **** * \return None
1040:Generated_Source\PSoC4/ADC_1.c **** *
1041:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1042:Generated_Source\PSoC4/ADC_1.c **** *
1043:Generated_Source\PSoC4/ADC_1.c **** *
1044:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1045:Generated_Source\PSoC4/ADC_1.c **** static int32 ADC_1_IsChannelSigned(uint32 chan)
1046:Generated_Source\PSoC4/ADC_1.c **** {
  88              		.loc 1 1046 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              		@ link register save eliminated.
  93              	.LVL7:
1047:Generated_Source\PSoC4/ADC_1.c ****     int32 isSigned = 0;
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 21


1048:Generated_Source\PSoC4/ADC_1.c ****     uint32 chanConfig;
1049:Generated_Source\PSoC4/ADC_1.c **** 
1050:Generated_Source\PSoC4/ADC_1.c ****     chanConfig = CY_GET_REG32((reg32 *)(ADC_1_SAR_CHAN_CONFIG_IND + (uint32)(chan << 2u)));
  94              		.loc 1 1050 0
  95 0000 8000     		lsls	r0, r0, #2
  96              	.LVL8:
  97 0002 114B     		ldr	r3, .L12
  98 0004 9C46     		mov	ip, r3
  99 0006 6044     		add	r0, r0, ip
 100 0008 0268     		ldr	r2, [r0]
 101              	.LVL9:
1051:Generated_Source\PSoC4/ADC_1.c ****     /* If differential mode */
1052:Generated_Source\PSoC4/ADC_1.c ****     if(0u != (chanConfig & ADC_1_CHANNEL_CONFIG_DIFF_ALL_MSK))
 102              		.loc 1 1052 0
 103 000a 104B     		ldr	r3, .L12+4
 104 000c 1A42     		tst	r2, r3
 105 000e 0BD0     		beq	.L8
1053:Generated_Source\PSoC4/ADC_1.c ****     {
1054:Generated_Source\PSoC4/ADC_1.c ****         /*If signed differential */
1055:Generated_Source\PSoC4/ADC_1.c ****         if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
 106              		.loc 1 1055 0
 107 0010 0F4B     		ldr	r3, .L12+8
 108 0012 1A68     		ldr	r2, [r3]
 109              	.LVL10:
 110 0014 D300     		lsls	r3, r2, #3
 111 0016 9A1A     		subs	r2, r3, r2
 112 0018 D300     		lsls	r3, r2, #3
 113 001a 0E4A     		ldr	r2, .L12+12
 114 001c D318     		adds	r3, r2, r3
 115 001e DB68     		ldr	r3, [r3, #12]
 116 0020 1B07     		lsls	r3, r3, #28
 117 0022 0DD4     		bmi	.L10
1047:Generated_Source\PSoC4/ADC_1.c ****     uint32 chanConfig;
 118              		.loc 1 1047 0
 119 0024 0020     		movs	r0, #0
 120 0026 0EE0     		b	.L9
 121              	.LVL11:
 122              	.L8:
1056:Generated_Source\PSoC4/ADC_1.c ****             & ADC_1_SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_MSK) != 0u)
1057:Generated_Source\PSoC4/ADC_1.c ****         {
1058:Generated_Source\PSoC4/ADC_1.c ****             isSigned = 1;
1059:Generated_Source\PSoC4/ADC_1.c ****         }
1060:Generated_Source\PSoC4/ADC_1.c ****     }
1061:Generated_Source\PSoC4/ADC_1.c ****     else
1062:Generated_Source\PSoC4/ADC_1.c ****     {
1063:Generated_Source\PSoC4/ADC_1.c ****         if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
 123              		.loc 1 1063 0
 124 0028 094B     		ldr	r3, .L12+8
 125 002a 1A68     		ldr	r2, [r3]
 126              	.LVL12:
 127 002c D300     		lsls	r3, r2, #3
 128 002e 9A1A     		subs	r2, r3, r2
 129 0030 D300     		lsls	r3, r2, #3
 130 0032 084A     		ldr	r2, .L12+12
 131 0034 D318     		adds	r3, r2, r3
 132 0036 DB68     		ldr	r3, [r3, #12]
 133 0038 5B07     		lsls	r3, r3, #29
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 22


 134 003a 03D4     		bmi	.L11
1047:Generated_Source\PSoC4/ADC_1.c ****     uint32 chanConfig;
 135              		.loc 1 1047 0
 136 003c 0020     		movs	r0, #0
 137 003e 02E0     		b	.L9
 138              	.L10:
1058:Generated_Source\PSoC4/ADC_1.c ****         }
 139              		.loc 1 1058 0
 140 0040 0120     		movs	r0, #1
 141 0042 00E0     		b	.L9
 142              	.L11:
1064:Generated_Source\PSoC4/ADC_1.c ****             & ADC_1_SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_MSK) != 0u)
1065:Generated_Source\PSoC4/ADC_1.c ****         {
1066:Generated_Source\PSoC4/ADC_1.c ****             isSigned = 1;
 143              		.loc 1 1066 0
 144 0044 0120     		movs	r0, #1
 145              	.L9:
 146              	.LVL13:
1067:Generated_Source\PSoC4/ADC_1.c ****         }
1068:Generated_Source\PSoC4/ADC_1.c ****     }
1069:Generated_Source\PSoC4/ADC_1.c ****     return isSigned;
1070:Generated_Source\PSoC4/ADC_1.c **** }
 147              		.loc 1 1070 0
 148              		@ sp needed
 149 0046 7047     		bx	lr
 150              	.L13:
 151              		.align	2
 152              	.L12:
 153 0048 80003A40 		.word	1077543040
 154 004c 00010001 		.word	16777472
 155 0050 00000000 		.word	.LANCHOR0
 156 0054 00000000 		.word	ADC_1_allConfigs
 157              		.cfi_endproc
 158              	.LFE13:
 159              		.size	ADC_1_IsChannelSigned, .-ADC_1_IsChannelSigned
 160              		.section	.text.ADC_1_Stop,"ax",%progbits
 161              		.align	2
 162              		.global	ADC_1_Stop
 163              		.code	16
 164              		.thumb_func
 165              		.type	ADC_1_Stop, %function
 166              	ADC_1_Stop:
 167              	.LFB3:
 615:Generated_Source\PSoC4/ADC_1.c ****     #if(0u != ADC_1_ANY_CONFIG_USES_FILTER)
 168              		.loc 1 615 0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172              		@ link register save eliminated.
 626:Generated_Source\PSoC4/ADC_1.c ****     return;
 173              		.loc 1 626 0
 174 0000 024A     		ldr	r2, .L15
 175 0002 1368     		ldr	r3, [r2]
 176 0004 5B00     		lsls	r3, r3, #1
 177 0006 5B08     		lsrs	r3, r3, #1
 178 0008 1360     		str	r3, [r2]
 628:Generated_Source\PSoC4/ADC_1.c **** 
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 23


 179              		.loc 1 628 0
 180              		@ sp needed
 181 000a 7047     		bx	lr
 182              	.L16:
 183              		.align	2
 184              	.L15:
 185 000c 00003A40 		.word	1077542912
 186              		.cfi_endproc
 187              	.LFE3:
 188              		.size	ADC_1_Stop, .-ADC_1_Stop
 189              		.section	.text.ADC_1_InitConfig,"ax",%progbits
 190              		.align	2
 191              		.global	ADC_1_InitConfig
 192              		.code	16
 193              		.thumb_func
 194              		.type	ADC_1_InitConfig, %function
 195              	ADC_1_InitConfig:
 196              	.LFB4:
 645:Generated_Source\PSoC4/ADC_1.c ****     uint32 chNum;
 197              		.loc 1 645 0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201              	.LVL14:
 202 0000 10B5     		push	{r4, lr}
 203              		.cfi_def_cfa_offset 8
 204              		.cfi_offset 4, -8
 205              		.cfi_offset 14, -4
 206 0002 0400     		movs	r4, r0
 651:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_intSarClock_SetFractionalDividerRegister(config->clkDivider, 0u);
 207              		.loc 1 651 0
 208 0004 FFF7FEFF 		bl	ADC_1_intSarClock_Stop
 209              	.LVL15:
 652:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_intSarClock_Start();
 210              		.loc 1 652 0
 211 0008 A08E     		ldrh	r0, [r4, #52]
 212 000a 0021     		movs	r1, #0
 213 000c FFF7FEFF 		bl	ADC_1_intSarClock_SetFractionalDividerRegister
 214              	.LVL16:
 653:Generated_Source\PSoC4/ADC_1.c ****     #endif /* ADC_1_CLOCK_INTERNAL */
 215              		.loc 1 653 0
 216 0010 FF20     		movs	r0, #255
 217 0012 FFF7FEFF 		bl	ADC_1_intSarClock_StartEx
 218              	.LVL17:
 676:Generated_Source\PSoC4/ADC_1.c ****         | (((ADC_1_PUMP_CTRL_REG & ADC_1_PUMP_CTRL_ENABLED) != 0u)
 219              		.loc 1 676 0
 220 0016 A368     		ldr	r3, [r4, #8]
 677:Generated_Source\PSoC4/ADC_1.c ****             ? ADC_1_SAR_CTRL_BOOSTPUMP_EN_MSK : 0u);
 221              		.loc 1 677 0
 222 0018 194A     		ldr	r2, .L22
 223 001a 1268     		ldr	r2, [r2]
 224 001c 002A     		cmp	r2, #0
 225 001e 02DA     		bge	.L21
 226 0020 8022     		movs	r2, #128
 227 0022 5203     		lsls	r2, r2, #13
 228 0024 00E0     		b	.L18
 229              	.L21:
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 24


 230 0026 0022     		movs	r2, #0
 231              	.L18:
 677:Generated_Source\PSoC4/ADC_1.c ****             ? ADC_1_SAR_CTRL_BOOSTPUMP_EN_MSK : 0u);
 232              		.loc 1 677 0 is_stmt 0 discriminator 4
 233 0028 1343     		orrs	r3, r2
 676:Generated_Source\PSoC4/ADC_1.c ****         | (((ADC_1_PUMP_CTRL_REG & ADC_1_PUMP_CTRL_ENABLED) != 0u)
 234              		.loc 1 676 0 is_stmt 1 discriminator 4
 235 002a 164A     		ldr	r2, .L22+4
 236 002c 1360     		str	r3, [r2]
 680:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_THRES_REG = config->rangeThres;
 237              		.loc 1 680 0 discriminator 4
 238 002e 164B     		ldr	r3, .L22+8
 239 0030 E268     		ldr	r2, [r4, #12]
 240 0032 1A60     		str	r2, [r3]
 681:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_COND_REG = config->rangeCond;
 241              		.loc 1 681 0 discriminator 4
 242 0034 154B     		ldr	r3, .L22+12
 243 0036 A269     		ldr	r2, [r4, #24]
 244 0038 1A60     		str	r2, [r3]
 682:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SAMPLE_TIME01_REG = config->sampleTime01;
 245              		.loc 1 682 0 discriminator 4
 246 003a 154B     		ldr	r3, .L22+16
 247 003c E269     		ldr	r2, [r4, #28]
 248 003e 1A60     		str	r2, [r3]
 683:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SAMPLE_TIME23_REG = config->sampleTime23;
 249              		.loc 1 683 0 discriminator 4
 250 0040 144B     		ldr	r3, .L22+20
 251 0042 2269     		ldr	r2, [r4, #16]
 252 0044 1A60     		str	r2, [r3]
 684:Generated_Source\PSoC4/ADC_1.c **** 
 253              		.loc 1 684 0 discriminator 4
 254 0046 144B     		ldr	r3, .L22+24
 255 0048 6269     		ldr	r2, [r4, #20]
 256 004a 1A60     		str	r2, [r3]
 698:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_INTR_MASK_REG = 0u;
 257              		.loc 1 698 0 discriminator 4
 258 004c 134A     		ldr	r2, .L22+28
 259 004e 0021     		movs	r1, #0
 260 0050 1160     		str	r1, [r2]
 699:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SATURATE_INTR_MASK_REG = config->satIntMask;
 261              		.loc 1 699 0 discriminator 4
 262 0052 134B     		ldr	r3, .L22+32
 263 0054 1960     		str	r1, [r3]
 700:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_INTR_MASK_REG = config->rangeIntMask;
 264              		.loc 1 700 0 discriminator 4
 265 0056 A16A     		ldr	r1, [r4, #40]
 266 0058 1160     		str	r1, [r2]
 701:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_INTR_MASK_REG = ADC_1_EOS_MASK;
 267              		.loc 1 701 0 discriminator 4
 268 005a 626A     		ldr	r2, [r4, #36]
 269 005c 1A60     		str	r2, [r3]
 702:Generated_Source\PSoC4/ADC_1.c **** 
 270              		.loc 1 702 0 discriminator 4
 271 005e 0122     		movs	r2, #1
 272 0060 104B     		ldr	r3, .L22+36
 273 0062 1A60     		str	r2, [r3]
 274              	.LVL18:
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 25


 704:Generated_Source\PSoC4/ADC_1.c ****     {
 275              		.loc 1 704 0 discriminator 4
 276 0064 0023     		movs	r3, #0
 277 0066 07E0     		b	.L19
 278              	.LVL19:
 279              	.L20:
 718:Generated_Source\PSoC4/ADC_1.c ****     }
 280              		.loc 1 718 0 discriminator 3
 281 0068 9A00     		lsls	r2, r3, #2
 282 006a 0F49     		ldr	r1, .L22+40
 283 006c 8C46     		mov	ip, r1
 284 006e 6244     		add	r2, r2, ip
 285 0070 A021     		movs	r1, #160
 286 0072 C900     		lsls	r1, r1, #3
 287 0074 1160     		str	r1, [r2]
 704:Generated_Source\PSoC4/ADC_1.c ****     {
 288              		.loc 1 704 0 discriminator 3
 289 0076 0133     		adds	r3, r3, #1
 290              	.LVL20:
 291              	.L19:
 704:Generated_Source\PSoC4/ADC_1.c ****     {
 292              		.loc 1 704 0 is_stmt 0 discriminator 1
 293 0078 6268     		ldr	r2, [r4, #4]
 294 007a 9342     		cmp	r3, r2
 295 007c F4D3     		bcc	.L20
 722:Generated_Source\PSoC4/ADC_1.c **** 
 296              		.loc 1 722 0 is_stmt 1
 297              		@ sp needed
 298              	.LVL21:
 299 007e 10BD     		pop	{r4, pc}
 300              	.L23:
 301              		.align	2
 302              	.L22:
 303 0080 80033A40 		.word	1077543808
 304 0084 00003A40 		.word	1077542912
 305 0088 04003A40 		.word	1077542916
 306 008c 18003A40 		.word	1077542936
 307 0090 1C003A40 		.word	1077542940
 308 0094 10003A40 		.word	1077542928
 309 0098 14003A40 		.word	1077542932
 310 009c 28023A40 		.word	1077543464
 311 00a0 38023A40 		.word	1077543480
 312 00a4 18023A40 		.word	1077543448
 313 00a8 80003A40 		.word	1077543040
 314              		.cfi_endproc
 315              	.LFE4:
 316              		.size	ADC_1_InitConfig, .-ADC_1_InitConfig
 317              		.section	.text.ADC_1_StartConvert,"ax",%progbits
 318              		.align	2
 319              		.global	ADC_1_StartConvert
 320              		.code	16
 321              		.thumb_func
 322              		.type	ADC_1_StartConvert, %function
 323              	ADC_1_StartConvert:
 324              	.LFB7:
 833:Generated_Source\PSoC4/ADC_1.c ****     /* Freerunning mode */
 325              		.loc 1 833 0
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 26


 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 0
 328              		@ frame_needed = 0, uses_anonymous_args = 0
 329              		@ link register save eliminated.
 835:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 330              		.loc 1 835 0
 331 0000 074B     		ldr	r3, .L27
 332 0002 1B68     		ldr	r3, [r3]
 333 0004 5B03     		lsls	r3, r3, #13
 334 0006 06D5     		bpl	.L25
 839:Generated_Source\PSoC4/ADC_1.c ****     }
 335              		.loc 1 839 0
 336 0008 054A     		ldr	r2, .L27
 337 000a 1368     		ldr	r3, [r2]
 338 000c 8021     		movs	r1, #128
 339 000e 4902     		lsls	r1, r1, #9
 340 0010 0B43     		orrs	r3, r1
 341 0012 1360     		str	r3, [r2]
 342 0014 02E0     		b	.L24
 343              	.L25:
 843:Generated_Source\PSoC4/ADC_1.c ****     }
 344              		.loc 1 843 0
 345 0016 0122     		movs	r2, #1
 346 0018 024B     		ldr	r3, .L27+4
 347 001a 1A60     		str	r2, [r3]
 348              	.L24:
 847:Generated_Source\PSoC4/ADC_1.c **** 
 349              		.loc 1 847 0
 350              		@ sp needed
 351 001c 7047     		bx	lr
 352              	.L28:
 353 001e C046     		.align	2
 354              	.L27:
 355 0020 04003A40 		.word	1077542916
 356 0024 24003A40 		.word	1077542948
 357              		.cfi_endproc
 358              	.LFE7:
 359              		.size	ADC_1_StartConvert, .-ADC_1_StartConvert
 360              		.section	.text.ADC_1_SetConvertMode,"ax",%progbits
 361              		.align	2
 362              		.global	ADC_1_SetConvertMode
 363              		.code	16
 364              		.thumb_func
 365              		.type	ADC_1_SetConvertMode, %function
 366              	ADC_1_SetConvertMode:
 367              	.LFB9:
 904:Generated_Source\PSoC4/ADC_1.c ****     if(ADC_1_CONTINUOUS == mode)
 368              		.loc 1 904 0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 372              		@ link register save eliminated.
 373              	.LVL22:
 905:Generated_Source\PSoC4/ADC_1.c ****     {
 374              		.loc 1 905 0
 375 0000 0128     		cmp	r0, #1
 376 0002 06D1     		bne	.L30
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 27


 907:Generated_Source\PSoC4/ADC_1.c ****     }
 377              		.loc 1 907 0
 378 0004 064A     		ldr	r2, .L32
 379 0006 1368     		ldr	r3, [r2]
 380 0008 8021     		movs	r1, #128
 381 000a C902     		lsls	r1, r1, #11
 382 000c 0B43     		orrs	r3, r1
 383 000e 1360     		str	r3, [r2]
 384 0010 04E0     		b	.L29
 385              	.L30:
 911:Generated_Source\PSoC4/ADC_1.c ****     }
 386              		.loc 1 911 0
 387 0012 034A     		ldr	r2, .L32
 388 0014 1168     		ldr	r1, [r2]
 389 0016 034B     		ldr	r3, .L32+4
 390 0018 0B40     		ands	r3, r1
 391 001a 1360     		str	r3, [r2]
 392              	.L29:
 913:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
 393              		.loc 1 913 0
 394              		@ sp needed
 395 001c 7047     		bx	lr
 396              	.L33:
 397 001e C046     		.align	2
 398              	.L32:
 399 0020 04003A40 		.word	1077542916
 400 0024 FFFFFBFF 		.word	-262145
 401              		.cfi_endproc
 402              	.LFE9:
 403              		.size	ADC_1_SetConvertMode, .-ADC_1_SetConvertMode
 404              		.section	.text.ADC_1_SetEosMask,"ax",%progbits
 405              		.align	2
 406              		.global	ADC_1_SetEosMask
 407              		.code	16
 408              		.thumb_func
 409              		.type	ADC_1_SetEosMask, %function
 410              	ADC_1_SetEosMask:
 411              	.LFB10:
 959:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_INTR_MASK_REG = mask & ADC_1_EOS_MASK;
 412              		.loc 1 959 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416              		@ link register save eliminated.
 417              	.LVL23:
 960:Generated_Source\PSoC4/ADC_1.c **** 
 418              		.loc 1 960 0
 419 0000 0123     		movs	r3, #1
 420 0002 1840     		ands	r0, r3
 421              	.LVL24:
 422 0004 014B     		ldr	r3, .L35
 423 0006 1860     		str	r0, [r3]
 963:Generated_Source\PSoC4/ADC_1.c **** 
 424              		.loc 1 963 0
 425              		@ sp needed
 426 0008 7047     		bx	lr
 427              	.L36:
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 28


 428 000a C046     		.align	2
 429              	.L35:
 430 000c 18023A40 		.word	1077543448
 431              		.cfi_endproc
 432              	.LFE10:
 433              		.size	ADC_1_SetEosMask, .-ADC_1_SetEosMask
 434              		.section	.text.ADC_1_SetChanMask,"ax",%progbits
 435              		.align	2
 436              		.global	ADC_1_SetChanMask
 437              		.code	16
 438              		.thumb_func
 439              		.type	ADC_1_SetChanMask, %function
 440              	ADC_1_SetChanMask:
 441              	.LFB11:
 980:Generated_Source\PSoC4/ADC_1.c ****     uint32 chanCount = ADC_1_allConfigs[ADC_1_currentConfig].numChannels;
 442              		.loc 1 980 0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 0
 445              		@ frame_needed = 0, uses_anonymous_args = 0
 446              		@ link register save eliminated.
 447              	.LVL25:
 981:Generated_Source\PSoC4/ADC_1.c ****     enableMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 448              		.loc 1 981 0
 449 0000 074B     		ldr	r3, .L38
 450 0002 1A68     		ldr	r2, [r3]
 451 0004 D300     		lsls	r3, r2, #3
 452 0006 9A1A     		subs	r2, r3, r2
 453 0008 D300     		lsls	r3, r2, #3
 454 000a 064A     		ldr	r2, .L38+4
 455 000c D318     		adds	r3, r2, r3
 456 000e 5A68     		ldr	r2, [r3, #4]
 457              	.LVL26:
 982:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_CHAN_EN_REG = enableMask;
 458              		.loc 1 982 0
 459 0010 0123     		movs	r3, #1
 460 0012 9340     		lsls	r3, r3, r2
 461 0014 013B     		subs	r3, r3, #1
 462 0016 1840     		ands	r0, r3
 463              	.LVL27:
 983:Generated_Source\PSoC4/ADC_1.c ****     return;
 464              		.loc 1 983 0
 465 0018 034B     		ldr	r3, .L38+8
 466 001a 1860     		str	r0, [r3]
 985:Generated_Source\PSoC4/ADC_1.c **** 
 467              		.loc 1 985 0
 468              		@ sp needed
 469 001c 7047     		bx	lr
 470              	.L39:
 471 001e C046     		.align	2
 472              	.L38:
 473 0020 00000000 		.word	.LANCHOR0
 474 0024 00000000 		.word	ADC_1_allConfigs
 475 0028 20003A40 		.word	1077542944
 476              		.cfi_endproc
 477              	.LFE11:
 478              		.size	ADC_1_SetChanMask, .-ADC_1_SetChanMask
 479              		.section	.text.ADC_1_IsEndConversion,"ax",%progbits
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 29


 480              		.align	2
 481              		.global	ADC_1_IsEndConversion
 482              		.code	16
 483              		.thumb_func
 484              		.type	ADC_1_IsEndConversion, %function
 485              	ADC_1_IsEndConversion:
 486              	.LFB12:
1008:Generated_Source\PSoC4/ADC_1.c ****     uint32 endOfConversion = 0u;
 487              		.loc 1 1008 0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 0
 490              		@ frame_needed = 0, uses_anonymous_args = 0
 491              		@ link register save eliminated.
 492              	.LVL28:
 493 0000 0100     		movs	r1, r0
 494              	.LVL29:
1011:Generated_Source\PSoC4/ADC_1.c ****     {
 495              		.loc 1 1011 0
 496 0002 431E     		subs	r3, r0, #1
 497 0004 012B     		cmp	r3, #1
 498 0006 11D8     		bhi	.L44
 499 0008 094A     		ldr	r2, .L45
 500              	.LVL30:
 501              	.L43:
1015:Generated_Source\PSoC4/ADC_1.c ****             wdt--;
 502              		.loc 1 1015 0 discriminator 1
 503 000a 0A4B     		ldr	r3, .L45+4
 504 000c 1B68     		ldr	r3, [r3]
 505 000e 0120     		movs	r0, #1
 506 0010 1840     		ands	r0, r3
 507              	.LVL31:
1016:Generated_Source\PSoC4/ADC_1.c ****         }while(((0u == endOfConversion)
 508              		.loc 1 1016 0 discriminator 1
 509 0012 013A     		subs	r2, r2, #1
 510              	.LVL32:
1019:Generated_Source\PSoC4/ADC_1.c **** 
 511              		.loc 1 1019 0 discriminator 1
 512 0014 0028     		cmp	r0, #0
 513 0016 03D1     		bne	.L42
1018:Generated_Source\PSoC4/ADC_1.c ****             && (0uL != wdt));
 514              		.loc 1 1018 0
 515 0018 8B07     		lsls	r3, r1, #30
 516 001a 01D5     		bpl	.L42
1019:Generated_Source\PSoC4/ADC_1.c **** 
 517              		.loc 1 1019 0
 518 001c 002A     		cmp	r2, #0
 519 001e F4D1     		bne	.L43
 520              	.L42:
1021:Generated_Source\PSoC4/ADC_1.c ****         {
 521              		.loc 1 1021 0
 522 0020 0028     		cmp	r0, #0
 523 0022 04D0     		beq	.L41
1024:Generated_Source\PSoC4/ADC_1.c ****         }
 524              		.loc 1 1024 0
 525 0024 0122     		movs	r2, #1
 526              	.LVL33:
 527 0026 034B     		ldr	r3, .L45+4
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 30


 528 0028 1A60     		str	r2, [r3]
 529 002a 00E0     		b	.L41
 530              	.LVL34:
 531              	.L44:
1009:Generated_Source\PSoC4/ADC_1.c ****     uint32 wdt = 0x3FFFFFFuL; /* Watchdog timer for blocking while loop */
 532              		.loc 1 1009 0
 533 002c 0020     		movs	r0, #0
 534              	.LVL35:
 535              	.L41:
1029:Generated_Source\PSoC4/ADC_1.c **** 
 536              		.loc 1 1029 0
 537              		@ sp needed
 538 002e 7047     		bx	lr
 539              	.L46:
 540              		.align	2
 541              	.L45:
 542 0030 FFFFFF03 		.word	67108863
 543 0034 10023A40 		.word	1077543440
 544              		.cfi_endproc
 545              	.LFE12:
 546              		.size	ADC_1_IsEndConversion, .-ADC_1_IsEndConversion
 547              		.section	.text.ADC_1_GetResult16,"ax",%progbits
 548              		.align	2
 549              		.global	ADC_1_GetResult16
 550              		.code	16
 551              		.thumb_func
 552              		.type	ADC_1_GetResult16, %function
 553              	ADC_1_GetResult16:
 554              	.LFB14:
1071:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1072:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_GetResult16
1073:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1074:Generated_Source\PSoC4/ADC_1.c **** *
1075:Generated_Source\PSoC4/ADC_1.c **** * \brief Gets the data available in the channel result data register
1076:Generated_Source\PSoC4/ADC_1.c **** *
1077:Generated_Source\PSoC4/ADC_1.c **** * \param chan The ADC_1 channel to read the result from. The first
1078:Generated_Source\PSoC4/ADC_1.c **** * channel is 0 and the injection channel if enabled is the number of valid
1079:Generated_Source\PSoC4/ADC_1.c **** * channels.
1080:Generated_Source\PSoC4/ADC_1.c **** *
1081:Generated_Source\PSoC4/ADC_1.c **** * \return Returns converted data as a signed 16-bit integer.
1082:Generated_Source\PSoC4/ADC_1.c **** *
1083:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1084:Generated_Source\PSoC4/ADC_1.c **** *
1085:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1086:Generated_Source\PSoC4/ADC_1.c **** int16 ADC_1_GetResult16(uint32 chan)
1087:Generated_Source\PSoC4/ADC_1.c **** {
 555              		.loc 1 1087 0
 556              		.cfi_startproc
 557              		@ args = 0, pretend = 0, frame = 0
 558              		@ frame_needed = 0, uses_anonymous_args = 0
 559              	.LVL36:
 560 0000 10B5     		push	{r4, lr}
 561              		.cfi_def_cfa_offset 8
 562              		.cfi_offset 4, -8
 563              		.cfi_offset 14, -4
 564 0002 0400     		movs	r4, r0
1088:Generated_Source\PSoC4/ADC_1.c ****     uint32 adcResult;
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 31


1089:Generated_Source\PSoC4/ADC_1.c **** 
1090:Generated_Source\PSoC4/ADC_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1091:Generated_Source\PSoC4/ADC_1.c ****     CYASSERT(chan < ADC_1_allConfigs[ADC_1_currentConfig].numChannels);
 565              		.loc 1 1091 0
 566 0004 104B     		ldr	r3, .L51
 567 0006 1A68     		ldr	r2, [r3]
 568 0008 D300     		lsls	r3, r2, #3
 569 000a 9A1A     		subs	r2, r3, r2
 570 000c D300     		lsls	r3, r2, #3
 571 000e 0F4A     		ldr	r2, .L51+4
 572 0010 D318     		adds	r3, r2, r3
 573 0012 5B68     		ldr	r3, [r3, #4]
 574 0014 8342     		cmp	r3, r0
 575 0016 02D8     		bhi	.L48
 576              		.loc 1 1091 0 is_stmt 0 discriminator 1
 577 0018 0020     		movs	r0, #0
 578              	.LVL37:
 579 001a FFF7FEFF 		bl	CyHalt
 580              	.LVL38:
 581              	.L48:
1092:Generated_Source\PSoC4/ADC_1.c **** 
1093:Generated_Source\PSoC4/ADC_1.c ****     if(ADC_1_allConfigs[ADC_1_currentConfig].numChannels > chan)
 582              		.loc 1 1093 0 is_stmt 1
 583 001e 0A4B     		ldr	r3, .L51
 584 0020 1A68     		ldr	r2, [r3]
 585 0022 D300     		lsls	r3, r2, #3
 586 0024 9A1A     		subs	r2, r3, r2
 587 0026 D300     		lsls	r3, r2, #3
 588 0028 084A     		ldr	r2, .L51+4
 589 002a D318     		adds	r3, r2, r3
 590 002c 5B68     		ldr	r3, [r3, #4]
 591 002e 9C42     		cmp	r4, r3
 592 0030 07D2     		bcs	.L50
1094:Generated_Source\PSoC4/ADC_1.c ****     {
1095:Generated_Source\PSoC4/ADC_1.c ****         adcResult = CY_GET_REG32((reg32 *)(ADC_1_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 593              		.loc 1 1095 0
 594 0032 A400     		lsls	r4, r4, #2
 595              	.LVL39:
 596 0034 064B     		ldr	r3, .L51+8
 597 0036 9C46     		mov	ip, r3
 598 0038 6444     		add	r4, r4, ip
 599 003a 2068     		ldr	r0, [r4]
 600 003c 0004     		lsls	r0, r0, #16
 601 003e 000C     		lsrs	r0, r0, #16
 602              	.LVL40:
 603 0040 00E0     		b	.L49
 604              	.LVL41:
 605              	.L50:
1096:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_RESULT_MASK;
1097:Generated_Source\PSoC4/ADC_1.c ****     }
1098:Generated_Source\PSoC4/ADC_1.c ****     else
1099:Generated_Source\PSoC4/ADC_1.c ****     {
1100:Generated_Source\PSoC4/ADC_1.c ****         adcResult = 0u;
 606              		.loc 1 1100 0
 607 0042 0020     		movs	r0, #0
 608              	.LVL42:
 609              	.L49:
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 32


1101:Generated_Source\PSoC4/ADC_1.c ****     }
1102:Generated_Source\PSoC4/ADC_1.c **** 
1103:Generated_Source\PSoC4/ADC_1.c ****     return (int16) adcResult;
 610              		.loc 1 1103 0
 611 0044 00B2     		sxth	r0, r0
 612              	.LVL43:
1104:Generated_Source\PSoC4/ADC_1.c **** }
 613              		.loc 1 1104 0
 614              		@ sp needed
 615 0046 10BD     		pop	{r4, pc}
 616              	.L52:
 617              		.align	2
 618              	.L51:
 619 0048 00000000 		.word	.LANCHOR0
 620 004c 00000000 		.word	ADC_1_allConfigs
 621 0050 80013A40 		.word	1077543296
 622              		.cfi_endproc
 623              	.LFE14:
 624              		.size	ADC_1_GetResult16, .-ADC_1_GetResult16
 625              		.section	.text.ADC_1_GetResult32,"ax",%progbits
 626              		.align	2
 627              		.global	ADC_1_GetResult32
 628              		.code	16
 629              		.thumb_func
 630              		.type	ADC_1_GetResult32, %function
 631              	ADC_1_GetResult32:
 632              	.LFB15:
1105:Generated_Source\PSoC4/ADC_1.c **** 
1106:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1107:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_GetResult32
1108:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1109:Generated_Source\PSoC4/ADC_1.c **** *
1110:Generated_Source\PSoC4/ADC_1.c **** * \brief Gets the data available in the channel result data register.
1111:Generated_Source\PSoC4/ADC_1.c **** *
1112:Generated_Source\PSoC4/ADC_1.c **** * \param chan The ADC_1 channel to read the result from. The first
1113:Generated_Source\PSoC4/ADC_1.c **** * channel is 0 and the injection channel if enabled is the number of valid
1114:Generated_Source\PSoC4/ADC_1.c **** * channels.
1115:Generated_Source\PSoC4/ADC_1.c **** *
1116:Generated_Source\PSoC4/ADC_1.c **** * \return Returns converted data as a signed 32-bit integer.
1117:Generated_Source\PSoC4/ADC_1.c **** *
1118:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1119:Generated_Source\PSoC4/ADC_1.c **** *
1120:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1121:Generated_Source\PSoC4/ADC_1.c **** int32 ADC_1_GetResult32(uint32 chan)
1122:Generated_Source\PSoC4/ADC_1.c **** {
 633              		.loc 1 1122 0
 634              		.cfi_startproc
 635              		@ args = 0, pretend = 0, frame = 0
 636              		@ frame_needed = 0, uses_anonymous_args = 0
 637              	.LVL44:
 638 0000 70B5     		push	{r4, r5, r6, lr}
 639              		.cfi_def_cfa_offset 16
 640              		.cfi_offset 4, -16
 641              		.cfi_offset 5, -12
 642              		.cfi_offset 6, -8
 643              		.cfi_offset 14, -4
 644 0002 0500     		movs	r5, r0
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 33


1123:Generated_Source\PSoC4/ADC_1.c ****     uint32 adcResult;
1124:Generated_Source\PSoC4/ADC_1.c ****     int16 adcResult16;
1125:Generated_Source\PSoC4/ADC_1.c ****     int32 finalResult;
1126:Generated_Source\PSoC4/ADC_1.c **** 
1127:Generated_Source\PSoC4/ADC_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1128:Generated_Source\PSoC4/ADC_1.c ****     CYASSERT(chan < ADC_1_allConfigs[ADC_1_currentConfig].numChannels);
 645              		.loc 1 1128 0
 646 0004 144B     		ldr	r3, .L59
 647 0006 1A68     		ldr	r2, [r3]
 648 0008 D300     		lsls	r3, r2, #3
 649 000a 9A1A     		subs	r2, r3, r2
 650 000c D300     		lsls	r3, r2, #3
 651 000e 134A     		ldr	r2, .L59+4
 652 0010 D318     		adds	r3, r2, r3
 653 0012 5B68     		ldr	r3, [r3, #4]
 654 0014 8342     		cmp	r3, r0
 655 0016 02D8     		bhi	.L54
 656              		.loc 1 1128 0 is_stmt 0 discriminator 1
 657 0018 0020     		movs	r0, #0
 658              	.LVL45:
 659 001a FFF7FEFF 		bl	CyHalt
 660              	.LVL46:
 661              	.L54:
1129:Generated_Source\PSoC4/ADC_1.c **** 
1130:Generated_Source\PSoC4/ADC_1.c ****     if(ADC_1_allConfigs[ADC_1_currentConfig].numChannels > chan)
 662              		.loc 1 1130 0 is_stmt 1
 663 001e 0E4B     		ldr	r3, .L59
 664 0020 1A68     		ldr	r2, [r3]
 665 0022 D300     		lsls	r3, r2, #3
 666 0024 9A1A     		subs	r2, r3, r2
 667 0026 D300     		lsls	r3, r2, #3
 668 0028 0C4A     		ldr	r2, .L59+4
 669 002a D318     		adds	r3, r2, r3
 670 002c 5B68     		ldr	r3, [r3, #4]
 671 002e 9D42     		cmp	r5, r3
 672 0030 07D2     		bcs	.L58
1131:Generated_Source\PSoC4/ADC_1.c ****     {
1132:Generated_Source\PSoC4/ADC_1.c ****         adcResult = CY_GET_REG32((reg32 *)(ADC_1_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 673              		.loc 1 1132 0
 674 0032 AB00     		lsls	r3, r5, #2
 675 0034 0A4A     		ldr	r2, .L59+8
 676 0036 9446     		mov	ip, r2
 677 0038 6344     		add	r3, r3, ip
 678 003a 1C68     		ldr	r4, [r3]
 679 003c 2404     		lsls	r4, r4, #16
 680 003e 240C     		lsrs	r4, r4, #16
 681              	.LVL47:
 682 0040 00E0     		b	.L55
 683              	.LVL48:
 684              	.L58:
1133:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_RESULT_MASK;
1134:Generated_Source\PSoC4/ADC_1.c ****     }
1135:Generated_Source\PSoC4/ADC_1.c ****     else
1136:Generated_Source\PSoC4/ADC_1.c ****     {
1137:Generated_Source\PSoC4/ADC_1.c ****         adcResult = 0u;
 685              		.loc 1 1137 0
 686 0042 0024     		movs	r4, #0
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 34


 687              	.L55:
 688              	.LVL49:
1138:Generated_Source\PSoC4/ADC_1.c ****     }
1139:Generated_Source\PSoC4/ADC_1.c ****     /* Sign extend if channel is signed format */
1140:Generated_Source\PSoC4/ADC_1.c ****     if(ADC_1_IsChannelSigned(chan) == 1)
 689              		.loc 1 1140 0
 690 0044 2800     		movs	r0, r5
 691 0046 FFF7FEFF 		bl	ADC_1_IsChannelSigned
 692              	.LVL50:
 693 004a 0128     		cmp	r0, #1
 694 004c 01D1     		bne	.L56
 695              	.LVL51:
1141:Generated_Source\PSoC4/ADC_1.c ****     {
1142:Generated_Source\PSoC4/ADC_1.c ****         adcResult16 = (int16) adcResult;
1143:Generated_Source\PSoC4/ADC_1.c ****         finalResult = (int32) adcResult16;
 696              		.loc 1 1143 0
 697 004e 20B2     		sxth	r0, r4
 698              	.LVL52:
 699 0050 00E0     		b	.L57
 700              	.LVL53:
 701              	.L56:
1144:Generated_Source\PSoC4/ADC_1.c ****     }
1145:Generated_Source\PSoC4/ADC_1.c ****     else
1146:Generated_Source\PSoC4/ADC_1.c ****     {
1147:Generated_Source\PSoC4/ADC_1.c ****         finalResult = (int32) adcResult;
 702              		.loc 1 1147 0
 703 0052 2000     		movs	r0, r4
 704              	.LVL54:
 705              	.L57:
1148:Generated_Source\PSoC4/ADC_1.c ****     }
1149:Generated_Source\PSoC4/ADC_1.c ****     return finalResult;
1150:Generated_Source\PSoC4/ADC_1.c **** }
 706              		.loc 1 1150 0
 707              		@ sp needed
 708              	.LVL55:
 709              	.LVL56:
 710 0054 70BD     		pop	{r4, r5, r6, pc}
 711              	.L60:
 712 0056 C046     		.align	2
 713              	.L59:
 714 0058 00000000 		.word	.LANCHOR0
 715 005c 00000000 		.word	ADC_1_allConfigs
 716 0060 80013A40 		.word	1077543296
 717              		.cfi_endproc
 718              	.LFE15:
 719              		.size	ADC_1_GetResult32, .-ADC_1_GetResult32
 720              		.section	.text.ADC_1_SetLowLimit,"ax",%progbits
 721              		.align	2
 722              		.global	ADC_1_SetLowLimit
 723              		.code	16
 724              		.thumb_func
 725              		.type	ADC_1_SetLowLimit, %function
 726              	ADC_1_SetLowLimit:
 727              	.LFB16:
1151:Generated_Source\PSoC4/ADC_1.c **** 
1152:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1153:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetLowLimit
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 35


1154:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1155:Generated_Source\PSoC4/ADC_1.c **** *
1156:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets the low limit parameter for a limit condition.
1157:Generated_Source\PSoC4/ADC_1.c **** *
1158:Generated_Source\PSoC4/ADC_1.c **** * \param lowLimit The low limit for a limit condition.
1159:Generated_Source\PSoC4/ADC_1.c **** *
1160:Generated_Source\PSoC4/ADC_1.c **** * \return None
1161:Generated_Source\PSoC4/ADC_1.c **** *
1162:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1163:Generated_Source\PSoC4/ADC_1.c **** *
1164:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1165:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetLowLimit(uint32 lowLimit)
1166:Generated_Source\PSoC4/ADC_1.c **** {
 728              		.loc 1 1166 0
 729              		.cfi_startproc
 730              		@ args = 0, pretend = 0, frame = 0
 731              		@ frame_needed = 0, uses_anonymous_args = 0
 732              		@ link register save eliminated.
 733              	.LVL57:
1167:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_THRES_REG &= ~(uint32)(ADC_1_SAR_RANGE_THRES_RANGE_LOW_MSK);
 734              		.loc 1 1167 0
 735 0000 054A     		ldr	r2, .L62
 736 0002 1368     		ldr	r3, [r2]
 737 0004 1B0C     		lsrs	r3, r3, #16
 738 0006 1B04     		lsls	r3, r3, #16
 739 0008 1360     		str	r3, [r2]
1168:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_THRES_REG |= lowLimit & ADC_1_SAR_RANGE_THRES_RANGE_LOW_MSK;
 740              		.loc 1 1168 0
 741 000a 1368     		ldr	r3, [r2]
 742 000c 0004     		lsls	r0, r0, #16
 743              	.LVL58:
 744 000e 000C     		lsrs	r0, r0, #16
 745 0010 1843     		orrs	r0, r3
 746 0012 1060     		str	r0, [r2]
1169:Generated_Source\PSoC4/ADC_1.c ****     return;
1170:Generated_Source\PSoC4/ADC_1.c **** }
 747              		.loc 1 1170 0
 748              		@ sp needed
 749 0014 7047     		bx	lr
 750              	.L63:
 751 0016 C046     		.align	2
 752              	.L62:
 753 0018 18003A40 		.word	1077542936
 754              		.cfi_endproc
 755              	.LFE16:
 756              		.size	ADC_1_SetLowLimit, .-ADC_1_SetLowLimit
 757              		.section	.text.ADC_1_SetHighLimit,"ax",%progbits
 758              		.align	2
 759              		.global	ADC_1_SetHighLimit
 760              		.code	16
 761              		.thumb_func
 762              		.type	ADC_1_SetHighLimit, %function
 763              	ADC_1_SetHighLimit:
 764              	.LFB17:
1171:Generated_Source\PSoC4/ADC_1.c **** 
1172:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1173:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetHighLimit
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 36


1174:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1175:Generated_Source\PSoC4/ADC_1.c **** *
1176:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets the high limit parameter for a limit condition.
1177:Generated_Source\PSoC4/ADC_1.c **** *
1178:Generated_Source\PSoC4/ADC_1.c **** * \param highLimit The high limit for a limit condition.
1179:Generated_Source\PSoC4/ADC_1.c **** *
1180:Generated_Source\PSoC4/ADC_1.c **** * \return None
1181:Generated_Source\PSoC4/ADC_1.c **** *
1182:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1183:Generated_Source\PSoC4/ADC_1.c **** *
1184:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1185:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetHighLimit(uint32 highLimit)
1186:Generated_Source\PSoC4/ADC_1.c **** {
 765              		.loc 1 1186 0
 766              		.cfi_startproc
 767              		@ args = 0, pretend = 0, frame = 0
 768              		@ frame_needed = 0, uses_anonymous_args = 0
 769              		@ link register save eliminated.
 770              	.LVL59:
1187:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_THRES_REG &= ~(uint32)(ADC_1_SAR_RANGE_THRES_RANGE_HIGH_MSK);
 771              		.loc 1 1187 0
 772 0000 044A     		ldr	r2, .L65
 773 0002 1368     		ldr	r3, [r2]
 774 0004 1B04     		lsls	r3, r3, #16
 775 0006 1B0C     		lsrs	r3, r3, #16
 776 0008 1360     		str	r3, [r2]
1188:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_1_SAR_RANGE_THRES_RANGE_HIGH_SHFT);
 777              		.loc 1 1188 0
 778 000a 1368     		ldr	r3, [r2]
 779 000c 0004     		lsls	r0, r0, #16
 780              	.LVL60:
 781 000e 1843     		orrs	r0, r3
 782 0010 1060     		str	r0, [r2]
1189:Generated_Source\PSoC4/ADC_1.c ****     return;
1190:Generated_Source\PSoC4/ADC_1.c **** }
 783              		.loc 1 1190 0
 784              		@ sp needed
 785 0012 7047     		bx	lr
 786              	.L66:
 787              		.align	2
 788              	.L65:
 789 0014 18003A40 		.word	1077542936
 790              		.cfi_endproc
 791              	.LFE17:
 792              		.size	ADC_1_SetHighLimit, .-ADC_1_SetHighLimit
 793              		.section	.text.ADC_1_SetLimitMask,"ax",%progbits
 794              		.align	2
 795              		.global	ADC_1_SetLimitMask
 796              		.code	16
 797              		.thumb_func
 798              		.type	ADC_1_SetLimitMask, %function
 799              	ADC_1_SetLimitMask:
 800              	.LFB18:
1191:Generated_Source\PSoC4/ADC_1.c **** 
1192:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1193:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetLimitMask
1194:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 37


1195:Generated_Source\PSoC4/ADC_1.c **** *
1196:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets the channel limit condition mask.
1197:Generated_Source\PSoC4/ADC_1.c **** *
1198:Generated_Source\PSoC4/ADC_1.c **** * \param limitMask Sets which channels that may cause a limit condition interrupt.
1199:Generated_Source\PSoC4/ADC_1.c **** * Setting bits for channels that do not exist will have no effect. For example,
1200:Generated_Source\PSoC4/ADC_1.c **** * if only 6  channels were enabled, setting a mask of 0x0103 would only enable
1201:Generated_Source\PSoC4/ADC_1.c **** * the last two channels (0 and 1).
1202:Generated_Source\PSoC4/ADC_1.c **** *
1203:Generated_Source\PSoC4/ADC_1.c **** * \return None
1204:Generated_Source\PSoC4/ADC_1.c **** *
1205:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1206:Generated_Source\PSoC4/ADC_1.c **** *
1207:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1208:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetLimitMask(uint32 limitMask)
1209:Generated_Source\PSoC4/ADC_1.c **** {
 801              		.loc 1 1209 0
 802              		.cfi_startproc
 803              		@ args = 0, pretend = 0, frame = 0
 804              		@ frame_needed = 0, uses_anonymous_args = 0
 805              		@ link register save eliminated.
 806              	.LVL61:
1210:Generated_Source\PSoC4/ADC_1.c ****     uint32 chanCount = ADC_1_allConfigs[ADC_1_currentConfig].numChannels;
 807              		.loc 1 1210 0
 808 0000 074B     		ldr	r3, .L68
 809 0002 1A68     		ldr	r2, [r3]
 810 0004 D300     		lsls	r3, r2, #3
 811 0006 9A1A     		subs	r2, r3, r2
 812 0008 D300     		lsls	r3, r2, #3
 813 000a 064A     		ldr	r2, .L68+4
 814 000c D318     		adds	r3, r2, r3
 815 000e 5A68     		ldr	r2, [r3, #4]
 816              	.LVL62:
1211:Generated_Source\PSoC4/ADC_1.c ****     limitMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 817              		.loc 1 1211 0
 818 0010 0123     		movs	r3, #1
 819 0012 9340     		lsls	r3, r3, r2
 820 0014 013B     		subs	r3, r3, #1
 821 0016 1840     		ands	r0, r3
 822              	.LVL63:
1212:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_INTR_MASK_REG = limitMask;
 823              		.loc 1 1212 0
 824 0018 034B     		ldr	r3, .L68+8
 825 001a 1860     		str	r0, [r3]
1213:Generated_Source\PSoC4/ADC_1.c ****     return;
1214:Generated_Source\PSoC4/ADC_1.c **** }
 826              		.loc 1 1214 0
 827              		@ sp needed
 828 001c 7047     		bx	lr
 829              	.L69:
 830 001e C046     		.align	2
 831              	.L68:
 832 0020 00000000 		.word	.LANCHOR0
 833 0024 00000000 		.word	ADC_1_allConfigs
 834 0028 38023A40 		.word	1077543480
 835              		.cfi_endproc
 836              	.LFE18:
 837              		.size	ADC_1_SetLimitMask, .-ADC_1_SetLimitMask
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 38


 838              		.section	.text.ADC_1_SetSatMask,"ax",%progbits
 839              		.align	2
 840              		.global	ADC_1_SetSatMask
 841              		.code	16
 842              		.thumb_func
 843              		.type	ADC_1_SetSatMask, %function
 844              	ADC_1_SetSatMask:
 845              	.LFB19:
1215:Generated_Source\PSoC4/ADC_1.c **** 
1216:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1217:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetSatMask
1218:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1219:Generated_Source\PSoC4/ADC_1.c **** *
1220:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets the channel saturation event mask.
1221:Generated_Source\PSoC4/ADC_1.c **** *
1222:Generated_Source\PSoC4/ADC_1.c **** * \param satMask Sets which channels that may cause a saturation event interrupt.
1223:Generated_Source\PSoC4/ADC_1.c **** * Setting bits for channels that do not exist will have no effect. For example,
1224:Generated_Source\PSoC4/ADC_1.c **** * if only 8 channels were enabled, setting a mask of 0x01C0 would only enable two
1225:Generated_Source\PSoC4/ADC_1.c **** * channels (6 and 7).
1226:Generated_Source\PSoC4/ADC_1.c **** *
1227:Generated_Source\PSoC4/ADC_1.c **** * \return None
1228:Generated_Source\PSoC4/ADC_1.c **** *
1229:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1230:Generated_Source\PSoC4/ADC_1.c **** *
1231:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1232:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetSatMask(uint32 satMask)
1233:Generated_Source\PSoC4/ADC_1.c **** {
 846              		.loc 1 1233 0
 847              		.cfi_startproc
 848              		@ args = 0, pretend = 0, frame = 0
 849              		@ frame_needed = 0, uses_anonymous_args = 0
 850              		@ link register save eliminated.
 851              	.LVL64:
1234:Generated_Source\PSoC4/ADC_1.c ****     uint32 chanCount = ADC_1_allConfigs[ADC_1_currentConfig].numChannels;
 852              		.loc 1 1234 0
 853 0000 074B     		ldr	r3, .L71
 854 0002 1A68     		ldr	r2, [r3]
 855 0004 D300     		lsls	r3, r2, #3
 856 0006 9A1A     		subs	r2, r3, r2
 857 0008 D300     		lsls	r3, r2, #3
 858 000a 064A     		ldr	r2, .L71+4
 859 000c D318     		adds	r3, r2, r3
 860 000e 5A68     		ldr	r2, [r3, #4]
 861              	.LVL65:
1235:Generated_Source\PSoC4/ADC_1.c ****     satMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 862              		.loc 1 1235 0
 863 0010 0123     		movs	r3, #1
 864 0012 9340     		lsls	r3, r3, r2
 865 0014 013B     		subs	r3, r3, #1
 866 0016 1840     		ands	r0, r3
 867              	.LVL66:
1236:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SATURATE_INTR_MASK_REG = satMask;
 868              		.loc 1 1236 0
 869 0018 034B     		ldr	r3, .L71+8
 870 001a 1860     		str	r0, [r3]
1237:Generated_Source\PSoC4/ADC_1.c ****     return;
1238:Generated_Source\PSoC4/ADC_1.c **** }
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 39


 871              		.loc 1 1238 0
 872              		@ sp needed
 873 001c 7047     		bx	lr
 874              	.L72:
 875 001e C046     		.align	2
 876              	.L71:
 877 0020 00000000 		.word	.LANCHOR0
 878 0024 00000000 		.word	ADC_1_allConfigs
 879 0028 28023A40 		.word	1077543464
 880              		.cfi_endproc
 881              	.LFE19:
 882              		.size	ADC_1_SetSatMask, .-ADC_1_SetSatMask
 883              		.section	.text.ADC_1_SetOffset,"ax",%progbits
 884              		.align	2
 885              		.global	ADC_1_SetOffset
 886              		.code	16
 887              		.thumb_func
 888              		.type	ADC_1_SetOffset, %function
 889              	ADC_1_SetOffset:
 890              	.LFB20:
1239:Generated_Source\PSoC4/ADC_1.c **** 
1240:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1241:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetOffset
1242:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1243:Generated_Source\PSoC4/ADC_1.c **** *
1244:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets the ADC offset that is used by the functions ADC_1_CountsTo_uVolts,
1245:Generated_Source\PSoC4/ADC_1.c **** * ADC_1_CountsTo_mVolts, and ADC_1_CountsTo_Volts.
1246:Generated_Source\PSoC4/ADC_1.c **** *
1247:Generated_Source\PSoC4/ADC_1.c **** * Offset is applied to counts before unit scaling and gain.  All CountsTo_[mV, uV, V]olts()
1248:Generated_Source\PSoC4/ADC_1.c **** * functions use the following equation:
1249:Generated_Source\PSoC4/ADC_1.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1250:Generated_Source\PSoC4/ADC_1.c **** * See CountsTo_Volts() for more about this formula.
1251:Generated_Source\PSoC4/ADC_1.c **** *
1252:Generated_Source\PSoC4/ADC_1.c **** * To set channel 0's offset based on known V_offset_mV, use:
1253:Generated_Source\PSoC4/ADC_1.c **** *     ADC_1_SetOffset(0uL, -1 * V_offset_mV * (1uL << (Resolution - 1)) / V_ref_mV);
1254:Generated_Source\PSoC4/ADC_1.c **** *
1255:Generated_Source\PSoC4/ADC_1.c **** * \param chan ADC_1 channel number.
1256:Generated_Source\PSoC4/ADC_1.c **** *
1257:Generated_Source\PSoC4/ADC_1.c **** * \param offset This value is a measured value when the inputs are shorted or
1258:Generated_Source\PSoC4/ADC_1.c **** * connected to the same input voltage.
1259:Generated_Source\PSoC4/ADC_1.c **** *
1260:Generated_Source\PSoC4/ADC_1.c **** * \return None
1261:Generated_Source\PSoC4/ADC_1.c **** *
1262:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1263:Generated_Source\PSoC4/ADC_1.c **** *
1264:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1265:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetOffset(uint32 chan, int16 offset)
1266:Generated_Source\PSoC4/ADC_1.c **** {
 891              		.loc 1 1266 0
 892              		.cfi_startproc
 893              		@ args = 0, pretend = 0, frame = 0
 894              		@ frame_needed = 0, uses_anonymous_args = 0
 895              	.LVL67:
 896 0000 70B5     		push	{r4, r5, r6, lr}
 897              		.cfi_def_cfa_offset 16
 898              		.cfi_offset 4, -16
 899              		.cfi_offset 5, -12
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 40


 900              		.cfi_offset 6, -8
 901              		.cfi_offset 14, -4
 902 0002 0500     		movs	r5, r0
 903 0004 0C00     		movs	r4, r1
1267:Generated_Source\PSoC4/ADC_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1268:Generated_Source\PSoC4/ADC_1.c ****     CYASSERT(chan < ADC_1_allConfigs[ADC_1_currentConfig].numChannels);
 904              		.loc 1 1268 0
 905 0006 0C4B     		ldr	r3, .L75
 906 0008 1A68     		ldr	r2, [r3]
 907 000a D300     		lsls	r3, r2, #3
 908 000c 9A1A     		subs	r2, r3, r2
 909 000e D300     		lsls	r3, r2, #3
 910 0010 0A4A     		ldr	r2, .L75+4
 911 0012 D318     		adds	r3, r2, r3
 912 0014 5B68     		ldr	r3, [r3, #4]
 913 0016 8342     		cmp	r3, r0
 914 0018 02D8     		bhi	.L74
 915              		.loc 1 1268 0 is_stmt 0 discriminator 1
 916 001a 0020     		movs	r0, #0
 917              	.LVL68:
 918 001c FFF7FEFF 		bl	CyHalt
 919              	.LVL69:
 920              	.L74:
1269:Generated_Source\PSoC4/ADC_1.c **** 
1270:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_offset[ADC_1_allConfigs[ADC_1_currentConfig].channelBase + chan] = offset;
 921              		.loc 1 1270 0 is_stmt 1
 922 0020 054B     		ldr	r3, .L75
 923 0022 1A68     		ldr	r2, [r3]
 924 0024 D300     		lsls	r3, r2, #3
 925 0026 9B1A     		subs	r3, r3, r2
 926 0028 DA00     		lsls	r2, r3, #3
 927 002a 044B     		ldr	r3, .L75+4
 928 002c D058     		ldr	r0, [r2, r3]
 929 002e 2818     		adds	r0, r5, r0
 930 0030 4000     		lsls	r0, r0, #1
 931 0032 034B     		ldr	r3, .L75+8
 932 0034 C452     		strh	r4, [r0, r3]
1271:Generated_Source\PSoC4/ADC_1.c ****     return;
1272:Generated_Source\PSoC4/ADC_1.c **** }
 933              		.loc 1 1272 0
 934              		@ sp needed
 935              	.LVL70:
 936 0036 70BD     		pop	{r4, r5, r6, pc}
 937              	.L76:
 938              		.align	2
 939              	.L75:
 940 0038 00000000 		.word	.LANCHOR0
 941 003c 00000000 		.word	ADC_1_allConfigs
 942 0040 00000000 		.word	ADC_1_offset
 943              		.cfi_endproc
 944              	.LFE20:
 945              		.size	ADC_1_SetOffset, .-ADC_1_SetOffset
 946              		.section	.text.ADC_1_SetGain,"ax",%progbits
 947              		.align	2
 948              		.global	ADC_1_SetGain
 949              		.code	16
 950              		.thumb_func
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 41


 951              		.type	ADC_1_SetGain, %function
 952              	ADC_1_SetGain:
 953              	.LFB21:
1273:Generated_Source\PSoC4/ADC_1.c **** 
1274:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1275:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetGain
1276:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1277:Generated_Source\PSoC4/ADC_1.c **** *
1278:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets the ADC_1 gain in counts per 10 volt for the voltage
1279:Generated_Source\PSoC4/ADC_1.c **** * conversion functions. This value is set by default by the reference and
1280:Generated_Source\PSoC4/ADC_1.c **** * input range settings. Gain is applied after offset and unit scaling.  All
1281:Generated_Source\PSoC4/ADC_1.c **** * CountsTo_[mV, uV, V]olts() functions use the following equation:
1282:Generated_Source\PSoC4/ADC_1.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1283:Generated_Source\PSoC4/ADC_1.c **** * See CountsTo_Volts() for more about this formula.
1284:Generated_Source\PSoC4/ADC_1.c **** *
1285:Generated_Source\PSoC4/ADC_1.c **** * To set channel 0's gain based on known V_ref_mV, use:
1286:Generated_Source\PSoC4/ADC_1.c **** *     ADC_1_SetGain(0uL, 10000 * (1uL << (Resolution - 1)) / V_ref_mV);
1287:Generated_Source\PSoC4/ADC_1.c **** *
1288:Generated_Source\PSoC4/ADC_1.c **** * \param chan ADC_1 channel number.
1289:Generated_Source\PSoC4/ADC_1.c **** *
1290:Generated_Source\PSoC4/ADC_1.c **** * \param adcGain ADC_1 gain in counts per 10 volt.
1291:Generated_Source\PSoC4/ADC_1.c **** *
1292:Generated_Source\PSoC4/ADC_1.c **** * \return None
1293:Generated_Source\PSoC4/ADC_1.c **** *
1294:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1295:Generated_Source\PSoC4/ADC_1.c **** *
1296:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1297:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetGain(uint32 chan, int32 adcGain)
1298:Generated_Source\PSoC4/ADC_1.c **** {
 954              		.loc 1 1298 0
 955              		.cfi_startproc
 956              		@ args = 0, pretend = 0, frame = 0
 957              		@ frame_needed = 0, uses_anonymous_args = 0
 958              	.LVL71:
 959 0000 70B5     		push	{r4, r5, r6, lr}
 960              		.cfi_def_cfa_offset 16
 961              		.cfi_offset 4, -16
 962              		.cfi_offset 5, -12
 963              		.cfi_offset 6, -8
 964              		.cfi_offset 14, -4
 965 0002 0500     		movs	r5, r0
 966 0004 0C00     		movs	r4, r1
1299:Generated_Source\PSoC4/ADC_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1300:Generated_Source\PSoC4/ADC_1.c ****     CYASSERT(chan < ADC_1_allConfigs[ADC_1_currentConfig].numChannels);
 967              		.loc 1 1300 0
 968 0006 0C4B     		ldr	r3, .L79
 969 0008 1A68     		ldr	r2, [r3]
 970 000a D300     		lsls	r3, r2, #3
 971 000c 9A1A     		subs	r2, r3, r2
 972 000e D300     		lsls	r3, r2, #3
 973 0010 0A4A     		ldr	r2, .L79+4
 974 0012 D318     		adds	r3, r2, r3
 975 0014 5B68     		ldr	r3, [r3, #4]
 976 0016 8342     		cmp	r3, r0
 977 0018 02D8     		bhi	.L78
 978              		.loc 1 1300 0 is_stmt 0 discriminator 1
 979 001a 0020     		movs	r0, #0
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 42


 980              	.LVL72:
 981 001c FFF7FEFF 		bl	CyHalt
 982              	.LVL73:
 983              	.L78:
1301:Generated_Source\PSoC4/ADC_1.c **** 
1302:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_countsPer10Volt[ADC_1_allConfigs[ADC_1_currentConfig].channelBase + chan]
 984              		.loc 1 1302 0 is_stmt 1
 985 0020 054B     		ldr	r3, .L79
 986 0022 1A68     		ldr	r2, [r3]
 987 0024 D300     		lsls	r3, r2, #3
 988 0026 9B1A     		subs	r3, r3, r2
 989 0028 DA00     		lsls	r2, r3, #3
 990 002a 044B     		ldr	r3, .L79+4
 991 002c D058     		ldr	r0, [r2, r3]
 992 002e 2818     		adds	r0, r5, r0
1303:Generated_Source\PSoC4/ADC_1.c ****     = adcGain;
 993              		.loc 1 1303 0
 994 0030 8000     		lsls	r0, r0, #2
 995 0032 034B     		ldr	r3, .L79+8
 996 0034 C450     		str	r4, [r0, r3]
1304:Generated_Source\PSoC4/ADC_1.c ****     return;
1305:Generated_Source\PSoC4/ADC_1.c **** }
 997              		.loc 1 1305 0
 998              		@ sp needed
 999              	.LVL74:
 1000              	.LVL75:
 1001 0036 70BD     		pop	{r4, r5, r6, pc}
 1002              	.L80:
 1003              		.align	2
 1004              	.L79:
 1005 0038 00000000 		.word	.LANCHOR0
 1006 003c 00000000 		.word	ADC_1_allConfigs
 1007 0040 00000000 		.word	ADC_1_countsPer10Volt
 1008              		.cfi_endproc
 1009              	.LFE21:
 1010              		.size	ADC_1_SetGain, .-ADC_1_SetGain
 1011              		.global	__aeabi_uidiv
 1012              		.global	__aeabi_idiv
 1013              		.section	.text.ADC_1_RawCounts2Counts,"ax",%progbits
 1014              		.align	2
 1015              		.global	ADC_1_RawCounts2Counts
 1016              		.code	16
 1017              		.thumb_func
 1018              		.type	ADC_1_RawCounts2Counts, %function
 1019              	ADC_1_RawCounts2Counts:
 1020              	.LFB22:
1306:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1307:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_RawCounts2Counts
1308:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1309:Generated_Source\PSoC4/ADC_1.c **** *
1310:Generated_Source\PSoC4/ADC_1.c **** * \brief Converts the output of the SAR to an idealized count value.
1311:Generated_Source\PSoC4/ADC_1.c **** *
1312:Generated_Source\PSoC4/ADC_1.c **** * Divides by averaging amount, if needed, and subtracts offset.
1313:Generated_Source\PSoC4/ADC_1.c **** *
1314:Generated_Source\PSoC4/ADC_1.c **** * \param chan ADC_1 channel number.
1315:Generated_Source\PSoC4/ADC_1.c **** *
1316:Generated_Source\PSoC4/ADC_1.c **** * \param adcCounts Result from the ADC_1 conversion.
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 43


1317:Generated_Source\PSoC4/ADC_1.c **** *
1318:Generated_Source\PSoC4/ADC_1.c **** * \return Averaged and offset counts.
1319:Generated_Source\PSoC4/ADC_1.c **** *
1320:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1321:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1322:Generated_Source\PSoC4/ADC_1.c **** int16 ADC_1_RawCounts2Counts(uint32 chan, int16 adcCounts)
1323:Generated_Source\PSoC4/ADC_1.c **** {
 1021              		.loc 1 1323 0
 1022              		.cfi_startproc
 1023              		@ args = 0, pretend = 0, frame = 0
 1024              		@ frame_needed = 0, uses_anonymous_args = 0
 1025              	.LVL76:
 1026 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1027              		.cfi_def_cfa_offset 24
 1028              		.cfi_offset 3, -24
 1029              		.cfi_offset 4, -20
 1030              		.cfi_offset 5, -16
 1031              		.cfi_offset 6, -12
 1032              		.cfi_offset 7, -8
 1033              		.cfi_offset 14, -4
 1034 0002 0600     		movs	r6, r0
 1035 0004 0C00     		movs	r4, r1
1324:Generated_Source\PSoC4/ADC_1.c ****     uint32 temp;
1325:Generated_Source\PSoC4/ADC_1.c ****     uint32 averageAdcSamplesDiv;
1326:Generated_Source\PSoC4/ADC_1.c ****     uint32 rawChannel;
1327:Generated_Source\PSoC4/ADC_1.c ****     rawChannel = ADC_1_allConfigs[ADC_1_currentConfig].channelBase + chan;
 1036              		.loc 1 1327 0
 1037 0006 1D4B     		ldr	r3, .L87
 1038 0008 1968     		ldr	r1, [r3]
 1039              	.LVL77:
 1040 000a 1D48     		ldr	r0, .L87+4
 1041              	.LVL78:
 1042 000c CB00     		lsls	r3, r1, #3
 1043 000e 5D1A     		subs	r5, r3, r1
 1044 0010 EA00     		lsls	r2, r5, #3
 1045 0012 1558     		ldr	r5, [r2, r0]
 1046 0014 AD19     		adds	r5, r5, r6
 1047              	.LVL79:
1328:Generated_Source\PSoC4/ADC_1.c **** 
1329:Generated_Source\PSoC4/ADC_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1330:Generated_Source\PSoC4/ADC_1.c ****     CYASSERT(chan < ADC_1_allConfigs[ADC_1_currentConfig].numChannels);
 1048              		.loc 1 1330 0
 1049 0016 8218     		adds	r2, r0, r2
 1050 0018 5368     		ldr	r3, [r2, #4]
 1051 001a 9E42     		cmp	r6, r3
 1052 001c 02D3     		bcc	.L82
 1053              		.loc 1 1330 0 is_stmt 0 discriminator 1
 1054 001e 0020     		movs	r0, #0
 1055 0020 FFF7FEFF 		bl	CyHalt
 1056              	.LVL80:
 1057              	.L82:
1331:Generated_Source\PSoC4/ADC_1.c **** 
1332:Generated_Source\PSoC4/ADC_1.c ****     /* Divide the adcCount when accumulate averaging mode selected */
1333:Generated_Source\PSoC4/ADC_1.c ****     /* If Average mode != fixed */
1334:Generated_Source\PSoC4/ADC_1.c ****     if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
 1058              		.loc 1 1334 0 is_stmt 1
 1059 0024 154B     		ldr	r3, .L87
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 44


 1060 0026 1A68     		ldr	r2, [r3]
 1061 0028 D300     		lsls	r3, r2, #3
 1062 002a 9A1A     		subs	r2, r3, r2
 1063 002c D300     		lsls	r3, r2, #3
 1064 002e 144A     		ldr	r2, .L87+4
 1065 0030 D318     		adds	r3, r2, r3
 1066 0032 DA68     		ldr	r2, [r3, #12]
 1067 0034 1306     		lsls	r3, r2, #24
 1068 0036 1AD4     		bmi	.L83
1335:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_SAR_SAMPLE_CTRL_AVG_SHIFT_MSK)
1336:Generated_Source\PSoC4/ADC_1.c ****         != ADC_1_SAR_SAMPLE_CTRL_AVG_SHIFT_MSK)
1337:Generated_Source\PSoC4/ADC_1.c ****     {
1338:Generated_Source\PSoC4/ADC_1.c ****         /* If Channel uses averaging */
1339:Generated_Source\PSoC4/ADC_1.c ****         if((ADC_1_channelsConfig[rawChannel] & ADC_1_SAR_CHAN_CONFIG_AVG_EN_MSK) != 0u)
1340:Generated_Source\PSoC4/ADC_1.c ****         {
1341:Generated_Source\PSoC4/ADC_1.c ****             /* Divide by 2^(AVG_CNT + 1) */
1342:Generated_Source\PSoC4/ADC_1.c ****             averageAdcSamplesDiv = ((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
1343:Generated_Source\PSoC4/ADC_1.c ****                 & ADC_1_SAR_SAMPLE_CTRL_AVG_CNT_MSK)
1344:Generated_Source\PSoC4/ADC_1.c ****                 >> ADC_1_SAR_SAMPLE_CTRL_AVG_CNT_SHFT);
 1069              		.loc 1 1344 0
 1070 0038 1309     		lsrs	r3, r2, #4
1342:Generated_Source\PSoC4/ADC_1.c ****                 & ADC_1_SAR_SAMPLE_CTRL_AVG_CNT_MSK)
 1071              		.loc 1 1342 0
 1072 003a 0721     		movs	r1, #7
 1073 003c 0B40     		ands	r3, r1
 1074              	.LVL81:
1345:Generated_Source\PSoC4/ADC_1.c ****             averageAdcSamplesDiv = (1uL << (averageAdcSamplesDiv + 1uL));
 1075              		.loc 1 1345 0
 1076 003e 0133     		adds	r3, r3, #1
 1077              	.LVL82:
 1078 0040 0127     		movs	r7, #1
 1079 0042 9F40     		lsls	r7, r7, r3
 1080              	.LVL83:
1346:Generated_Source\PSoC4/ADC_1.c ****                         /* When it's "Sequential, Sum", divider limit is 16 */
1347:Generated_Source\PSoC4/ADC_1.c ****             /* If Mode is ACCUNDUMP */
1348:Generated_Source\PSoC4/ADC_1.c ****             if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
 1081              		.loc 1 1348 0
 1082 0044 D305     		lsls	r3, r2, #23
 1083 0046 02D4     		bmi	.L84
1349:Generated_Source\PSoC4/ADC_1.c ****                 & ADC_1_SAR_SAMPLE_CTRL_AVG_MODE_MSK)
1350:Generated_Source\PSoC4/ADC_1.c ****                 != ADC_1_SAR_SAMPLE_CTRL_AVG_MODE_MSK)
1351:Generated_Source\PSoC4/ADC_1.c ****             {
1352:Generated_Source\PSoC4/ADC_1.c ****                 if (averageAdcSamplesDiv > 16uL)
 1084              		.loc 1 1352 0
 1085 0048 102F     		cmp	r7, #16
 1086 004a 00D9     		bls	.L84
1353:Generated_Source\PSoC4/ADC_1.c ****                 {
1354:Generated_Source\PSoC4/ADC_1.c ****                     averageAdcSamplesDiv = 16uL;
 1087              		.loc 1 1354 0
 1088 004c 1027     		movs	r7, #16
 1089              	.LVL84:
 1090              	.L84:
1355:Generated_Source\PSoC4/ADC_1.c ****                 }
1356:Generated_Source\PSoC4/ADC_1.c ****             }
1357:Generated_Source\PSoC4/ADC_1.c ****             /* If unsigned format, prevent sign extension */
1358:Generated_Source\PSoC4/ADC_1.c ****             if(0 == ADC_1_IsChannelSigned(chan))
 1091              		.loc 1 1358 0
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 45


 1092 004e 3000     		movs	r0, r6
 1093 0050 FFF7FEFF 		bl	ADC_1_IsChannelSigned
 1094              	.LVL85:
 1095 0054 0028     		cmp	r0, #0
 1096 0056 05D1     		bne	.L85
1359:Generated_Source\PSoC4/ADC_1.c ****             {
1360:Generated_Source\PSoC4/ADC_1.c ****                 temp = ((uint16) adcCounts / averageAdcSamplesDiv);
 1097              		.loc 1 1360 0
 1098 0058 A0B2     		uxth	r0, r4
 1099 005a 3900     		movs	r1, r7
 1100 005c FFF7FEFF 		bl	__aeabi_uidiv
 1101              	.LVL86:
1361:Generated_Source\PSoC4/ADC_1.c ****                 adcCounts = (int16) temp;
 1102              		.loc 1 1361 0
 1103 0060 04B2     		sxth	r4, r0
 1104              	.LVL87:
 1105 0062 04E0     		b	.L83
 1106              	.LVL88:
 1107              	.L85:
1362:Generated_Source\PSoC4/ADC_1.c ****             }
1363:Generated_Source\PSoC4/ADC_1.c ****             else
1364:Generated_Source\PSoC4/ADC_1.c ****             {
1365:Generated_Source\PSoC4/ADC_1.c ****                 adcCounts /= (int16) averageAdcSamplesDiv;
 1108              		.loc 1 1365 0
 1109 0064 39B2     		sxth	r1, r7
 1110 0066 2000     		movs	r0, r4
 1111 0068 FFF7FEFF 		bl	__aeabi_idiv
 1112              	.LVL89:
 1113 006c 04B2     		sxth	r4, r0
 1114              	.LVL90:
 1115              	.L83:
1366:Generated_Source\PSoC4/ADC_1.c ****             }
1367:Generated_Source\PSoC4/ADC_1.c ****         }
1368:Generated_Source\PSoC4/ADC_1.c ****     }
1369:Generated_Source\PSoC4/ADC_1.c ****     /* Subtract ADC offset */
1370:Generated_Source\PSoC4/ADC_1.c ****     adcCounts -= ADC_1_offset[rawChannel];
 1116              		.loc 1 1370 0
 1117 006e 6D00     		lsls	r5, r5, #1
 1118              	.LVL91:
 1119 0070 044B     		ldr	r3, .L87+8
 1120 0072 E85A     		ldrh	r0, [r5, r3]
 1121 0074 00B2     		sxth	r0, r0
 1122 0076 201A     		subs	r0, r4, r0
 1123 0078 00B2     		sxth	r0, r0
 1124              	.LVL92:
1371:Generated_Source\PSoC4/ADC_1.c ****     return adcCounts;
1372:Generated_Source\PSoC4/ADC_1.c **** }
 1125              		.loc 1 1372 0
 1126              		@ sp needed
 1127              	.LVL93:
 1128 007a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1129              	.L88:
 1130              		.align	2
 1131              	.L87:
 1132 007c 00000000 		.word	.LANCHOR0
 1133 0080 00000000 		.word	ADC_1_allConfigs
 1134 0084 00000000 		.word	ADC_1_offset
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 46


 1135              		.cfi_endproc
 1136              	.LFE22:
 1137              		.size	ADC_1_RawCounts2Counts, .-ADC_1_RawCounts2Counts
 1138              		.global	__aeabi_i2f
 1139              		.global	__aeabi_fmul
 1140              		.global	__aeabi_fdiv
 1141              		.section	.text.ADC_1_CountsTo_Volts,"ax",%progbits
 1142              		.align	2
 1143              		.global	ADC_1_CountsTo_Volts
 1144              		.code	16
 1145              		.thumb_func
 1146              		.type	ADC_1_CountsTo_Volts, %function
 1147              	ADC_1_CountsTo_Volts:
 1148              	.LFB23:
1373:Generated_Source\PSoC4/ADC_1.c **** 
1374:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1375:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_CountsTo_Volts
1376:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1377:Generated_Source\PSoC4/ADC_1.c **** *
1378:Generated_Source\PSoC4/ADC_1.c **** * \brief Converts the ADC output to Volts as a float32. For example, if the ADC
1379:Generated_Source\PSoC4/ADC_1.c **** * measured 0.534 volts, the return value would be 0.534.
1380:Generated_Source\PSoC4/ADC_1.c **** * The calculation of voltage depends on the contents of ADC_1_offset[],
1381:Generated_Source\PSoC4/ADC_1.c **** * ADC_1_countsPer10Volt[], and other parameters.  The equation used is:
1382:Generated_Source\PSoC4/ADC_1.c **** *
1383:Generated_Source\PSoC4/ADC_1.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1384:Generated_Source\PSoC4/ADC_1.c **** * -Counts = Raw Counts from SAR register
1385:Generated_Source\PSoC4/ADC_1.c **** * -AvgDivider = divider based on averaging mode
1386:Generated_Source\PSoC4/ADC_1.c **** *     -Sequential, Sum: AvgDivider = number averaged
1387:Generated_Source\PSoC4/ADC_1.c **** *         Note: The divider should be a maximum of 16. If using more averages,
1388:Generated_Source\PSoC4/ADC_1.c **** *         pre-scale Counts by (number averaged / 16)
1389:Generated_Source\PSoC4/ADC_1.c **** *     -Interleaved, Sum: AvgDivider = number averaged
1390:Generated_Source\PSoC4/ADC_1.c **** *     -Sequential, Fixed: AvgDivider = 1
1391:Generated_Source\PSoC4/ADC_1.c **** * -Offset = ADC_1_offset[]
1392:Generated_Source\PSoC4/ADC_1.c **** * -TEN_VOLT = 10V constant and unit scalar.
1393:Generated_Source\PSoC4/ADC_1.c **** * -Gain = ADC_1_countsPer10Volt[]
1394:Generated_Source\PSoC4/ADC_1.c **** *
1395:Generated_Source\PSoC4/ADC_1.c **** * When the Vref is based on Vdda, the value used for Vdda is set for the project
1396:Generated_Source\PSoC4/ADC_1.c **** * in the System tab of the DWR.
1397:Generated_Source\PSoC4/ADC_1.c **** *
1398:Generated_Source\PSoC4/ADC_1.c **** * \param chan ADC_1 channel number.
1399:Generated_Source\PSoC4/ADC_1.c **** *
1400:Generated_Source\PSoC4/ADC_1.c **** * \param adcCounts Result from the ADC_1 conversion.
1401:Generated_Source\PSoC4/ADC_1.c **** *
1402:Generated_Source\PSoC4/ADC_1.c **** * \return Result in Volts.
1403:Generated_Source\PSoC4/ADC_1.c **** *
1404:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1405:Generated_Source\PSoC4/ADC_1.c **** *
1406:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1407:Generated_Source\PSoC4/ADC_1.c **** float32 ADC_1_CountsTo_Volts(uint32 chan, int16 adcCounts)
1408:Generated_Source\PSoC4/ADC_1.c **** {
 1149              		.loc 1 1408 0
 1150              		.cfi_startproc
 1151              		@ args = 0, pretend = 0, frame = 0
 1152              		@ frame_needed = 0, uses_anonymous_args = 0
 1153              	.LVL94:
 1154 0000 70B5     		push	{r4, r5, r6, lr}
 1155              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 47


 1156              		.cfi_offset 4, -16
 1157              		.cfi_offset 5, -12
 1158              		.cfi_offset 6, -8
 1159              		.cfi_offset 14, -4
 1160              	.LVL95:
1409:Generated_Source\PSoC4/ADC_1.c ****     float32 result_Volts = 0.0f;
1410:Generated_Source\PSoC4/ADC_1.c ****     uint32 rawChannel;
1411:Generated_Source\PSoC4/ADC_1.c ****     rawChannel = ADC_1_allConfigs[ADC_1_currentConfig].channelBase + chan;
 1161              		.loc 1 1411 0
 1162 0002 104B     		ldr	r3, .L92
 1163 0004 1D68     		ldr	r5, [r3]
 1164 0006 104E     		ldr	r6, .L92+4
 1165 0008 EB00     		lsls	r3, r5, #3
 1166 000a 5C1B     		subs	r4, r3, r5
 1167 000c E200     		lsls	r2, r4, #3
 1168 000e 9459     		ldr	r4, [r2, r6]
 1169 0010 2418     		adds	r4, r4, r0
 1170              	.LVL96:
1412:Generated_Source\PSoC4/ADC_1.c **** 
1413:Generated_Source\PSoC4/ADC_1.c ****     if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
 1171              		.loc 1 1413 0
 1172 0012 B218     		adds	r2, r6, r2
 1173 0014 D368     		ldr	r3, [r2, #12]
 1174 0016 9B07     		lsls	r3, r3, #30
 1175 0018 11D4     		bmi	.L91
1414:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1415:Generated_Source\PSoC4/ADC_1.c ****         != ADC_1_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1416:Generated_Source\PSoC4/ADC_1.c ****     {
1417:Generated_Source\PSoC4/ADC_1.c ****         adcCounts = ADC_1_RawCounts2Counts(chan, adcCounts);
 1176              		.loc 1 1417 0
 1177 001a FFF7FEFF 		bl	ADC_1_RawCounts2Counts
 1178              	.LVL97:
1418:Generated_Source\PSoC4/ADC_1.c **** 
1419:Generated_Source\PSoC4/ADC_1.c ****         result_Volts = ((float32)adcCounts * ADC_1_10V_COUNTS)
 1179              		.loc 1 1419 0
 1180 001e FFF7FEFF 		bl	__aeabi_i2f
 1181              	.LVL98:
 1182 0022 0A49     		ldr	r1, .L92+8
 1183 0024 FFF7FEFF 		bl	__aeabi_fmul
 1184              	.LVL99:
 1185 0028 051C     		adds	r5, r0, #0
1420:Generated_Source\PSoC4/ADC_1.c ****             / (float32)ADC_1_countsPer10Volt[rawChannel];
 1186              		.loc 1 1420 0
 1187 002a A400     		lsls	r4, r4, #2
 1188              	.LVL100:
 1189 002c 084B     		ldr	r3, .L92+12
 1190 002e E058     		ldr	r0, [r4, r3]
 1191 0030 FFF7FEFF 		bl	__aeabi_i2f
 1192              	.LVL101:
 1193 0034 011C     		adds	r1, r0, #0
1419:Generated_Source\PSoC4/ADC_1.c ****             / (float32)ADC_1_countsPer10Volt[rawChannel];
 1194              		.loc 1 1419 0
 1195 0036 281C     		adds	r0, r5, #0
 1196 0038 FFF7FEFF 		bl	__aeabi_fdiv
 1197              	.LVL102:
 1198 003c 00E0     		b	.L90
 1199              	.LVL103:
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 48


 1200              	.L91:
1409:Generated_Source\PSoC4/ADC_1.c ****     uint32 rawChannel;
 1201              		.loc 1 1409 0
 1202 003e 0020     		movs	r0, #0
 1203              	.LVL104:
 1204              	.L90:
1421:Generated_Source\PSoC4/ADC_1.c ****     }
1422:Generated_Source\PSoC4/ADC_1.c ****     return result_Volts;
1423:Generated_Source\PSoC4/ADC_1.c **** }
 1205              		.loc 1 1423 0
 1206              		@ sp needed
 1207 0040 70BD     		pop	{r4, r5, r6, pc}
 1208              	.L93:
 1209 0042 C046     		.align	2
 1210              	.L92:
 1211 0044 00000000 		.word	.LANCHOR0
 1212 0048 00000000 		.word	ADC_1_allConfigs
 1213 004c 00002041 		.word	1092616192
 1214 0050 00000000 		.word	ADC_1_countsPer10Volt
 1215              		.cfi_endproc
 1216              	.LFE23:
 1217              		.size	ADC_1_CountsTo_Volts, .-ADC_1_CountsTo_Volts
 1218              		.section	.text.ADC_1_CountsTo_mVolts,"ax",%progbits
 1219              		.align	2
 1220              		.global	ADC_1_CountsTo_mVolts
 1221              		.code	16
 1222              		.thumb_func
 1223              		.type	ADC_1_CountsTo_mVolts, %function
 1224              	ADC_1_CountsTo_mVolts:
 1225              	.LFB24:
1424:Generated_Source\PSoC4/ADC_1.c **** 
1425:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1426:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_CountsTo_mVolts
1427:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1428:Generated_Source\PSoC4/ADC_1.c **** *
1429:Generated_Source\PSoC4/ADC_1.c **** * \brief Converts the ADC output to millivolts as an int16. For example, if the ADC
1430:Generated_Source\PSoC4/ADC_1.c **** * measured 0.534 volts, the return value would be 534.
1431:Generated_Source\PSoC4/ADC_1.c **** * The calculation of voltage depends on the contents of ADC_1_offset[],
1432:Generated_Source\PSoC4/ADC_1.c **** * ADC_1_countsPer10Volt[], and other parameters.  The equation used is:
1433:Generated_Source\PSoC4/ADC_1.c **** *
1434:Generated_Source\PSoC4/ADC_1.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1435:Generated_Source\PSoC4/ADC_1.c **** * -Counts = Raw Counts from SAR register
1436:Generated_Source\PSoC4/ADC_1.c **** * -AvgDivider = divider based on averaging mode
1437:Generated_Source\PSoC4/ADC_1.c **** *     -Sequential, Sum: AvgDivider = number averaged
1438:Generated_Source\PSoC4/ADC_1.c **** *         Note: The divider should be a maximum of 16. If using more averages,
1439:Generated_Source\PSoC4/ADC_1.c **** *         pre-scale Counts by (number averaged / 16)
1440:Generated_Source\PSoC4/ADC_1.c **** *     -Interleaved, Sum: AvgDivider = number averaged
1441:Generated_Source\PSoC4/ADC_1.c **** *     -Sequential, Fixed: AvgDivider = 1
1442:Generated_Source\PSoC4/ADC_1.c **** * -Offset = ADC_1_offset[]
1443:Generated_Source\PSoC4/ADC_1.c **** * -TEN_VOLT = 10V constant and unit scalar.
1444:Generated_Source\PSoC4/ADC_1.c **** * -Gain = ADC_1_countsPer10Volt[]
1445:Generated_Source\PSoC4/ADC_1.c **** *
1446:Generated_Source\PSoC4/ADC_1.c **** * When the Vref is based on Vdda, the value used for Vdda is set for the project
1447:Generated_Source\PSoC4/ADC_1.c **** * in the System tab of the DWR.
1448:Generated_Source\PSoC4/ADC_1.c **** *
1449:Generated_Source\PSoC4/ADC_1.c **** * \param chan ADC_1 channel number.
1450:Generated_Source\PSoC4/ADC_1.c **** *
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 49


1451:Generated_Source\PSoC4/ADC_1.c **** * \param adcCounts Result from the ADC_1 conversion.
1452:Generated_Source\PSoC4/ADC_1.c **** *
1453:Generated_Source\PSoC4/ADC_1.c **** * \return Result in mV.
1454:Generated_Source\PSoC4/ADC_1.c **** *
1455:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None.
1456:Generated_Source\PSoC4/ADC_1.c **** *
1457:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1458:Generated_Source\PSoC4/ADC_1.c **** int16 ADC_1_CountsTo_mVolts(uint32 chan, int16 adcCounts)
1459:Generated_Source\PSoC4/ADC_1.c **** {
 1226              		.loc 1 1459 0
 1227              		.cfi_startproc
 1228              		@ args = 0, pretend = 0, frame = 0
 1229              		@ frame_needed = 0, uses_anonymous_args = 0
 1230              	.LVL105:
 1231 0000 70B5     		push	{r4, r5, r6, lr}
 1232              		.cfi_def_cfa_offset 16
 1233              		.cfi_offset 4, -16
 1234              		.cfi_offset 5, -12
 1235              		.cfi_offset 6, -8
 1236              		.cfi_offset 14, -4
 1237              	.LVL106:
1460:Generated_Source\PSoC4/ADC_1.c ****     int16 result_mVolts = 0;
1461:Generated_Source\PSoC4/ADC_1.c ****     uint32 rawChannel;
1462:Generated_Source\PSoC4/ADC_1.c **** 
1463:Generated_Source\PSoC4/ADC_1.c ****     rawChannel = ADC_1_allConfigs[ADC_1_currentConfig].channelBase + chan;
 1238              		.loc 1 1463 0
 1239 0002 154B     		ldr	r3, .L99
 1240 0004 1D68     		ldr	r5, [r3]
 1241 0006 154E     		ldr	r6, .L99+4
 1242 0008 EB00     		lsls	r3, r5, #3
 1243 000a 5C1B     		subs	r4, r3, r5
 1244 000c E200     		lsls	r2, r4, #3
 1245 000e 9459     		ldr	r4, [r2, r6]
 1246 0010 2418     		adds	r4, r4, r0
 1247              	.LVL107:
1464:Generated_Source\PSoC4/ADC_1.c **** 
1465:Generated_Source\PSoC4/ADC_1.c ****     if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
 1248              		.loc 1 1465 0
 1249 0012 B218     		adds	r2, r6, r2
 1250 0014 D368     		ldr	r3, [r2, #12]
 1251 0016 9B07     		lsls	r3, r3, #30
 1252 0018 1BD4     		bmi	.L98
1466:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1467:Generated_Source\PSoC4/ADC_1.c ****         != ADC_1_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1468:Generated_Source\PSoC4/ADC_1.c ****     {
1469:Generated_Source\PSoC4/ADC_1.c ****         adcCounts = ADC_1_RawCounts2Counts(chan, adcCounts);
 1253              		.loc 1 1469 0
 1254 001a FFF7FEFF 		bl	ADC_1_RawCounts2Counts
 1255              	.LVL108:
1470:Generated_Source\PSoC4/ADC_1.c **** 
1471:Generated_Source\PSoC4/ADC_1.c ****         result_mVolts = (int16)((((int32)adcCounts * ADC_1_10MV_COUNTS) + ( (adcCounts > 0) ?
 1256              		.loc 1 1471 0
 1257 001e 1049     		ldr	r1, .L99+8
 1258 0020 4143     		muls	r1, r0
1472:Generated_Source\PSoC4/ADC_1.c ****                  (ADC_1_countsPer10Volt[rawChannel] / 2)
1473:Generated_Source\PSoC4/ADC_1.c ****                 : (-(ADC_1_countsPer10Volt[rawChannel] / 2)) ))
 1259              		.loc 1 1473 0
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 50


 1260 0022 0028     		cmp	r0, #0
 1261 0024 06DD     		ble	.L96
1472:Generated_Source\PSoC4/ADC_1.c ****                  (ADC_1_countsPer10Volt[rawChannel] / 2)
 1262              		.loc 1 1472 0 discriminator 1
 1263 0026 A300     		lsls	r3, r4, #2
 1264 0028 0E4A     		ldr	r2, .L99+12
 1265 002a 9B58     		ldr	r3, [r3, r2]
 1266              		.loc 1 1473 0 discriminator 1
 1267 002c D80F     		lsrs	r0, r3, #31
 1268              	.LVL109:
 1269 002e C318     		adds	r3, r0, r3
 1270 0030 5B10     		asrs	r3, r3, #1
 1271 0032 06E0     		b	.L97
 1272              	.LVL110:
 1273              	.L96:
 1274              		.loc 1 1473 0 is_stmt 0 discriminator 2
 1275 0034 A300     		lsls	r3, r4, #2
 1276 0036 0B4A     		ldr	r2, .L99+12
 1277 0038 9A58     		ldr	r2, [r3, r2]
 1278 003a D30F     		lsrs	r3, r2, #31
 1279 003c 9A18     		adds	r2, r3, r2
 1280 003e 5210     		asrs	r2, r2, #1
 1281 0040 5342     		rsbs	r3, r2, #0
 1282              	.LVL111:
 1283              	.L97:
1471:Generated_Source\PSoC4/ADC_1.c ****                  (ADC_1_countsPer10Volt[rawChannel] / 2)
 1284              		.loc 1 1471 0 is_stmt 1
 1285 0042 5818     		adds	r0, r3, r1
1474:Generated_Source\PSoC4/ADC_1.c ****                  / ADC_1_countsPer10Volt[rawChannel]);
 1286              		.loc 1 1474 0
 1287 0044 A400     		lsls	r4, r4, #2
 1288              	.LVL112:
 1289 0046 074B     		ldr	r3, .L99+12
 1290 0048 E158     		ldr	r1, [r4, r3]
 1291 004a FFF7FEFF 		bl	__aeabi_idiv
 1292              	.LVL113:
1471:Generated_Source\PSoC4/ADC_1.c ****                  (ADC_1_countsPer10Volt[rawChannel] / 2)
 1293              		.loc 1 1471 0
 1294 004e 00B2     		sxth	r0, r0
 1295              	.LVL114:
 1296 0050 00E0     		b	.L95
 1297              	.LVL115:
 1298              	.L98:
1460:Generated_Source\PSoC4/ADC_1.c ****     uint32 rawChannel;
 1299              		.loc 1 1460 0
 1300 0052 0020     		movs	r0, #0
 1301              	.LVL116:
 1302              	.L95:
1475:Generated_Source\PSoC4/ADC_1.c ****     }
1476:Generated_Source\PSoC4/ADC_1.c ****     return result_mVolts;
1477:Generated_Source\PSoC4/ADC_1.c **** }
 1303              		.loc 1 1477 0
 1304              		@ sp needed
 1305              	.LVL117:
 1306 0054 70BD     		pop	{r4, r5, r6, pc}
 1307              	.L100:
 1308 0056 C046     		.align	2
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 51


 1309              	.L99:
 1310 0058 00000000 		.word	.LANCHOR0
 1311 005c 00000000 		.word	ADC_1_allConfigs
 1312 0060 10270000 		.word	10000
 1313 0064 00000000 		.word	ADC_1_countsPer10Volt
 1314              		.cfi_endproc
 1315              	.LFE24:
 1316              		.size	ADC_1_CountsTo_mVolts, .-ADC_1_CountsTo_mVolts
 1317              		.global	__aeabi_lmul
 1318              		.global	__aeabi_ldivmod
 1319              		.section	.text.ADC_1_CountsTo_uVolts,"ax",%progbits
 1320              		.align	2
 1321              		.global	ADC_1_CountsTo_uVolts
 1322              		.code	16
 1323              		.thumb_func
 1324              		.type	ADC_1_CountsTo_uVolts, %function
 1325              	ADC_1_CountsTo_uVolts:
 1326              	.LFB25:
1478:Generated_Source\PSoC4/ADC_1.c **** 
1479:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1480:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_CountsTo_uVolts
1481:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1482:Generated_Source\PSoC4/ADC_1.c **** *
1483:Generated_Source\PSoC4/ADC_1.c **** * \brief Converts the ADC output to microvolts as an int32. For example, if the ADC
1484:Generated_Source\PSoC4/ADC_1.c **** * measured 0.534 volts, the return value would be 534000.
1485:Generated_Source\PSoC4/ADC_1.c **** * The calculation of voltage depends on the contents of ADC_1_offset[],
1486:Generated_Source\PSoC4/ADC_1.c **** * ADC_1_countsPer10Volt[], and other parameters.  The equation used is:
1487:Generated_Source\PSoC4/ADC_1.c **** *
1488:Generated_Source\PSoC4/ADC_1.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1489:Generated_Source\PSoC4/ADC_1.c **** * -Counts = Raw Counts from SAR register
1490:Generated_Source\PSoC4/ADC_1.c **** * -AvgDivider = divider based on averaging mode
1491:Generated_Source\PSoC4/ADC_1.c **** *     -Sequential, Sum: AvgDivider = number averaged
1492:Generated_Source\PSoC4/ADC_1.c **** *         Note: The divider should be a maximum of 16. If using more averages,
1493:Generated_Source\PSoC4/ADC_1.c **** *         pre-scale Counts by (number averaged / 16)
1494:Generated_Source\PSoC4/ADC_1.c **** *     -Interleaved, Sum: AvgDivider = number averaged
1495:Generated_Source\PSoC4/ADC_1.c **** *     -Sequential, Fixed: AvgDivider = 1
1496:Generated_Source\PSoC4/ADC_1.c **** * -Offset = ADC_1_offset[]
1497:Generated_Source\PSoC4/ADC_1.c **** * -TEN_VOLT = 10V constant and unit scalar.
1498:Generated_Source\PSoC4/ADC_1.c **** * -Gain = ADC_1_countsPer10Volt[]
1499:Generated_Source\PSoC4/ADC_1.c **** *
1500:Generated_Source\PSoC4/ADC_1.c **** * When the Vref is based on Vdda, the value used for Vdda is set for the project
1501:Generated_Source\PSoC4/ADC_1.c **** * in the System tab of the DWR.
1502:Generated_Source\PSoC4/ADC_1.c **** *
1503:Generated_Source\PSoC4/ADC_1.c **** * \param chan ADC_1 channel number.
1504:Generated_Source\PSoC4/ADC_1.c **** *
1505:Generated_Source\PSoC4/ADC_1.c **** * \param adcCounts Result from the ADC_1 conversion.
1506:Generated_Source\PSoC4/ADC_1.c **** *
1507:Generated_Source\PSoC4/ADC_1.c **** * \return Result in microvolts.
1508:Generated_Source\PSoC4/ADC_1.c **** *
1509:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1510:Generated_Source\PSoC4/ADC_1.c **** *
1511:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1512:Generated_Source\PSoC4/ADC_1.c **** int32 ADC_1_CountsTo_uVolts(uint32 chan, int16 adcCounts)
1513:Generated_Source\PSoC4/ADC_1.c **** {
 1327              		.loc 1 1513 0
 1328              		.cfi_startproc
 1329              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 52


 1330              		@ frame_needed = 0, uses_anonymous_args = 0
 1331              	.LVL118:
 1332 0000 70B5     		push	{r4, r5, r6, lr}
 1333              		.cfi_def_cfa_offset 16
 1334              		.cfi_offset 4, -16
 1335              		.cfi_offset 5, -12
 1336              		.cfi_offset 6, -8
 1337              		.cfi_offset 14, -4
 1338              	.LVL119:
1514:Generated_Source\PSoC4/ADC_1.c ****     int64 result_uVolts = 0;
1515:Generated_Source\PSoC4/ADC_1.c ****     uint32 rawChannel;
1516:Generated_Source\PSoC4/ADC_1.c ****     rawChannel = ADC_1_allConfigs[ADC_1_currentConfig].channelBase + chan;
 1339              		.loc 1 1516 0
 1340 0002 0E4B     		ldr	r3, .L104
 1341 0004 1D68     		ldr	r5, [r3]
 1342 0006 0E4E     		ldr	r6, .L104+4
 1343 0008 EB00     		lsls	r3, r5, #3
 1344 000a 5C1B     		subs	r4, r3, r5
 1345 000c E200     		lsls	r2, r4, #3
 1346 000e 9459     		ldr	r4, [r2, r6]
 1347 0010 2418     		adds	r4, r4, r0
 1348              	.LVL120:
1517:Generated_Source\PSoC4/ADC_1.c **** 
1518:Generated_Source\PSoC4/ADC_1.c ****     if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
 1349              		.loc 1 1518 0
 1350 0012 B218     		adds	r2, r6, r2
 1351 0014 D368     		ldr	r3, [r2, #12]
 1352 0016 9B07     		lsls	r3, r3, #30
 1353 0018 0DD4     		bmi	.L103
1519:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1520:Generated_Source\PSoC4/ADC_1.c ****         != ADC_1_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1521:Generated_Source\PSoC4/ADC_1.c ****     {
1522:Generated_Source\PSoC4/ADC_1.c ****         adcCounts = ADC_1_RawCounts2Counts(chan, adcCounts);
 1354              		.loc 1 1522 0
 1355 001a FFF7FEFF 		bl	ADC_1_RawCounts2Counts
 1356              	.LVL121:
1523:Generated_Source\PSoC4/ADC_1.c **** 
1524:Generated_Source\PSoC4/ADC_1.c ****         result_uVolts = ((int64)adcCounts * ADC_1_10UV_COUNTS)
 1357              		.loc 1 1524 0
 1358 001e C117     		asrs	r1, r0, #31
 1359 0020 084A     		ldr	r2, .L104+8
 1360 0022 0023     		movs	r3, #0
 1361 0024 FFF7FEFF 		bl	__aeabi_lmul
 1362              	.LVL122:
1525:Generated_Source\PSoC4/ADC_1.c ****             / ADC_1_countsPer10Volt[rawChannel];
 1363              		.loc 1 1525 0
 1364 0028 A400     		lsls	r4, r4, #2
 1365              	.LVL123:
 1366 002a 074B     		ldr	r3, .L104+12
 1367 002c E258     		ldr	r2, [r4, r3]
 1368 002e D317     		asrs	r3, r2, #31
1524:Generated_Source\PSoC4/ADC_1.c ****             / ADC_1_countsPer10Volt[rawChannel];
 1369              		.loc 1 1524 0
 1370 0030 FFF7FEFF 		bl	__aeabi_ldivmod
 1371              	.LVL124:
 1372 0034 00E0     		b	.L102
 1373              	.LVL125:
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 53


 1374              	.L103:
1514:Generated_Source\PSoC4/ADC_1.c ****     uint32 rawChannel;
 1375              		.loc 1 1514 0
 1376 0036 0020     		movs	r0, #0
 1377              	.LVL126:
 1378              	.L102:
1526:Generated_Source\PSoC4/ADC_1.c ****     }
1527:Generated_Source\PSoC4/ADC_1.c ****     return ( (int32)result_uVolts );
1528:Generated_Source\PSoC4/ADC_1.c **** }
 1379              		.loc 1 1528 0
 1380              		@ sp needed
 1381              	.LVL127:
 1382 0038 70BD     		pop	{r4, r5, r6, pc}
 1383              	.L105:
 1384 003a C046     		.align	2
 1385              	.L104:
 1386 003c 00000000 		.word	.LANCHOR0
 1387 0040 00000000 		.word	ADC_1_allConfigs
 1388 0044 80969800 		.word	10000000
 1389 0048 00000000 		.word	ADC_1_countsPer10Volt
 1390              		.cfi_endproc
 1391              	.LFE25:
 1392              		.size	ADC_1_CountsTo_uVolts, .-ADC_1_CountsTo_uVolts
 1393              		.section	.text.ADC_1_Init,"ax",%progbits
 1394              		.align	2
 1395              		.global	ADC_1_Init
 1396              		.code	16
 1397              		.thumb_func
 1398              		.type	ADC_1_Init, %function
 1399              	ADC_1_Init:
 1400              	.LFB26:
1529:Generated_Source\PSoC4/ADC_1.c **** 
1530:Generated_Source\PSoC4/ADC_1.c **** #if(0u != ADC_1_ANY_CONFIG_USES_FILTER)
1531:Generated_Source\PSoC4/ADC_1.c **** 
1532:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1533:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_TrimFilterVos
1534:Generated_Source\PSoC4/ADC_1.c ****     ****************************************************************************//**
1535:Generated_Source\PSoC4/ADC_1.c ****     *
1536:Generated_Source\PSoC4/ADC_1.c ****     * \brief Run an algorithm to reduce voltage offset using the UAB's opamp and
1537:Generated_Source\PSoC4/ADC_1.c ****     * agnd buffer trim.
1538:Generated_Source\PSoC4/ADC_1.c ****     *
1539:Generated_Source\PSoC4/ADC_1.c ****     * During trimming, the filter inputs are disconnected from the UAB block,
1540:Generated_Source\PSoC4/ADC_1.c ****     * the non-inverting input of both UAB opamps are connected to Agnd,
1541:Generated_Source\PSoC4/ADC_1.c ****     * and SAR is used as a comparator.
1542:Generated_Source\PSoC4/ADC_1.c ****     *
1543:Generated_Source\PSoC4/ADC_1.c ****     * Trimming is done by comparing the filter output with Agnd.
1544:Generated_Source\PSoC4/ADC_1.c ****     * The algorithm steps through the Opamp trim codes first and then the
1545:Generated_Source\PSoC4/ADC_1.c ****     * Agnd trim codes to find where the filter output crosses Agnd.
1546:Generated_Source\PSoC4/ADC_1.c ****     * For each trim code, a blocking delay is used to allow the filter output
1547:Generated_Source\PSoC4/ADC_1.c ****     * to settle before reading the comparator status. This delay is equivalent
1548:Generated_Source\PSoC4/ADC_1.c ****     * to 9 * tau, where tau is the filter time constant:
1549:Generated_Source\PSoC4/ADC_1.c ****     *
1550:Generated_Source\PSoC4/ADC_1.c ****     * tau = 1 / (2 * pi * (Fcorner or Bandwidth))
1551:Generated_Source\PSoC4/ADC_1.c ****     *
1552:Generated_Source\PSoC4/ADC_1.c ****     * The time constant is calculated using the bandwidth for Band pass and
1553:Generated_Source\PSoC4/ADC_1.c ****     * Band stop and the corner frequency for Low pass and High pass.
1554:Generated_Source\PSoC4/ADC_1.c ****     * The algorithm can check up to 40 different trim codes, but it will typically
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 54


1555:Generated_Source\PSoC4/ADC_1.c ****     * complete in much less time.
1556:Generated_Source\PSoC4/ADC_1.c ****     *
1557:Generated_Source\PSoC4/ADC_1.c ****     * Once trimming is complete, the UAB is restored to its original configuration.
1558:Generated_Source\PSoC4/ADC_1.c ****     *
1559:Generated_Source\PSoC4/ADC_1.c ****     * \Note
1560:Generated_Source\PSoC4/ADC_1.c ****     * The ADC conversions must be started and Agnd must be supplied to the
1561:Generated_Source\PSoC4/ADC_1.c ****     * component before calling this function.
1562:Generated_Source\PSoC4/ADC_1.c ****     *
1563:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1564:Generated_Source\PSoC4/ADC_1.c ****     void ADC_1_TrimFilterVos(void)
1565:Generated_Source\PSoC4/ADC_1.c ****     {
1566:Generated_Source\PSoC4/ADC_1.c ****         uint32 opampTrim = 0uL;
1567:Generated_Source\PSoC4/ADC_1.c ****         uint32 agndTrim = 0uL;
1568:Generated_Source\PSoC4/ADC_1.c ****         uint32 compStatus = 0uL;
1569:Generated_Source\PSoC4/ADC_1.c **** 
1570:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SetupComparatorTrim();
1571:Generated_Source\PSoC4/ADC_1.c **** 
1572:Generated_Source\PSoC4/ADC_1.c ****         /* Sweep from center to crossing */
1573:Generated_Source\PSoC4/ADC_1.c ****         compStatus = ADC_1_SetOpampAndAgndTrim(ADC_1_OPAMP_TRIM_POS_BASE, ADC_1_AGND_TRIM_POS_BASE)
1574:Generated_Source\PSoC4/ADC_1.c ****         if (0uL == compStatus)
1575:Generated_Source\PSoC4/ADC_1.c ****         {
1576:Generated_Source\PSoC4/ADC_1.c ****             opampTrim = ADC_1_RaiseOpampTrimToCrossing(ADC_1_OPAMP_TRIM_POS_BASE);
1577:Generated_Source\PSoC4/ADC_1.c ****             agndTrim = ADC_1_RaiseAgndTrimToCrossing(ADC_1_AGND_TRIM_POS_BASE);
1578:Generated_Source\PSoC4/ADC_1.c ****             if ((agndTrim == (ADC_1_AGND_TRIM_POS_LIMIT - 1uL))
1579:Generated_Source\PSoC4/ADC_1.c ****                 && (opampTrim != (ADC_1_OPAMP_TRIM_POS_LIMIT - 1uL)))
1580:Generated_Source\PSoC4/ADC_1.c ****             {
1581:Generated_Source\PSoC4/ADC_1.c ****                 opampTrim = ADC_1_IncOpampTrim(opampTrim);
1582:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_SetOpampAndAgndTrim(opampTrim, ADC_1_AGND_TRIM_POS_BASE);
1583:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_LowerAgndTrimToCrossing(ADC_1_AGND_TRIM_POS_BASE);
1584:Generated_Source\PSoC4/ADC_1.c ****             }
1585:Generated_Source\PSoC4/ADC_1.c ****         }
1586:Generated_Source\PSoC4/ADC_1.c ****         else
1587:Generated_Source\PSoC4/ADC_1.c ****         {
1588:Generated_Source\PSoC4/ADC_1.c ****             opampTrim = ADC_1_LowerOpampTrimToCrossing(ADC_1_OPAMP_TRIM_POS_BASE);
1589:Generated_Source\PSoC4/ADC_1.c ****             agndTrim = ADC_1_LowerAgndTrimToCrossing(ADC_1_AGND_TRIM_POS_BASE);
1590:Generated_Source\PSoC4/ADC_1.c ****             if ((agndTrim == (ADC_1_AGND_TRIM_NEG_LIMIT - 1uL))
1591:Generated_Source\PSoC4/ADC_1.c ****                 && (opampTrim != (ADC_1_OPAMP_TRIM_NEG_LIMIT - 1uL)))
1592:Generated_Source\PSoC4/ADC_1.c ****             {
1593:Generated_Source\PSoC4/ADC_1.c ****                 opampTrim = ADC_1_DecOpampTrim(opampTrim);
1594:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_SetOpampAndAgndTrim(opampTrim, ADC_1_AGND_TRIM_POS_BASE);
1595:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_RaiseAgndTrimToCrossing(ADC_1_AGND_TRIM_POS_BASE);
1596:Generated_Source\PSoC4/ADC_1.c ****             }
1597:Generated_Source\PSoC4/ADC_1.c ****         }
1598:Generated_Source\PSoC4/ADC_1.c **** 
1599:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UndoComparatorTrimSetup();
1600:Generated_Source\PSoC4/ADC_1.c ****     }
1601:Generated_Source\PSoC4/ADC_1.c **** 
1602:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1603:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_SetupComparatorTrim
1604:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1605:Generated_Source\PSoC4/ADC_1.c ****     *
1606:Generated_Source\PSoC4/ADC_1.c ****     * Make proper connections to being trimming the Agnd buffer
1607:Generated_Source\PSoC4/ADC_1.c ****     * and Opamp offset.
1608:Generated_Source\PSoC4/ADC_1.c ****     *
1609:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1610:Generated_Source\PSoC4/ADC_1.c ****     static void ADC_1_SetupComparatorTrim(void)
1611:Generated_Source\PSoC4/ADC_1.c ****     {
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 55


1612:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_filterVinMux_Select(ADC_1_FILTER_AMUX_CHANNEL);
1613:Generated_Source\PSoC4/ADC_1.c ****     }
1614:Generated_Source\PSoC4/ADC_1.c **** 
1615:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1616:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_UndoComparatorTrimSetup
1617:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1618:Generated_Source\PSoC4/ADC_1.c ****     *
1619:Generated_Source\PSoC4/ADC_1.c ****     * Undo all changes made in ADC_1_SetupComparatorTrim()
1620:Generated_Source\PSoC4/ADC_1.c ****     * to bring the Component back to normal operation.
1621:Generated_Source\PSoC4/ADC_1.c ****     *
1622:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1623:Generated_Source\PSoC4/ADC_1.c ****     static void ADC_1_UndoComparatorTrimSetup(void)
1624:Generated_Source\PSoC4/ADC_1.c ****     {
1625:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_filterVinMux_Select((uint8)ADC_1_currentConfig);
1626:Generated_Source\PSoC4/ADC_1.c ****     }
1627:Generated_Source\PSoC4/ADC_1.c **** 
1628:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1629:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_RaiseOpampTrimToCrossing
1630:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1631:Generated_Source\PSoC4/ADC_1.c ****     *
1632:Generated_Source\PSoC4/ADC_1.c ****     * Step through the Opamp trim codes in increasing order
1633:Generated_Source\PSoC4/ADC_1.c ****     * to find the point where the offset crosses Agnd.
1634:Generated_Source\PSoC4/ADC_1.c ****     *
1635:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1636:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_RaiseOpampTrimToCrossing(uint32 startTrim)
1637:Generated_Source\PSoC4/ADC_1.c ****     {
1638:Generated_Source\PSoC4/ADC_1.c ****         uint32 opampTrim;
1639:Generated_Source\PSoC4/ADC_1.c ****         uint32 lastOpampTrim;
1640:Generated_Source\PSoC4/ADC_1.c ****         uint32 compStatus;
1641:Generated_Source\PSoC4/ADC_1.c **** 
1642:Generated_Source\PSoC4/ADC_1.c ****         lastOpampTrim = startTrim;
1643:Generated_Source\PSoC4/ADC_1.c ****         for (opampTrim = startTrim;
1644:Generated_Source\PSoC4/ADC_1.c ****             opampTrim != ADC_1_OPAMP_TRIM_NEG_LIMIT;
1645:Generated_Source\PSoC4/ADC_1.c ****             opampTrim = ADC_1_IncOpampTrim(opampTrim))
1646:Generated_Source\PSoC4/ADC_1.c ****         {
1647:Generated_Source\PSoC4/ADC_1.c ****             compStatus = ADC_1_SetOpampAndAgndTrim(opampTrim, ADC_1_AGND_TRIM_POS_BASE);
1648:Generated_Source\PSoC4/ADC_1.c ****             if (0uL != compStatus)
1649:Generated_Source\PSoC4/ADC_1.c ****             {
1650:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_SetOpampTrim(lastOpampTrim);
1651:Generated_Source\PSoC4/ADC_1.c ****                 break;
1652:Generated_Source\PSoC4/ADC_1.c ****             }
1653:Generated_Source\PSoC4/ADC_1.c ****             lastOpampTrim = opampTrim;
1654:Generated_Source\PSoC4/ADC_1.c ****         }
1655:Generated_Source\PSoC4/ADC_1.c **** 
1656:Generated_Source\PSoC4/ADC_1.c ****         return lastOpampTrim;
1657:Generated_Source\PSoC4/ADC_1.c ****     }
1658:Generated_Source\PSoC4/ADC_1.c **** 
1659:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1660:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_LowerOpampTrimToCrossing
1661:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1662:Generated_Source\PSoC4/ADC_1.c ****     *
1663:Generated_Source\PSoC4/ADC_1.c ****     * Step through the Opamp trim codes in decreasing order
1664:Generated_Source\PSoC4/ADC_1.c ****     * to find the point where the offset crosses Agnd.
1665:Generated_Source\PSoC4/ADC_1.c ****     *
1666:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1667:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_LowerOpampTrimToCrossing(uint32 startTrim)
1668:Generated_Source\PSoC4/ADC_1.c ****     {
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 56


1669:Generated_Source\PSoC4/ADC_1.c ****         uint32 opampTrim;
1670:Generated_Source\PSoC4/ADC_1.c ****         uint32 lastOpampTrim;
1671:Generated_Source\PSoC4/ADC_1.c ****         uint32 compStatus;
1672:Generated_Source\PSoC4/ADC_1.c **** 
1673:Generated_Source\PSoC4/ADC_1.c ****         lastOpampTrim = startTrim;
1674:Generated_Source\PSoC4/ADC_1.c ****         for (opampTrim = startTrim;
1675:Generated_Source\PSoC4/ADC_1.c ****             opampTrim != ADC_1_OPAMP_TRIM_NEG_LIMIT;
1676:Generated_Source\PSoC4/ADC_1.c ****             opampTrim = ADC_1_DecOpampTrim(opampTrim))
1677:Generated_Source\PSoC4/ADC_1.c ****         {
1678:Generated_Source\PSoC4/ADC_1.c ****             compStatus = ADC_1_SetOpampAndAgndTrim(opampTrim, ADC_1_AGND_TRIM_POS_BASE);
1679:Generated_Source\PSoC4/ADC_1.c ****             if (0uL == compStatus)
1680:Generated_Source\PSoC4/ADC_1.c ****             {
1681:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_SetOpampTrim(lastOpampTrim);
1682:Generated_Source\PSoC4/ADC_1.c ****                 break;
1683:Generated_Source\PSoC4/ADC_1.c ****             }
1684:Generated_Source\PSoC4/ADC_1.c ****             lastOpampTrim = opampTrim;
1685:Generated_Source\PSoC4/ADC_1.c ****         }
1686:Generated_Source\PSoC4/ADC_1.c **** 
1687:Generated_Source\PSoC4/ADC_1.c ****         return lastOpampTrim;
1688:Generated_Source\PSoC4/ADC_1.c ****     }
1689:Generated_Source\PSoC4/ADC_1.c **** 
1690:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1691:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_RaiseAgndTrimToCrossing
1692:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1693:Generated_Source\PSoC4/ADC_1.c ****     *
1694:Generated_Source\PSoC4/ADC_1.c ****     * Step through the Agnd trim codes in increasing order
1695:Generated_Source\PSoC4/ADC_1.c ****     * to find the point where the offset crosses Agnd.
1696:Generated_Source\PSoC4/ADC_1.c ****     *
1697:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1698:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_RaiseAgndTrimToCrossing(uint32 startTrim)
1699:Generated_Source\PSoC4/ADC_1.c ****     {
1700:Generated_Source\PSoC4/ADC_1.c ****         uint32 agndTrim;
1701:Generated_Source\PSoC4/ADC_1.c ****         uint32 lastAgndTrim;
1702:Generated_Source\PSoC4/ADC_1.c ****         uint32 compStatus;
1703:Generated_Source\PSoC4/ADC_1.c **** 
1704:Generated_Source\PSoC4/ADC_1.c ****         lastAgndTrim = startTrim;
1705:Generated_Source\PSoC4/ADC_1.c ****         for (agndTrim = startTrim;
1706:Generated_Source\PSoC4/ADC_1.c ****             agndTrim != ADC_1_AGND_TRIM_NEG_LIMIT;
1707:Generated_Source\PSoC4/ADC_1.c ****             agndTrim = ADC_1_IncAgndTrim(agndTrim))
1708:Generated_Source\PSoC4/ADC_1.c ****         {
1709:Generated_Source\PSoC4/ADC_1.c ****             compStatus = ADC_1_SetAgndTrim(agndTrim);
1710:Generated_Source\PSoC4/ADC_1.c ****             if (0uL != compStatus)
1711:Generated_Source\PSoC4/ADC_1.c ****             {
1712:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_SetAgndTrim(lastAgndTrim);
1713:Generated_Source\PSoC4/ADC_1.c ****                 break;
1714:Generated_Source\PSoC4/ADC_1.c ****             }
1715:Generated_Source\PSoC4/ADC_1.c ****             lastAgndTrim = agndTrim;
1716:Generated_Source\PSoC4/ADC_1.c ****         }
1717:Generated_Source\PSoC4/ADC_1.c **** 
1718:Generated_Source\PSoC4/ADC_1.c ****         return lastAgndTrim;
1719:Generated_Source\PSoC4/ADC_1.c ****     }
1720:Generated_Source\PSoC4/ADC_1.c **** 
1721:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1722:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_LowerAgndTrimToCrossing
1723:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1724:Generated_Source\PSoC4/ADC_1.c ****     *
1725:Generated_Source\PSoC4/ADC_1.c ****     * Step through the Agnd trim codes in decreasing order
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 57


1726:Generated_Source\PSoC4/ADC_1.c ****     * to find the point where the offset crosses Agnd.
1727:Generated_Source\PSoC4/ADC_1.c ****     *
1728:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1729:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_LowerAgndTrimToCrossing(uint32 startTrim)
1730:Generated_Source\PSoC4/ADC_1.c ****     {
1731:Generated_Source\PSoC4/ADC_1.c ****         uint32 agndTrim = startTrim;
1732:Generated_Source\PSoC4/ADC_1.c ****         uint32 lastAgndTrim = agndTrim;
1733:Generated_Source\PSoC4/ADC_1.c ****         uint32 compStatus = 1uL;
1734:Generated_Source\PSoC4/ADC_1.c **** 
1735:Generated_Source\PSoC4/ADC_1.c ****         lastAgndTrim = startTrim;
1736:Generated_Source\PSoC4/ADC_1.c ****         for (agndTrim = startTrim;
1737:Generated_Source\PSoC4/ADC_1.c ****             agndTrim != ADC_1_AGND_TRIM_NEG_LIMIT;
1738:Generated_Source\PSoC4/ADC_1.c ****             agndTrim = ADC_1_DecAgndTrim(agndTrim))
1739:Generated_Source\PSoC4/ADC_1.c ****         {
1740:Generated_Source\PSoC4/ADC_1.c ****             compStatus = ADC_1_SetAgndTrim(agndTrim);
1741:Generated_Source\PSoC4/ADC_1.c ****             if (0uL == compStatus)
1742:Generated_Source\PSoC4/ADC_1.c ****             {
1743:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_SetAgndTrim(lastAgndTrim);
1744:Generated_Source\PSoC4/ADC_1.c ****                 break;
1745:Generated_Source\PSoC4/ADC_1.c ****             }
1746:Generated_Source\PSoC4/ADC_1.c ****             lastAgndTrim = agndTrim;
1747:Generated_Source\PSoC4/ADC_1.c ****         }
1748:Generated_Source\PSoC4/ADC_1.c **** 
1749:Generated_Source\PSoC4/ADC_1.c ****         return lastAgndTrim;
1750:Generated_Source\PSoC4/ADC_1.c ****     }
1751:Generated_Source\PSoC4/ADC_1.c **** 
1752:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1753:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_SetOpampAndAgndTrim
1754:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1755:Generated_Source\PSoC4/ADC_1.c ****     *
1756:Generated_Source\PSoC4/ADC_1.c ****     * Write the Agnd and Opamp trim codes and return the comparator status.
1757:Generated_Source\PSoC4/ADC_1.c ****     *
1758:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1759:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_SetOpampAndAgndTrim(uint32 opampTrim, uint32 agndTrim)
1760:Generated_Source\PSoC4/ADC_1.c ****     {
1761:Generated_Source\PSoC4/ADC_1.c ****         uint32 trimRegVal = ADC_1_UABH_A_OA_TRIM_OA_REG;
1762:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal &= ~(ADC_1_OPAMP_TRIM_MASK << CyUAB_OA_OFFSET_SHIFT);
1763:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal |= (opampTrim << CyUAB_OA_OFFSET_SHIFT);
1764:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_A_OA_TRIM_OA_REG = trimRegVal;
1765:Generated_Source\PSoC4/ADC_1.c **** 
1766:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal = ADC_1_UABH_A_OA_TRIM_AGND_REG;
1767:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal &= ~(ADC_1_AGND_TRIM_MASK << CyUAB_AGND_OFFSET_SHIFT);
1768:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal |= (agndTrim << CyUAB_AGND_OFFSET_SHIFT);
1769:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_A_OA_TRIM_AGND_REG = trimRegVal;
1770:Generated_Source\PSoC4/ADC_1.c **** 
1771:Generated_Source\PSoC4/ADC_1.c ****         return ADC_1_GetCompStatus();
1772:Generated_Source\PSoC4/ADC_1.c ****     }
1773:Generated_Source\PSoC4/ADC_1.c **** 
1774:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1775:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_SetOpampTrim
1776:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1777:Generated_Source\PSoC4/ADC_1.c ****     *
1778:Generated_Source\PSoC4/ADC_1.c ****     * Write the Opamp trim code and return the comparator status.
1779:Generated_Source\PSoC4/ADC_1.c ****     *
1780:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1781:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_SetOpampTrim(uint32 opampTrim)
1782:Generated_Source\PSoC4/ADC_1.c ****     {
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 58


1783:Generated_Source\PSoC4/ADC_1.c ****         uint32 trimRegVal = ADC_1_UABH_A_OA_TRIM_OA_REG;
1784:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal &= ~(ADC_1_OPAMP_TRIM_MASK << CyUAB_OA_OFFSET_SHIFT);
1785:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal |= (opampTrim << CyUAB_OA_OFFSET_SHIFT);
1786:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_A_OA_TRIM_OA_REG = trimRegVal;
1787:Generated_Source\PSoC4/ADC_1.c **** 
1788:Generated_Source\PSoC4/ADC_1.c ****         return ADC_1_GetCompStatus();
1789:Generated_Source\PSoC4/ADC_1.c ****     }
1790:Generated_Source\PSoC4/ADC_1.c **** 
1791:Generated_Source\PSoC4/ADC_1.c **** 
1792:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1793:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_SetAgndTrim
1794:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1795:Generated_Source\PSoC4/ADC_1.c ****     *
1796:Generated_Source\PSoC4/ADC_1.c ****     * Write the Agnd trim code and return the comparator status.
1797:Generated_Source\PSoC4/ADC_1.c ****     *
1798:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1799:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_SetAgndTrim(uint32 agndTrim)
1800:Generated_Source\PSoC4/ADC_1.c ****     {
1801:Generated_Source\PSoC4/ADC_1.c ****         uint32 trimRegVal = ADC_1_UABH_A_OA_TRIM_AGND_REG;
1802:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal &= ~(ADC_1_AGND_TRIM_MASK << CyUAB_AGND_OFFSET_SHIFT);
1803:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal |= (agndTrim << CyUAB_AGND_OFFSET_SHIFT);
1804:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_A_OA_TRIM_AGND_REG = trimRegVal;
1805:Generated_Source\PSoC4/ADC_1.c **** 
1806:Generated_Source\PSoC4/ADC_1.c ****         return ADC_1_GetCompStatus();
1807:Generated_Source\PSoC4/ADC_1.c ****     }
1808:Generated_Source\PSoC4/ADC_1.c **** 
1809:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1810:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_GetCompStatus
1811:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1812:Generated_Source\PSoC4/ADC_1.c ****     *
1813:Generated_Source\PSoC4/ADC_1.c ****     * Delays to allow filter to settle before reading the ADC result.
1814:Generated_Source\PSoC4/ADC_1.c ****     * Returns 1 if the filter output is greater than AGND, else 0.
1815:Generated_Source\PSoC4/ADC_1.c ****     *
1816:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1817:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_GetCompStatus(void)
1818:Generated_Source\PSoC4/ADC_1.c ****     {
1819:Generated_Source\PSoC4/ADC_1.c ****         uint32 compStatus = 0UL;
1820:Generated_Source\PSoC4/ADC_1.c ****         int16 zeroCode = 0;
1821:Generated_Source\PSoC4/ADC_1.c **** 
1822:Generated_Source\PSoC4/ADC_1.c ****         CyDelayUs(ADC_1_allConfigs[ADC_1_currentConfig].filterTrimDelay);
1823:Generated_Source\PSoC4/ADC_1.c **** 
1824:Generated_Source\PSoC4/ADC_1.c ****         /*If unsigned differential */
1825:Generated_Source\PSoC4/ADC_1.c ****         if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
1826:Generated_Source\PSoC4/ADC_1.c ****             & ADC_1_SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_MSK) == 0U)
1827:Generated_Source\PSoC4/ADC_1.c ****         {
1828:Generated_Source\PSoC4/ADC_1.c ****             zeroCode = 0x800;
1829:Generated_Source\PSoC4/ADC_1.c ****         }
1830:Generated_Source\PSoC4/ADC_1.c **** 
1831:Generated_Source\PSoC4/ADC_1.c ****         if (ADC_1_GetResult16(ADC_1_FILTER_ADC_CHANNEL) < zeroCode)
1832:Generated_Source\PSoC4/ADC_1.c ****         {
1833:Generated_Source\PSoC4/ADC_1.c ****             compStatus = 1UL;
1834:Generated_Source\PSoC4/ADC_1.c ****         }
1835:Generated_Source\PSoC4/ADC_1.c **** 
1836:Generated_Source\PSoC4/ADC_1.c ****         return compStatus;
1837:Generated_Source\PSoC4/ADC_1.c ****     }
1838:Generated_Source\PSoC4/ADC_1.c **** 
1839:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 59


1840:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_IncOpampTrim
1841:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1842:Generated_Source\PSoC4/ADC_1.c ****     *
1843:Generated_Source\PSoC4/ADC_1.c ****     * Increments the Opamp trim code by one. Note that Opamp trim code is
1844:Generated_Source\PSoC4/ADC_1.c ****     * a 4-bit sign-magnitude value.
1845:Generated_Source\PSoC4/ADC_1.c ****     *
1846:Generated_Source\PSoC4/ADC_1.c ****     * Skips OPAMP_TRIM_NEG_BASE because it is the same as POS_BASE.
1847:Generated_Source\PSoC4/ADC_1.c ****     *
1848:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1849:Generated_Source\PSoC4/ADC_1.c ****     /* Skips OPAMP_TRIM_NEG_BASE because it is the same as POS_BASE. */
1850:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_IncOpampTrim(uint32 trim)
1851:Generated_Source\PSoC4/ADC_1.c ****     {
1852:Generated_Source\PSoC4/ADC_1.c **** 
1853:Generated_Source\PSoC4/ADC_1.c ****         if (trim < (ADC_1_OPAMP_TRIM_POS_LIMIT - 1uL))
1854:Generated_Source\PSoC4/ADC_1.c ****         {
1855:Generated_Source\PSoC4/ADC_1.c ****             trim = trim + 1uL;
1856:Generated_Source\PSoC4/ADC_1.c ****         }
1857:Generated_Source\PSoC4/ADC_1.c ****         else if ((ADC_1_OPAMP_TRIM_POS_LIMIT - 1uL) == trim)
1858:Generated_Source\PSoC4/ADC_1.c ****         {
1859:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_OPAMP_TRIM_NEG_LIMIT;
1860:Generated_Source\PSoC4/ADC_1.c ****         }
1861:Generated_Source\PSoC4/ADC_1.c ****         else if (trim <= (ADC_1_OPAMP_TRIM_NEG_BASE + 1uL))
1862:Generated_Source\PSoC4/ADC_1.c ****         {
1863:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_OPAMP_TRIM_POS_BASE;
1864:Generated_Source\PSoC4/ADC_1.c ****         }
1865:Generated_Source\PSoC4/ADC_1.c ****         else
1866:Generated_Source\PSoC4/ADC_1.c ****         {
1867:Generated_Source\PSoC4/ADC_1.c ****             trim = trim - 1uL;
1868:Generated_Source\PSoC4/ADC_1.c ****         }
1869:Generated_Source\PSoC4/ADC_1.c **** 
1870:Generated_Source\PSoC4/ADC_1.c ****         return trim;
1871:Generated_Source\PSoC4/ADC_1.c ****     }
1872:Generated_Source\PSoC4/ADC_1.c **** 
1873:Generated_Source\PSoC4/ADC_1.c **** 
1874:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1875:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_DecOpampTrim
1876:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1877:Generated_Source\PSoC4/ADC_1.c ****     *
1878:Generated_Source\PSoC4/ADC_1.c ****     * Decrements the Opamp trim code by one. Note that Opamp trim code is
1879:Generated_Source\PSoC4/ADC_1.c ****     * a 4-bit sign-magnitude value.
1880:Generated_Source\PSoC4/ADC_1.c ****     *
1881:Generated_Source\PSoC4/ADC_1.c ****     * Skips OPAMP_TRIM_NEG_BASE because it is the same as POS_BASE.
1882:Generated_Source\PSoC4/ADC_1.c ****     *
1883:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1884:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_DecOpampTrim(uint32 trim)
1885:Generated_Source\PSoC4/ADC_1.c ****     {
1886:Generated_Source\PSoC4/ADC_1.c **** 
1887:Generated_Source\PSoC4/ADC_1.c ****         if (ADC_1_OPAMP_TRIM_POS_BASE == trim)
1888:Generated_Source\PSoC4/ADC_1.c ****         {
1889:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_OPAMP_TRIM_NEG_BASE + 1uL;
1890:Generated_Source\PSoC4/ADC_1.c ****         }
1891:Generated_Source\PSoC4/ADC_1.c ****         else if (trim < ADC_1_OPAMP_TRIM_POS_LIMIT)
1892:Generated_Source\PSoC4/ADC_1.c ****         {
1893:Generated_Source\PSoC4/ADC_1.c ****             trim = trim - 1uL;
1894:Generated_Source\PSoC4/ADC_1.c ****         }
1895:Generated_Source\PSoC4/ADC_1.c ****         else if (trim < ADC_1_OPAMP_TRIM_NEG_LIMIT)
1896:Generated_Source\PSoC4/ADC_1.c ****         {
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 60


1897:Generated_Source\PSoC4/ADC_1.c ****             trim = trim + 1uL;
1898:Generated_Source\PSoC4/ADC_1.c ****         }
1899:Generated_Source\PSoC4/ADC_1.c ****         else
1900:Generated_Source\PSoC4/ADC_1.c ****         {
1901:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_OPAMP_TRIM_POS_LIMIT - 1uL;
1902:Generated_Source\PSoC4/ADC_1.c ****         }
1903:Generated_Source\PSoC4/ADC_1.c **** 
1904:Generated_Source\PSoC4/ADC_1.c ****         return trim;
1905:Generated_Source\PSoC4/ADC_1.c ****     }
1906:Generated_Source\PSoC4/ADC_1.c **** 
1907:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1908:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_IncAgndTrim
1909:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1910:Generated_Source\PSoC4/ADC_1.c ****     *
1911:Generated_Source\PSoC4/ADC_1.c ****     * Increments the Agnd trim code by one. Note that Agnd trim code is
1912:Generated_Source\PSoC4/ADC_1.c ****     * a 5-bit sign-magnitude value.
1913:Generated_Source\PSoC4/ADC_1.c ****     *
1914:Generated_Source\PSoC4/ADC_1.c ****     * Skips AGND_TRIM_NEG_BASE because it is the same as POS_BASE.
1915:Generated_Source\PSoC4/ADC_1.c ****     *
1916:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1917:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_IncAgndTrim(uint32 trim)
1918:Generated_Source\PSoC4/ADC_1.c ****     {
1919:Generated_Source\PSoC4/ADC_1.c **** 
1920:Generated_Source\PSoC4/ADC_1.c ****         if (trim < (ADC_1_AGND_TRIM_POS_LIMIT - 1uL))
1921:Generated_Source\PSoC4/ADC_1.c ****         {
1922:Generated_Source\PSoC4/ADC_1.c ****             trim = trim + 1uL;
1923:Generated_Source\PSoC4/ADC_1.c ****         }
1924:Generated_Source\PSoC4/ADC_1.c ****         else if ((ADC_1_AGND_TRIM_POS_LIMIT - 1uL) == trim)
1925:Generated_Source\PSoC4/ADC_1.c ****         {
1926:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_AGND_TRIM_NEG_LIMIT;
1927:Generated_Source\PSoC4/ADC_1.c ****         }
1928:Generated_Source\PSoC4/ADC_1.c ****         else if (trim <= (ADC_1_AGND_TRIM_NEG_BASE + 1uL))
1929:Generated_Source\PSoC4/ADC_1.c ****         {
1930:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_AGND_TRIM_POS_BASE;
1931:Generated_Source\PSoC4/ADC_1.c ****         }
1932:Generated_Source\PSoC4/ADC_1.c ****         else
1933:Generated_Source\PSoC4/ADC_1.c ****         {
1934:Generated_Source\PSoC4/ADC_1.c ****             trim = trim - 1uL;
1935:Generated_Source\PSoC4/ADC_1.c ****         }
1936:Generated_Source\PSoC4/ADC_1.c **** 
1937:Generated_Source\PSoC4/ADC_1.c ****         return trim;
1938:Generated_Source\PSoC4/ADC_1.c ****     }
1939:Generated_Source\PSoC4/ADC_1.c **** 
1940:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1941:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_DecAgndTrim
1942:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1943:Generated_Source\PSoC4/ADC_1.c ****     *
1944:Generated_Source\PSoC4/ADC_1.c ****     * Decrements the Agnd trim code by one. Note that Agnd trim code is
1945:Generated_Source\PSoC4/ADC_1.c ****     * a 5-bit sign-magnitude value.
1946:Generated_Source\PSoC4/ADC_1.c ****     *
1947:Generated_Source\PSoC4/ADC_1.c ****     * Skips AGND_TRIM_NEG_BASE because it is the same as POS_BASE.
1948:Generated_Source\PSoC4/ADC_1.c ****     *
1949:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1950:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_DecAgndTrim(uint32 trim)
1951:Generated_Source\PSoC4/ADC_1.c ****     {
1952:Generated_Source\PSoC4/ADC_1.c **** 
1953:Generated_Source\PSoC4/ADC_1.c ****         if (trim == ADC_1_AGND_TRIM_POS_BASE)
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 61


1954:Generated_Source\PSoC4/ADC_1.c ****         {
1955:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_AGND_TRIM_NEG_BASE + 1uL;
1956:Generated_Source\PSoC4/ADC_1.c ****         }
1957:Generated_Source\PSoC4/ADC_1.c ****         else if (trim < ADC_1_AGND_TRIM_POS_LIMIT)
1958:Generated_Source\PSoC4/ADC_1.c ****         {
1959:Generated_Source\PSoC4/ADC_1.c ****             trim = trim - 1uL;
1960:Generated_Source\PSoC4/ADC_1.c ****         }
1961:Generated_Source\PSoC4/ADC_1.c ****         else if (trim < ADC_1_AGND_TRIM_NEG_LIMIT)
1962:Generated_Source\PSoC4/ADC_1.c ****         {
1963:Generated_Source\PSoC4/ADC_1.c ****             trim = trim + 1uL;
1964:Generated_Source\PSoC4/ADC_1.c ****         }
1965:Generated_Source\PSoC4/ADC_1.c ****         else
1966:Generated_Source\PSoC4/ADC_1.c ****         {
1967:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_AGND_TRIM_POS_LIMIT - 1uL;
1968:Generated_Source\PSoC4/ADC_1.c ****         }
1969:Generated_Source\PSoC4/ADC_1.c **** 
1970:Generated_Source\PSoC4/ADC_1.c ****         return trim;
1971:Generated_Source\PSoC4/ADC_1.c ****     }
1972:Generated_Source\PSoC4/ADC_1.c **** 
1973:Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
1974:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_filterInit
1975:Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
1976:Generated_Source\PSoC4/ADC_1.c ****     *
1977:Generated_Source\PSoC4/ADC_1.c ****     * Initializes the UAB halves and the CTB buffer between the AGND and the SAR.
1978:Generated_Source\PSoC4/ADC_1.c ****     *
1979:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1980:Generated_Source\PSoC4/ADC_1.c ****     void ADC_1_filterInit(uint32 configNum)
1981:Generated_Source\PSoC4/ADC_1.c ****     {
1982:Generated_Source\PSoC4/ADC_1.c ****         /* Configure the common filter settings if any configuration filters */
1983:Generated_Source\PSoC4/ADC_1.c ****         switch (configNum)
1984:Generated_Source\PSoC4/ADC_1.c ****         {
1985:Generated_Source\PSoC4/ADC_1.c ****             #if (0u != ADC_1_CFG0_FILTER_PRESENT)
1986:Generated_Source\PSoC4/ADC_1.c ****             case 0u:
1987:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_A_Init(&ADC_1_CFG0_UABH_A_FILTER_config);
1988:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_B_Init(&ADC_1_CFG0_UABH_B_FILTER_config);
1989:Generated_Source\PSoC4/ADC_1.c ****             break;
1990:Generated_Source\PSoC4/ADC_1.c ****             #endif
1991:Generated_Source\PSoC4/ADC_1.c ****             #if (0u != ADC_1_CFG1_FILTER_PRESENT)
1992:Generated_Source\PSoC4/ADC_1.c ****             case 1u:
1993:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_A_Init(&ADC_1_CFG1_UABH_A_FILTER_config);
1994:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_B_Init(&ADC_1_CFG1_UABH_B_FILTER_config);
1995:Generated_Source\PSoC4/ADC_1.c ****             break;
1996:Generated_Source\PSoC4/ADC_1.c ****             #endif
1997:Generated_Source\PSoC4/ADC_1.c ****             #if (0u != ADC_1_CFG2_FILTER_PRESENT)
1998:Generated_Source\PSoC4/ADC_1.c ****             case 2u:
1999:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_A_Init(&ADC_1_CFG2_UABH_A_FILTER_config);
2000:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_B_Init(&ADC_1_CFG2_UABH_B_FILTER_config);
2001:Generated_Source\PSoC4/ADC_1.c ****             break;
2002:Generated_Source\PSoC4/ADC_1.c ****             #endif
2003:Generated_Source\PSoC4/ADC_1.c ****             #if (0u != ADC_1_CFG3_FILTER_PRESENT)
2004:Generated_Source\PSoC4/ADC_1.c ****             case 3u:
2005:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_A_Init(&ADC_1_CFG3_UABH_A_FILTER_config);
2006:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_B_Init(&ADC_1_CFG3_UABH_B_FILTER_config);
2007:Generated_Source\PSoC4/ADC_1.c ****             break;
2008:Generated_Source\PSoC4/ADC_1.c ****             #endif
2009:Generated_Source\PSoC4/ADC_1.c ****             default:
2010:Generated_Source\PSoC4/ADC_1.c ****             break;
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 62


2011:Generated_Source\PSoC4/ADC_1.c ****         }
2012:Generated_Source\PSoC4/ADC_1.c **** 
2013:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_FILTERAGND2SAR_BUFFER_Init();
2014:Generated_Source\PSoC4/ADC_1.c ****     }
2015:Generated_Source\PSoC4/ADC_1.c **** #endif /* ADC_1_ANY_CONFIG_USES_FILTER != 0u */
2016:Generated_Source\PSoC4/ADC_1.c **** 
2017:Generated_Source\PSoC4/ADC_1.c **** 
2018:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
2019:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_Init
2020:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
2021:Generated_Source\PSoC4/ADC_1.c **** *
2022:Generated_Source\PSoC4/ADC_1.c **** * \brief Initialize the component according to parameters defined in the
2023:Generated_Source\PSoC4/ADC_1.c **** * customizer.
2024:Generated_Source\PSoC4/ADC_1.c **** *
2025:Generated_Source\PSoC4/ADC_1.c **** * \param None
2026:Generated_Source\PSoC4/ADC_1.c **** *
2027:Generated_Source\PSoC4/ADC_1.c **** * \return None
2028:Generated_Source\PSoC4/ADC_1.c **** *
2029:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
2030:Generated_Source\PSoC4/ADC_1.c **** *
2031:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
2032:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_Init(void)
2033:Generated_Source\PSoC4/ADC_1.c **** {
 1401              		.loc 1 2033 0
 1402              		.cfi_startproc
 1403              		@ args = 0, pretend = 0, frame = 0
 1404              		@ frame_needed = 0, uses_anonymous_args = 0
 1405 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1406              		.cfi_def_cfa_offset 20
 1407              		.cfi_offset 4, -20
 1408              		.cfi_offset 5, -16
 1409              		.cfi_offset 6, -12
 1410              		.cfi_offset 7, -8
 1411              		.cfi_offset 14, -4
 1412 0002 4746     		mov	r7, r8
 1413 0004 80B4     		push	{r7}
 1414              		.cfi_def_cfa_offset 24
 1415              		.cfi_offset 8, -24
 1416              	.LVL128:
2034:Generated_Source\PSoC4/ADC_1.c ****     uint32 chNum = 0ul;
2035:Generated_Source\PSoC4/ADC_1.c ****     uint32 configNum = 0u;
2036:Generated_Source\PSoC4/ADC_1.c ****     int32 counts;
2037:Generated_Source\PSoC4/ADC_1.c **** 
2038:Generated_Source\PSoC4/ADC_1.c ****     if(0u == ADC_1_initVar)
 1417              		.loc 1 2038 0
 1418 0006 214B     		ldr	r3, .L112
 1419 0008 1B79     		ldrb	r3, [r3, #4]
 1420 000a 002B     		cmp	r3, #0
 1421 000c 20D0     		beq	.L111
 1422 000e 39E0     		b	.L106
 1423              	.LVL129:
 1424              	.L110:
2039:Generated_Source\PSoC4/ADC_1.c ****     {
2040:Generated_Source\PSoC4/ADC_1.c ****         /* Set offset and countsPer10Volt for all channels */
2041:Generated_Source\PSoC4/ADC_1.c ****         for(chNum = 0ul; chNum < ADC_1_TOTAL_CHANNELS_NUM; chNum++)
2042:Generated_Source\PSoC4/ADC_1.c ****         {
2043:Generated_Source\PSoC4/ADC_1.c ****             if((ADC_1_channelsConfig[chNum] & ADC_1_SAR_CHAN_CONFIG_RESOLUTION_MSK) != 0u)
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 63


2044:Generated_Source\PSoC4/ADC_1.c ****             {
2045:Generated_Source\PSoC4/ADC_1.c ****                 if((ADC_1_allConfigs[configNum].sampleCtrl
2046:Generated_Source\PSoC4/ADC_1.c ****                     & ADC_1_SAR_SAMPLE_CTRL_SUB_RESOLUTION_MSK)
2047:Generated_Source\PSoC4/ADC_1.c ****                     == ADC_1_SUB_RESOLUTION_10B)
2048:Generated_Source\PSoC4/ADC_1.c ****                 {
2049:Generated_Source\PSoC4/ADC_1.c ****                     counts = (int32) ADC_1_SAR_WRK_MAX_10BIT;
2050:Generated_Source\PSoC4/ADC_1.c ****                 }
2051:Generated_Source\PSoC4/ADC_1.c ****                 else
2052:Generated_Source\PSoC4/ADC_1.c ****                 {
2053:Generated_Source\PSoC4/ADC_1.c ****                     counts = (int32) ADC_1_SAR_WRK_MAX_8BIT;
2054:Generated_Source\PSoC4/ADC_1.c ****                 }
2055:Generated_Source\PSoC4/ADC_1.c ****             }
2056:Generated_Source\PSoC4/ADC_1.c ****             else
2057:Generated_Source\PSoC4/ADC_1.c ****             {
2058:Generated_Source\PSoC4/ADC_1.c ****                counts = (int32)ADC_1_SAR_WRK_MAX_12BIT;
2059:Generated_Source\PSoC4/ADC_1.c ****             }
2060:Generated_Source\PSoC4/ADC_1.c **** 
2061:Generated_Source\PSoC4/ADC_1.c ****             /* Single Ended Channel */
2062:Generated_Source\PSoC4/ADC_1.c ****             if((ADC_1_channelsConfig[chNum] & ADC_1_SAR_CHAN_CONFIG_DIFFERENTIAL_EN_MSK) == 0u)
2063:Generated_Source\PSoC4/ADC_1.c ****             {
2064:Generated_Source\PSoC4/ADC_1.c ****                 if(((ADC_1_allConfigs[configNum].sampleCtrl
2065:Generated_Source\PSoC4/ADC_1.c ****                     & ADC_1_SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_MSK)
2066:Generated_Source\PSoC4/ADC_1.c ****                     == ADC_1_SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_MSK) &&
2067:Generated_Source\PSoC4/ADC_1.c ****                     ((ADC_1_allConfigs[configNum].ctrl & ADC_1_SAR_CTRL_NEG_SEL_MSK)
2068:Generated_Source\PSoC4/ADC_1.c ****                     == ADC_1_NEG_VREF_SHIFTED))
2069:Generated_Source\PSoC4/ADC_1.c ****                 {
2070:Generated_Source\PSoC4/ADC_1.c ****                     /* Set offset to the minus half scale to convert results to unsigned format */
2071:Generated_Source\PSoC4/ADC_1.c ****                     ADC_1_offset[chNum] = (int16)(counts / -2);
2072:Generated_Source\PSoC4/ADC_1.c ****                 }
2073:Generated_Source\PSoC4/ADC_1.c ****                 else
2074:Generated_Source\PSoC4/ADC_1.c ****                 {
2075:Generated_Source\PSoC4/ADC_1.c ****                     ADC_1_offset[chNum] = 0;
2076:Generated_Source\PSoC4/ADC_1.c ****                 }
2077:Generated_Source\PSoC4/ADC_1.c **** 
2078:Generated_Source\PSoC4/ADC_1.c ****             }
2079:Generated_Source\PSoC4/ADC_1.c ****             else    /* Differential channel */
2080:Generated_Source\PSoC4/ADC_1.c ****             {
2081:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_offset[chNum] = 0;
 1425              		.loc 1 2081 0
 1426 0010 6300     		lsls	r3, r4, #1
 1427 0012 0021     		movs	r1, #0
 1428 0014 1E4A     		ldr	r2, .L112+4
 1429 0016 9952     		strh	r1, [r3, r2]
2082:Generated_Source\PSoC4/ADC_1.c ****             }
2083:Generated_Source\PSoC4/ADC_1.c **** 
2084:Generated_Source\PSoC4/ADC_1.c ****             /* Calculate gain in counts per 10 volts with rounding */
2085:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_countsPer10Volt[chNum] = (int16)(((counts * ADC_1_10MV_COUNTS) \
2086:Generated_Source\PSoC4/ADC_1.c ****                             + ADC_1_allConfigs[configNum].vrefMvValue) \
 1430              		.loc 1 2086 0
 1431 0018 1E4B     		ldr	r3, .L112+8
 1432 001a 9846     		mov	r8, r3
 1433 001c FE00     		lsls	r6, r7, #3
 1434 001e F31B     		subs	r3, r6, r7
 1435 0020 DD00     		lsls	r5, r3, #3
 1436 0022 4544     		add	r5, r5, r8
 1437 0024 E96A     		ldr	r1, [r5, #44]
 1438 0026 1C4B     		ldr	r3, .L112+12
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 64


 1439 0028 C818     		adds	r0, r1, r3
2087:Generated_Source\PSoC4/ADC_1.c ****                             / (ADC_1_allConfigs[configNum].vrefMvValue * 2));
 1440              		.loc 1 2087 0
 1441 002a 4900     		lsls	r1, r1, #1
 1442 002c FFF7FEFF 		bl	__aeabi_idiv
 1443              	.LVL130:
2085:Generated_Source\PSoC4/ADC_1.c ****                             + ADC_1_allConfigs[configNum].vrefMvValue) \
 1444              		.loc 1 2085 0
 1445 0030 00B2     		sxth	r0, r0
 1446 0032 A300     		lsls	r3, r4, #2
 1447 0034 194A     		ldr	r2, .L112+16
 1448 0036 9850     		str	r0, [r3, r2]
2088:Generated_Source\PSoC4/ADC_1.c **** 
2089:Generated_Source\PSoC4/ADC_1.c ****             /* Increment configuration number after rolling over to the next configuration*/
2090:Generated_Source\PSoC4/ADC_1.c ****             if((ADC_1_allConfigs[configNum].channelBase
 1449              		.loc 1 2090 0
 1450 0038 F61B     		subs	r6, r6, r7
 1451 003a F300     		lsls	r3, r6, #3
 1452 003c 4246     		mov	r2, r8
 1453 003e 9A58     		ldr	r2, [r3, r2]
2091:Generated_Source\PSoC4/ADC_1.c ****                 + (ADC_1_allConfigs[configNum].numChannels - 1uL)) == chNum)
 1454              		.loc 1 2091 0
 1455 0040 6B68     		ldr	r3, [r5, #4]
 1456 0042 D318     		adds	r3, r2, r3
 1457 0044 013B     		subs	r3, r3, #1
2090:Generated_Source\PSoC4/ADC_1.c ****                 + (ADC_1_allConfigs[configNum].numChannels - 1uL)) == chNum)
 1458              		.loc 1 2090 0
 1459 0046 9C42     		cmp	r4, r3
 1460 0048 00D1     		bne	.L109
2092:Generated_Source\PSoC4/ADC_1.c ****             {
2093:Generated_Source\PSoC4/ADC_1.c ****                 configNum++;
 1461              		.loc 1 2093 0
 1462 004a 0137     		adds	r7, r7, #1
 1463              	.LVL131:
 1464              	.L109:
2041:Generated_Source\PSoC4/ADC_1.c ****         {
 1465              		.loc 1 2041 0 discriminator 2
 1466 004c 0134     		adds	r4, r4, #1
 1467              	.LVL132:
 1468 004e 01E0     		b	.L107
 1469              	.LVL133:
 1470              	.L111:
 1471 0050 0027     		movs	r7, #0
 1472 0052 0024     		movs	r4, #0
 1473              	.LVL134:
 1474              	.L107:
2041:Generated_Source\PSoC4/ADC_1.c ****         {
 1475              		.loc 1 2041 0 is_stmt 0 discriminator 1
 1476 0054 002C     		cmp	r4, #0
 1477 0056 DBD0     		beq	.L110
2094:Generated_Source\PSoC4/ADC_1.c ****             }
2095:Generated_Source\PSoC4/ADC_1.c ****         } /* for(chNum = 0ul; chNum < ADC_1_TOTAL_CHANNELS_NUM; chNum++) */
2096:Generated_Source\PSoC4/ADC_1.c **** 
2097:Generated_Source\PSoC4/ADC_1.c ****         /* Start and set interrupt vector */
2098:Generated_Source\PSoC4/ADC_1.c ****         CyIntSetPriority(ADC_1_INTC_NUMBER, ADC_1_INTC_PRIOR_NUMBER);
 1478              		.loc 1 2098 0 is_stmt 1
 1479 0058 0321     		movs	r1, #3
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 65


 1480 005a 0F20     		movs	r0, #15
 1481 005c FFF7FEFF 		bl	CyIntSetPriority
 1482              	.LVL135:
2099:Generated_Source\PSoC4/ADC_1.c ****         (void)CyIntSetVector(ADC_1_INTC_NUMBER, &ADC_1_ISR);
 1483              		.loc 1 2099 0
 1484 0060 0F49     		ldr	r1, .L112+20
 1485 0062 0F20     		movs	r0, #15
 1486 0064 FFF7FEFF 		bl	CyIntSetVector
 1487              	.LVL136:
2100:Generated_Source\PSoC4/ADC_1.c **** 
2101:Generated_Source\PSoC4/ADC_1.c ****         /* Initialize configuration zero if SelectConfig has not been called */
2102:Generated_Source\PSoC4/ADC_1.c ****         if(0u == ADC_1_selected)
 1488              		.loc 1 2102 0
 1489 0068 084B     		ldr	r3, .L112
 1490 006a 5B79     		ldrb	r3, [r3, #5]
 1491 006c 002B     		cmp	r3, #0
 1492 006e 09D1     		bne	.L106
2103:Generated_Source\PSoC4/ADC_1.c ****         {
2104:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_selected = 1u;
 1493              		.loc 1 2104 0
 1494 0070 0122     		movs	r2, #1
 1495 0072 064B     		ldr	r3, .L112
 1496 0074 5A71     		strb	r2, [r3, #5]
 1497              	.LVL137:
2105:Generated_Source\PSoC4/ADC_1.c ****             configNum = 0u;
2106:Generated_Source\PSoC4/ADC_1.c ****             /* Change Vref selection if is was routed by Creator. Break. */
2107:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_VREF_ROUTED)
2108:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_vrefAMux_DisconnectAll();
2109:Generated_Source\PSoC4/ADC_1.c ****             #endif
2110:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_InitConfig(&ADC_1_allConfigs[configNum]);
 1498              		.loc 1 2110 0
 1499 0076 074C     		ldr	r4, .L112+8
 1500              	.LVL138:
 1501 0078 2000     		movs	r0, r4
 1502 007a FFF7FEFF 		bl	ADC_1_InitConfig
 1503              	.LVL139:
2111:Generated_Source\PSoC4/ADC_1.c ****             /* Change Vref selection if is was routed by Creator. Make. */
2112:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_VREF_ROUTED)
2113:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_vrefAMux_Select((uint8)configNum);
2114:Generated_Source\PSoC4/ADC_1.c ****             #endif
2115:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_SAR_CHAN_EN_REG = ADC_1_allConfigs[configNum].chanEn;
 1504              		.loc 1 2115 0
 1505 007e 226A     		ldr	r2, [r4, #32]
 1506 0080 084B     		ldr	r3, .L112+24
 1507 0082 1A60     		str	r2, [r3]
 1508              	.LVL140:
 1509              	.L106:
2116:Generated_Source\PSoC4/ADC_1.c ****             #if(0u != ADC_1_ANY_CONFIG_USES_FILTER)
2117:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_filterVinMux_Select((uint8)configNum);
2118:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_filterInit(configNum);
2119:Generated_Source\PSoC4/ADC_1.c ****             #endif
2120:Generated_Source\PSoC4/ADC_1.c ****         }
2121:Generated_Source\PSoC4/ADC_1.c ****     }
2122:Generated_Source\PSoC4/ADC_1.c ****     return;
2123:Generated_Source\PSoC4/ADC_1.c **** }
 1510              		.loc 1 2123 0
 1511              		@ sp needed
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 66


 1512 0084 04BC     		pop	{r2}
 1513 0086 9046     		mov	r8, r2
 1514 0088 F0BD     		pop	{r4, r5, r6, r7, pc}
 1515              	.L113:
 1516 008a C046     		.align	2
 1517              	.L112:
 1518 008c 00000000 		.word	.LANCHOR0
 1519 0090 00000000 		.word	ADC_1_offset
 1520 0094 00000000 		.word	ADC_1_allConfigs
 1521 0098 00007102 		.word	40960000
 1522 009c 00000000 		.word	ADC_1_countsPer10Volt
 1523 00a0 00000000 		.word	ADC_1_ISR
 1524 00a4 20003A40 		.word	1077542944
 1525              		.cfi_endproc
 1526              	.LFE26:
 1527              		.size	ADC_1_Init, .-ADC_1_Init
 1528              		.section	.text.ADC_1_Enable,"ax",%progbits
 1529              		.align	2
 1530              		.global	ADC_1_Enable
 1531              		.code	16
 1532              		.thumb_func
 1533              		.type	ADC_1_Enable, %function
 1534              	ADC_1_Enable:
 1535              	.LFB27:
2124:Generated_Source\PSoC4/ADC_1.c **** 
2125:Generated_Source\PSoC4/ADC_1.c **** 
2126:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
2127:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_Enable
2128:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
2129:Generated_Source\PSoC4/ADC_1.c **** *
2130:Generated_Source\PSoC4/ADC_1.c **** * \brief Enables the component.
2131:Generated_Source\PSoC4/ADC_1.c **** *
2132:Generated_Source\PSoC4/ADC_1.c **** * \param None
2133:Generated_Source\PSoC4/ADC_1.c **** *
2134:Generated_Source\PSoC4/ADC_1.c **** * \return None
2135:Generated_Source\PSoC4/ADC_1.c **** *
2136:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect
2137:Generated_Source\PSoC4/ADC_1.c **** *  None
2138:Generated_Source\PSoC4/ADC_1.c **** *
2139:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
2140:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_Enable(void)
2141:Generated_Source\PSoC4/ADC_1.c **** {
 1536              		.loc 1 2141 0
 1537              		.cfi_startproc
 1538              		@ args = 0, pretend = 0, frame = 0
 1539              		@ frame_needed = 0, uses_anonymous_args = 0
 1540 0000 10B5     		push	{r4, lr}
 1541              		.cfi_def_cfa_offset 8
 1542              		.cfi_offset 4, -8
 1543              		.cfi_offset 14, -4
2142:Generated_Source\PSoC4/ADC_1.c **** 
2143:Generated_Source\PSoC4/ADC_1.c ****     #if(0u != ADC_1_ANY_CONFIG_USES_FILTER)
2144:Generated_Source\PSoC4/ADC_1.c ****         if((ADC_1_allConfigs[ADC_1_currentConfig].miscConfig
2145:Generated_Source\PSoC4/ADC_1.c ****             & ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
2146:Generated_Source\PSoC4/ADC_1.c ****             == ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
2147:Generated_Source\PSoC4/ADC_1.c ****         {
2148:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_FILTERAGND2SAR_BUFFER_Enable();
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 67


2149:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_Enable();
2150:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_B_Enable();
2151:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_B_Run(1u);
2152:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_Run(1u);
2153:Generated_Source\PSoC4/ADC_1.c ****         }
2154:Generated_Source\PSoC4/ADC_1.c ****     #endif /* ADC_1_ANY_CONFIG_USES_FILTER != 0u */
2155:Generated_Source\PSoC4/ADC_1.c **** 
2156:Generated_Source\PSoC4/ADC_1.c ****     if (0u == (ADC_1_SAR_CTRL_REG & ADC_1_SAR_CTRL_ENABLED_MSK))
 1544              		.loc 1 2156 0
 1545 0002 0D4B     		ldr	r3, .L117
 1546 0004 1B68     		ldr	r3, [r3]
 1547 0006 002B     		cmp	r3, #0
 1548 0008 0CDB     		blt	.L115
 1549              	.L116:
2157:Generated_Source\PSoC4/ADC_1.c ****     {
2158:Generated_Source\PSoC4/ADC_1.c ****         while (0u != (ADC_1_SAR_STATUS_REG & ADC_1_BUSY_MSK))
 1550              		.loc 1 2158 0 discriminator 1
 1551 000a 0C4B     		ldr	r3, .L117+4
 1552 000c 1B68     		ldr	r3, [r3]
 1553 000e 002B     		cmp	r3, #0
 1554 0010 FBDB     		blt	.L116
2159:Generated_Source\PSoC4/ADC_1.c ****         {
2160:Generated_Source\PSoC4/ADC_1.c ****             /* wait for SAR to go idle to avoid deadlock */
2161:Generated_Source\PSoC4/ADC_1.c ****         }
2162:Generated_Source\PSoC4/ADC_1.c **** 
2163:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_CTRL_REG |= ADC_1_SAR_CTRL_ENABLED_MSK;
 1555              		.loc 1 2163 0
 1556 0012 094A     		ldr	r2, .L117
 1557 0014 1368     		ldr	r3, [r2]
 1558 0016 8021     		movs	r1, #128
 1559 0018 0906     		lsls	r1, r1, #24
 1560 001a 0B43     		orrs	r3, r1
 1561 001c 1360     		str	r3, [r2]
2164:Generated_Source\PSoC4/ADC_1.c **** 
2165:Generated_Source\PSoC4/ADC_1.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
2166:Generated_Source\PSoC4/ADC_1.c ****         CyDelayUs(ADC_1_10US_DELAY);
 1562              		.loc 1 2166 0
 1563 001e 0A20     		movs	r0, #10
 1564 0020 FFF7FEFF 		bl	CyDelayUs
 1565              	.LVL141:
 1566              	.L115:
2167:Generated_Source\PSoC4/ADC_1.c ****     }
2168:Generated_Source\PSoC4/ADC_1.c **** 
2169:Generated_Source\PSoC4/ADC_1.c ****     /* Must set the DFT_CTRL register after enabling the SAR as it is a non-retention register. */
2170:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SetDFTControl(&ADC_1_allConfigs[ADC_1_currentConfig]);
 1567              		.loc 1 2170 0
 1568 0024 064B     		ldr	r3, .L117+8
 1569 0026 1A68     		ldr	r2, [r3]
 1570 0028 D300     		lsls	r3, r2, #3
 1571 002a 9B1A     		subs	r3, r3, r2
 1572 002c D800     		lsls	r0, r3, #3
 1573 002e 054B     		ldr	r3, .L117+12
 1574 0030 C018     		adds	r0, r0, r3
 1575 0032 FFF7FEFF 		bl	ADC_1_SetDFTControl
 1576              	.LVL142:
2171:Generated_Source\PSoC4/ADC_1.c **** 
2172:Generated_Source\PSoC4/ADC_1.c ****     return;
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 68


2173:Generated_Source\PSoC4/ADC_1.c **** }
 1577              		.loc 1 2173 0
 1578              		@ sp needed
 1579 0036 10BD     		pop	{r4, pc}
 1580              	.L118:
 1581              		.align	2
 1582              	.L117:
 1583 0038 00003A40 		.word	1077542912
 1584 003c A0023A40 		.word	1077543584
 1585 0040 00000000 		.word	.LANCHOR0
 1586 0044 00000000 		.word	ADC_1_allConfigs
 1587              		.cfi_endproc
 1588              	.LFE27:
 1589              		.size	ADC_1_Enable, .-ADC_1_Enable
 1590              		.section	.text.ADC_1_Start,"ax",%progbits
 1591              		.align	2
 1592              		.global	ADC_1_Start
 1593              		.code	16
 1594              		.thumb_func
 1595              		.type	ADC_1_Start, %function
 1596              	ADC_1_Start:
 1597              	.LFB1:
 556:Generated_Source\PSoC4/ADC_1.c ****     if (ADC_1_INIT_VAR_INIT_FLAG != (ADC_1_INIT_VAR_INIT_FLAG & ADC_1_initVar))
 1598              		.loc 1 556 0
 1599              		.cfi_startproc
 1600              		@ args = 0, pretend = 0, frame = 0
 1601              		@ frame_needed = 0, uses_anonymous_args = 0
 1602 0000 10B5     		push	{r4, lr}
 1603              		.cfi_def_cfa_offset 8
 1604              		.cfi_offset 4, -8
 1605              		.cfi_offset 14, -4
 557:Generated_Source\PSoC4/ADC_1.c ****     {
 1606              		.loc 1 557 0
 1607 0002 074B     		ldr	r3, .L121
 1608 0004 1B79     		ldrb	r3, [r3, #4]
 1609 0006 DB07     		lsls	r3, r3, #31
 1610 0008 06D4     		bmi	.L120
 559:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_initVar |= ADC_1_INIT_VAR_INIT_FLAG;
 1611              		.loc 1 559 0
 1612 000a FFF7FEFF 		bl	ADC_1_Init
 1613              	.LVL143:
 560:Generated_Source\PSoC4/ADC_1.c ****     }
 1614              		.loc 1 560 0
 1615 000e 044A     		ldr	r2, .L121
 1616 0010 1179     		ldrb	r1, [r2, #4]
 1617 0012 0123     		movs	r3, #1
 1618 0014 0B43     		orrs	r3, r1
 1619 0016 1371     		strb	r3, [r2, #4]
 1620              	.L120:
 563:Generated_Source\PSoC4/ADC_1.c **** 
 1621              		.loc 1 563 0
 1622 0018 FFF7FEFF 		bl	ADC_1_Enable
 1623              	.LVL144:
 566:Generated_Source\PSoC4/ADC_1.c **** 
 1624              		.loc 1 566 0
 1625              		@ sp needed
 1626 001c 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 69


 1627              	.L122:
 1628 001e C046     		.align	2
 1629              	.L121:
 1630 0020 00000000 		.word	.LANCHOR0
 1631              		.cfi_endproc
 1632              	.LFE1:
 1633              		.size	ADC_1_Start, .-ADC_1_Start
 1634              		.section	.text.ADC_1_StartEx,"ax",%progbits
 1635              		.align	2
 1636              		.global	ADC_1_StartEx
 1637              		.code	16
 1638              		.thumb_func
 1639              		.type	ADC_1_StartEx, %function
 1640              	ADC_1_StartEx:
 1641              	.LFB2:
 585:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_Start();
 1642              		.loc 1 585 0
 1643              		.cfi_startproc
 1644              		@ args = 0, pretend = 0, frame = 0
 1645              		@ frame_needed = 0, uses_anonymous_args = 0
 1646              	.LVL145:
 1647 0000 10B5     		push	{r4, lr}
 1648              		.cfi_def_cfa_offset 8
 1649              		.cfi_offset 4, -8
 1650              		.cfi_offset 14, -4
 1651 0002 0400     		movs	r4, r0
 586:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_IRQ_StartEx(address);
 1652              		.loc 1 586 0
 1653 0004 FFF7FEFF 		bl	ADC_1_Start
 1654              	.LVL146:
 587:Generated_Source\PSoC4/ADC_1.c ****     return;
 1655              		.loc 1 587 0
 1656 0008 2000     		movs	r0, r4
 1657 000a FFF7FEFF 		bl	ADC_1_IRQ_StartEx
 1658              	.LVL147:
 589:Generated_Source\PSoC4/ADC_1.c **** 
 1659              		.loc 1 589 0
 1660              		@ sp needed
 1661              	.LVL148:
 1662 000e 10BD     		pop	{r4, pc}
 1663              		.cfi_endproc
 1664              	.LFE2:
 1665              		.size	ADC_1_StartEx, .-ADC_1_StartEx
 1666              		.section	.text.ADC_1_SelectConfig,"ax",%progbits
 1667              		.align	2
 1668              		.global	ADC_1_SelectConfig
 1669              		.code	16
 1670              		.thumb_func
 1671              		.type	ADC_1_SelectConfig, %function
 1672              	ADC_1_SelectConfig:
 1673              	.LFB6:
 772:Generated_Source\PSoC4/ADC_1.c ****     /* Check whether the configuration number is valid or not */
 1674              		.loc 1 772 0
 1675              		.cfi_startproc
 1676              		@ args = 0, pretend = 0, frame = 0
 1677              		@ frame_needed = 0, uses_anonymous_args = 0
 1678              	.LVL149:
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 70


 1679 0000 70B5     		push	{r4, r5, r6, lr}
 1680              		.cfi_def_cfa_offset 16
 1681              		.cfi_offset 4, -16
 1682              		.cfi_offset 5, -12
 1683              		.cfi_offset 6, -8
 1684              		.cfi_offset 14, -4
 1685 0002 0400     		movs	r4, r0
 1686 0004 0E00     		movs	r6, r1
 774:Generated_Source\PSoC4/ADC_1.c ****     {
 1687              		.loc 1 774 0
 1688 0006 0028     		cmp	r0, #0
 1689 0008 27D1     		bne	.L124
 777:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_selected = 1u;
 1690              		.loc 1 777 0
 1691 000a FFF7FEFF 		bl	ADC_1_Stop
 1692              	.LVL150:
 778:Generated_Source\PSoC4/ADC_1.c **** 
 1693              		.loc 1 778 0
 1694 000e 134B     		ldr	r3, .L127
 1695 0010 0122     		movs	r2, #1
 1696 0012 5A71     		strb	r2, [r3, #5]
 780:Generated_Source\PSoC4/ADC_1.c ****         {
 1697              		.loc 1 780 0
 1698 0014 1B79     		ldrb	r3, [r3, #4]
 1699 0016 002B     		cmp	r3, #0
 1700 0018 06D1     		bne	.L126
 782:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_initVar |= ADC_1_INIT_VAR_INIT_FLAG;
 1701              		.loc 1 782 0
 1702 001a FFF7FEFF 		bl	ADC_1_Init
 1703              	.LVL151:
 783:Generated_Source\PSoC4/ADC_1.c ****         }
 1704              		.loc 1 783 0
 1705 001e 0F4A     		ldr	r2, .L127
 1706 0020 1179     		ldrb	r1, [r2, #4]
 1707 0022 0123     		movs	r3, #1
 1708 0024 0B43     		orrs	r3, r1
 1709 0026 1371     		strb	r3, [r2, #4]
 1710              	.L126:
 788:Generated_Source\PSoC4/ADC_1.c ****         #if (ADC_1_VREF_ROUTED)
 1711              		.loc 1 788 0
 1712 0028 E300     		lsls	r3, r4, #3
 1713 002a 1B1B     		subs	r3, r3, r4
 1714 002c DD00     		lsls	r5, r3, #3
 1715 002e 0C4B     		ldr	r3, .L127+4
 1716 0030 ED18     		adds	r5, r5, r3
 1717 0032 2800     		movs	r0, r5
 1718 0034 FFF7FEFF 		bl	ADC_1_InitConfig
 1719              	.LVL152:
 796:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_RANGE_INTR_MASK_REG = ADC_1_allConfigs[config].rangeIntMask;
 1720              		.loc 1 796 0
 1721 0038 0A4B     		ldr	r3, .L127+8
 1722 003a 2A6A     		ldr	r2, [r5, #32]
 1723 003c 1A60     		str	r2, [r3]
 797:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_SATURATE_INTR_MASK_REG = ADC_1_allConfigs[config].satIntMask;
 1724              		.loc 1 797 0
 1725 003e 0A4B     		ldr	r3, .L127+12
 1726 0040 6A6A     		ldr	r2, [r5, #36]
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 71


 1727 0042 1A60     		str	r2, [r3]
 798:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_currentConfig = config;
 1728              		.loc 1 798 0
 1729 0044 AA6A     		ldr	r2, [r5, #40]
 1730 0046 094B     		ldr	r3, .L127+16
 1731 0048 1A60     		str	r2, [r3]
 799:Generated_Source\PSoC4/ADC_1.c **** 
 1732              		.loc 1 799 0
 1733 004a 044B     		ldr	r3, .L127
 1734 004c 1C60     		str	r4, [r3]
 801:Generated_Source\PSoC4/ADC_1.c ****         {
 1735              		.loc 1 801 0
 1736 004e 012E     		cmp	r6, #1
 1737 0050 03D1     		bne	.L124
 804:Generated_Source\PSoC4/ADC_1.c **** 
 1738              		.loc 1 804 0
 1739 0052 FFF7FEFF 		bl	ADC_1_Start
 1740              	.LVL153:
 807:Generated_Source\PSoC4/ADC_1.c ****         }
 1741              		.loc 1 807 0
 1742 0056 FFF7FEFF 		bl	ADC_1_StartConvert
 1743              	.LVL154:
 1744              	.L124:
 811:Generated_Source\PSoC4/ADC_1.c **** 
 1745              		.loc 1 811 0
 1746              		@ sp needed
 1747              	.LVL155:
 1748              	.LVL156:
 1749 005a 70BD     		pop	{r4, r5, r6, pc}
 1750              	.L128:
 1751              		.align	2
 1752              	.L127:
 1753 005c 00000000 		.word	.LANCHOR0
 1754 0060 00000000 		.word	ADC_1_allConfigs
 1755 0064 20003A40 		.word	1077542944
 1756 0068 38023A40 		.word	1077543480
 1757 006c 28023A40 		.word	1077543464
 1758              		.cfi_endproc
 1759              	.LFE6:
 1760              		.size	ADC_1_SelectConfig, .-ADC_1_SelectConfig
 1761              		.section	.text.ADC_1_StopConvert,"ax",%progbits
 1762              		.align	2
 1763              		.global	ADC_1_StopConvert
 1764              		.code	16
 1765              		.thumb_func
 1766              		.type	ADC_1_StopConvert, %function
 1767              	ADC_1_StopConvert:
 1768              	.LFB8:
 865:Generated_Source\PSoC4/ADC_1.c ****     if((ADC_1_SAR_SAMPLE_CTRL_REG
 1769              		.loc 1 865 0
 1770              		.cfi_startproc
 1771              		@ args = 0, pretend = 0, frame = 0
 1772              		@ frame_needed = 0, uses_anonymous_args = 0
 1773 0000 10B5     		push	{r4, lr}
 1774              		.cfi_def_cfa_offset 8
 1775              		.cfi_offset 4, -8
 1776              		.cfi_offset 14, -4
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 72


 866:Generated_Source\PSoC4/ADC_1.c ****         & ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 1777              		.loc 1 866 0
 1778 0002 0C4B     		ldr	r3, .L131
 1779 0004 1B68     		ldr	r3, [r3]
 1780 0006 5B03     		lsls	r3, r3, #13
 1781 0008 12D5     		bpl	.L129
 870:Generated_Source\PSoC4/ADC_1.c **** 
 1782              		.loc 1 870 0
 1783 000a 0A4A     		ldr	r2, .L131
 1784 000c 1168     		ldr	r1, [r2]
 1785 000e 0A4B     		ldr	r3, .L131+4
 1786 0010 0B40     		ands	r3, r1
 1787 0012 1360     		str	r3, [r2]
 872:Generated_Source\PSoC4/ADC_1.c ****             & ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
 1788              		.loc 1 872 0
 1789 0014 094B     		ldr	r3, .L131+8
 1790 0016 1A68     		ldr	r2, [r3]
 1791 0018 D300     		lsls	r3, r2, #3
 1792 001a 9A1A     		subs	r2, r3, r2
 1793 001c D300     		lsls	r3, r2, #3
 1794 001e 084A     		ldr	r2, .L131+12
 1795 0020 D318     		adds	r3, r2, r3
 1796 0022 1B6B     		ldr	r3, [r3, #48]
 1797 0024 9B07     		lsls	r3, r3, #30
 1798 0026 03D5     		bpl	.L129
 877:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_Start();
 1799              		.loc 1 877 0
 1800 0028 FFF7FEFF 		bl	ADC_1_Stop
 1801              	.LVL157:
 878:Generated_Source\PSoC4/ADC_1.c ****         }
 1802              		.loc 1 878 0
 1803 002c FFF7FEFF 		bl	ADC_1_Start
 1804              	.LVL158:
 1805              	.L129:
 883:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 1806              		.loc 1 883 0
 1807              		@ sp needed
 1808 0030 10BD     		pop	{r4, pc}
 1809              	.L132:
 1810 0032 C046     		.align	2
 1811              	.L131:
 1812 0034 04003A40 		.word	1077542916
 1813 0038 FFFFFEFF 		.word	-65537
 1814 003c 00000000 		.word	.LANCHOR0
 1815 0040 00000000 		.word	ADC_1_allConfigs
 1816              		.cfi_endproc
 1817              	.LFE8:
 1818              		.size	ADC_1_StopConvert, .-ADC_1_StopConvert
 1819              		.comm	ADC_1_countsPer10Volt,4,4
 1820              		.comm	ADC_1_offset,2,4
 1821              		.global	ADC_1_selected
 1822              		.global	ADC_1_initVar
 1823              		.bss
 1824              		.align	2
 1825              		.set	.LANCHOR0,. + 0
 1826              		.type	ADC_1_currentConfig, %object
 1827              		.size	ADC_1_currentConfig, 4
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 73


 1828              	ADC_1_currentConfig:
 1829 0000 00000000 		.space	4
 1830              		.type	ADC_1_initVar, %object
 1831              		.size	ADC_1_initVar, 1
 1832              	ADC_1_initVar:
 1833 0004 00       		.space	1
 1834              		.type	ADC_1_selected, %object
 1835              		.size	ADC_1_selected, 1
 1836              	ADC_1_selected:
 1837 0005 00       		.space	1
 1838              		.text
 1839              	.Letext0:
 1840              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1841              		.file 3 "Generated_Source\\PSoC4\\ADC_1.h"
 1842              		.file 4 "Generated_Source\\PSoC4\\ADC_1_intSarClock.h"
 1843              		.file 5 "Generated_Source\\PSoC4\\CyLib.h"
 1844              		.file 6 "Generated_Source\\PSoC4\\ADC_1_IRQ.h"
 1845              		.section	.debug_info,"",%progbits
 1846              	.Ldebug_info0:
 1847 0000 6D0A0000 		.4byte	0xa6d
 1848 0004 0400     		.2byte	0x4
 1849 0006 00000000 		.4byte	.Ldebug_abbrev0
 1850 000a 04       		.byte	0x4
 1851 000b 01       		.uleb128 0x1
 1852 000c B7040000 		.4byte	.LASF110
 1853 0010 0C       		.byte	0xc
 1854 0011 08040000 		.4byte	.LASF111
 1855 0015 99030000 		.4byte	.LASF112
 1856 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1857 001d 00000000 		.4byte	0
 1858 0021 00000000 		.4byte	.Ldebug_line0
 1859 0025 02       		.uleb128 0x2
 1860 0026 01       		.byte	0x1
 1861 0027 06       		.byte	0x6
 1862 0028 72000000 		.4byte	.LASF0
 1863 002c 02       		.uleb128 0x2
 1864 002d 01       		.byte	0x1
 1865 002e 08       		.byte	0x8
 1866 002f 38040000 		.4byte	.LASF1
 1867 0033 02       		.uleb128 0x2
 1868 0034 02       		.byte	0x2
 1869 0035 05       		.byte	0x5
 1870 0036 6E040000 		.4byte	.LASF2
 1871 003a 02       		.uleb128 0x2
 1872 003b 02       		.byte	0x2
 1873 003c 07       		.byte	0x7
 1874 003d 30020000 		.4byte	.LASF3
 1875 0041 02       		.uleb128 0x2
 1876 0042 04       		.byte	0x4
 1877 0043 05       		.byte	0x5
 1878 0044 B6000000 		.4byte	.LASF4
 1879 0048 02       		.uleb128 0x2
 1880 0049 04       		.byte	0x4
 1881 004a 07       		.byte	0x7
 1882 004b B5010000 		.4byte	.LASF5
 1883 004f 02       		.uleb128 0x2
 1884 0050 08       		.byte	0x8
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 74


 1885 0051 05       		.byte	0x5
 1886 0052 64000000 		.4byte	.LASF6
 1887 0056 02       		.uleb128 0x2
 1888 0057 08       		.byte	0x8
 1889 0058 07       		.byte	0x7
 1890 0059 40000000 		.4byte	.LASF7
 1891 005d 03       		.uleb128 0x3
 1892 005e 04       		.byte	0x4
 1893 005f 05       		.byte	0x5
 1894 0060 696E7400 		.ascii	"int\000"
 1895 0064 02       		.uleb128 0x2
 1896 0065 04       		.byte	0x4
 1897 0066 07       		.byte	0x7
 1898 0067 7E010000 		.4byte	.LASF8
 1899 006b 04       		.uleb128 0x4
 1900 006c D6000000 		.4byte	.LASF9
 1901 0070 02       		.byte	0x2
 1902 0071 FC01     		.2byte	0x1fc
 1903 0073 2C000000 		.4byte	0x2c
 1904 0077 04       		.uleb128 0x4
 1905 0078 00000000 		.4byte	.LASF10
 1906 007c 02       		.byte	0x2
 1907 007d FD01     		.2byte	0x1fd
 1908 007f 3A000000 		.4byte	0x3a
 1909 0083 04       		.uleb128 0x4
 1910 0084 30010000 		.4byte	.LASF11
 1911 0088 02       		.byte	0x2
 1912 0089 FE01     		.2byte	0x1fe
 1913 008b 48000000 		.4byte	0x48
 1914 008f 04       		.uleb128 0x4
 1915 0090 6D060000 		.4byte	.LASF12
 1916 0094 02       		.byte	0x2
 1917 0095 0002     		.2byte	0x200
 1918 0097 33000000 		.4byte	0x33
 1919 009b 04       		.uleb128 0x4
 1920 009c 9F000000 		.4byte	.LASF13
 1921 00a0 02       		.byte	0x2
 1922 00a1 0102     		.2byte	0x201
 1923 00a3 41000000 		.4byte	0x41
 1924 00a7 04       		.uleb128 0x4
 1925 00a8 EA020000 		.4byte	.LASF14
 1926 00ac 02       		.byte	0x2
 1927 00ad 0202     		.2byte	0x202
 1928 00af B3000000 		.4byte	0xb3
 1929 00b3 02       		.uleb128 0x2
 1930 00b4 04       		.byte	0x4
 1931 00b5 04       		.byte	0x4
 1932 00b6 77030000 		.4byte	.LASF15
 1933 00ba 02       		.uleb128 0x2
 1934 00bb 08       		.byte	0x8
 1935 00bc 04       		.byte	0x4
 1936 00bd E6000000 		.4byte	.LASF16
 1937 00c1 04       		.uleb128 0x4
 1938 00c2 60030000 		.4byte	.LASF17
 1939 00c6 02       		.byte	0x2
 1940 00c7 0702     		.2byte	0x207
 1941 00c9 4F000000 		.4byte	0x4f
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 75


 1942 00cd 02       		.uleb128 0x2
 1943 00ce 01       		.byte	0x1
 1944 00cf 08       		.byte	0x8
 1945 00d0 4E050000 		.4byte	.LASF18
 1946 00d4 04       		.uleb128 0x4
 1947 00d5 D1020000 		.4byte	.LASF19
 1948 00d9 02       		.byte	0x2
 1949 00da A802     		.2byte	0x2a8
 1950 00dc E0000000 		.4byte	0xe0
 1951 00e0 05       		.uleb128 0x5
 1952 00e1 83000000 		.4byte	0x83
 1953 00e5 04       		.uleb128 0x4
 1954 00e6 58050000 		.4byte	.LASF20
 1955 00ea 02       		.byte	0x2
 1956 00eb B802     		.2byte	0x2b8
 1957 00ed F1000000 		.4byte	0xf1
 1958 00f1 06       		.uleb128 0x6
 1959 00f2 04       		.byte	0x4
 1960 00f3 F7000000 		.4byte	0xf7
 1961 00f7 07       		.uleb128 0x7
 1962 00f8 02       		.uleb128 0x2
 1963 00f9 08       		.byte	0x8
 1964 00fa 04       		.byte	0x4
 1965 00fb 1E030000 		.4byte	.LASF21
 1966 00ff 02       		.uleb128 0x2
 1967 0100 04       		.byte	0x4
 1968 0101 07       		.byte	0x7
 1969 0102 F2020000 		.4byte	.LASF22
 1970 0106 08       		.uleb128 0x8
 1971 0107 38       		.byte	0x38
 1972 0108 03       		.byte	0x3
 1973 0109 5D       		.byte	0x5d
 1974 010a B7010000 		.4byte	0x1b7
 1975 010e 09       		.uleb128 0x9
 1976 010f 93060000 		.4byte	.LASF23
 1977 0113 03       		.byte	0x3
 1978 0114 5F       		.byte	0x5f
 1979 0115 83000000 		.4byte	0x83
 1980 0119 00       		.byte	0
 1981 011a 09       		.uleb128 0x9
 1982 011b BA020000 		.4byte	.LASF24
 1983 011f 03       		.byte	0x3
 1984 0120 60       		.byte	0x60
 1985 0121 83000000 		.4byte	0x83
 1986 0125 04       		.byte	0x4
 1987 0126 09       		.uleb128 0x9
 1988 0127 E3050000 		.4byte	.LASF25
 1989 012b 03       		.byte	0x3
 1990 012c 61       		.byte	0x61
 1991 012d 83000000 		.4byte	0x83
 1992 0131 08       		.byte	0x8
 1993 0132 09       		.uleb128 0x9
 1994 0133 2C060000 		.4byte	.LASF26
 1995 0137 03       		.byte	0x3
 1996 0138 64       		.byte	0x64
 1997 0139 83000000 		.4byte	0x83
 1998 013d 0C       		.byte	0xc
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 76


 1999 013e 09       		.uleb128 0x9
 2000 013f 23010000 		.4byte	.LASF27
 2001 0143 03       		.byte	0x3
 2002 0144 65       		.byte	0x65
 2003 0145 83000000 		.4byte	0x83
 2004 0149 10       		.byte	0x10
 2005 014a 09       		.uleb128 0x9
 2006 014b 32030000 		.4byte	.LASF28
 2007 014f 03       		.byte	0x3
 2008 0150 66       		.byte	0x66
 2009 0151 83000000 		.4byte	0x83
 2010 0155 14       		.byte	0x14
 2011 0156 09       		.uleb128 0x9
 2012 0157 54020000 		.4byte	.LASF29
 2013 015b 03       		.byte	0x3
 2014 015c 67       		.byte	0x67
 2015 015d 83000000 		.4byte	0x83
 2016 0161 18       		.byte	0x18
 2017 0162 09       		.uleb128 0x9
 2018 0163 0C060000 		.4byte	.LASF30
 2019 0167 03       		.byte	0x3
 2020 0168 68       		.byte	0x68
 2021 0169 83000000 		.4byte	0x83
 2022 016d 1C       		.byte	0x1c
 2023 016e 09       		.uleb128 0x9
 2024 016f 01040000 		.4byte	.LASF31
 2025 0173 03       		.byte	0x3
 2026 0174 69       		.byte	0x69
 2027 0175 83000000 		.4byte	0x83
 2028 0179 20       		.byte	0x20
 2029 017a 09       		.uleb128 0x9
 2030 017b 8B010000 		.4byte	.LASF32
 2031 017f 03       		.byte	0x3
 2032 0180 6A       		.byte	0x6a
 2033 0181 83000000 		.4byte	0x83
 2034 0185 24       		.byte	0x24
 2035 0186 09       		.uleb128 0x9
 2036 0187 3F030000 		.4byte	.LASF33
 2037 018b 03       		.byte	0x3
 2038 018c 6B       		.byte	0x6b
 2039 018d 83000000 		.4byte	0x83
 2040 0191 28       		.byte	0x28
 2041 0192 09       		.uleb128 0x9
 2042 0193 AB040000 		.4byte	.LASF34
 2043 0197 03       		.byte	0x3
 2044 0198 6C       		.byte	0x6c
 2045 0199 9B000000 		.4byte	0x9b
 2046 019d 2C       		.byte	0x2c
 2047 019e 09       		.uleb128 0x9
 2048 019f E8050000 		.4byte	.LASF35
 2049 01a3 03       		.byte	0x3
 2050 01a4 6E       		.byte	0x6e
 2051 01a5 83000000 		.4byte	0x83
 2052 01a9 30       		.byte	0x30
 2053 01aa 09       		.uleb128 0x9
 2054 01ab 89000000 		.4byte	.LASF36
 2055 01af 03       		.byte	0x3
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 77


 2056 01b0 75       		.byte	0x75
 2057 01b1 77000000 		.4byte	0x77
 2058 01b5 34       		.byte	0x34
 2059 01b6 00       		.byte	0
 2060 01b7 0A       		.uleb128 0xa
 2061 01b8 37060000 		.4byte	.LASF37
 2062 01bc 03       		.byte	0x3
 2063 01bd 7C       		.byte	0x7c
 2064 01be 06010000 		.4byte	0x106
 2065 01c2 0B       		.uleb128 0xb
 2066 01c3 5D010000 		.4byte	.LASF113
 2067 01c7 01       		.byte	0x1
 2068 01c8 E102     		.2byte	0x2e1
 2069 01ca 00000000 		.4byte	.LFB5
 2070 01ce 34000000 		.4byte	.LFE5-.LFB5
 2071 01d2 01       		.uleb128 0x1
 2072 01d3 9C       		.byte	0x9c
 2073 01d4 F7010000 		.4byte	0x1f7
 2074 01d8 0C       		.uleb128 0xc
 2075 01d9 65050000 		.4byte	.LASF38
 2076 01dd 01       		.byte	0x1
 2077 01de E102     		.2byte	0x2e1
 2078 01e0 F7010000 		.4byte	0x1f7
 2079 01e4 01       		.uleb128 0x1
 2080 01e5 50       		.byte	0x50
 2081 01e6 0D       		.uleb128 0xd
 2082 01e7 F3010000 		.4byte	.LASF40
 2083 01eb 01       		.byte	0x1
 2084 01ec E502     		.2byte	0x2e5
 2085 01ee 83000000 		.4byte	0x83
 2086 01f2 00000000 		.4byte	.LLST0
 2087 01f6 00       		.byte	0
 2088 01f7 06       		.uleb128 0x6
 2089 01f8 04       		.byte	0x4
 2090 01f9 FD010000 		.4byte	0x1fd
 2091 01fd 0E       		.uleb128 0xe
 2092 01fe B7010000 		.4byte	0x1b7
 2093 0202 0F       		.uleb128 0xf
 2094 0203 B0050000 		.4byte	.LASF114
 2095 0207 01       		.byte	0x1
 2096 0208 1504     		.2byte	0x415
 2097 020a 9B000000 		.4byte	0x9b
 2098 020e 00000000 		.4byte	.LFB13
 2099 0212 58000000 		.4byte	.LFE13-.LFB13
 2100 0216 01       		.uleb128 0x1
 2101 0217 9C       		.byte	0x9c
 2102 0218 4D020000 		.4byte	0x24d
 2103 021c 10       		.uleb128 0x10
 2104 021d 49050000 		.4byte	.LASF39
 2105 0221 01       		.byte	0x1
 2106 0222 1504     		.2byte	0x415
 2107 0224 83000000 		.4byte	0x83
 2108 0228 2F000000 		.4byte	.LLST1
 2109 022c 0D       		.uleb128 0xd
 2110 022d D7020000 		.4byte	.LASF41
 2111 0231 01       		.byte	0x1
 2112 0232 1704     		.2byte	0x417
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 78


 2113 0234 9B000000 		.4byte	0x9b
 2114 0238 50000000 		.4byte	.LLST2
 2115 023c 0D       		.uleb128 0xd
 2116 023d C6020000 		.4byte	.LASF42
 2117 0241 01       		.byte	0x1
 2118 0242 1804     		.2byte	0x418
 2119 0244 83000000 		.4byte	0x83
 2120 0248 6F000000 		.4byte	.LLST3
 2121 024c 00       		.byte	0
 2122 024d 11       		.uleb128 0x11
 2123 024e 94000000 		.4byte	.LASF44
 2124 0252 01       		.byte	0x1
 2125 0253 6602     		.2byte	0x266
 2126 0255 00000000 		.4byte	.LFB3
 2127 0259 10000000 		.4byte	.LFE3-.LFB3
 2128 025d 01       		.uleb128 0x1
 2129 025e 9C       		.byte	0x9c
 2130 025f 12       		.uleb128 0x12
 2131 0260 A5000000 		.4byte	.LASF46
 2132 0264 01       		.byte	0x1
 2133 0265 8402     		.2byte	0x284
 2134 0267 00000000 		.4byte	.LFB4
 2135 026b AC000000 		.4byte	.LFE4-.LFB4
 2136 026f 01       		.uleb128 0x1
 2137 0270 9C       		.byte	0x9c
 2138 0271 D2020000 		.4byte	0x2d2
 2139 0275 10       		.uleb128 0x10
 2140 0276 65050000 		.4byte	.LASF38
 2141 027a 01       		.byte	0x1
 2142 027b 8402     		.2byte	0x284
 2143 027d F7010000 		.4byte	0x1f7
 2144 0281 8D000000 		.4byte	.LLST4
 2145 0285 0D       		.uleb128 0xd
 2146 0286 91040000 		.4byte	.LASF43
 2147 028a 01       		.byte	0x1
 2148 028b 8602     		.2byte	0x286
 2149 028d 83000000 		.4byte	0x83
 2150 0291 B9000000 		.4byte	.LLST5
 2151 0295 0D       		.uleb128 0xd
 2152 0296 F3010000 		.4byte	.LASF40
 2153 029a 01       		.byte	0x1
 2154 029b 8702     		.2byte	0x287
 2155 029d 83000000 		.4byte	0x83
 2156 02a1 D8000000 		.4byte	.LLST6
 2157 02a5 13       		.uleb128 0x13
 2158 02a6 08000000 		.4byte	.LVL15
 2159 02aa 180A0000 		.4byte	0xa18
 2160 02ae 14       		.uleb128 0x14
 2161 02af 10000000 		.4byte	.LVL16
 2162 02b3 230A0000 		.4byte	0xa23
 2163 02b7 C1020000 		.4byte	0x2c1
 2164 02bb 15       		.uleb128 0x15
 2165 02bc 01       		.uleb128 0x1
 2166 02bd 51       		.byte	0x51
 2167 02be 01       		.uleb128 0x1
 2168 02bf 30       		.byte	0x30
 2169 02c0 00       		.byte	0
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 79


 2170 02c1 16       		.uleb128 0x16
 2171 02c2 16000000 		.4byte	.LVL17
 2172 02c6 2E0A0000 		.4byte	0xa2e
 2173 02ca 15       		.uleb128 0x15
 2174 02cb 01       		.uleb128 0x1
 2175 02cc 50       		.byte	0x50
 2176 02cd 02       		.uleb128 0x2
 2177 02ce 08       		.byte	0x8
 2178 02cf FF       		.byte	0xff
 2179 02d0 00       		.byte	0
 2180 02d1 00       		.byte	0
 2181 02d2 11       		.uleb128 0x11
 2182 02d3 A2010000 		.4byte	.LASF45
 2183 02d7 01       		.byte	0x1
 2184 02d8 4003     		.2byte	0x340
 2185 02da 00000000 		.4byte	.LFB7
 2186 02de 28000000 		.4byte	.LFE7-.LFB7
 2187 02e2 01       		.uleb128 0x1
 2188 02e3 9C       		.byte	0x9c
 2189 02e4 12       		.uleb128 0x12
 2190 02e5 ED000000 		.4byte	.LASF47
 2191 02e9 01       		.byte	0x1
 2192 02ea 8703     		.2byte	0x387
 2193 02ec 00000000 		.4byte	.LFB9
 2194 02f0 28000000 		.4byte	.LFE9-.LFB9
 2195 02f4 01       		.uleb128 0x1
 2196 02f5 9C       		.byte	0x9c
 2197 02f6 09030000 		.4byte	0x309
 2198 02fa 0C       		.uleb128 0xc
 2199 02fb 53050000 		.4byte	.LASF48
 2200 02ff 01       		.byte	0x1
 2201 0300 8703     		.2byte	0x387
 2202 0302 83000000 		.4byte	0x83
 2203 0306 01       		.uleb128 0x1
 2204 0307 50       		.byte	0x50
 2205 0308 00       		.byte	0
 2206 0309 12       		.uleb128 0x12
 2207 030a 94020000 		.4byte	.LASF49
 2208 030e 01       		.byte	0x1
 2209 030f BE03     		.2byte	0x3be
 2210 0311 00000000 		.4byte	.LFB10
 2211 0315 10000000 		.4byte	.LFE10-.LFB10
 2212 0319 01       		.uleb128 0x1
 2213 031a 9C       		.byte	0x9c
 2214 031b 30030000 		.4byte	0x330
 2215 031f 10       		.uleb128 0x10
 2216 0320 46010000 		.4byte	.LASF50
 2217 0324 01       		.byte	0x1
 2218 0325 BE03     		.2byte	0x3be
 2219 0327 83000000 		.4byte	0x83
 2220 032b EE000000 		.4byte	.LLST7
 2221 032f 00       		.byte	0
 2222 0330 12       		.uleb128 0x12
 2223 0331 73060000 		.4byte	.LASF51
 2224 0335 01       		.byte	0x1
 2225 0336 D303     		.2byte	0x3d3
 2226 0338 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 80


 2227 033c 2C000000 		.4byte	.LFE11-.LFB11
 2228 0340 01       		.uleb128 0x1
 2229 0341 9C       		.byte	0x9c
 2230 0342 65030000 		.4byte	0x365
 2231 0346 10       		.uleb128 0x10
 2232 0347 FD010000 		.4byte	.LASF52
 2233 034b 01       		.byte	0x1
 2234 034c D303     		.2byte	0x3d3
 2235 034e 83000000 		.4byte	0x83
 2236 0352 0F010000 		.4byte	.LLST8
 2237 0356 17       		.uleb128 0x17
 2238 0357 07000000 		.4byte	.LASF53
 2239 035b 01       		.byte	0x1
 2240 035c D503     		.2byte	0x3d5
 2241 035e 83000000 		.4byte	0x83
 2242 0362 01       		.uleb128 0x1
 2243 0363 52       		.byte	0x52
 2244 0364 00       		.byte	0
 2245 0365 18       		.uleb128 0x18
 2246 0366 16060000 		.4byte	.LASF56
 2247 036a 01       		.byte	0x1
 2248 036b EF03     		.2byte	0x3ef
 2249 036d 83000000 		.4byte	0x83
 2250 0371 00000000 		.4byte	.LFB12
 2251 0375 38000000 		.4byte	.LFE12-.LFB12
 2252 0379 01       		.uleb128 0x1
 2253 037a 9C       		.byte	0x9c
 2254 037b B0030000 		.4byte	0x3b0
 2255 037f 10       		.uleb128 0x10
 2256 0380 76010000 		.4byte	.LASF54
 2257 0384 01       		.byte	0x1
 2258 0385 EF03     		.2byte	0x3ef
 2259 0387 83000000 		.4byte	0x83
 2260 038b 2D010000 		.4byte	.LLST9
 2261 038f 0D       		.uleb128 0xd
 2262 0390 9F060000 		.4byte	.LASF55
 2263 0394 01       		.byte	0x1
 2264 0395 F103     		.2byte	0x3f1
 2265 0397 83000000 		.4byte	0x83
 2266 039b 61010000 		.4byte	.LLST10
 2267 039f 19       		.uleb128 0x19
 2268 03a0 77647400 		.ascii	"wdt\000"
 2269 03a4 01       		.byte	0x1
 2270 03a5 F203     		.2byte	0x3f2
 2271 03a7 83000000 		.4byte	0x83
 2272 03ab 97010000 		.4byte	.LLST11
 2273 03af 00       		.byte	0
 2274 03b0 18       		.uleb128 0x18
 2275 03b1 46040000 		.4byte	.LASF57
 2276 03b5 01       		.byte	0x1
 2277 03b6 3E04     		.2byte	0x43e
 2278 03b8 8F000000 		.4byte	0x8f
 2279 03bc 00000000 		.4byte	.LFB14
 2280 03c0 54000000 		.4byte	.LFE14-.LFB14
 2281 03c4 01       		.uleb128 0x1
 2282 03c5 9C       		.byte	0x9c
 2283 03c6 FA030000 		.4byte	0x3fa
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 81


 2284 03ca 10       		.uleb128 0x10
 2285 03cb 49050000 		.4byte	.LASF39
 2286 03cf 01       		.byte	0x1
 2287 03d0 3E04     		.2byte	0x43e
 2288 03d2 83000000 		.4byte	0x83
 2289 03d6 CA010000 		.4byte	.LLST12
 2290 03da 0D       		.uleb128 0xd
 2291 03db E0020000 		.4byte	.LASF58
 2292 03df 01       		.byte	0x1
 2293 03e0 4004     		.2byte	0x440
 2294 03e2 83000000 		.4byte	0x83
 2295 03e6 0F020000 		.4byte	.LLST13
 2296 03ea 16       		.uleb128 0x16
 2297 03eb 1E000000 		.4byte	.LVL38
 2298 03ef 390A0000 		.4byte	0xa39
 2299 03f3 15       		.uleb128 0x15
 2300 03f4 01       		.uleb128 0x1
 2301 03f5 50       		.byte	0x50
 2302 03f6 01       		.uleb128 0x1
 2303 03f7 30       		.byte	0x30
 2304 03f8 00       		.byte	0
 2305 03f9 00       		.byte	0
 2306 03fa 18       		.uleb128 0x18
 2307 03fb 4B060000 		.4byte	.LASF59
 2308 03ff 01       		.byte	0x1
 2309 0400 6104     		.2byte	0x461
 2310 0402 9B000000 		.4byte	0x9b
 2311 0406 00000000 		.4byte	.LFB15
 2312 040a 64000000 		.4byte	.LFE15-.LFB15
 2313 040e 01       		.uleb128 0x1
 2314 040f 9C       		.byte	0x9c
 2315 0410 78040000 		.4byte	0x478
 2316 0414 10       		.uleb128 0x10
 2317 0415 49050000 		.4byte	.LASF39
 2318 0419 01       		.byte	0x1
 2319 041a 6104     		.2byte	0x461
 2320 041c 83000000 		.4byte	0x83
 2321 0420 2D020000 		.4byte	.LLST14
 2322 0424 0D       		.uleb128 0xd
 2323 0425 E0020000 		.4byte	.LASF58
 2324 0429 01       		.byte	0x1
 2325 042a 6304     		.2byte	0x463
 2326 042c 83000000 		.4byte	0x83
 2327 0430 59020000 		.4byte	.LLST15
 2328 0434 0D       		.uleb128 0xd
 2329 0435 85040000 		.4byte	.LASF60
 2330 0439 01       		.byte	0x1
 2331 043a 6404     		.2byte	0x464
 2332 043c 8F000000 		.4byte	0x8f
 2333 0440 77020000 		.4byte	.LLST16
 2334 0444 0D       		.uleb128 0xd
 2335 0445 75020000 		.4byte	.LASF61
 2336 0449 01       		.byte	0x1
 2337 044a 6504     		.2byte	0x465
 2338 044c 9B000000 		.4byte	0x9b
 2339 0450 8A020000 		.4byte	.LLST17
 2340 0454 14       		.uleb128 0x14
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 82


 2341 0455 1E000000 		.4byte	.LVL46
 2342 0459 390A0000 		.4byte	0xa39
 2343 045d 67040000 		.4byte	0x467
 2344 0461 15       		.uleb128 0x15
 2345 0462 01       		.uleb128 0x1
 2346 0463 50       		.byte	0x50
 2347 0464 01       		.uleb128 0x1
 2348 0465 30       		.byte	0x30
 2349 0466 00       		.byte	0
 2350 0467 16       		.uleb128 0x16
 2351 0468 4A000000 		.4byte	.LVL50
 2352 046c 02020000 		.4byte	0x202
 2353 0470 15       		.uleb128 0x15
 2354 0471 01       		.uleb128 0x1
 2355 0472 50       		.byte	0x50
 2356 0473 02       		.uleb128 0x2
 2357 0474 75       		.byte	0x75
 2358 0475 00       		.sleb128 0
 2359 0476 00       		.byte	0
 2360 0477 00       		.byte	0
 2361 0478 12       		.uleb128 0x12
 2362 0479 4B010000 		.4byte	.LASF62
 2363 047d 01       		.byte	0x1
 2364 047e 8D04     		.2byte	0x48d
 2365 0480 00000000 		.4byte	.LFB16
 2366 0484 1C000000 		.4byte	.LFE16-.LFB16
 2367 0488 01       		.uleb128 0x1
 2368 0489 9C       		.byte	0x9c
 2369 048a 9F040000 		.4byte	0x49f
 2370 048e 10       		.uleb128 0x10
 2371 048f 15030000 		.4byte	.LASF63
 2372 0493 01       		.byte	0x1
 2373 0494 8D04     		.2byte	0x48d
 2374 0496 83000000 		.4byte	0x83
 2375 049a A8020000 		.4byte	.LLST18
 2376 049e 00       		.byte	0
 2377 049f 12       		.uleb128 0x12
 2378 04a0 08020000 		.4byte	.LASF64
 2379 04a4 01       		.byte	0x1
 2380 04a5 A104     		.2byte	0x4a1
 2381 04a7 00000000 		.4byte	.LFB17
 2382 04ab 18000000 		.4byte	.LFE17-.LFB17
 2383 04af 01       		.uleb128 0x1
 2384 04b0 9C       		.byte	0x9c
 2385 04b1 C6040000 		.4byte	0x4c6
 2386 04b5 10       		.uleb128 0x10
 2387 04b6 8F030000 		.4byte	.LASF65
 2388 04ba 01       		.byte	0x1
 2389 04bb A104     		.2byte	0x4a1
 2390 04bd 83000000 		.4byte	0x83
 2391 04c1 C9020000 		.4byte	.LLST19
 2392 04c5 00       		.byte	0
 2393 04c6 12       		.uleb128 0x12
 2394 04c7 02010000 		.4byte	.LASF66
 2395 04cb 01       		.byte	0x1
 2396 04cc B804     		.2byte	0x4b8
 2397 04ce 00000000 		.4byte	.LFB18
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 83


 2398 04d2 2C000000 		.4byte	.LFE18-.LFB18
 2399 04d6 01       		.uleb128 0x1
 2400 04d7 9C       		.byte	0x9c
 2401 04d8 FB040000 		.4byte	0x4fb
 2402 04dc 10       		.uleb128 0x10
 2403 04dd A5020000 		.4byte	.LASF67
 2404 04e1 01       		.byte	0x1
 2405 04e2 B804     		.2byte	0x4b8
 2406 04e4 83000000 		.4byte	0x83
 2407 04e8 EA020000 		.4byte	.LLST20
 2408 04ec 17       		.uleb128 0x17
 2409 04ed 07000000 		.4byte	.LASF53
 2410 04f1 01       		.byte	0x1
 2411 04f2 BA04     		.2byte	0x4ba
 2412 04f4 83000000 		.4byte	0x83
 2413 04f8 01       		.uleb128 0x1
 2414 04f9 52       		.byte	0x52
 2415 04fa 00       		.byte	0
 2416 04fb 12       		.uleb128 0x12
 2417 04fc 27040000 		.4byte	.LASF68
 2418 0500 01       		.byte	0x1
 2419 0501 D004     		.2byte	0x4d0
 2420 0503 00000000 		.4byte	.LFB19
 2421 0507 2C000000 		.4byte	.LFE19-.LFB19
 2422 050b 01       		.uleb128 0x1
 2423 050c 9C       		.byte	0x9c
 2424 050d 30050000 		.4byte	0x530
 2425 0511 10       		.uleb128 0x10
 2426 0512 58030000 		.4byte	.LASF69
 2427 0516 01       		.byte	0x1
 2428 0517 D004     		.2byte	0x4d0
 2429 0519 83000000 		.4byte	0x83
 2430 051d 08030000 		.4byte	.LLST21
 2431 0521 17       		.uleb128 0x17
 2432 0522 07000000 		.4byte	.LASF53
 2433 0526 01       		.byte	0x1
 2434 0527 D204     		.2byte	0x4d2
 2435 0529 83000000 		.4byte	0x83
 2436 052d 01       		.uleb128 0x1
 2437 052e 52       		.byte	0x52
 2438 052f 00       		.byte	0
 2439 0530 12       		.uleb128 0x12
 2440 0531 5D060000 		.4byte	.LASF70
 2441 0535 01       		.byte	0x1
 2442 0536 F104     		.2byte	0x4f1
 2443 0538 00000000 		.4byte	.LFB20
 2444 053c 44000000 		.4byte	.LFE20-.LFB20
 2445 0540 01       		.uleb128 0x1
 2446 0541 9C       		.byte	0x9c
 2447 0542 76050000 		.4byte	0x576
 2448 0546 10       		.uleb128 0x10
 2449 0547 49050000 		.4byte	.LASF39
 2450 054b 01       		.byte	0x1
 2451 054c F104     		.2byte	0x4f1
 2452 054e 83000000 		.4byte	0x83
 2453 0552 26030000 		.4byte	.LLST22
 2454 0556 10       		.uleb128 0x10
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 84


 2455 0557 DC050000 		.4byte	.LASF71
 2456 055b 01       		.byte	0x1
 2457 055c F104     		.2byte	0x4f1
 2458 055e 8F000000 		.4byte	0x8f
 2459 0562 52030000 		.4byte	.LLST23
 2460 0566 16       		.uleb128 0x16
 2461 0567 20000000 		.4byte	.LVL69
 2462 056b 390A0000 		.4byte	0xa39
 2463 056f 15       		.uleb128 0x15
 2464 0570 01       		.uleb128 0x1
 2465 0571 50       		.byte	0x50
 2466 0572 01       		.uleb128 0x1
 2467 0573 30       		.byte	0x30
 2468 0574 00       		.byte	0
 2469 0575 00       		.byte	0
 2470 0576 12       		.uleb128 0x12
 2471 0577 4A030000 		.4byte	.LASF72
 2472 057b 01       		.byte	0x1
 2473 057c 1105     		.2byte	0x511
 2474 057e 00000000 		.4byte	.LFB21
 2475 0582 44000000 		.4byte	.LFE21-.LFB21
 2476 0586 01       		.uleb128 0x1
 2477 0587 9C       		.byte	0x9c
 2478 0588 BC050000 		.4byte	0x5bc
 2479 058c 10       		.uleb128 0x10
 2480 058d 49050000 		.4byte	.LASF39
 2481 0591 01       		.byte	0x1
 2482 0592 1105     		.2byte	0x511
 2483 0594 83000000 		.4byte	0x83
 2484 0598 73030000 		.4byte	.LLST24
 2485 059c 10       		.uleb128 0x10
 2486 059d 11000000 		.4byte	.LASF73
 2487 05a1 01       		.byte	0x1
 2488 05a2 1105     		.2byte	0x511
 2489 05a4 9B000000 		.4byte	0x9b
 2490 05a8 9F030000 		.4byte	.LLST25
 2491 05ac 16       		.uleb128 0x16
 2492 05ad 20000000 		.4byte	.LVL73
 2493 05b1 390A0000 		.4byte	0xa39
 2494 05b5 15       		.uleb128 0x15
 2495 05b6 01       		.uleb128 0x1
 2496 05b7 50       		.byte	0x50
 2497 05b8 01       		.uleb128 0x1
 2498 05b9 30       		.byte	0x30
 2499 05ba 00       		.byte	0
 2500 05bb 00       		.byte	0
 2501 05bc 1A       		.uleb128 0x1a
 2502 05bd BF000000 		.4byte	.LASF74
 2503 05c1 01       		.byte	0x1
 2504 05c2 2A05     		.2byte	0x52a
 2505 05c4 8F000000 		.4byte	0x8f
 2506 05c8 00000000 		.4byte	.LFB22
 2507 05cc 88000000 		.4byte	.LFE22-.LFB22
 2508 05d0 01       		.uleb128 0x1
 2509 05d1 9C       		.byte	0x9c
 2510 05d2 4A060000 		.4byte	0x64a
 2511 05d6 10       		.uleb128 0x10
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 85


 2512 05d7 49050000 		.4byte	.LASF39
 2513 05db 01       		.byte	0x1
 2514 05dc 2A05     		.2byte	0x52a
 2515 05de 83000000 		.4byte	0x83
 2516 05e2 CC030000 		.4byte	.LLST26
 2517 05e6 10       		.uleb128 0x10
 2518 05e7 F3050000 		.4byte	.LASF75
 2519 05eb 01       		.byte	0x1
 2520 05ec 2A05     		.2byte	0x52a
 2521 05ee 8F000000 		.4byte	0x8f
 2522 05f2 F8030000 		.4byte	.LLST27
 2523 05f6 0D       		.uleb128 0xd
 2524 05f7 71010000 		.4byte	.LASF76
 2525 05fb 01       		.byte	0x1
 2526 05fc 2C05     		.2byte	0x52c
 2527 05fe 83000000 		.4byte	0x83
 2528 0602 48040000 		.4byte	.LLST28
 2529 0606 0D       		.uleb128 0xd
 2530 0607 1B020000 		.4byte	.LASF77
 2531 060b 01       		.byte	0x1
 2532 060c 2D05     		.2byte	0x52d
 2533 060e 83000000 		.4byte	0x83
 2534 0612 5B040000 		.4byte	.LLST29
 2535 0616 0D       		.uleb128 0xd
 2536 0617 AF020000 		.4byte	.LASF78
 2537 061b 01       		.byte	0x1
 2538 061c 2E05     		.2byte	0x52e
 2539 061e 83000000 		.4byte	0x83
 2540 0622 86040000 		.4byte	.LLST30
 2541 0626 14       		.uleb128 0x14
 2542 0627 24000000 		.4byte	.LVL80
 2543 062b 390A0000 		.4byte	0xa39
 2544 062f 39060000 		.4byte	0x639
 2545 0633 15       		.uleb128 0x15
 2546 0634 01       		.uleb128 0x1
 2547 0635 50       		.byte	0x50
 2548 0636 01       		.uleb128 0x1
 2549 0637 30       		.byte	0x30
 2550 0638 00       		.byte	0
 2551 0639 16       		.uleb128 0x16
 2552 063a 54000000 		.4byte	.LVL85
 2553 063e 02020000 		.4byte	0x202
 2554 0642 15       		.uleb128 0x15
 2555 0643 01       		.uleb128 0x1
 2556 0644 50       		.byte	0x50
 2557 0645 02       		.uleb128 0x2
 2558 0646 76       		.byte	0x76
 2559 0647 00       		.sleb128 0
 2560 0648 00       		.byte	0
 2561 0649 00       		.byte	0
 2562 064a 1A       		.uleb128 0x1a
 2563 064b 6C050000 		.4byte	.LASF79
 2564 064f 01       		.byte	0x1
 2565 0650 7F05     		.2byte	0x57f
 2566 0652 A7000000 		.4byte	0xa7
 2567 0656 00000000 		.4byte	.LFB23
 2568 065a 54000000 		.4byte	.LFE23-.LFB23
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 86


 2569 065e 01       		.uleb128 0x1
 2570 065f 9C       		.byte	0x9c
 2571 0660 B6060000 		.4byte	0x6b6
 2572 0664 10       		.uleb128 0x10
 2573 0665 49050000 		.4byte	.LASF39
 2574 0669 01       		.byte	0x1
 2575 066a 7F05     		.2byte	0x57f
 2576 066c 83000000 		.4byte	0x83
 2577 0670 99040000 		.4byte	.LLST31
 2578 0674 10       		.uleb128 0x10
 2579 0675 F3050000 		.4byte	.LASF75
 2580 0679 01       		.byte	0x1
 2581 067a 7F05     		.2byte	0x57f
 2582 067c 8F000000 		.4byte	0x8f
 2583 0680 D3040000 		.4byte	.LLST32
 2584 0684 0D       		.uleb128 0xd
 2585 0685 78040000 		.4byte	.LASF80
 2586 0689 01       		.byte	0x1
 2587 068a 8105     		.2byte	0x581
 2588 068c A7000000 		.4byte	0xa7
 2589 0690 0A050000 		.4byte	.LLST33
 2590 0694 0D       		.uleb128 0xd
 2591 0695 AF020000 		.4byte	.LASF78
 2592 0699 01       		.byte	0x1
 2593 069a 8205     		.2byte	0x582
 2594 069c 83000000 		.4byte	0x83
 2595 06a0 48050000 		.4byte	.LLST34
 2596 06a4 16       		.uleb128 0x16
 2597 06a5 1E000000 		.4byte	.LVL97
 2598 06a9 BC050000 		.4byte	0x5bc
 2599 06ad 15       		.uleb128 0x15
 2600 06ae 01       		.uleb128 0x1
 2601 06af 50       		.byte	0x50
 2602 06b0 03       		.uleb128 0x3
 2603 06b1 F3       		.byte	0xf3
 2604 06b2 01       		.uleb128 0x1
 2605 06b3 50       		.byte	0x50
 2606 06b4 00       		.byte	0
 2607 06b5 00       		.byte	0
 2608 06b6 1A       		.uleb128 0x1a
 2609 06b7 5F020000 		.4byte	.LASF81
 2610 06bb 01       		.byte	0x1
 2611 06bc B205     		.2byte	0x5b2
 2612 06be 8F000000 		.4byte	0x8f
 2613 06c2 00000000 		.4byte	.LFB24
 2614 06c6 68000000 		.4byte	.LFE24-.LFB24
 2615 06ca 01       		.uleb128 0x1
 2616 06cb 9C       		.byte	0x9c
 2617 06cc 22070000 		.4byte	0x722
 2618 06d0 10       		.uleb128 0x10
 2619 06d1 49050000 		.4byte	.LASF39
 2620 06d5 01       		.byte	0x1
 2621 06d6 B205     		.2byte	0x5b2
 2622 06d8 83000000 		.4byte	0x83
 2623 06dc 66050000 		.4byte	.LLST35
 2624 06e0 10       		.uleb128 0x10
 2625 06e1 F3050000 		.4byte	.LASF75
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 87


 2626 06e5 01       		.byte	0x1
 2627 06e6 B205     		.2byte	0x5b2
 2628 06e8 8F000000 		.4byte	0x8f
 2629 06ec A0050000 		.4byte	.LLST36
 2630 06f0 0D       		.uleb128 0xd
 2631 06f1 85060000 		.4byte	.LASF82
 2632 06f5 01       		.byte	0x1
 2633 06f6 B405     		.2byte	0x5b4
 2634 06f8 8F000000 		.4byte	0x8f
 2635 06fc E2050000 		.4byte	.LLST37
 2636 0700 0D       		.uleb128 0xd
 2637 0701 AF020000 		.4byte	.LASF78
 2638 0705 01       		.byte	0x1
 2639 0706 B505     		.2byte	0x5b5
 2640 0708 83000000 		.4byte	0x83
 2641 070c 18060000 		.4byte	.LLST38
 2642 0710 16       		.uleb128 0x16
 2643 0711 1E000000 		.4byte	.LVL108
 2644 0715 BC050000 		.4byte	0x5bc
 2645 0719 15       		.uleb128 0x15
 2646 071a 01       		.uleb128 0x1
 2647 071b 50       		.byte	0x50
 2648 071c 03       		.uleb128 0x3
 2649 071d F3       		.byte	0xf3
 2650 071e 01       		.uleb128 0x1
 2651 071f 50       		.byte	0x50
 2652 0720 00       		.byte	0
 2653 0721 00       		.byte	0
 2654 0722 1A       		.uleb128 0x1a
 2655 0723 C2060000 		.4byte	.LASF83
 2656 0727 01       		.byte	0x1
 2657 0728 E805     		.2byte	0x5e8
 2658 072a 9B000000 		.4byte	0x9b
 2659 072e 00000000 		.4byte	.LFB25
 2660 0732 4C000000 		.4byte	.LFE25-.LFB25
 2661 0736 01       		.uleb128 0x1
 2662 0737 9C       		.byte	0x9c
 2663 0738 8E070000 		.4byte	0x78e
 2664 073c 10       		.uleb128 0x10
 2665 073d 49050000 		.4byte	.LASF39
 2666 0741 01       		.byte	0x1
 2667 0742 E805     		.2byte	0x5e8
 2668 0744 83000000 		.4byte	0x83
 2669 0748 6E060000 		.4byte	.LLST39
 2670 074c 10       		.uleb128 0x10
 2671 074d F3050000 		.4byte	.LASF75
 2672 0751 01       		.byte	0x1
 2673 0752 E805     		.2byte	0x5e8
 2674 0754 8F000000 		.4byte	0x8f
 2675 0758 A8060000 		.4byte	.LLST40
 2676 075c 0D       		.uleb128 0xd
 2677 075d C6050000 		.4byte	.LASF84
 2678 0761 01       		.byte	0x1
 2679 0762 EA05     		.2byte	0x5ea
 2680 0764 C1000000 		.4byte	0xc1
 2681 0768 DF060000 		.4byte	.LLST41
 2682 076c 0D       		.uleb128 0xd
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 88


 2683 076d AF020000 		.4byte	.LASF78
 2684 0771 01       		.byte	0x1
 2685 0772 EB05     		.2byte	0x5eb
 2686 0774 83000000 		.4byte	0x83
 2687 0778 0F070000 		.4byte	.LLST42
 2688 077c 16       		.uleb128 0x16
 2689 077d 1E000000 		.4byte	.LVL121
 2690 0781 BC050000 		.4byte	0x5bc
 2691 0785 15       		.uleb128 0x15
 2692 0786 01       		.uleb128 0x1
 2693 0787 50       		.byte	0x50
 2694 0788 03       		.uleb128 0x3
 2695 0789 F3       		.byte	0xf3
 2696 078a 01       		.uleb128 0x1
 2697 078b 50       		.byte	0x50
 2698 078c 00       		.byte	0
 2699 078d 00       		.byte	0
 2700 078e 1B       		.uleb128 0x1b
 2701 078f 7E000000 		.4byte	.LASF85
 2702 0793 01       		.byte	0x1
 2703 0794 F007     		.2byte	0x7f0
 2704 0796 00000000 		.4byte	.LFB26
 2705 079a A8000000 		.4byte	.LFE26-.LFB26
 2706 079e 01       		.uleb128 0x1
 2707 079f 9C       		.byte	0x9c
 2708 07a0 10080000 		.4byte	0x810
 2709 07a4 0D       		.uleb128 0xd
 2710 07a5 91040000 		.4byte	.LASF43
 2711 07a9 01       		.byte	0x1
 2712 07aa F207     		.2byte	0x7f2
 2713 07ac 83000000 		.4byte	0x83
 2714 07b0 65070000 		.4byte	.LLST43
 2715 07b4 0D       		.uleb128 0xd
 2716 07b5 98010000 		.4byte	.LASF86
 2717 07b9 01       		.byte	0x1
 2718 07ba F307     		.2byte	0x7f3
 2719 07bc 83000000 		.4byte	0x83
 2720 07c0 9B070000 		.4byte	.LLST44
 2721 07c4 0D       		.uleb128 0xd
 2722 07c5 19000000 		.4byte	.LASF87
 2723 07c9 01       		.byte	0x1
 2724 07ca F407     		.2byte	0x7f4
 2725 07cc 9B000000 		.4byte	0x9b
 2726 07d0 DD070000 		.4byte	.LLST45
 2727 07d4 14       		.uleb128 0x14
 2728 07d5 60000000 		.4byte	.LVL135
 2729 07d9 440A0000 		.4byte	0xa44
 2730 07dd EC070000 		.4byte	0x7ec
 2731 07e1 15       		.uleb128 0x15
 2732 07e2 01       		.uleb128 0x1
 2733 07e3 50       		.byte	0x50
 2734 07e4 01       		.uleb128 0x1
 2735 07e5 3F       		.byte	0x3f
 2736 07e6 15       		.uleb128 0x15
 2737 07e7 01       		.uleb128 0x1
 2738 07e8 51       		.byte	0x51
 2739 07e9 01       		.uleb128 0x1
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 89


 2740 07ea 33       		.byte	0x33
 2741 07eb 00       		.byte	0
 2742 07ec 14       		.uleb128 0x14
 2743 07ed 68000000 		.4byte	.LVL136
 2744 07f1 4F0A0000 		.4byte	0xa4f
 2745 07f5 FF070000 		.4byte	0x7ff
 2746 07f9 15       		.uleb128 0x15
 2747 07fa 01       		.uleb128 0x1
 2748 07fb 50       		.byte	0x50
 2749 07fc 01       		.uleb128 0x1
 2750 07fd 3F       		.byte	0x3f
 2751 07fe 00       		.byte	0
 2752 07ff 16       		.uleb128 0x16
 2753 0800 7E000000 		.4byte	.LVL139
 2754 0804 5F020000 		.4byte	0x25f
 2755 0808 15       		.uleb128 0x15
 2756 0809 01       		.uleb128 0x1
 2757 080a 50       		.byte	0x50
 2758 080b 02       		.uleb128 0x2
 2759 080c 74       		.byte	0x74
 2760 080d 00       		.sleb128 0
 2761 080e 00       		.byte	0
 2762 080f 00       		.byte	0
 2763 0810 12       		.uleb128 0x12
 2764 0811 57000000 		.4byte	.LASF88
 2765 0815 01       		.byte	0x1
 2766 0816 5C08     		.2byte	0x85c
 2767 0818 00000000 		.4byte	.LFB27
 2768 081c 48000000 		.4byte	.LFE27-.LFB27
 2769 0820 01       		.uleb128 0x1
 2770 0821 9C       		.byte	0x9c
 2771 0822 43080000 		.4byte	0x843
 2772 0826 14       		.uleb128 0x14
 2773 0827 24000000 		.4byte	.LVL141
 2774 082b 5A0A0000 		.4byte	0xa5a
 2775 082f 39080000 		.4byte	0x839
 2776 0833 15       		.uleb128 0x15
 2777 0834 01       		.uleb128 0x1
 2778 0835 50       		.byte	0x50
 2779 0836 01       		.uleb128 0x1
 2780 0837 3A       		.byte	0x3a
 2781 0838 00       		.byte	0
 2782 0839 13       		.uleb128 0x13
 2783 083a 36000000 		.4byte	.LVL142
 2784 083e C2010000 		.4byte	0x1c2
 2785 0842 00       		.byte	0
 2786 0843 12       		.uleb128 0x12
 2787 0844 AF060000 		.4byte	.LASF89
 2788 0848 01       		.byte	0x1
 2789 0849 2B02     		.2byte	0x22b
 2790 084b 00000000 		.4byte	.LFB1
 2791 084f 24000000 		.4byte	.LFE1-.LFB1
 2792 0853 01       		.uleb128 0x1
 2793 0854 9C       		.byte	0x9c
 2794 0855 6C080000 		.4byte	0x86c
 2795 0859 13       		.uleb128 0x13
 2796 085a 0E000000 		.4byte	.LVL143
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 90


 2797 085e 8E070000 		.4byte	0x78e
 2798 0862 13       		.uleb128 0x13
 2799 0863 1C000000 		.4byte	.LVL144
 2800 0867 10080000 		.4byte	0x810
 2801 086b 00       		.byte	0
 2802 086c 12       		.uleb128 0x12
 2803 086d 20000000 		.4byte	.LASF90
 2804 0871 01       		.byte	0x1
 2805 0872 4802     		.2byte	0x248
 2806 0874 00000000 		.4byte	.LFB2
 2807 0878 10000000 		.4byte	.LFE2-.LFB2
 2808 087c 01       		.uleb128 0x1
 2809 087d 9C       		.byte	0x9c
 2810 087e AC080000 		.4byte	0x8ac
 2811 0882 10       		.uleb128 0x10
 2812 0883 2A030000 		.4byte	.LASF91
 2813 0887 01       		.byte	0x1
 2814 0888 4802     		.2byte	0x248
 2815 088a E5000000 		.4byte	0xe5
 2816 088e F3070000 		.4byte	.LLST46
 2817 0892 13       		.uleb128 0x13
 2818 0893 08000000 		.4byte	.LVL146
 2819 0897 43080000 		.4byte	0x843
 2820 089b 16       		.uleb128 0x16
 2821 089c 0E000000 		.4byte	.LVL147
 2822 08a0 650A0000 		.4byte	0xa65
 2823 08a4 15       		.uleb128 0x15
 2824 08a5 01       		.uleb128 0x1
 2825 08a6 50       		.byte	0x50
 2826 08a7 02       		.uleb128 0x2
 2827 08a8 74       		.byte	0x74
 2828 08a9 00       		.sleb128 0
 2829 08aa 00       		.byte	0
 2830 08ab 00       		.byte	0
 2831 08ac 12       		.uleb128 0x12
 2832 08ad 81020000 		.4byte	.LASF92
 2833 08b1 01       		.byte	0x1
 2834 08b2 0303     		.2byte	0x303
 2835 08b4 00000000 		.4byte	.LFB6
 2836 08b8 70000000 		.4byte	.LFE6-.LFB6
 2837 08bc 01       		.uleb128 0x1
 2838 08bd 9C       		.byte	0x9c
 2839 08be 1B090000 		.4byte	0x91b
 2840 08c2 10       		.uleb128 0x10
 2841 08c3 65050000 		.4byte	.LASF38
 2842 08c7 01       		.byte	0x1
 2843 08c8 0303     		.2byte	0x303
 2844 08ca 83000000 		.4byte	0x83
 2845 08ce 1F080000 		.4byte	.LLST47
 2846 08d2 10       		.uleb128 0x10
 2847 08d3 D4050000 		.4byte	.LASF93
 2848 08d7 01       		.byte	0x1
 2849 08d8 0303     		.2byte	0x303
 2850 08da 83000000 		.4byte	0x83
 2851 08de 4B080000 		.4byte	.LLST48
 2852 08e2 13       		.uleb128 0x13
 2853 08e3 0E000000 		.4byte	.LVL150
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 91


 2854 08e7 4D020000 		.4byte	0x24d
 2855 08eb 13       		.uleb128 0x13
 2856 08ec 1E000000 		.4byte	.LVL151
 2857 08f0 8E070000 		.4byte	0x78e
 2858 08f4 14       		.uleb128 0x14
 2859 08f5 38000000 		.4byte	.LVL152
 2860 08f9 5F020000 		.4byte	0x25f
 2861 08fd 08090000 		.4byte	0x908
 2862 0901 15       		.uleb128 0x15
 2863 0902 01       		.uleb128 0x1
 2864 0903 50       		.byte	0x50
 2865 0904 02       		.uleb128 0x2
 2866 0905 75       		.byte	0x75
 2867 0906 00       		.sleb128 0
 2868 0907 00       		.byte	0
 2869 0908 13       		.uleb128 0x13
 2870 0909 56000000 		.4byte	.LVL153
 2871 090d 43080000 		.4byte	0x843
 2872 0911 13       		.uleb128 0x13
 2873 0912 5A000000 		.4byte	.LVL154
 2874 0916 D2020000 		.4byte	0x2d2
 2875 091a 00       		.byte	0
 2876 091b 12       		.uleb128 0x12
 2877 091c 2E000000 		.4byte	.LASF94
 2878 0920 01       		.byte	0x1
 2879 0921 6003     		.2byte	0x360
 2880 0923 00000000 		.4byte	.LFB8
 2881 0927 44000000 		.4byte	.LFE8-.LFB8
 2882 092b 01       		.uleb128 0x1
 2883 092c 9C       		.byte	0x9c
 2884 092d 44090000 		.4byte	0x944
 2885 0931 13       		.uleb128 0x13
 2886 0932 2C000000 		.4byte	.LVL157
 2887 0936 4D020000 		.4byte	0x24d
 2888 093a 13       		.uleb128 0x13
 2889 093b 30000000 		.4byte	.LVL158
 2890 093f 43080000 		.4byte	0x843
 2891 0943 00       		.byte	0
 2892 0944 1C       		.uleb128 0x1c
 2893 0945 97040000 		.4byte	.LASF95
 2894 0949 01       		.byte	0x1
 2895 094a 43       		.byte	0x43
 2896 094b 83000000 		.4byte	0x83
 2897 094f 05       		.uleb128 0x5
 2898 0950 03       		.byte	0x3
 2899 0951 00000000 		.4byte	ADC_1_currentConfig
 2900 0955 1D       		.uleb128 0x1d
 2901 0956 65090000 		.4byte	0x965
 2902 095a 65090000 		.4byte	0x965
 2903 095e 1E       		.uleb128 0x1e
 2904 095f FF000000 		.4byte	0xff
 2905 0963 00       		.byte	0
 2906 0964 00       		.byte	0
 2907 0965 0E       		.uleb128 0xe
 2908 0966 83000000 		.4byte	0x83
 2909 096a 1F       		.uleb128 0x1f
 2910 096b C7010000 		.4byte	.LASF96
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 92


 2911 096f 01       		.byte	0x1
 2912 0970 49       		.byte	0x49
 2913 0971 7A090000 		.4byte	0x97a
 2914 0975 04       		.byte	0x4
 2915 0976 00       		.byte	0
 2916 0977 05       		.byte	0x5
 2917 0978 00       		.byte	0
 2918 0979 00       		.byte	0
 2919 097a 0E       		.uleb128 0xe
 2920 097b 55090000 		.4byte	0x955
 2921 097f 20       		.uleb128 0x20
 2922 0980 15010000 		.4byte	.LASF97
 2923 0984 01       		.byte	0x1
 2924 0985 3D       		.byte	0x3d
 2925 0986 6B000000 		.4byte	0x6b
 2926 098a 05       		.uleb128 0x5
 2927 098b 03       		.byte	0x3
 2928 098c 00000000 		.4byte	ADC_1_initVar
 2929 0990 20       		.uleb128 0x20
 2930 0991 FD050000 		.4byte	.LASF98
 2931 0995 01       		.byte	0x1
 2932 0996 3F       		.byte	0x3f
 2933 0997 6B000000 		.4byte	0x6b
 2934 099b 05       		.uleb128 0x5
 2935 099c 03       		.byte	0x3
 2936 099d 00000000 		.4byte	ADC_1_selected
 2937 09a1 1D       		.uleb128 0x1d
 2938 09a2 B1090000 		.4byte	0x9b1
 2939 09a6 B1090000 		.4byte	0x9b1
 2940 09aa 1E       		.uleb128 0x1e
 2941 09ab FF000000 		.4byte	0xff
 2942 09af 00       		.byte	0
 2943 09b0 00       		.byte	0
 2944 09b1 05       		.uleb128 0x5
 2945 09b2 8F000000 		.4byte	0x8f
 2946 09b6 20       		.uleb128 0x20
 2947 09b7 F4030000 		.4byte	.LASF99
 2948 09bb 01       		.byte	0x1
 2949 09bc 40       		.byte	0x40
 2950 09bd C7090000 		.4byte	0x9c7
 2951 09c1 05       		.uleb128 0x5
 2952 09c2 03       		.byte	0x3
 2953 09c3 00000000 		.4byte	ADC_1_offset
 2954 09c7 05       		.uleb128 0x5
 2955 09c8 A1090000 		.4byte	0x9a1
 2956 09cc 1D       		.uleb128 0x1d
 2957 09cd DC090000 		.4byte	0x9dc
 2958 09d1 DC090000 		.4byte	0x9dc
 2959 09d5 1E       		.uleb128 0x1e
 2960 09d6 FF000000 		.4byte	0xff
 2961 09da 00       		.byte	0
 2962 09db 00       		.byte	0
 2963 09dc 05       		.uleb128 0x5
 2964 09dd 9B000000 		.4byte	0x9b
 2965 09e1 20       		.uleb128 0x20
 2966 09e2 58040000 		.4byte	.LASF100
 2967 09e6 01       		.byte	0x1
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 93


 2968 09e7 41       		.byte	0x41
 2969 09e8 F2090000 		.4byte	0x9f2
 2970 09ec 05       		.uleb128 0x5
 2971 09ed 03       		.byte	0x3
 2972 09ee 00000000 		.4byte	ADC_1_countsPer10Volt
 2973 09f2 05       		.uleb128 0x5
 2974 09f3 CC090000 		.4byte	0x9cc
 2975 09f7 1D       		.uleb128 0x1d
 2976 09f8 FD010000 		.4byte	0x1fd
 2977 09fc 070A0000 		.4byte	0xa07
 2978 0a00 1E       		.uleb128 0x1e
 2979 0a01 FF000000 		.4byte	0xff
 2980 0a05 00       		.byte	0
 2981 0a06 00       		.byte	0
 2982 0a07 21       		.uleb128 0x21
 2983 0a08 43020000 		.4byte	.LASF101
 2984 0a0c 03       		.byte	0x3
 2985 0a0d EC01     		.2byte	0x1ec
 2986 0a0f 130A0000 		.4byte	0xa13
 2987 0a13 0E       		.uleb128 0xe
 2988 0a14 F7090000 		.4byte	0x9f7
 2989 0a18 22       		.uleb128 0x22
 2990 0a19 DC010000 		.4byte	.LASF102
 2991 0a1d DC010000 		.4byte	.LASF102
 2992 0a21 04       		.byte	0x4
 2993 0a22 27       		.byte	0x27
 2994 0a23 22       		.uleb128 0x22
 2995 0a24 81050000 		.4byte	.LASF103
 2996 0a28 81050000 		.4byte	.LASF103
 2997 0a2c 04       		.byte	0x4
 2998 0a2d 29       		.byte	0x29
 2999 0a2e 22       		.uleb128 0x22
 3000 0a2f FB020000 		.4byte	.LASF104
 3001 0a33 FB020000 		.4byte	.LASF104
 3002 0a37 04       		.byte	0x4
 3003 0a38 1D       		.byte	0x1d
 3004 0a39 22       		.uleb128 0x22
 3005 0a3a BB060000 		.4byte	.LASF105
 3006 0a3e BB060000 		.4byte	.LASF105
 3007 0a42 05       		.byte	0x5
 3008 0a43 FA       		.byte	0xfa
 3009 0a44 22       		.uleb128 0x22
 3010 0a45 66030000 		.4byte	.LASF106
 3011 0a49 66030000 		.4byte	.LASF106
 3012 0a4d 05       		.byte	0x5
 3013 0a4e D3       		.byte	0xd3
 3014 0a4f 22       		.uleb128 0x22
 3015 0a50 37010000 		.4byte	.LASF107
 3016 0a54 37010000 		.4byte	.LASF107
 3017 0a58 05       		.byte	0x5
 3018 0a59 D0       		.byte	0xd0
 3019 0a5a 22       		.uleb128 0x22
 3020 0a5b DC000000 		.4byte	.LASF108
 3021 0a5f DC000000 		.4byte	.LASF108
 3022 0a63 05       		.byte	0x5
 3023 0a64 ED       		.byte	0xed
 3024 0a65 22       		.uleb128 0x22
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 94


 3025 0a66 7D030000 		.4byte	.LASF109
 3026 0a6a 7D030000 		.4byte	.LASF109
 3027 0a6e 06       		.byte	0x6
 3028 0a6f 18       		.byte	0x18
 3029 0a70 00       		.byte	0
 3030              		.section	.debug_abbrev,"",%progbits
 3031              	.Ldebug_abbrev0:
 3032 0000 01       		.uleb128 0x1
 3033 0001 11       		.uleb128 0x11
 3034 0002 01       		.byte	0x1
 3035 0003 25       		.uleb128 0x25
 3036 0004 0E       		.uleb128 0xe
 3037 0005 13       		.uleb128 0x13
 3038 0006 0B       		.uleb128 0xb
 3039 0007 03       		.uleb128 0x3
 3040 0008 0E       		.uleb128 0xe
 3041 0009 1B       		.uleb128 0x1b
 3042 000a 0E       		.uleb128 0xe
 3043 000b 55       		.uleb128 0x55
 3044 000c 17       		.uleb128 0x17
 3045 000d 11       		.uleb128 0x11
 3046 000e 01       		.uleb128 0x1
 3047 000f 10       		.uleb128 0x10
 3048 0010 17       		.uleb128 0x17
 3049 0011 00       		.byte	0
 3050 0012 00       		.byte	0
 3051 0013 02       		.uleb128 0x2
 3052 0014 24       		.uleb128 0x24
 3053 0015 00       		.byte	0
 3054 0016 0B       		.uleb128 0xb
 3055 0017 0B       		.uleb128 0xb
 3056 0018 3E       		.uleb128 0x3e
 3057 0019 0B       		.uleb128 0xb
 3058 001a 03       		.uleb128 0x3
 3059 001b 0E       		.uleb128 0xe
 3060 001c 00       		.byte	0
 3061 001d 00       		.byte	0
 3062 001e 03       		.uleb128 0x3
 3063 001f 24       		.uleb128 0x24
 3064 0020 00       		.byte	0
 3065 0021 0B       		.uleb128 0xb
 3066 0022 0B       		.uleb128 0xb
 3067 0023 3E       		.uleb128 0x3e
 3068 0024 0B       		.uleb128 0xb
 3069 0025 03       		.uleb128 0x3
 3070 0026 08       		.uleb128 0x8
 3071 0027 00       		.byte	0
 3072 0028 00       		.byte	0
 3073 0029 04       		.uleb128 0x4
 3074 002a 16       		.uleb128 0x16
 3075 002b 00       		.byte	0
 3076 002c 03       		.uleb128 0x3
 3077 002d 0E       		.uleb128 0xe
 3078 002e 3A       		.uleb128 0x3a
 3079 002f 0B       		.uleb128 0xb
 3080 0030 3B       		.uleb128 0x3b
 3081 0031 05       		.uleb128 0x5
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 95


 3082 0032 49       		.uleb128 0x49
 3083 0033 13       		.uleb128 0x13
 3084 0034 00       		.byte	0
 3085 0035 00       		.byte	0
 3086 0036 05       		.uleb128 0x5
 3087 0037 35       		.uleb128 0x35
 3088 0038 00       		.byte	0
 3089 0039 49       		.uleb128 0x49
 3090 003a 13       		.uleb128 0x13
 3091 003b 00       		.byte	0
 3092 003c 00       		.byte	0
 3093 003d 06       		.uleb128 0x6
 3094 003e 0F       		.uleb128 0xf
 3095 003f 00       		.byte	0
 3096 0040 0B       		.uleb128 0xb
 3097 0041 0B       		.uleb128 0xb
 3098 0042 49       		.uleb128 0x49
 3099 0043 13       		.uleb128 0x13
 3100 0044 00       		.byte	0
 3101 0045 00       		.byte	0
 3102 0046 07       		.uleb128 0x7
 3103 0047 15       		.uleb128 0x15
 3104 0048 00       		.byte	0
 3105 0049 27       		.uleb128 0x27
 3106 004a 19       		.uleb128 0x19
 3107 004b 00       		.byte	0
 3108 004c 00       		.byte	0
 3109 004d 08       		.uleb128 0x8
 3110 004e 13       		.uleb128 0x13
 3111 004f 01       		.byte	0x1
 3112 0050 0B       		.uleb128 0xb
 3113 0051 0B       		.uleb128 0xb
 3114 0052 3A       		.uleb128 0x3a
 3115 0053 0B       		.uleb128 0xb
 3116 0054 3B       		.uleb128 0x3b
 3117 0055 0B       		.uleb128 0xb
 3118 0056 01       		.uleb128 0x1
 3119 0057 13       		.uleb128 0x13
 3120 0058 00       		.byte	0
 3121 0059 00       		.byte	0
 3122 005a 09       		.uleb128 0x9
 3123 005b 0D       		.uleb128 0xd
 3124 005c 00       		.byte	0
 3125 005d 03       		.uleb128 0x3
 3126 005e 0E       		.uleb128 0xe
 3127 005f 3A       		.uleb128 0x3a
 3128 0060 0B       		.uleb128 0xb
 3129 0061 3B       		.uleb128 0x3b
 3130 0062 0B       		.uleb128 0xb
 3131 0063 49       		.uleb128 0x49
 3132 0064 13       		.uleb128 0x13
 3133 0065 38       		.uleb128 0x38
 3134 0066 0B       		.uleb128 0xb
 3135 0067 00       		.byte	0
 3136 0068 00       		.byte	0
 3137 0069 0A       		.uleb128 0xa
 3138 006a 16       		.uleb128 0x16
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 96


 3139 006b 00       		.byte	0
 3140 006c 03       		.uleb128 0x3
 3141 006d 0E       		.uleb128 0xe
 3142 006e 3A       		.uleb128 0x3a
 3143 006f 0B       		.uleb128 0xb
 3144 0070 3B       		.uleb128 0x3b
 3145 0071 0B       		.uleb128 0xb
 3146 0072 49       		.uleb128 0x49
 3147 0073 13       		.uleb128 0x13
 3148 0074 00       		.byte	0
 3149 0075 00       		.byte	0
 3150 0076 0B       		.uleb128 0xb
 3151 0077 2E       		.uleb128 0x2e
 3152 0078 01       		.byte	0x1
 3153 0079 03       		.uleb128 0x3
 3154 007a 0E       		.uleb128 0xe
 3155 007b 3A       		.uleb128 0x3a
 3156 007c 0B       		.uleb128 0xb
 3157 007d 3B       		.uleb128 0x3b
 3158 007e 05       		.uleb128 0x5
 3159 007f 27       		.uleb128 0x27
 3160 0080 19       		.uleb128 0x19
 3161 0081 11       		.uleb128 0x11
 3162 0082 01       		.uleb128 0x1
 3163 0083 12       		.uleb128 0x12
 3164 0084 06       		.uleb128 0x6
 3165 0085 40       		.uleb128 0x40
 3166 0086 18       		.uleb128 0x18
 3167 0087 9742     		.uleb128 0x2117
 3168 0089 19       		.uleb128 0x19
 3169 008a 01       		.uleb128 0x1
 3170 008b 13       		.uleb128 0x13
 3171 008c 00       		.byte	0
 3172 008d 00       		.byte	0
 3173 008e 0C       		.uleb128 0xc
 3174 008f 05       		.uleb128 0x5
 3175 0090 00       		.byte	0
 3176 0091 03       		.uleb128 0x3
 3177 0092 0E       		.uleb128 0xe
 3178 0093 3A       		.uleb128 0x3a
 3179 0094 0B       		.uleb128 0xb
 3180 0095 3B       		.uleb128 0x3b
 3181 0096 05       		.uleb128 0x5
 3182 0097 49       		.uleb128 0x49
 3183 0098 13       		.uleb128 0x13
 3184 0099 02       		.uleb128 0x2
 3185 009a 18       		.uleb128 0x18
 3186 009b 00       		.byte	0
 3187 009c 00       		.byte	0
 3188 009d 0D       		.uleb128 0xd
 3189 009e 34       		.uleb128 0x34
 3190 009f 00       		.byte	0
 3191 00a0 03       		.uleb128 0x3
 3192 00a1 0E       		.uleb128 0xe
 3193 00a2 3A       		.uleb128 0x3a
 3194 00a3 0B       		.uleb128 0xb
 3195 00a4 3B       		.uleb128 0x3b
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 97


 3196 00a5 05       		.uleb128 0x5
 3197 00a6 49       		.uleb128 0x49
 3198 00a7 13       		.uleb128 0x13
 3199 00a8 02       		.uleb128 0x2
 3200 00a9 17       		.uleb128 0x17
 3201 00aa 00       		.byte	0
 3202 00ab 00       		.byte	0
 3203 00ac 0E       		.uleb128 0xe
 3204 00ad 26       		.uleb128 0x26
 3205 00ae 00       		.byte	0
 3206 00af 49       		.uleb128 0x49
 3207 00b0 13       		.uleb128 0x13
 3208 00b1 00       		.byte	0
 3209 00b2 00       		.byte	0
 3210 00b3 0F       		.uleb128 0xf
 3211 00b4 2E       		.uleb128 0x2e
 3212 00b5 01       		.byte	0x1
 3213 00b6 03       		.uleb128 0x3
 3214 00b7 0E       		.uleb128 0xe
 3215 00b8 3A       		.uleb128 0x3a
 3216 00b9 0B       		.uleb128 0xb
 3217 00ba 3B       		.uleb128 0x3b
 3218 00bb 05       		.uleb128 0x5
 3219 00bc 27       		.uleb128 0x27
 3220 00bd 19       		.uleb128 0x19
 3221 00be 49       		.uleb128 0x49
 3222 00bf 13       		.uleb128 0x13
 3223 00c0 11       		.uleb128 0x11
 3224 00c1 01       		.uleb128 0x1
 3225 00c2 12       		.uleb128 0x12
 3226 00c3 06       		.uleb128 0x6
 3227 00c4 40       		.uleb128 0x40
 3228 00c5 18       		.uleb128 0x18
 3229 00c6 9742     		.uleb128 0x2117
 3230 00c8 19       		.uleb128 0x19
 3231 00c9 01       		.uleb128 0x1
 3232 00ca 13       		.uleb128 0x13
 3233 00cb 00       		.byte	0
 3234 00cc 00       		.byte	0
 3235 00cd 10       		.uleb128 0x10
 3236 00ce 05       		.uleb128 0x5
 3237 00cf 00       		.byte	0
 3238 00d0 03       		.uleb128 0x3
 3239 00d1 0E       		.uleb128 0xe
 3240 00d2 3A       		.uleb128 0x3a
 3241 00d3 0B       		.uleb128 0xb
 3242 00d4 3B       		.uleb128 0x3b
 3243 00d5 05       		.uleb128 0x5
 3244 00d6 49       		.uleb128 0x49
 3245 00d7 13       		.uleb128 0x13
 3246 00d8 02       		.uleb128 0x2
 3247 00d9 17       		.uleb128 0x17
 3248 00da 00       		.byte	0
 3249 00db 00       		.byte	0
 3250 00dc 11       		.uleb128 0x11
 3251 00dd 2E       		.uleb128 0x2e
 3252 00de 00       		.byte	0
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 98


 3253 00df 3F       		.uleb128 0x3f
 3254 00e0 19       		.uleb128 0x19
 3255 00e1 03       		.uleb128 0x3
 3256 00e2 0E       		.uleb128 0xe
 3257 00e3 3A       		.uleb128 0x3a
 3258 00e4 0B       		.uleb128 0xb
 3259 00e5 3B       		.uleb128 0x3b
 3260 00e6 05       		.uleb128 0x5
 3261 00e7 27       		.uleb128 0x27
 3262 00e8 19       		.uleb128 0x19
 3263 00e9 11       		.uleb128 0x11
 3264 00ea 01       		.uleb128 0x1
 3265 00eb 12       		.uleb128 0x12
 3266 00ec 06       		.uleb128 0x6
 3267 00ed 40       		.uleb128 0x40
 3268 00ee 18       		.uleb128 0x18
 3269 00ef 9742     		.uleb128 0x2117
 3270 00f1 19       		.uleb128 0x19
 3271 00f2 00       		.byte	0
 3272 00f3 00       		.byte	0
 3273 00f4 12       		.uleb128 0x12
 3274 00f5 2E       		.uleb128 0x2e
 3275 00f6 01       		.byte	0x1
 3276 00f7 3F       		.uleb128 0x3f
 3277 00f8 19       		.uleb128 0x19
 3278 00f9 03       		.uleb128 0x3
 3279 00fa 0E       		.uleb128 0xe
 3280 00fb 3A       		.uleb128 0x3a
 3281 00fc 0B       		.uleb128 0xb
 3282 00fd 3B       		.uleb128 0x3b
 3283 00fe 05       		.uleb128 0x5
 3284 00ff 27       		.uleb128 0x27
 3285 0100 19       		.uleb128 0x19
 3286 0101 11       		.uleb128 0x11
 3287 0102 01       		.uleb128 0x1
 3288 0103 12       		.uleb128 0x12
 3289 0104 06       		.uleb128 0x6
 3290 0105 40       		.uleb128 0x40
 3291 0106 18       		.uleb128 0x18
 3292 0107 9742     		.uleb128 0x2117
 3293 0109 19       		.uleb128 0x19
 3294 010a 01       		.uleb128 0x1
 3295 010b 13       		.uleb128 0x13
 3296 010c 00       		.byte	0
 3297 010d 00       		.byte	0
 3298 010e 13       		.uleb128 0x13
 3299 010f 898201   		.uleb128 0x4109
 3300 0112 00       		.byte	0
 3301 0113 11       		.uleb128 0x11
 3302 0114 01       		.uleb128 0x1
 3303 0115 31       		.uleb128 0x31
 3304 0116 13       		.uleb128 0x13
 3305 0117 00       		.byte	0
 3306 0118 00       		.byte	0
 3307 0119 14       		.uleb128 0x14
 3308 011a 898201   		.uleb128 0x4109
 3309 011d 01       		.byte	0x1
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 99


 3310 011e 11       		.uleb128 0x11
 3311 011f 01       		.uleb128 0x1
 3312 0120 31       		.uleb128 0x31
 3313 0121 13       		.uleb128 0x13
 3314 0122 01       		.uleb128 0x1
 3315 0123 13       		.uleb128 0x13
 3316 0124 00       		.byte	0
 3317 0125 00       		.byte	0
 3318 0126 15       		.uleb128 0x15
 3319 0127 8A8201   		.uleb128 0x410a
 3320 012a 00       		.byte	0
 3321 012b 02       		.uleb128 0x2
 3322 012c 18       		.uleb128 0x18
 3323 012d 9142     		.uleb128 0x2111
 3324 012f 18       		.uleb128 0x18
 3325 0130 00       		.byte	0
 3326 0131 00       		.byte	0
 3327 0132 16       		.uleb128 0x16
 3328 0133 898201   		.uleb128 0x4109
 3329 0136 01       		.byte	0x1
 3330 0137 11       		.uleb128 0x11
 3331 0138 01       		.uleb128 0x1
 3332 0139 31       		.uleb128 0x31
 3333 013a 13       		.uleb128 0x13
 3334 013b 00       		.byte	0
 3335 013c 00       		.byte	0
 3336 013d 17       		.uleb128 0x17
 3337 013e 34       		.uleb128 0x34
 3338 013f 00       		.byte	0
 3339 0140 03       		.uleb128 0x3
 3340 0141 0E       		.uleb128 0xe
 3341 0142 3A       		.uleb128 0x3a
 3342 0143 0B       		.uleb128 0xb
 3343 0144 3B       		.uleb128 0x3b
 3344 0145 05       		.uleb128 0x5
 3345 0146 49       		.uleb128 0x49
 3346 0147 13       		.uleb128 0x13
 3347 0148 02       		.uleb128 0x2
 3348 0149 18       		.uleb128 0x18
 3349 014a 00       		.byte	0
 3350 014b 00       		.byte	0
 3351 014c 18       		.uleb128 0x18
 3352 014d 2E       		.uleb128 0x2e
 3353 014e 01       		.byte	0x1
 3354 014f 3F       		.uleb128 0x3f
 3355 0150 19       		.uleb128 0x19
 3356 0151 03       		.uleb128 0x3
 3357 0152 0E       		.uleb128 0xe
 3358 0153 3A       		.uleb128 0x3a
 3359 0154 0B       		.uleb128 0xb
 3360 0155 3B       		.uleb128 0x3b
 3361 0156 05       		.uleb128 0x5
 3362 0157 27       		.uleb128 0x27
 3363 0158 19       		.uleb128 0x19
 3364 0159 49       		.uleb128 0x49
 3365 015a 13       		.uleb128 0x13
 3366 015b 11       		.uleb128 0x11
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 100


 3367 015c 01       		.uleb128 0x1
 3368 015d 12       		.uleb128 0x12
 3369 015e 06       		.uleb128 0x6
 3370 015f 40       		.uleb128 0x40
 3371 0160 18       		.uleb128 0x18
 3372 0161 9742     		.uleb128 0x2117
 3373 0163 19       		.uleb128 0x19
 3374 0164 01       		.uleb128 0x1
 3375 0165 13       		.uleb128 0x13
 3376 0166 00       		.byte	0
 3377 0167 00       		.byte	0
 3378 0168 19       		.uleb128 0x19
 3379 0169 34       		.uleb128 0x34
 3380 016a 00       		.byte	0
 3381 016b 03       		.uleb128 0x3
 3382 016c 08       		.uleb128 0x8
 3383 016d 3A       		.uleb128 0x3a
 3384 016e 0B       		.uleb128 0xb
 3385 016f 3B       		.uleb128 0x3b
 3386 0170 05       		.uleb128 0x5
 3387 0171 49       		.uleb128 0x49
 3388 0172 13       		.uleb128 0x13
 3389 0173 02       		.uleb128 0x2
 3390 0174 17       		.uleb128 0x17
 3391 0175 00       		.byte	0
 3392 0176 00       		.byte	0
 3393 0177 1A       		.uleb128 0x1a
 3394 0178 2E       		.uleb128 0x2e
 3395 0179 01       		.byte	0x1
 3396 017a 3F       		.uleb128 0x3f
 3397 017b 19       		.uleb128 0x19
 3398 017c 03       		.uleb128 0x3
 3399 017d 0E       		.uleb128 0xe
 3400 017e 3A       		.uleb128 0x3a
 3401 017f 0B       		.uleb128 0xb
 3402 0180 3B       		.uleb128 0x3b
 3403 0181 05       		.uleb128 0x5
 3404 0182 27       		.uleb128 0x27
 3405 0183 19       		.uleb128 0x19
 3406 0184 49       		.uleb128 0x49
 3407 0185 13       		.uleb128 0x13
 3408 0186 11       		.uleb128 0x11
 3409 0187 01       		.uleb128 0x1
 3410 0188 12       		.uleb128 0x12
 3411 0189 06       		.uleb128 0x6
 3412 018a 40       		.uleb128 0x40
 3413 018b 18       		.uleb128 0x18
 3414 018c 9642     		.uleb128 0x2116
 3415 018e 19       		.uleb128 0x19
 3416 018f 01       		.uleb128 0x1
 3417 0190 13       		.uleb128 0x13
 3418 0191 00       		.byte	0
 3419 0192 00       		.byte	0
 3420 0193 1B       		.uleb128 0x1b
 3421 0194 2E       		.uleb128 0x2e
 3422 0195 01       		.byte	0x1
 3423 0196 3F       		.uleb128 0x3f
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 101


 3424 0197 19       		.uleb128 0x19
 3425 0198 03       		.uleb128 0x3
 3426 0199 0E       		.uleb128 0xe
 3427 019a 3A       		.uleb128 0x3a
 3428 019b 0B       		.uleb128 0xb
 3429 019c 3B       		.uleb128 0x3b
 3430 019d 05       		.uleb128 0x5
 3431 019e 27       		.uleb128 0x27
 3432 019f 19       		.uleb128 0x19
 3433 01a0 11       		.uleb128 0x11
 3434 01a1 01       		.uleb128 0x1
 3435 01a2 12       		.uleb128 0x12
 3436 01a3 06       		.uleb128 0x6
 3437 01a4 40       		.uleb128 0x40
 3438 01a5 18       		.uleb128 0x18
 3439 01a6 9642     		.uleb128 0x2116
 3440 01a8 19       		.uleb128 0x19
 3441 01a9 01       		.uleb128 0x1
 3442 01aa 13       		.uleb128 0x13
 3443 01ab 00       		.byte	0
 3444 01ac 00       		.byte	0
 3445 01ad 1C       		.uleb128 0x1c
 3446 01ae 34       		.uleb128 0x34
 3447 01af 00       		.byte	0
 3448 01b0 03       		.uleb128 0x3
 3449 01b1 0E       		.uleb128 0xe
 3450 01b2 3A       		.uleb128 0x3a
 3451 01b3 0B       		.uleb128 0xb
 3452 01b4 3B       		.uleb128 0x3b
 3453 01b5 0B       		.uleb128 0xb
 3454 01b6 49       		.uleb128 0x49
 3455 01b7 13       		.uleb128 0x13
 3456 01b8 02       		.uleb128 0x2
 3457 01b9 18       		.uleb128 0x18
 3458 01ba 00       		.byte	0
 3459 01bb 00       		.byte	0
 3460 01bc 1D       		.uleb128 0x1d
 3461 01bd 01       		.uleb128 0x1
 3462 01be 01       		.byte	0x1
 3463 01bf 49       		.uleb128 0x49
 3464 01c0 13       		.uleb128 0x13
 3465 01c1 01       		.uleb128 0x1
 3466 01c2 13       		.uleb128 0x13
 3467 01c3 00       		.byte	0
 3468 01c4 00       		.byte	0
 3469 01c5 1E       		.uleb128 0x1e
 3470 01c6 21       		.uleb128 0x21
 3471 01c7 00       		.byte	0
 3472 01c8 49       		.uleb128 0x49
 3473 01c9 13       		.uleb128 0x13
 3474 01ca 2F       		.uleb128 0x2f
 3475 01cb 0B       		.uleb128 0xb
 3476 01cc 00       		.byte	0
 3477 01cd 00       		.byte	0
 3478 01ce 1F       		.uleb128 0x1f
 3479 01cf 34       		.uleb128 0x34
 3480 01d0 00       		.byte	0
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 102


 3481 01d1 03       		.uleb128 0x3
 3482 01d2 0E       		.uleb128 0xe
 3483 01d3 3A       		.uleb128 0x3a
 3484 01d4 0B       		.uleb128 0xb
 3485 01d5 3B       		.uleb128 0x3b
 3486 01d6 0B       		.uleb128 0xb
 3487 01d7 49       		.uleb128 0x49
 3488 01d8 13       		.uleb128 0x13
 3489 01d9 1C       		.uleb128 0x1c
 3490 01da 0A       		.uleb128 0xa
 3491 01db 00       		.byte	0
 3492 01dc 00       		.byte	0
 3493 01dd 20       		.uleb128 0x20
 3494 01de 34       		.uleb128 0x34
 3495 01df 00       		.byte	0
 3496 01e0 03       		.uleb128 0x3
 3497 01e1 0E       		.uleb128 0xe
 3498 01e2 3A       		.uleb128 0x3a
 3499 01e3 0B       		.uleb128 0xb
 3500 01e4 3B       		.uleb128 0x3b
 3501 01e5 0B       		.uleb128 0xb
 3502 01e6 49       		.uleb128 0x49
 3503 01e7 13       		.uleb128 0x13
 3504 01e8 3F       		.uleb128 0x3f
 3505 01e9 19       		.uleb128 0x19
 3506 01ea 02       		.uleb128 0x2
 3507 01eb 18       		.uleb128 0x18
 3508 01ec 00       		.byte	0
 3509 01ed 00       		.byte	0
 3510 01ee 21       		.uleb128 0x21
 3511 01ef 34       		.uleb128 0x34
 3512 01f0 00       		.byte	0
 3513 01f1 03       		.uleb128 0x3
 3514 01f2 0E       		.uleb128 0xe
 3515 01f3 3A       		.uleb128 0x3a
 3516 01f4 0B       		.uleb128 0xb
 3517 01f5 3B       		.uleb128 0x3b
 3518 01f6 05       		.uleb128 0x5
 3519 01f7 49       		.uleb128 0x49
 3520 01f8 13       		.uleb128 0x13
 3521 01f9 3F       		.uleb128 0x3f
 3522 01fa 19       		.uleb128 0x19
 3523 01fb 3C       		.uleb128 0x3c
 3524 01fc 19       		.uleb128 0x19
 3525 01fd 00       		.byte	0
 3526 01fe 00       		.byte	0
 3527 01ff 22       		.uleb128 0x22
 3528 0200 2E       		.uleb128 0x2e
 3529 0201 00       		.byte	0
 3530 0202 3F       		.uleb128 0x3f
 3531 0203 19       		.uleb128 0x19
 3532 0204 3C       		.uleb128 0x3c
 3533 0205 19       		.uleb128 0x19
 3534 0206 6E       		.uleb128 0x6e
 3535 0207 0E       		.uleb128 0xe
 3536 0208 03       		.uleb128 0x3
 3537 0209 0E       		.uleb128 0xe
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 103


 3538 020a 3A       		.uleb128 0x3a
 3539 020b 0B       		.uleb128 0xb
 3540 020c 3B       		.uleb128 0x3b
 3541 020d 0B       		.uleb128 0xb
 3542 020e 00       		.byte	0
 3543 020f 00       		.byte	0
 3544 0210 00       		.byte	0
 3545              		.section	.debug_loc,"",%progbits
 3546              	.Ldebug_loc0:
 3547              	.LLST0:
 3548 0000 04000000 		.4byte	.LVL1
 3549 0004 1C000000 		.4byte	.LVL4
 3550 0008 0100     		.2byte	0x1
 3551 000a 53       		.byte	0x53
 3552 000b 1C000000 		.4byte	.LVL4
 3553 000f 20000000 		.4byte	.LVL5
 3554 0013 0700     		.2byte	0x7
 3555 0015 73       		.byte	0x73
 3556 0016 00       		.sleb128 0
 3557 0017 40       		.byte	0x40
 3558 0018 49       		.byte	0x49
 3559 0019 24       		.byte	0x24
 3560 001a 21       		.byte	0x21
 3561 001b 9F       		.byte	0x9f
 3562 001c 26000000 		.4byte	.LVL6
 3563 0020 34000000 		.4byte	.LFE5
 3564 0024 0100     		.2byte	0x1
 3565 0026 53       		.byte	0x53
 3566 0027 00000000 		.4byte	0
 3567 002b 00000000 		.4byte	0
 3568              	.LLST1:
 3569 002f 00000000 		.4byte	.LVL7
 3570 0033 02000000 		.4byte	.LVL8
 3571 0037 0100     		.2byte	0x1
 3572 0039 50       		.byte	0x50
 3573 003a 02000000 		.4byte	.LVL8
 3574 003e 58000000 		.4byte	.LFE13
 3575 0042 0400     		.2byte	0x4
 3576 0044 F3       		.byte	0xf3
 3577 0045 01       		.uleb128 0x1
 3578 0046 50       		.byte	0x50
 3579 0047 9F       		.byte	0x9f
 3580 0048 00000000 		.4byte	0
 3581 004c 00000000 		.4byte	0
 3582              	.LLST2:
 3583 0050 00000000 		.4byte	.LVL7
 3584 0054 46000000 		.4byte	.LVL13
 3585 0058 0200     		.2byte	0x2
 3586 005a 30       		.byte	0x30
 3587 005b 9F       		.byte	0x9f
 3588 005c 46000000 		.4byte	.LVL13
 3589 0060 58000000 		.4byte	.LFE13
 3590 0064 0100     		.2byte	0x1
 3591 0066 50       		.byte	0x50
 3592 0067 00000000 		.4byte	0
 3593 006b 00000000 		.4byte	0
 3594              	.LLST3:
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 104


 3595 006f 0A000000 		.4byte	.LVL9
 3596 0073 14000000 		.4byte	.LVL10
 3597 0077 0100     		.2byte	0x1
 3598 0079 52       		.byte	0x52
 3599 007a 28000000 		.4byte	.LVL11
 3600 007e 2C000000 		.4byte	.LVL12
 3601 0082 0100     		.2byte	0x1
 3602 0084 52       		.byte	0x52
 3603 0085 00000000 		.4byte	0
 3604 0089 00000000 		.4byte	0
 3605              	.LLST4:
 3606 008d 00000000 		.4byte	.LVL14
 3607 0091 07000000 		.4byte	.LVL15-1
 3608 0095 0100     		.2byte	0x1
 3609 0097 50       		.byte	0x50
 3610 0098 07000000 		.4byte	.LVL15-1
 3611 009c 7E000000 		.4byte	.LVL21
 3612 00a0 0100     		.2byte	0x1
 3613 00a2 54       		.byte	0x54
 3614 00a3 7E000000 		.4byte	.LVL21
 3615 00a7 AC000000 		.4byte	.LFE4
 3616 00ab 0400     		.2byte	0x4
 3617 00ad F3       		.byte	0xf3
 3618 00ae 01       		.uleb128 0x1
 3619 00af 50       		.byte	0x50
 3620 00b0 9F       		.byte	0x9f
 3621 00b1 00000000 		.4byte	0
 3622 00b5 00000000 		.4byte	0
 3623              	.LLST5:
 3624 00b9 64000000 		.4byte	.LVL18
 3625 00bd 68000000 		.4byte	.LVL19
 3626 00c1 0200     		.2byte	0x2
 3627 00c3 30       		.byte	0x30
 3628 00c4 9F       		.byte	0x9f
 3629 00c5 68000000 		.4byte	.LVL19
 3630 00c9 AC000000 		.4byte	.LFE4
 3631 00cd 0100     		.2byte	0x1
 3632 00cf 53       		.byte	0x53
 3633 00d0 00000000 		.4byte	0
 3634 00d4 00000000 		.4byte	0
 3635              	.LLST6:
 3636 00d8 68000000 		.4byte	.LVL19
 3637 00dc 78000000 		.4byte	.LVL20
 3638 00e0 0400     		.2byte	0x4
 3639 00e2 0A       		.byte	0xa
 3640 00e3 0005     		.2byte	0x500
 3641 00e5 9F       		.byte	0x9f
 3642 00e6 00000000 		.4byte	0
 3643 00ea 00000000 		.4byte	0
 3644              	.LLST7:
 3645 00ee 00000000 		.4byte	.LVL23
 3646 00f2 04000000 		.4byte	.LVL24
 3647 00f6 0100     		.2byte	0x1
 3648 00f8 50       		.byte	0x50
 3649 00f9 04000000 		.4byte	.LVL24
 3650 00fd 10000000 		.4byte	.LFE10
 3651 0101 0400     		.2byte	0x4
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 105


 3652 0103 F3       		.byte	0xf3
 3653 0104 01       		.uleb128 0x1
 3654 0105 50       		.byte	0x50
 3655 0106 9F       		.byte	0x9f
 3656 0107 00000000 		.4byte	0
 3657 010b 00000000 		.4byte	0
 3658              	.LLST8:
 3659 010f 00000000 		.4byte	.LVL25
 3660 0113 18000000 		.4byte	.LVL27
 3661 0117 0100     		.2byte	0x1
 3662 0119 50       		.byte	0x50
 3663 011a 18000000 		.4byte	.LVL27
 3664 011e 2C000000 		.4byte	.LFE11
 3665 0122 0100     		.2byte	0x1
 3666 0124 50       		.byte	0x50
 3667 0125 00000000 		.4byte	0
 3668 0129 00000000 		.4byte	0
 3669              	.LLST9:
 3670 012d 00000000 		.4byte	.LVL28
 3671 0131 0A000000 		.4byte	.LVL30
 3672 0135 0100     		.2byte	0x1
 3673 0137 50       		.byte	0x50
 3674 0138 0A000000 		.4byte	.LVL30
 3675 013c 2C000000 		.4byte	.LVL34
 3676 0140 0100     		.2byte	0x1
 3677 0142 51       		.byte	0x51
 3678 0143 2C000000 		.4byte	.LVL34
 3679 0147 2E000000 		.4byte	.LVL35
 3680 014b 0100     		.2byte	0x1
 3681 014d 50       		.byte	0x50
 3682 014e 2E000000 		.4byte	.LVL35
 3683 0152 38000000 		.4byte	.LFE12
 3684 0156 0100     		.2byte	0x1
 3685 0158 51       		.byte	0x51
 3686 0159 00000000 		.4byte	0
 3687 015d 00000000 		.4byte	0
 3688              	.LLST10:
 3689 0161 02000000 		.4byte	.LVL29
 3690 0165 0A000000 		.4byte	.LVL30
 3691 0169 0200     		.2byte	0x2
 3692 016b 30       		.byte	0x30
 3693 016c 9F       		.byte	0x9f
 3694 016d 12000000 		.4byte	.LVL31
 3695 0171 2C000000 		.4byte	.LVL34
 3696 0175 0100     		.2byte	0x1
 3697 0177 50       		.byte	0x50
 3698 0178 2C000000 		.4byte	.LVL34
 3699 017c 2E000000 		.4byte	.LVL35
 3700 0180 0200     		.2byte	0x2
 3701 0182 30       		.byte	0x30
 3702 0183 9F       		.byte	0x9f
 3703 0184 2E000000 		.4byte	.LVL35
 3704 0188 38000000 		.4byte	.LFE12
 3705 018c 0100     		.2byte	0x1
 3706 018e 50       		.byte	0x50
 3707 018f 00000000 		.4byte	0
 3708 0193 00000000 		.4byte	0
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 106


 3709              	.LLST11:
 3710 0197 02000000 		.4byte	.LVL29
 3711 019b 0A000000 		.4byte	.LVL30
 3712 019f 0600     		.2byte	0x6
 3713 01a1 0C       		.byte	0xc
 3714 01a2 FFFFFF03 		.4byte	0x3ffffff
 3715 01a6 9F       		.byte	0x9f
 3716 01a7 0A000000 		.4byte	.LVL30
 3717 01ab 26000000 		.4byte	.LVL33
 3718 01af 0100     		.2byte	0x1
 3719 01b1 52       		.byte	0x52
 3720 01b2 2C000000 		.4byte	.LVL34
 3721 01b6 2E000000 		.4byte	.LVL35
 3722 01ba 0600     		.2byte	0x6
 3723 01bc 0C       		.byte	0xc
 3724 01bd FFFFFF03 		.4byte	0x3ffffff
 3725 01c1 9F       		.byte	0x9f
 3726 01c2 00000000 		.4byte	0
 3727 01c6 00000000 		.4byte	0
 3728              	.LLST12:
 3729 01ca 00000000 		.4byte	.LVL36
 3730 01ce 1A000000 		.4byte	.LVL37
 3731 01d2 0100     		.2byte	0x1
 3732 01d4 50       		.byte	0x50
 3733 01d5 1A000000 		.4byte	.LVL37
 3734 01d9 34000000 		.4byte	.LVL39
 3735 01dd 0100     		.2byte	0x1
 3736 01df 54       		.byte	0x54
 3737 01e0 34000000 		.4byte	.LVL39
 3738 01e4 42000000 		.4byte	.LVL41
 3739 01e8 0400     		.2byte	0x4
 3740 01ea F3       		.byte	0xf3
 3741 01eb 01       		.uleb128 0x1
 3742 01ec 50       		.byte	0x50
 3743 01ed 9F       		.byte	0x9f
 3744 01ee 42000000 		.4byte	.LVL41
 3745 01f2 44000000 		.4byte	.LVL42
 3746 01f6 0100     		.2byte	0x1
 3747 01f8 54       		.byte	0x54
 3748 01f9 44000000 		.4byte	.LVL42
 3749 01fd 54000000 		.4byte	.LFE14
 3750 0201 0400     		.2byte	0x4
 3751 0203 F3       		.byte	0xf3
 3752 0204 01       		.uleb128 0x1
 3753 0205 50       		.byte	0x50
 3754 0206 9F       		.byte	0x9f
 3755 0207 00000000 		.4byte	0
 3756 020b 00000000 		.4byte	0
 3757              	.LLST13:
 3758 020f 40000000 		.4byte	.LVL40
 3759 0213 42000000 		.4byte	.LVL41
 3760 0217 0100     		.2byte	0x1
 3761 0219 50       		.byte	0x50
 3762 021a 44000000 		.4byte	.LVL42
 3763 021e 46000000 		.4byte	.LVL43
 3764 0222 0100     		.2byte	0x1
 3765 0224 50       		.byte	0x50
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 107


 3766 0225 00000000 		.4byte	0
 3767 0229 00000000 		.4byte	0
 3768              	.LLST14:
 3769 022d 00000000 		.4byte	.LVL44
 3770 0231 1A000000 		.4byte	.LVL45
 3771 0235 0100     		.2byte	0x1
 3772 0237 50       		.byte	0x50
 3773 0238 1A000000 		.4byte	.LVL45
 3774 023c 54000000 		.4byte	.LVL56
 3775 0240 0100     		.2byte	0x1
 3776 0242 55       		.byte	0x55
 3777 0243 54000000 		.4byte	.LVL56
 3778 0247 64000000 		.4byte	.LFE15
 3779 024b 0400     		.2byte	0x4
 3780 024d F3       		.byte	0xf3
 3781 024e 01       		.uleb128 0x1
 3782 024f 50       		.byte	0x50
 3783 0250 9F       		.byte	0x9f
 3784 0251 00000000 		.4byte	0
 3785 0255 00000000 		.4byte	0
 3786              	.LLST15:
 3787 0259 40000000 		.4byte	.LVL47
 3788 025d 42000000 		.4byte	.LVL48
 3789 0261 0100     		.2byte	0x1
 3790 0263 54       		.byte	0x54
 3791 0264 44000000 		.4byte	.LVL49
 3792 0268 54000000 		.4byte	.LVL55
 3793 026c 0100     		.2byte	0x1
 3794 026e 54       		.byte	0x54
 3795 026f 00000000 		.4byte	0
 3796 0273 00000000 		.4byte	0
 3797              	.LLST16:
 3798 0277 4E000000 		.4byte	.LVL51
 3799 027b 52000000 		.4byte	.LVL53
 3800 027f 0100     		.2byte	0x1
 3801 0281 54       		.byte	0x54
 3802 0282 00000000 		.4byte	0
 3803 0286 00000000 		.4byte	0
 3804              	.LLST17:
 3805 028a 50000000 		.4byte	.LVL52
 3806 028e 52000000 		.4byte	.LVL53
 3807 0292 0100     		.2byte	0x1
 3808 0294 50       		.byte	0x50
 3809 0295 54000000 		.4byte	.LVL54
 3810 0299 64000000 		.4byte	.LFE15
 3811 029d 0100     		.2byte	0x1
 3812 029f 50       		.byte	0x50
 3813 02a0 00000000 		.4byte	0
 3814 02a4 00000000 		.4byte	0
 3815              	.LLST18:
 3816 02a8 00000000 		.4byte	.LVL57
 3817 02ac 0E000000 		.4byte	.LVL58
 3818 02b0 0100     		.2byte	0x1
 3819 02b2 50       		.byte	0x50
 3820 02b3 0E000000 		.4byte	.LVL58
 3821 02b7 1C000000 		.4byte	.LFE16
 3822 02bb 0400     		.2byte	0x4
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 108


 3823 02bd F3       		.byte	0xf3
 3824 02be 01       		.uleb128 0x1
 3825 02bf 50       		.byte	0x50
 3826 02c0 9F       		.byte	0x9f
 3827 02c1 00000000 		.4byte	0
 3828 02c5 00000000 		.4byte	0
 3829              	.LLST19:
 3830 02c9 00000000 		.4byte	.LVL59
 3831 02cd 0E000000 		.4byte	.LVL60
 3832 02d1 0100     		.2byte	0x1
 3833 02d3 50       		.byte	0x50
 3834 02d4 0E000000 		.4byte	.LVL60
 3835 02d8 18000000 		.4byte	.LFE17
 3836 02dc 0400     		.2byte	0x4
 3837 02de F3       		.byte	0xf3
 3838 02df 01       		.uleb128 0x1
 3839 02e0 50       		.byte	0x50
 3840 02e1 9F       		.byte	0x9f
 3841 02e2 00000000 		.4byte	0
 3842 02e6 00000000 		.4byte	0
 3843              	.LLST20:
 3844 02ea 00000000 		.4byte	.LVL61
 3845 02ee 18000000 		.4byte	.LVL63
 3846 02f2 0100     		.2byte	0x1
 3847 02f4 50       		.byte	0x50
 3848 02f5 18000000 		.4byte	.LVL63
 3849 02f9 2C000000 		.4byte	.LFE18
 3850 02fd 0100     		.2byte	0x1
 3851 02ff 50       		.byte	0x50
 3852 0300 00000000 		.4byte	0
 3853 0304 00000000 		.4byte	0
 3854              	.LLST21:
 3855 0308 00000000 		.4byte	.LVL64
 3856 030c 18000000 		.4byte	.LVL66
 3857 0310 0100     		.2byte	0x1
 3858 0312 50       		.byte	0x50
 3859 0313 18000000 		.4byte	.LVL66
 3860 0317 2C000000 		.4byte	.LFE19
 3861 031b 0100     		.2byte	0x1
 3862 031d 50       		.byte	0x50
 3863 031e 00000000 		.4byte	0
 3864 0322 00000000 		.4byte	0
 3865              	.LLST22:
 3866 0326 00000000 		.4byte	.LVL67
 3867 032a 1C000000 		.4byte	.LVL68
 3868 032e 0100     		.2byte	0x1
 3869 0330 50       		.byte	0x50
 3870 0331 1C000000 		.4byte	.LVL68
 3871 0335 36000000 		.4byte	.LVL70
 3872 0339 0100     		.2byte	0x1
 3873 033b 55       		.byte	0x55
 3874 033c 36000000 		.4byte	.LVL70
 3875 0340 44000000 		.4byte	.LFE20
 3876 0344 0400     		.2byte	0x4
 3877 0346 F3       		.byte	0xf3
 3878 0347 01       		.uleb128 0x1
 3879 0348 50       		.byte	0x50
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 109


 3880 0349 9F       		.byte	0x9f
 3881 034a 00000000 		.4byte	0
 3882 034e 00000000 		.4byte	0
 3883              	.LLST23:
 3884 0352 00000000 		.4byte	.LVL67
 3885 0356 1F000000 		.4byte	.LVL69-1
 3886 035a 0100     		.2byte	0x1
 3887 035c 51       		.byte	0x51
 3888 035d 1F000000 		.4byte	.LVL69-1
 3889 0361 44000000 		.4byte	.LFE20
 3890 0365 0400     		.2byte	0x4
 3891 0367 F3       		.byte	0xf3
 3892 0368 01       		.uleb128 0x1
 3893 0369 51       		.byte	0x51
 3894 036a 9F       		.byte	0x9f
 3895 036b 00000000 		.4byte	0
 3896 036f 00000000 		.4byte	0
 3897              	.LLST24:
 3898 0373 00000000 		.4byte	.LVL71
 3899 0377 1C000000 		.4byte	.LVL72
 3900 037b 0100     		.2byte	0x1
 3901 037d 50       		.byte	0x50
 3902 037e 1C000000 		.4byte	.LVL72
 3903 0382 36000000 		.4byte	.LVL75
 3904 0386 0100     		.2byte	0x1
 3905 0388 55       		.byte	0x55
 3906 0389 36000000 		.4byte	.LVL75
 3907 038d 44000000 		.4byte	.LFE21
 3908 0391 0400     		.2byte	0x4
 3909 0393 F3       		.byte	0xf3
 3910 0394 01       		.uleb128 0x1
 3911 0395 50       		.byte	0x50
 3912 0396 9F       		.byte	0x9f
 3913 0397 00000000 		.4byte	0
 3914 039b 00000000 		.4byte	0
 3915              	.LLST25:
 3916 039f 00000000 		.4byte	.LVL71
 3917 03a3 1F000000 		.4byte	.LVL73-1
 3918 03a7 0100     		.2byte	0x1
 3919 03a9 51       		.byte	0x51
 3920 03aa 1F000000 		.4byte	.LVL73-1
 3921 03ae 36000000 		.4byte	.LVL74
 3922 03b2 0100     		.2byte	0x1
 3923 03b4 54       		.byte	0x54
 3924 03b5 36000000 		.4byte	.LVL74
 3925 03b9 44000000 		.4byte	.LFE21
 3926 03bd 0500     		.2byte	0x5
 3927 03bf 73       		.byte	0x73
 3928 03c0 00       		.sleb128 0
 3929 03c1 70       		.byte	0x70
 3930 03c2 00       		.sleb128 0
 3931 03c3 22       		.byte	0x22
 3932 03c4 00000000 		.4byte	0
 3933 03c8 00000000 		.4byte	0
 3934              	.LLST26:
 3935 03cc 00000000 		.4byte	.LVL76
 3936 03d0 0C000000 		.4byte	.LVL78
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 110


 3937 03d4 0100     		.2byte	0x1
 3938 03d6 50       		.byte	0x50
 3939 03d7 0C000000 		.4byte	.LVL78
 3940 03db 7A000000 		.4byte	.LVL93
 3941 03df 0100     		.2byte	0x1
 3942 03e1 56       		.byte	0x56
 3943 03e2 7A000000 		.4byte	.LVL93
 3944 03e6 88000000 		.4byte	.LFE22
 3945 03ea 0400     		.2byte	0x4
 3946 03ec F3       		.byte	0xf3
 3947 03ed 01       		.uleb128 0x1
 3948 03ee 50       		.byte	0x50
 3949 03ef 9F       		.byte	0x9f
 3950 03f0 00000000 		.4byte	0
 3951 03f4 00000000 		.4byte	0
 3952              	.LLST27:
 3953 03f8 00000000 		.4byte	.LVL76
 3954 03fc 0A000000 		.4byte	.LVL77
 3955 0400 0100     		.2byte	0x1
 3956 0402 51       		.byte	0x51
 3957 0403 0A000000 		.4byte	.LVL77
 3958 0407 62000000 		.4byte	.LVL87
 3959 040b 0400     		.2byte	0x4
 3960 040d F3       		.byte	0xf3
 3961 040e 01       		.uleb128 0x1
 3962 040f 51       		.byte	0x51
 3963 0410 9F       		.byte	0x9f
 3964 0411 62000000 		.4byte	.LVL87
 3965 0415 64000000 		.4byte	.LVL88
 3966 0419 0100     		.2byte	0x1
 3967 041b 54       		.byte	0x54
 3968 041c 64000000 		.4byte	.LVL88
 3969 0420 6E000000 		.4byte	.LVL90
 3970 0424 0400     		.2byte	0x4
 3971 0426 F3       		.byte	0xf3
 3972 0427 01       		.uleb128 0x1
 3973 0428 51       		.byte	0x51
 3974 0429 9F       		.byte	0x9f
 3975 042a 6E000000 		.4byte	.LVL90
 3976 042e 7A000000 		.4byte	.LVL92
 3977 0432 0100     		.2byte	0x1
 3978 0434 54       		.byte	0x54
 3979 0435 7A000000 		.4byte	.LVL92
 3980 0439 88000000 		.4byte	.LFE22
 3981 043d 0100     		.2byte	0x1
 3982 043f 50       		.byte	0x50
 3983 0440 00000000 		.4byte	0
 3984 0444 00000000 		.4byte	0
 3985              	.LLST28:
 3986 0448 60000000 		.4byte	.LVL86
 3987 044c 64000000 		.4byte	.LVL88
 3988 0450 0100     		.2byte	0x1
 3989 0452 50       		.byte	0x50
 3990 0453 00000000 		.4byte	0
 3991 0457 00000000 		.4byte	0
 3992              	.LLST29:
 3993 045b 3E000000 		.4byte	.LVL81
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 111


 3994 045f 40000000 		.4byte	.LVL82
 3995 0463 0100     		.2byte	0x1
 3996 0465 53       		.byte	0x53
 3997 0466 40000000 		.4byte	.LVL82
 3998 046a 44000000 		.4byte	.LVL83
 3999 046e 0300     		.2byte	0x3
 4000 0470 73       		.byte	0x73
 4001 0471 7F       		.sleb128 -1
 4002 0472 9F       		.byte	0x9f
 4003 0473 44000000 		.4byte	.LVL83
 4004 0477 6E000000 		.4byte	.LVL90
 4005 047b 0100     		.2byte	0x1
 4006 047d 57       		.byte	0x57
 4007 047e 00000000 		.4byte	0
 4008 0482 00000000 		.4byte	0
 4009              	.LLST30:
 4010 0486 16000000 		.4byte	.LVL79
 4011 048a 70000000 		.4byte	.LVL91
 4012 048e 0100     		.2byte	0x1
 4013 0490 55       		.byte	0x55
 4014 0491 00000000 		.4byte	0
 4015 0495 00000000 		.4byte	0
 4016              	.LLST31:
 4017 0499 00000000 		.4byte	.LVL94
 4018 049d 1D000000 		.4byte	.LVL97-1
 4019 04a1 0100     		.2byte	0x1
 4020 04a3 50       		.byte	0x50
 4021 04a4 1D000000 		.4byte	.LVL97-1
 4022 04a8 3E000000 		.4byte	.LVL103
 4023 04ac 0400     		.2byte	0x4
 4024 04ae F3       		.byte	0xf3
 4025 04af 01       		.uleb128 0x1
 4026 04b0 50       		.byte	0x50
 4027 04b1 9F       		.byte	0x9f
 4028 04b2 3E000000 		.4byte	.LVL103
 4029 04b6 40000000 		.4byte	.LVL104
 4030 04ba 0100     		.2byte	0x1
 4031 04bc 50       		.byte	0x50
 4032 04bd 40000000 		.4byte	.LVL104
 4033 04c1 54000000 		.4byte	.LFE23
 4034 04c5 0400     		.2byte	0x4
 4035 04c7 F3       		.byte	0xf3
 4036 04c8 01       		.uleb128 0x1
 4037 04c9 50       		.byte	0x50
 4038 04ca 9F       		.byte	0x9f
 4039 04cb 00000000 		.4byte	0
 4040 04cf 00000000 		.4byte	0
 4041              	.LLST32:
 4042 04d3 00000000 		.4byte	.LVL94
 4043 04d7 1D000000 		.4byte	.LVL97-1
 4044 04db 0100     		.2byte	0x1
 4045 04dd 51       		.byte	0x51
 4046 04de 1D000000 		.4byte	.LVL97-1
 4047 04e2 1E000000 		.4byte	.LVL97
 4048 04e6 0400     		.2byte	0x4
 4049 04e8 F3       		.byte	0xf3
 4050 04e9 01       		.uleb128 0x1
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 112


 4051 04ea 51       		.byte	0x51
 4052 04eb 9F       		.byte	0x9f
 4053 04ec 1E000000 		.4byte	.LVL97
 4054 04f0 21000000 		.4byte	.LVL98-1
 4055 04f4 0100     		.2byte	0x1
 4056 04f6 50       		.byte	0x50
 4057 04f7 3E000000 		.4byte	.LVL103
 4058 04fb 40000000 		.4byte	.LVL104
 4059 04ff 0100     		.2byte	0x1
 4060 0501 51       		.byte	0x51
 4061 0502 00000000 		.4byte	0
 4062 0506 00000000 		.4byte	0
 4063              	.LLST33:
 4064 050a 02000000 		.4byte	.LVL95
 4065 050e 3C000000 		.4byte	.LVL102
 4066 0512 0600     		.2byte	0x6
 4067 0514 9E       		.byte	0x9e
 4068 0515 04       		.uleb128 0x4
 4069 0516 00000000 		.4byte	0
 4070 051a 3C000000 		.4byte	.LVL102
 4071 051e 3E000000 		.4byte	.LVL103
 4072 0522 0100     		.2byte	0x1
 4073 0524 50       		.byte	0x50
 4074 0525 3E000000 		.4byte	.LVL103
 4075 0529 40000000 		.4byte	.LVL104
 4076 052d 0600     		.2byte	0x6
 4077 052f 9E       		.byte	0x9e
 4078 0530 04       		.uleb128 0x4
 4079 0531 00000000 		.4byte	0
 4080 0535 40000000 		.4byte	.LVL104
 4081 0539 54000000 		.4byte	.LFE23
 4082 053d 0100     		.2byte	0x1
 4083 053f 50       		.byte	0x50
 4084 0540 00000000 		.4byte	0
 4085 0544 00000000 		.4byte	0
 4086              	.LLST34:
 4087 0548 12000000 		.4byte	.LVL96
 4088 054c 2C000000 		.4byte	.LVL100
 4089 0550 0100     		.2byte	0x1
 4090 0552 54       		.byte	0x54
 4091 0553 3E000000 		.4byte	.LVL103
 4092 0557 40000000 		.4byte	.LVL104
 4093 055b 0100     		.2byte	0x1
 4094 055d 54       		.byte	0x54
 4095 055e 00000000 		.4byte	0
 4096 0562 00000000 		.4byte	0
 4097              	.LLST35:
 4098 0566 00000000 		.4byte	.LVL105
 4099 056a 1D000000 		.4byte	.LVL108-1
 4100 056e 0100     		.2byte	0x1
 4101 0570 50       		.byte	0x50
 4102 0571 1D000000 		.4byte	.LVL108-1
 4103 0575 52000000 		.4byte	.LVL115
 4104 0579 0400     		.2byte	0x4
 4105 057b F3       		.byte	0xf3
 4106 057c 01       		.uleb128 0x1
 4107 057d 50       		.byte	0x50
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 113


 4108 057e 9F       		.byte	0x9f
 4109 057f 52000000 		.4byte	.LVL115
 4110 0583 54000000 		.4byte	.LVL116
 4111 0587 0100     		.2byte	0x1
 4112 0589 50       		.byte	0x50
 4113 058a 54000000 		.4byte	.LVL116
 4114 058e 68000000 		.4byte	.LFE24
 4115 0592 0400     		.2byte	0x4
 4116 0594 F3       		.byte	0xf3
 4117 0595 01       		.uleb128 0x1
 4118 0596 50       		.byte	0x50
 4119 0597 9F       		.byte	0x9f
 4120 0598 00000000 		.4byte	0
 4121 059c 00000000 		.4byte	0
 4122              	.LLST36:
 4123 05a0 00000000 		.4byte	.LVL105
 4124 05a4 1D000000 		.4byte	.LVL108-1
 4125 05a8 0100     		.2byte	0x1
 4126 05aa 51       		.byte	0x51
 4127 05ab 1D000000 		.4byte	.LVL108-1
 4128 05af 1E000000 		.4byte	.LVL108
 4129 05b3 0400     		.2byte	0x4
 4130 05b5 F3       		.byte	0xf3
 4131 05b6 01       		.uleb128 0x1
 4132 05b7 51       		.byte	0x51
 4133 05b8 9F       		.byte	0x9f
 4134 05b9 1E000000 		.4byte	.LVL108
 4135 05bd 2E000000 		.4byte	.LVL109
 4136 05c1 0100     		.2byte	0x1
 4137 05c3 50       		.byte	0x50
 4138 05c4 34000000 		.4byte	.LVL110
 4139 05c8 42000000 		.4byte	.LVL111
 4140 05cc 0100     		.2byte	0x1
 4141 05ce 50       		.byte	0x50
 4142 05cf 52000000 		.4byte	.LVL115
 4143 05d3 54000000 		.4byte	.LVL116
 4144 05d7 0100     		.2byte	0x1
 4145 05d9 51       		.byte	0x51
 4146 05da 00000000 		.4byte	0
 4147 05de 00000000 		.4byte	0
 4148              	.LLST37:
 4149 05e2 02000000 		.4byte	.LVL106
 4150 05e6 50000000 		.4byte	.LVL114
 4151 05ea 0200     		.2byte	0x2
 4152 05ec 30       		.byte	0x30
 4153 05ed 9F       		.byte	0x9f
 4154 05ee 50000000 		.4byte	.LVL114
 4155 05f2 52000000 		.4byte	.LVL115
 4156 05f6 0100     		.2byte	0x1
 4157 05f8 50       		.byte	0x50
 4158 05f9 52000000 		.4byte	.LVL115
 4159 05fd 54000000 		.4byte	.LVL116
 4160 0601 0200     		.2byte	0x2
 4161 0603 30       		.byte	0x30
 4162 0604 9F       		.byte	0x9f
 4163 0605 54000000 		.4byte	.LVL116
 4164 0609 68000000 		.4byte	.LFE24
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 114


 4165 060d 0100     		.2byte	0x1
 4166 060f 50       		.byte	0x50
 4167 0610 00000000 		.4byte	0
 4168 0614 00000000 		.4byte	0
 4169              	.LLST38:
 4170 0618 12000000 		.4byte	.LVL107
 4171 061c 46000000 		.4byte	.LVL112
 4172 0620 0100     		.2byte	0x1
 4173 0622 54       		.byte	0x54
 4174 0623 46000000 		.4byte	.LVL112
 4175 0627 52000000 		.4byte	.LVL115
 4176 062b 1200     		.2byte	0x12
 4177 062d 75       		.byte	0x75
 4178 062e 00       		.sleb128 0
 4179 062f 33       		.byte	0x33
 4180 0630 24       		.byte	0x24
 4181 0631 75       		.byte	0x75
 4182 0632 00       		.sleb128 0
 4183 0633 1C       		.byte	0x1c
 4184 0634 33       		.byte	0x33
 4185 0635 24       		.byte	0x24
 4186 0636 76       		.byte	0x76
 4187 0637 00       		.sleb128 0
 4188 0638 22       		.byte	0x22
 4189 0639 06       		.byte	0x6
 4190 063a F3       		.byte	0xf3
 4191 063b 01       		.uleb128 0x1
 4192 063c 50       		.byte	0x50
 4193 063d 22       		.byte	0x22
 4194 063e 9F       		.byte	0x9f
 4195 063f 52000000 		.4byte	.LVL115
 4196 0643 54000000 		.4byte	.LVL116
 4197 0647 0100     		.2byte	0x1
 4198 0649 54       		.byte	0x54
 4199 064a 54000000 		.4byte	.LVL116
 4200 064e 54000000 		.4byte	.LVL117
 4201 0652 1200     		.2byte	0x12
 4202 0654 75       		.byte	0x75
 4203 0655 00       		.sleb128 0
 4204 0656 33       		.byte	0x33
 4205 0657 24       		.byte	0x24
 4206 0658 75       		.byte	0x75
 4207 0659 00       		.sleb128 0
 4208 065a 1C       		.byte	0x1c
 4209 065b 33       		.byte	0x33
 4210 065c 24       		.byte	0x24
 4211 065d 76       		.byte	0x76
 4212 065e 00       		.sleb128 0
 4213 065f 22       		.byte	0x22
 4214 0660 06       		.byte	0x6
 4215 0661 F3       		.byte	0xf3
 4216 0662 01       		.uleb128 0x1
 4217 0663 50       		.byte	0x50
 4218 0664 22       		.byte	0x22
 4219 0665 9F       		.byte	0x9f
 4220 0666 00000000 		.4byte	0
 4221 066a 00000000 		.4byte	0
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 115


 4222              	.LLST39:
 4223 066e 00000000 		.4byte	.LVL118
 4224 0672 1D000000 		.4byte	.LVL121-1
 4225 0676 0100     		.2byte	0x1
 4226 0678 50       		.byte	0x50
 4227 0679 1D000000 		.4byte	.LVL121-1
 4228 067d 36000000 		.4byte	.LVL125
 4229 0681 0400     		.2byte	0x4
 4230 0683 F3       		.byte	0xf3
 4231 0684 01       		.uleb128 0x1
 4232 0685 50       		.byte	0x50
 4233 0686 9F       		.byte	0x9f
 4234 0687 36000000 		.4byte	.LVL125
 4235 068b 38000000 		.4byte	.LVL126
 4236 068f 0100     		.2byte	0x1
 4237 0691 50       		.byte	0x50
 4238 0692 38000000 		.4byte	.LVL126
 4239 0696 4C000000 		.4byte	.LFE25
 4240 069a 0400     		.2byte	0x4
 4241 069c F3       		.byte	0xf3
 4242 069d 01       		.uleb128 0x1
 4243 069e 50       		.byte	0x50
 4244 069f 9F       		.byte	0x9f
 4245 06a0 00000000 		.4byte	0
 4246 06a4 00000000 		.4byte	0
 4247              	.LLST40:
 4248 06a8 00000000 		.4byte	.LVL118
 4249 06ac 1D000000 		.4byte	.LVL121-1
 4250 06b0 0100     		.2byte	0x1
 4251 06b2 51       		.byte	0x51
 4252 06b3 1D000000 		.4byte	.LVL121-1
 4253 06b7 1E000000 		.4byte	.LVL121
 4254 06bb 0400     		.2byte	0x4
 4255 06bd F3       		.byte	0xf3
 4256 06be 01       		.uleb128 0x1
 4257 06bf 51       		.byte	0x51
 4258 06c0 9F       		.byte	0x9f
 4259 06c1 1E000000 		.4byte	.LVL121
 4260 06c5 27000000 		.4byte	.LVL122-1
 4261 06c9 0100     		.2byte	0x1
 4262 06cb 50       		.byte	0x50
 4263 06cc 36000000 		.4byte	.LVL125
 4264 06d0 38000000 		.4byte	.LVL126
 4265 06d4 0100     		.2byte	0x1
 4266 06d6 51       		.byte	0x51
 4267 06d7 00000000 		.4byte	0
 4268 06db 00000000 		.4byte	0
 4269              	.LLST41:
 4270 06df 02000000 		.4byte	.LVL119
 4271 06e3 34000000 		.4byte	.LVL124
 4272 06e7 0A00     		.2byte	0xa
 4273 06e9 9E       		.byte	0x9e
 4274 06ea 08       		.uleb128 0x8
 4275 06eb 00000000 		.8byte	0
 4275      00000000 
 4276 06f3 36000000 		.4byte	.LVL125
 4277 06f7 38000000 		.4byte	.LVL126
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 116


 4278 06fb 0A00     		.2byte	0xa
 4279 06fd 9E       		.byte	0x9e
 4280 06fe 08       		.uleb128 0x8
 4281 06ff 00000000 		.8byte	0
 4281      00000000 
 4282 0707 00000000 		.4byte	0
 4283 070b 00000000 		.4byte	0
 4284              	.LLST42:
 4285 070f 12000000 		.4byte	.LVL120
 4286 0713 2A000000 		.4byte	.LVL123
 4287 0717 0100     		.2byte	0x1
 4288 0719 54       		.byte	0x54
 4289 071a 2A000000 		.4byte	.LVL123
 4290 071e 36000000 		.4byte	.LVL125
 4291 0722 1200     		.2byte	0x12
 4292 0724 75       		.byte	0x75
 4293 0725 00       		.sleb128 0
 4294 0726 33       		.byte	0x33
 4295 0727 24       		.byte	0x24
 4296 0728 75       		.byte	0x75
 4297 0729 00       		.sleb128 0
 4298 072a 1C       		.byte	0x1c
 4299 072b 33       		.byte	0x33
 4300 072c 24       		.byte	0x24
 4301 072d 76       		.byte	0x76
 4302 072e 00       		.sleb128 0
 4303 072f 22       		.byte	0x22
 4304 0730 06       		.byte	0x6
 4305 0731 F3       		.byte	0xf3
 4306 0732 01       		.uleb128 0x1
 4307 0733 50       		.byte	0x50
 4308 0734 22       		.byte	0x22
 4309 0735 9F       		.byte	0x9f
 4310 0736 36000000 		.4byte	.LVL125
 4311 073a 38000000 		.4byte	.LVL126
 4312 073e 0100     		.2byte	0x1
 4313 0740 54       		.byte	0x54
 4314 0741 38000000 		.4byte	.LVL126
 4315 0745 38000000 		.4byte	.LVL127
 4316 0749 1200     		.2byte	0x12
 4317 074b 75       		.byte	0x75
 4318 074c 00       		.sleb128 0
 4319 074d 33       		.byte	0x33
 4320 074e 24       		.byte	0x24
 4321 074f 75       		.byte	0x75
 4322 0750 00       		.sleb128 0
 4323 0751 1C       		.byte	0x1c
 4324 0752 33       		.byte	0x33
 4325 0753 24       		.byte	0x24
 4326 0754 76       		.byte	0x76
 4327 0755 00       		.sleb128 0
 4328 0756 22       		.byte	0x22
 4329 0757 06       		.byte	0x6
 4330 0758 F3       		.byte	0xf3
 4331 0759 01       		.uleb128 0x1
 4332 075a 50       		.byte	0x50
 4333 075b 22       		.byte	0x22
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 117


 4334 075c 9F       		.byte	0x9f
 4335 075d 00000000 		.4byte	0
 4336 0761 00000000 		.4byte	0
 4337              	.LLST43:
 4338 0765 06000000 		.4byte	.LVL128
 4339 0769 10000000 		.4byte	.LVL129
 4340 076d 0200     		.2byte	0x2
 4341 076f 30       		.byte	0x30
 4342 0770 9F       		.byte	0x9f
 4343 0771 10000000 		.4byte	.LVL129
 4344 0775 50000000 		.4byte	.LVL133
 4345 0779 0100     		.2byte	0x1
 4346 077b 54       		.byte	0x54
 4347 077c 50000000 		.4byte	.LVL133
 4348 0780 54000000 		.4byte	.LVL134
 4349 0784 0200     		.2byte	0x2
 4350 0786 30       		.byte	0x30
 4351 0787 9F       		.byte	0x9f
 4352 0788 54000000 		.4byte	.LVL134
 4353 078c 78000000 		.4byte	.LVL138
 4354 0790 0100     		.2byte	0x1
 4355 0792 54       		.byte	0x54
 4356 0793 00000000 		.4byte	0
 4357 0797 00000000 		.4byte	0
 4358              	.LLST44:
 4359 079b 06000000 		.4byte	.LVL128
 4360 079f 10000000 		.4byte	.LVL129
 4361 07a3 0200     		.2byte	0x2
 4362 07a5 30       		.byte	0x30
 4363 07a6 9F       		.byte	0x9f
 4364 07a7 10000000 		.4byte	.LVL129
 4365 07ab 50000000 		.4byte	.LVL133
 4366 07af 0100     		.2byte	0x1
 4367 07b1 57       		.byte	0x57
 4368 07b2 50000000 		.4byte	.LVL133
 4369 07b6 54000000 		.4byte	.LVL134
 4370 07ba 0200     		.2byte	0x2
 4371 07bc 30       		.byte	0x30
 4372 07bd 9F       		.byte	0x9f
 4373 07be 54000000 		.4byte	.LVL134
 4374 07c2 76000000 		.4byte	.LVL137
 4375 07c6 0100     		.2byte	0x1
 4376 07c8 57       		.byte	0x57
 4377 07c9 76000000 		.4byte	.LVL137
 4378 07cd 84000000 		.4byte	.LVL140
 4379 07d1 0200     		.2byte	0x2
 4380 07d3 30       		.byte	0x30
 4381 07d4 9F       		.byte	0x9f
 4382 07d5 00000000 		.4byte	0
 4383 07d9 00000000 		.4byte	0
 4384              	.LLST45:
 4385 07dd 10000000 		.4byte	.LVL129
 4386 07e1 50000000 		.4byte	.LVL133
 4387 07e5 0400     		.2byte	0x4
 4388 07e7 0A       		.byte	0xa
 4389 07e8 0010     		.2byte	0x1000
 4390 07ea 9F       		.byte	0x9f
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 118


 4391 07eb 00000000 		.4byte	0
 4392 07ef 00000000 		.4byte	0
 4393              	.LLST46:
 4394 07f3 00000000 		.4byte	.LVL145
 4395 07f7 07000000 		.4byte	.LVL146-1
 4396 07fb 0100     		.2byte	0x1
 4397 07fd 50       		.byte	0x50
 4398 07fe 07000000 		.4byte	.LVL146-1
 4399 0802 0E000000 		.4byte	.LVL148
 4400 0806 0100     		.2byte	0x1
 4401 0808 54       		.byte	0x54
 4402 0809 0E000000 		.4byte	.LVL148
 4403 080d 10000000 		.4byte	.LFE2
 4404 0811 0400     		.2byte	0x4
 4405 0813 F3       		.byte	0xf3
 4406 0814 01       		.uleb128 0x1
 4407 0815 50       		.byte	0x50
 4408 0816 9F       		.byte	0x9f
 4409 0817 00000000 		.4byte	0
 4410 081b 00000000 		.4byte	0
 4411              	.LLST47:
 4412 081f 00000000 		.4byte	.LVL149
 4413 0823 0D000000 		.4byte	.LVL150-1
 4414 0827 0100     		.2byte	0x1
 4415 0829 50       		.byte	0x50
 4416 082a 0D000000 		.4byte	.LVL150-1
 4417 082e 5A000000 		.4byte	.LVL155
 4418 0832 0100     		.2byte	0x1
 4419 0834 54       		.byte	0x54
 4420 0835 5A000000 		.4byte	.LVL155
 4421 0839 70000000 		.4byte	.LFE6
 4422 083d 0400     		.2byte	0x4
 4423 083f F3       		.byte	0xf3
 4424 0840 01       		.uleb128 0x1
 4425 0841 50       		.byte	0x50
 4426 0842 9F       		.byte	0x9f
 4427 0843 00000000 		.4byte	0
 4428 0847 00000000 		.4byte	0
 4429              	.LLST48:
 4430 084b 00000000 		.4byte	.LVL149
 4431 084f 0D000000 		.4byte	.LVL150-1
 4432 0853 0100     		.2byte	0x1
 4433 0855 51       		.byte	0x51
 4434 0856 0D000000 		.4byte	.LVL150-1
 4435 085a 5A000000 		.4byte	.LVL156
 4436 085e 0100     		.2byte	0x1
 4437 0860 56       		.byte	0x56
 4438 0861 5A000000 		.4byte	.LVL156
 4439 0865 70000000 		.4byte	.LFE6
 4440 0869 0400     		.2byte	0x4
 4441 086b F3       		.byte	0xf3
 4442 086c 01       		.uleb128 0x1
 4443 086d 51       		.byte	0x51
 4444 086e 9F       		.byte	0x9f
 4445 086f 00000000 		.4byte	0
 4446 0873 00000000 		.4byte	0
 4447              		.section	.debug_aranges,"",%progbits
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 119


 4448 0000 EC000000 		.4byte	0xec
 4449 0004 0200     		.2byte	0x2
 4450 0006 00000000 		.4byte	.Ldebug_info0
 4451 000a 04       		.byte	0x4
 4452 000b 00       		.byte	0
 4453 000c 0000     		.2byte	0
 4454 000e 0000     		.2byte	0
 4455 0010 00000000 		.4byte	.LFB5
 4456 0014 34000000 		.4byte	.LFE5-.LFB5
 4457 0018 00000000 		.4byte	.LFB13
 4458 001c 58000000 		.4byte	.LFE13-.LFB13
 4459 0020 00000000 		.4byte	.LFB3
 4460 0024 10000000 		.4byte	.LFE3-.LFB3
 4461 0028 00000000 		.4byte	.LFB4
 4462 002c AC000000 		.4byte	.LFE4-.LFB4
 4463 0030 00000000 		.4byte	.LFB7
 4464 0034 28000000 		.4byte	.LFE7-.LFB7
 4465 0038 00000000 		.4byte	.LFB9
 4466 003c 28000000 		.4byte	.LFE9-.LFB9
 4467 0040 00000000 		.4byte	.LFB10
 4468 0044 10000000 		.4byte	.LFE10-.LFB10
 4469 0048 00000000 		.4byte	.LFB11
 4470 004c 2C000000 		.4byte	.LFE11-.LFB11
 4471 0050 00000000 		.4byte	.LFB12
 4472 0054 38000000 		.4byte	.LFE12-.LFB12
 4473 0058 00000000 		.4byte	.LFB14
 4474 005c 54000000 		.4byte	.LFE14-.LFB14
 4475 0060 00000000 		.4byte	.LFB15
 4476 0064 64000000 		.4byte	.LFE15-.LFB15
 4477 0068 00000000 		.4byte	.LFB16
 4478 006c 1C000000 		.4byte	.LFE16-.LFB16
 4479 0070 00000000 		.4byte	.LFB17
 4480 0074 18000000 		.4byte	.LFE17-.LFB17
 4481 0078 00000000 		.4byte	.LFB18
 4482 007c 2C000000 		.4byte	.LFE18-.LFB18
 4483 0080 00000000 		.4byte	.LFB19
 4484 0084 2C000000 		.4byte	.LFE19-.LFB19
 4485 0088 00000000 		.4byte	.LFB20
 4486 008c 44000000 		.4byte	.LFE20-.LFB20
 4487 0090 00000000 		.4byte	.LFB21
 4488 0094 44000000 		.4byte	.LFE21-.LFB21
 4489 0098 00000000 		.4byte	.LFB22
 4490 009c 88000000 		.4byte	.LFE22-.LFB22
 4491 00a0 00000000 		.4byte	.LFB23
 4492 00a4 54000000 		.4byte	.LFE23-.LFB23
 4493 00a8 00000000 		.4byte	.LFB24
 4494 00ac 68000000 		.4byte	.LFE24-.LFB24
 4495 00b0 00000000 		.4byte	.LFB25
 4496 00b4 4C000000 		.4byte	.LFE25-.LFB25
 4497 00b8 00000000 		.4byte	.LFB26
 4498 00bc A8000000 		.4byte	.LFE26-.LFB26
 4499 00c0 00000000 		.4byte	.LFB27
 4500 00c4 48000000 		.4byte	.LFE27-.LFB27
 4501 00c8 00000000 		.4byte	.LFB1
 4502 00cc 24000000 		.4byte	.LFE1-.LFB1
 4503 00d0 00000000 		.4byte	.LFB2
 4504 00d4 10000000 		.4byte	.LFE2-.LFB2
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 120


 4505 00d8 00000000 		.4byte	.LFB6
 4506 00dc 70000000 		.4byte	.LFE6-.LFB6
 4507 00e0 00000000 		.4byte	.LFB8
 4508 00e4 44000000 		.4byte	.LFE8-.LFB8
 4509 00e8 00000000 		.4byte	0
 4510 00ec 00000000 		.4byte	0
 4511              		.section	.debug_ranges,"",%progbits
 4512              	.Ldebug_ranges0:
 4513 0000 00000000 		.4byte	.LFB5
 4514 0004 34000000 		.4byte	.LFE5
 4515 0008 00000000 		.4byte	.LFB13
 4516 000c 58000000 		.4byte	.LFE13
 4517 0010 00000000 		.4byte	.LFB3
 4518 0014 10000000 		.4byte	.LFE3
 4519 0018 00000000 		.4byte	.LFB4
 4520 001c AC000000 		.4byte	.LFE4
 4521 0020 00000000 		.4byte	.LFB7
 4522 0024 28000000 		.4byte	.LFE7
 4523 0028 00000000 		.4byte	.LFB9
 4524 002c 28000000 		.4byte	.LFE9
 4525 0030 00000000 		.4byte	.LFB10
 4526 0034 10000000 		.4byte	.LFE10
 4527 0038 00000000 		.4byte	.LFB11
 4528 003c 2C000000 		.4byte	.LFE11
 4529 0040 00000000 		.4byte	.LFB12
 4530 0044 38000000 		.4byte	.LFE12
 4531 0048 00000000 		.4byte	.LFB14
 4532 004c 54000000 		.4byte	.LFE14
 4533 0050 00000000 		.4byte	.LFB15
 4534 0054 64000000 		.4byte	.LFE15
 4535 0058 00000000 		.4byte	.LFB16
 4536 005c 1C000000 		.4byte	.LFE16
 4537 0060 00000000 		.4byte	.LFB17
 4538 0064 18000000 		.4byte	.LFE17
 4539 0068 00000000 		.4byte	.LFB18
 4540 006c 2C000000 		.4byte	.LFE18
 4541 0070 00000000 		.4byte	.LFB19
 4542 0074 2C000000 		.4byte	.LFE19
 4543 0078 00000000 		.4byte	.LFB20
 4544 007c 44000000 		.4byte	.LFE20
 4545 0080 00000000 		.4byte	.LFB21
 4546 0084 44000000 		.4byte	.LFE21
 4547 0088 00000000 		.4byte	.LFB22
 4548 008c 88000000 		.4byte	.LFE22
 4549 0090 00000000 		.4byte	.LFB23
 4550 0094 54000000 		.4byte	.LFE23
 4551 0098 00000000 		.4byte	.LFB24
 4552 009c 68000000 		.4byte	.LFE24
 4553 00a0 00000000 		.4byte	.LFB25
 4554 00a4 4C000000 		.4byte	.LFE25
 4555 00a8 00000000 		.4byte	.LFB26
 4556 00ac A8000000 		.4byte	.LFE26
 4557 00b0 00000000 		.4byte	.LFB27
 4558 00b4 48000000 		.4byte	.LFE27
 4559 00b8 00000000 		.4byte	.LFB1
 4560 00bc 24000000 		.4byte	.LFE1
 4561 00c0 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 121


 4562 00c4 10000000 		.4byte	.LFE2
 4563 00c8 00000000 		.4byte	.LFB6
 4564 00cc 70000000 		.4byte	.LFE6
 4565 00d0 00000000 		.4byte	.LFB8
 4566 00d4 44000000 		.4byte	.LFE8
 4567 00d8 00000000 		.4byte	0
 4568 00dc 00000000 		.4byte	0
 4569              		.section	.debug_line,"",%progbits
 4570              	.Ldebug_line0:
 4571 0000 B6030000 		.section	.debug_str,"MS",%progbits,1
 4571      02007E00 
 4571      00000201 
 4571      FB0E0D00 
 4571      01010101 
 4572              	.LASF10:
 4573 0000 75696E74 		.ascii	"uint16\000"
 4573      313600
 4574              	.LASF53:
 4575 0007 6368616E 		.ascii	"chanCount\000"
 4575      436F756E 
 4575      7400
 4576              	.LASF73:
 4577 0011 61646347 		.ascii	"adcGain\000"
 4577      61696E00 
 4578              	.LASF87:
 4579 0019 636F756E 		.ascii	"counts\000"
 4579      747300
 4580              	.LASF90:
 4581 0020 4144435F 		.ascii	"ADC_1_StartEx\000"
 4581      315F5374 
 4581      61727445 
 4581      7800
 4582              	.LASF94:
 4583 002e 4144435F 		.ascii	"ADC_1_StopConvert\000"
 4583      315F5374 
 4583      6F70436F 
 4583      6E766572 
 4583      7400
 4584              	.LASF7:
 4585 0040 6C6F6E67 		.ascii	"long long unsigned int\000"
 4585      206C6F6E 
 4585      6720756E 
 4585      7369676E 
 4585      65642069 
 4586              	.LASF88:
 4587 0057 4144435F 		.ascii	"ADC_1_Enable\000"
 4587      315F456E 
 4587      61626C65 
 4587      00
 4588              	.LASF6:
 4589 0064 6C6F6E67 		.ascii	"long long int\000"
 4589      206C6F6E 
 4589      6720696E 
 4589      7400
 4590              	.LASF0:
 4591 0072 7369676E 		.ascii	"signed char\000"
 4591      65642063 
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 122


 4591      68617200 
 4592              	.LASF85:
 4593 007e 4144435F 		.ascii	"ADC_1_Init\000"
 4593      315F496E 
 4593      697400
 4594              	.LASF36:
 4595 0089 636C6B44 		.ascii	"clkDivider\000"
 4595      69766964 
 4595      657200
 4596              	.LASF44:
 4597 0094 4144435F 		.ascii	"ADC_1_Stop\000"
 4597      315F5374 
 4597      6F7000
 4598              	.LASF13:
 4599 009f 696E7433 		.ascii	"int32\000"
 4599      3200
 4600              	.LASF46:
 4601 00a5 4144435F 		.ascii	"ADC_1_InitConfig\000"
 4601      315F496E 
 4601      6974436F 
 4601      6E666967 
 4601      00
 4602              	.LASF4:
 4603 00b6 6C6F6E67 		.ascii	"long int\000"
 4603      20696E74 
 4603      00
 4604              	.LASF74:
 4605 00bf 4144435F 		.ascii	"ADC_1_RawCounts2Counts\000"
 4605      315F5261 
 4605      77436F75 
 4605      6E747332 
 4605      436F756E 
 4606              	.LASF9:
 4607 00d6 75696E74 		.ascii	"uint8\000"
 4607      3800
 4608              	.LASF108:
 4609 00dc 43794465 		.ascii	"CyDelayUs\000"
 4609      6C617955 
 4609      7300
 4610              	.LASF16:
 4611 00e6 646F7562 		.ascii	"double\000"
 4611      6C6500
 4612              	.LASF47:
 4613 00ed 4144435F 		.ascii	"ADC_1_SetConvertMode\000"
 4613      315F5365 
 4613      74436F6E 
 4613      76657274 
 4613      4D6F6465 
 4614              	.LASF66:
 4615 0102 4144435F 		.ascii	"ADC_1_SetLimitMask\000"
 4615      315F5365 
 4615      744C696D 
 4615      69744D61 
 4615      736B00
 4616              	.LASF97:
 4617 0115 4144435F 		.ascii	"ADC_1_initVar\000"
 4617      315F696E 
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 123


 4617      69745661 
 4617      7200
 4618              	.LASF27:
 4619 0123 73616D70 		.ascii	"sampleTime01\000"
 4619      6C655469 
 4619      6D653031 
 4619      00
 4620              	.LASF11:
 4621 0130 75696E74 		.ascii	"uint32\000"
 4621      333200
 4622              	.LASF107:
 4623 0137 4379496E 		.ascii	"CyIntSetVector\000"
 4623      74536574 
 4623      56656374 
 4623      6F7200
 4624              	.LASF50:
 4625 0146 6D61736B 		.ascii	"mask\000"
 4625      00
 4626              	.LASF62:
 4627 014b 4144435F 		.ascii	"ADC_1_SetLowLimit\000"
 4627      315F5365 
 4627      744C6F77 
 4627      4C696D69 
 4627      7400
 4628              	.LASF113:
 4629 015d 4144435F 		.ascii	"ADC_1_SetDFTControl\000"
 4629      315F5365 
 4629      74444654 
 4629      436F6E74 
 4629      726F6C00 
 4630              	.LASF76:
 4631 0171 74656D70 		.ascii	"temp\000"
 4631      00
 4632              	.LASF54:
 4633 0176 7265744D 		.ascii	"retMode\000"
 4633      6F646500 
 4634              	.LASF8:
 4635 017e 756E7369 		.ascii	"unsigned int\000"
 4635      676E6564 
 4635      20696E74 
 4635      00
 4636              	.LASF32:
 4637 018b 72616E67 		.ascii	"rangeIntMask\000"
 4637      65496E74 
 4637      4D61736B 
 4637      00
 4638              	.LASF86:
 4639 0198 636F6E66 		.ascii	"configNum\000"
 4639      69674E75 
 4639      6D00
 4640              	.LASF45:
 4641 01a2 4144435F 		.ascii	"ADC_1_StartConvert\000"
 4641      315F5374 
 4641      61727443 
 4641      6F6E7665 
 4641      727400
 4642              	.LASF5:
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 124


 4643 01b5 6C6F6E67 		.ascii	"long unsigned int\000"
 4643      20756E73 
 4643      69676E65 
 4643      6420696E 
 4643      7400
 4644              	.LASF96:
 4645 01c7 4144435F 		.ascii	"ADC_1_channelsConfig\000"
 4645      315F6368 
 4645      616E6E65 
 4645      6C73436F 
 4645      6E666967 
 4646              	.LASF102:
 4647 01dc 4144435F 		.ascii	"ADC_1_intSarClock_Stop\000"
 4647      315F696E 
 4647      74536172 
 4647      436C6F63 
 4647      6B5F5374 
 4648              	.LASF40:
 4649 01f3 746D7052 		.ascii	"tmpRegVal\000"
 4649      65675661 
 4649      6C00
 4650              	.LASF52:
 4651 01fd 656E6162 		.ascii	"enableMask\000"
 4651      6C654D61 
 4651      736B00
 4652              	.LASF64:
 4653 0208 4144435F 		.ascii	"ADC_1_SetHighLimit\000"
 4653      315F5365 
 4653      74486967 
 4653      684C696D 
 4653      697400
 4654              	.LASF77:
 4655 021b 61766572 		.ascii	"averageAdcSamplesDiv\000"
 4655      61676541 
 4655      64635361 
 4655      6D706C65 
 4655      73446976 
 4656              	.LASF3:
 4657 0230 73686F72 		.ascii	"short unsigned int\000"
 4657      7420756E 
 4657      7369676E 
 4657      65642069 
 4657      6E7400
 4658              	.LASF101:
 4659 0243 4144435F 		.ascii	"ADC_1_allConfigs\000"
 4659      315F616C 
 4659      6C436F6E 
 4659      66696773 
 4659      00
 4660              	.LASF29:
 4661 0254 72616E67 		.ascii	"rangeThres\000"
 4661      65546872 
 4661      657300
 4662              	.LASF81:
 4663 025f 4144435F 		.ascii	"ADC_1_CountsTo_mVolts\000"
 4663      315F436F 
 4663      756E7473 
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 125


 4663      546F5F6D 
 4663      566F6C74 
 4664              	.LASF61:
 4665 0275 66696E61 		.ascii	"finalResult\000"
 4665      6C526573 
 4665      756C7400 
 4666              	.LASF92:
 4667 0281 4144435F 		.ascii	"ADC_1_SelectConfig\000"
 4667      315F5365 
 4667      6C656374 
 4667      436F6E66 
 4667      696700
 4668              	.LASF49:
 4669 0294 4144435F 		.ascii	"ADC_1_SetEosMask\000"
 4669      315F5365 
 4669      74456F73 
 4669      4D61736B 
 4669      00
 4670              	.LASF67:
 4671 02a5 6C696D69 		.ascii	"limitMask\000"
 4671      744D6173 
 4671      6B00
 4672              	.LASF78:
 4673 02af 72617743 		.ascii	"rawChannel\000"
 4673      68616E6E 
 4673      656C00
 4674              	.LASF24:
 4675 02ba 6E756D43 		.ascii	"numChannels\000"
 4675      68616E6E 
 4675      656C7300 
 4676              	.LASF42:
 4677 02c6 6368616E 		.ascii	"chanConfig\000"
 4677      436F6E66 
 4677      696700
 4678              	.LASF19:
 4679 02d1 72656733 		.ascii	"reg32\000"
 4679      3200
 4680              	.LASF41:
 4681 02d7 69735369 		.ascii	"isSigned\000"
 4681      676E6564 
 4681      00
 4682              	.LASF58:
 4683 02e0 61646352 		.ascii	"adcResult\000"
 4683      6573756C 
 4683      7400
 4684              	.LASF14:
 4685 02ea 666C6F61 		.ascii	"float32\000"
 4685      74333200 
 4686              	.LASF22:
 4687 02f2 73697A65 		.ascii	"sizetype\000"
 4687      74797065 
 4687      00
 4688              	.LASF104:
 4689 02fb 4144435F 		.ascii	"ADC_1_intSarClock_StartEx\000"
 4689      315F696E 
 4689      74536172 
 4689      436C6F63 
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 126


 4689      6B5F5374 
 4690              	.LASF63:
 4691 0315 6C6F774C 		.ascii	"lowLimit\000"
 4691      696D6974 
 4691      00
 4692              	.LASF21:
 4693 031e 6C6F6E67 		.ascii	"long double\000"
 4693      20646F75 
 4693      626C6500 
 4694              	.LASF91:
 4695 032a 61646472 		.ascii	"address\000"
 4695      65737300 
 4696              	.LASF28:
 4697 0332 73616D70 		.ascii	"sampleTime23\000"
 4697      6C655469 
 4697      6D653233 
 4697      00
 4698              	.LASF33:
 4699 033f 73617449 		.ascii	"satIntMask\000"
 4699      6E744D61 
 4699      736B00
 4700              	.LASF72:
 4701 034a 4144435F 		.ascii	"ADC_1_SetGain\000"
 4701      315F5365 
 4701      74476169 
 4701      6E00
 4702              	.LASF69:
 4703 0358 7361744D 		.ascii	"satMask\000"
 4703      61736B00 
 4704              	.LASF17:
 4705 0360 696E7436 		.ascii	"int64\000"
 4705      3400
 4706              	.LASF106:
 4707 0366 4379496E 		.ascii	"CyIntSetPriority\000"
 4707      74536574 
 4707      5072696F 
 4707      72697479 
 4707      00
 4708              	.LASF15:
 4709 0377 666C6F61 		.ascii	"float\000"
 4709      7400
 4710              	.LASF109:
 4711 037d 4144435F 		.ascii	"ADC_1_IRQ_StartEx\000"
 4711      315F4952 
 4711      515F5374 
 4711      61727445 
 4711      7800
 4712              	.LASF65:
 4713 038f 68696768 		.ascii	"highLimit\000"
 4713      4C696D69 
 4713      7400
 4714              	.LASF112:
 4715 0399 433A5C55 		.ascii	"C:\\Users\\Tucker Zischka\\Documents\\GitHub\\Li-Ce"
 4715      73657273 
 4715      5C547563 
 4715      6B657220 
 4715      5A697363 
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 127


 4716 03c7 6C6C5465 		.ascii	"llTesting_Script\\PSOC4_Main\\PSOC4_Main.cydsn\000"
 4716      7374696E 
 4716      675F5363 
 4716      72697074 
 4716      5C50534F 
 4717              	.LASF99:
 4718 03f4 4144435F 		.ascii	"ADC_1_offset\000"
 4718      315F6F66 
 4718      66736574 
 4718      00
 4719              	.LASF31:
 4720 0401 6368616E 		.ascii	"chanEn\000"
 4720      456E00
 4721              	.LASF111:
 4722 0408 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC_1.c\000"
 4722      72617465 
 4722      645F536F 
 4722      75726365 
 4722      5C50536F 
 4723              	.LASF68:
 4724 0427 4144435F 		.ascii	"ADC_1_SetSatMask\000"
 4724      315F5365 
 4724      74536174 
 4724      4D61736B 
 4724      00
 4725              	.LASF1:
 4726 0438 756E7369 		.ascii	"unsigned char\000"
 4726      676E6564 
 4726      20636861 
 4726      7200
 4727              	.LASF57:
 4728 0446 4144435F 		.ascii	"ADC_1_GetResult16\000"
 4728      315F4765 
 4728      74526573 
 4728      756C7431 
 4728      3600
 4729              	.LASF100:
 4730 0458 4144435F 		.ascii	"ADC_1_countsPer10Volt\000"
 4730      315F636F 
 4730      756E7473 
 4730      50657231 
 4730      30566F6C 
 4731              	.LASF2:
 4732 046e 73686F72 		.ascii	"short int\000"
 4732      7420696E 
 4732      7400
 4733              	.LASF80:
 4734 0478 72657375 		.ascii	"result_Volts\000"
 4734      6C745F56 
 4734      6F6C7473 
 4734      00
 4735              	.LASF60:
 4736 0485 61646352 		.ascii	"adcResult16\000"
 4736      6573756C 
 4736      74313600 
 4737              	.LASF43:
 4738 0491 63684E75 		.ascii	"chNum\000"
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 128


 4738      6D00
 4739              	.LASF95:
 4740 0497 4144435F 		.ascii	"ADC_1_currentConfig\000"
 4740      315F6375 
 4740      7272656E 
 4740      74436F6E 
 4740      66696700 
 4741              	.LASF34:
 4742 04ab 76726566 		.ascii	"vrefMvValue\000"
 4742      4D765661 
 4742      6C756500 
 4743              	.LASF110:
 4744 04b7 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4744      43313120 
 4744      352E342E 
 4744      31203230 
 4744      31363036 
 4745 04ea 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 4745      20726576 
 4745      6973696F 
 4745      6E203233 
 4745      37373135 
 4746 051d 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 4746      67202D66 
 4746      66756E63 
 4746      74696F6E 
 4746      2D736563 
 4747              	.LASF39:
 4748 0549 6368616E 		.ascii	"chan\000"
 4748      00
 4749              	.LASF18:
 4750 054e 63686172 		.ascii	"char\000"
 4750      00
 4751              	.LASF48:
 4752 0553 6D6F6465 		.ascii	"mode\000"
 4752      00
 4753              	.LASF20:
 4754 0558 63796973 		.ascii	"cyisraddress\000"
 4754      72616464 
 4754      72657373 
 4754      00
 4755              	.LASF38:
 4756 0565 636F6E66 		.ascii	"config\000"
 4756      696700
 4757              	.LASF79:
 4758 056c 4144435F 		.ascii	"ADC_1_CountsTo_Volts\000"
 4758      315F436F 
 4758      756E7473 
 4758      546F5F56 
 4758      6F6C7473 
 4759              	.LASF103:
 4760 0581 4144435F 		.ascii	"ADC_1_intSarClock_SetFractionalDividerRegister\000"
 4760      315F696E 
 4760      74536172 
 4760      436C6F63 
 4760      6B5F5365 
 4761              	.LASF114:
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 129


 4762 05b0 4144435F 		.ascii	"ADC_1_IsChannelSigned\000"
 4762      315F4973 
 4762      4368616E 
 4762      6E656C53 
 4762      69676E65 
 4763              	.LASF84:
 4764 05c6 72657375 		.ascii	"result_uVolts\000"
 4764      6C745F75 
 4764      566F6C74 
 4764      7300
 4765              	.LASF93:
 4766 05d4 72657374 		.ascii	"restart\000"
 4766      61727400 
 4767              	.LASF71:
 4768 05dc 6F666673 		.ascii	"offset\000"
 4768      657400
 4769              	.LASF25:
 4770 05e3 6374726C 		.ascii	"ctrl\000"
 4770      00
 4771              	.LASF35:
 4772 05e8 6D697363 		.ascii	"miscConfig\000"
 4772      436F6E66 
 4772      696700
 4773              	.LASF75:
 4774 05f3 61646343 		.ascii	"adcCounts\000"
 4774      6F756E74 
 4774      7300
 4775              	.LASF98:
 4776 05fd 4144435F 		.ascii	"ADC_1_selected\000"
 4776      315F7365 
 4776      6C656374 
 4776      656400
 4777              	.LASF30:
 4778 060c 72616E67 		.ascii	"rangeCond\000"
 4778      65436F6E 
 4778      6400
 4779              	.LASF56:
 4780 0616 4144435F 		.ascii	"ADC_1_IsEndConversion\000"
 4780      315F4973 
 4780      456E6443 
 4780      6F6E7665 
 4780      7273696F 
 4781              	.LASF26:
 4782 062c 73616D70 		.ascii	"sampleCtrl\000"
 4782      6C654374 
 4782      726C00
 4783              	.LASF37:
 4784 0637 4144435F 		.ascii	"ADC_1_CONFIG_STRUCT\000"
 4784      315F434F 
 4784      4E464947 
 4784      5F535452 
 4784      55435400 
 4785              	.LASF59:
 4786 064b 4144435F 		.ascii	"ADC_1_GetResult32\000"
 4786      315F4765 
 4786      74526573 
 4786      756C7433 
ARM GAS  C:\Users\TUCKER~1\AppData\Local\Temp\ccDWJu1F.s 			page 130


 4786      3200
 4787              	.LASF70:
 4788 065d 4144435F 		.ascii	"ADC_1_SetOffset\000"
 4788      315F5365 
 4788      744F6666 
 4788      73657400 
 4789              	.LASF12:
 4790 066d 696E7431 		.ascii	"int16\000"
 4790      3600
 4791              	.LASF51:
 4792 0673 4144435F 		.ascii	"ADC_1_SetChanMask\000"
 4792      315F5365 
 4792      74436861 
 4792      6E4D6173 
 4792      6B00
 4793              	.LASF82:
 4794 0685 72657375 		.ascii	"result_mVolts\000"
 4794      6C745F6D 
 4794      566F6C74 
 4794      7300
 4795              	.LASF23:
 4796 0693 6368616E 		.ascii	"channelBase\000"
 4796      6E656C42 
 4796      61736500 
 4797              	.LASF55:
 4798 069f 656E644F 		.ascii	"endOfConversion\000"
 4798      66436F6E 
 4798      76657273 
 4798      696F6E00 
 4799              	.LASF89:
 4800 06af 4144435F 		.ascii	"ADC_1_Start\000"
 4800      315F5374 
 4800      61727400 
 4801              	.LASF105:
 4802 06bb 43794861 		.ascii	"CyHalt\000"
 4802      6C7400
 4803              	.LASF83:
 4804 06c2 4144435F 		.ascii	"ADC_1_CountsTo_uVolts\000"
 4804      315F436F 
 4804      756E7473 
 4804      546F5F75 
 4804      566F6C74 
 4805              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
